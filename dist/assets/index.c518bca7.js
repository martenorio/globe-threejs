const ad=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&a(s)}).observe(document,{childList:!0,subtree:!0});function i(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerpolicy&&(n.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?n.credentials="include":t.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function a(t){if(t.ep)return;t.ep=!0;const n=i(t);fetch(t.href,n)}};ad();var td=[{name:{common:"Uruguay",official:"Oriental Republic of Uruguay",nativeName:{spa:{official:"Rep\xFAblica Oriental del Uruguay",common:"Uruguay"}}},tld:[".uy"],cca2:"UY",ccn3:"858",cca3:"URY",cioc:"URU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UYU:{name:"Uruguayan peso",symbol:"$"}},idd:{root:"+5",suffixes:["98"]},capital:["Montevideo"],altSpellings:["UY","Oriental Republic of Uruguay","Rep\xFAblica Oriental del Uruguay"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0623\u0648\u0631\u0648\u063A\u0648\u0627\u064A \u0627\u0644\u0634\u0631\u0642\u064A\u0629",common:"\u0627\u0644\u0623\u0648\u0631\u0648\u063A\u0648\u0627\u064A"},ces:{official:"Uruguaysk\xE1 v\xFDchodn\xED republika",common:"Uruguay"},cym:{official:"Oriental Republic of Uruguay",common:"Uruguay"},deu:{official:"Republik \xD6stlich des Uruguay",common:"Uruguay"},est:{official:"Uruguay Idavabariik",common:"Uruguay"},fin:{official:"Uruguayn it\xE4inen tasavalta",common:"Uruguay"},fra:{official:"R\xE9publique orientale de l'Uruguay",common:"Uruguay"},hrv:{official:"Orijentalna Republika Urugvaj",common:"Urugvaj"},hun:{official:"Uruguayi Keleti K\xF6zt\xE1rsas\xE1g",common:"Uruguay"},ita:{official:"Repubblica Orientale dell'Uruguay",common:"Uruguay"},jpn:{official:"\u30A6\u30EB\u30B0\u30A2\u30A4\u6771\u65B9\u5171\u548C\u56FD",common:"\u30A6\u30EB\u30B0\u30A2\u30A4"},kor:{official:"\uC6B0\uB8E8\uACFC\uC774 \uB3D9\uBC29 \uACF5\uD654\uAD6D",common:"\uC6B0\uB8E8\uACFC\uC774"},nld:{official:"Oosterse Republiek Uruguay",common:"Uruguay"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0631\u0648\u06AF\u0648\u0626\u0647",common:"\u0627\u0631\u0648\u06AF\u0648\u0626\u0647"},pol:{official:"Wschodnia Republika Urugwaju",common:"Urugwaj"},por:{official:"Rep\xFAblica Oriental do Uruguai",common:"Uruguai"},rus:{official:"\u0412\u043E\u0441\u0442\u043E\u0447\u043D\u043E\u0439 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0438 \u0423\u0440\u0443\u0433\u0432\u0430\u0439",common:"\u0423\u0440\u0443\u0433\u0432\u0430\u0439"},slk:{official:"Uruguajsk\xE1 v\xFDchodn\xE1 republika",common:"Uruguaj"},spa:{official:"Rep\xFAblica Oriental del Uruguay",common:"Uruguay"},swe:{official:"Republiken Uruguay",common:"Uruguay"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0634\u0631\u0642\u06CC\u06C1 \u06CC\u0648\u0631\u0627\u06AF\u0648\u0626\u06D2",common:"\u06CC\u0648\u0631\u0627\u06AF\u0648\u0626\u06D2"},zho:{official:"\u4E4C\u62C9\u572D\u4E1C\u5CB8\u5171\u548C\u56FD",common:"\u4E4C\u62C9\u572D"}},latlng:[-33,-56],landlocked:!1,borders:["ARG","BRA"],area:181034,demonyms:{eng:{f:"Uruguayan",m:"Uruguayan"},fra:{f:"Uruguayenne",m:"Uruguayen"}},flag:"\u{1F1FA}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/tiQ9Baekb1jQtDSD9",openStreetMaps:"https://www.openstreetmap.org/relation/287072"},population:3473727,gini:{"2019":39.7},fifa:"URU",car:{signs:["ROU"],side:"right"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/uy.png",svg:"https://flagcdn.com/uy.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/uy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/uy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-34.85,-56.17]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Paraguay",official:"Republic of Paraguay",nativeName:{grn:{official:"Tet\xE3 Paragu\xE1i",common:"Paragu\xE1i"},spa:{official:"Rep\xFAblica de Paraguay",common:"Paraguay"}}},tld:[".py"],cca2:"PY",ccn3:"600",cca3:"PRY",cioc:"PAR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PYG:{name:"Paraguayan guaran\xED",symbol:"\u20B2"}},idd:{root:"+5",suffixes:["95"]},capital:["Asunci\xF3n"],altSpellings:["PY","Republic of Paraguay","Rep\xFAblica del Paraguay","Tet\xE3 Paragu\xE1i"],region:"Americas",subregion:"South America",languages:{grn:"Guaran\xED",spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0627\u0631\u0627\u063A\u0648\u0627\u064A",common:"\u0628\u0627\u0631\u0627\u063A\u0648\u0627\u064A"},ces:{official:"Paraguaysk\xE1 republika",common:"Paraguay"},cym:{official:"Republic of Paraguay",common:"Paraguay"},deu:{official:"Republik Paraguay",common:"Paraguay"},est:{official:"Paraguay Vabariik",common:"Paraguay"},fin:{official:"Paraguayn tasavalta",common:"Paraguay"},fra:{official:"R\xE9publique du Paraguay",common:"Paraguay"},hrv:{official:"Republika Paragvaj",common:"Paragvaj"},hun:{official:"Paraguayi K\xF6zt\xE1rsas\xE1g",common:"Paraguay"},ita:{official:"Repubblica del Paraguay",common:"Paraguay"},jpn:{official:"\u30D1\u30E9\u30B0\u30A2\u30A4\u5171\u548C\u56FD",common:"\u30D1\u30E9\u30B0\u30A2\u30A4"},kor:{official:"\uD30C\uB77C\uACFC\uC774 \uACF5\uD654\uAD6D",common:"\uD30C\uB77C\uACFC\uC774"},nld:{official:"Republiek Paraguay",common:"Paraguay"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u067E\u0627\u0631\u0627\u06AF\u0648\u0626\u0647",common:"\u067E\u0627\u0631\u0627\u06AF\u0648\u0626\u0647"},pol:{official:"Republika Paragwaju",common:"Paragwaj"},por:{official:"Rep\xFAblica do Paraguai",common:"Paraguai"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041F\u0430\u0440\u0430\u0433\u0432\u0430\u0439",common:"\u041F\u0430\u0440\u0430\u0433\u0432\u0430\u0439"},slk:{official:"Paraguajsk\xE1 republika",common:"Paraguaj"},spa:{official:"Rep\xFAblica de Paraguay",common:"Paraguay"},swe:{official:"Republiken Paraguay",common:"Paraguay"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u06CC\u0631\u0627\u06AF\u0648\u0626\u06D2",common:"\u067E\u06CC\u0631\u0627\u06AF\u0648\u0626\u06D2"},zho:{official:"\u5DF4\u62C9\u572D\u5171\u548C\u56FD",common:"\u5DF4\u62C9\u572D"}},latlng:[-23,-58],landlocked:!0,borders:["ARG","BOL","BRA"],area:406752,demonyms:{eng:{f:"Paraguayan",m:"Paraguayan"},fra:{f:"Paraguayenne",m:"Paraguayen"}},flag:"\u{1F1F5}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/JtnqG73WJn1Gx6mz6",openStreetMaps:"https://www.openstreetmap.org/relation/287077"},population:7132530,gini:{"2019":45.7},fifa:"PAR",car:{signs:["PY"],side:"right"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/py.png",svg:"https://flagcdn.com/py.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/py.png",svg:"https://mainfacts.com/media/images/coats_of_arms/py.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-25.28,-57.57]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Gambia",official:"Republic of the Gambia",nativeName:{eng:{official:"Republic of the Gambia",common:"Gambia"}}},tld:[".gm"],cca2:"GM",ccn3:"270",cca3:"GMB",cioc:"GAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GMD:{name:"dalasi",symbol:"D"}},idd:{root:"+2",suffixes:["20"]},capital:["Banjul"],altSpellings:["GM","Republic of the Gambia"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u0627\u0645\u0628\u064A\u0627",common:"\u063A\u0627\u0645\u0628\u064A\u0627"},ces:{official:"Gambijsk\xE1 republika",common:"Gambie"},cym:{official:"Republic of the Gambia",common:"Gambia"},deu:{official:"Republik Gambia",common:"Gambia"},est:{official:"Gambia Vabariik",common:"Gambia"},fin:{official:"Gambian tasavalta",common:"Gambia"},fra:{official:"R\xE9publique de Gambie",common:"Gambie"},hrv:{official:"Republika Gambija",common:"Gambija"},hun:{official:"Gambiai K\xF6zt\xE1rsas\xE1g",common:"Gambia"},ita:{official:"Repubblica del Gambia",common:"Gambia"},jpn:{official:"\u30AC\u30F3\u30D3\u30A2\u5171\u548C\u56FD",common:"\u30AC\u30F3\u30D3\u30A2"},kor:{official:"\uAC10\uBE44\uC544 \uACF5\uD654\uAD6D",common:"\uAC10\uBE44\uC544"},nld:{official:"Republiek Gambia",common:"Gambia"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06AF\u0627\u0645\u0628\u06CC\u0627",common:"\u06AF\u0627\u0645\u0628\u06CC\u0627"},pol:{official:"Republika Gambii",common:"Gambia"},por:{official:"Rep\xFAblica da G\xE2mbia",common:"G\xE2mbia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0430\u043C\u0431\u0438\u044F",common:"\u0413\u0430\u043C\u0431\u0438\u044F"},slk:{official:"Gambijsk\xE1 republika",common:"Gambia"},spa:{official:"Rep\xFAblica de Gambia",common:"Gambia"},swe:{official:"Republiken Gambia",common:"Gambia"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u06CC\u0645\u0628\u06CC\u0627",common:"\u06AF\u06CC\u0645\u0628\u06CC\u0627"},zho:{official:"\u5188\u6BD4\u4E9A\u5171\u548C\u56FD",common:"\u5188\u6BD4\u4E9A"}},latlng:[13.46666666,-16.56666666],landlocked:!1,borders:["SEN"],area:10689,demonyms:{eng:{f:"Gambian",m:"Gambian"},fra:{f:"Gambienne",m:"Gambien"}},flag:"\u{1F1EC}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/bbGBCxxtfD2A9Z4m6",openStreetMaps:"https://www.openstreetmap.org/relation/192774"},population:2416664,gini:{"2015":35.9},fifa:"GAM",car:{signs:["WAG"],side:"right"},timezones:["UTC+00:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gm.png",svg:"https://flagcdn.com/gm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.45,-16.57]}},{name:{common:"Djibouti",official:"Republic of Djibouti",nativeName:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062C\u064A\u0628\u0648\u062A\u064A",common:"\u062C\u064A\u0628\u0648\u062A\u064A\u200E"},fra:{official:"R\xE9publique de Djibouti",common:"Djibouti"}}},tld:[".dj"],cca2:"DJ",ccn3:"262",cca3:"DJI",cioc:"DJI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DJF:{name:"Djiboutian franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["53"]},capital:["Djibouti"],altSpellings:["DJ","Jabuuti","Gabuuti","Republic of Djibouti","R\xE9publique de Djibouti","Gabuutih Ummuuno","Jamhuuriyadda Jabuuti"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062C\u064A\u0628\u0648\u062A\u064A",common:"\u062C\u064A\u0628\u0648\u062A\u064A"},ces:{official:"D\u017Eibutsk\xE1 republika",common:"D\u017Eibutsko"},cym:{official:"Gweriniaeth Jibwti",common:"Jibwti"},deu:{official:"Republik Dschibuti",common:"Dschibuti"},est:{official:"Djibouti Vabariik",common:"Djibouti"},fin:{official:"Dijiboutin tasavalta",common:"Dijibouti"},fra:{official:"R\xE9publique de Djibouti",common:"Djibouti"},hrv:{official:"Republika D\u017Eibuti",common:"D\u017Eibuti"},hun:{official:"Dzsibuti K\xF6zt\xE1rsas\xE1g",common:"Dzsibuti"},ita:{official:"Repubblica di Gibuti",common:"Gibuti"},jpn:{official:"\u30B8\u30D6\u30C1\u5171\u548C\u56FD",common:"\u30B8\u30D6\u30C1"},kor:{official:"\uC9C0\uBD80\uD2F0 \uACF5\uD654\uAD6D",common:"\uC9C0\uBD80\uD2F0"},nld:{official:"Republiek Djibouti",common:"Djibouti"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062C\u06CC\u0628\u0648\u062A\u06CC",common:"\u062C\u06CC\u0628\u0648\u062A\u06CC"},pol:{official:"Republika D\u017Cibuti",common:"D\u017Cibuti"},por:{official:"Rep\xFAblica do Djibouti",common:"Djibouti"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0414\u0436\u0438\u0431\u0443\u0442\u0438",common:"\u0414\u0436\u0438\u0431\u0443\u0442\u0438"},slk:{official:"\u01C5ibutsk\xE1 republika",common:"\u01C5ibutsko"},spa:{official:"Rep\xFAblica de Djibouti",common:"Djibouti"},swe:{official:"Republiken Djibouti",common:"Djibouti"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062C\u0628\u0648\u062A\u06CC",common:"\u062C\u0628\u0648\u062A\u06CC"},zho:{official:"\u5409\u5E03\u63D0\u5171\u548C\u56FD",common:"\u5409\u5E03\u63D0"}},latlng:[11.5,43],landlocked:!1,borders:["ERI","ETH","SOM"],area:23200,demonyms:{eng:{f:"Djibouti",m:"Djibouti"},fra:{f:"Djiboutienne",m:"Djiboutien"}},flag:"\u{1F1E9}\u{1F1EF}",maps:{googleMaps:"https://goo.gl/maps/V1HWfzN3bS1kwf4C6",openStreetMaps:"https://www.openstreetmap.org/relation/192801"},population:988002,gini:{"2017":41.6},fifa:"DJI",car:{signs:["DJI"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/dj.png",svg:"https://flagcdn.com/dj.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[11.58,43.15]}},{name:{common:"Martinique",official:"Martinique",nativeName:{fra:{official:"Martinique",common:"Martinique"}}},tld:[".mq"],cca2:"MQ",ccn3:"474",cca3:"MTQ",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+5",suffixes:["96"]},capital:["Fort-de-France"],altSpellings:["MQ"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"\u0645\u0627\u0631\u062A\u064A\u0646\u064A\u0643",common:"\u0645\u0627\u0631\u062A\u064A\u0646\u064A\u0643"},ces:{official:"Martinik",common:"Martinik"},cym:{official:"Martinique",common:"Martinique"},deu:{official:"Martinique",common:"Martinique"},est:{official:"Martinique\u2019i departemang",common:"Martinique"},fin:{official:"Martinique",common:"Martinique"},fra:{official:"Martinique",common:"Martinique"},hrv:{official:"Martinique",common:"Martinique"},hun:{official:"Martinique",common:"Martinique"},ita:{official:"Martinique",common:"Martinica"},jpn:{official:"\u30DE\u30EB\u30C6\u30A3\u30CB\u30FC\u30AF\u5CF6",common:"\u30DE\u30EB\u30C6\u30A3\u30CB\u30FC\u30AF"},kor:{official:"\uB9C8\uB974\uD2F0\uB2C8\uD06C",common:"\uB9C8\uB974\uD2F0\uB2C8\uD06C"},nld:{official:"Martinique",common:"Martinique"},per:{official:"\u0645\u0627\u0631\u062A\u06CC\u0646\u06CC\u06A9",common:"\u0645\u0627\u0631\u062A\u06CC\u0646\u06CC\u06A9"},pol:{official:"Martynika",common:"Martynika"},por:{official:"Martinique",common:"Martinica"},rus:{official:"\u041C\u0430\u0440\u0442\u0438\u043D\u0438\u043A\u0430",common:"\u041C\u0430\u0440\u0442\u0438\u043D\u0438\u043A\u0430"},slk:{official:"Martinique",common:"Martinique"},spa:{official:"Martinica",common:"Martinica"},swe:{official:"Martinique",common:"Martinique"},urd:{official:"\u0645\u0627\u0631\u0679\u06CC\u0646\u06CC\u06A9",common:"\u0645\u0627\u0631\u0679\u06CC\u0646\u06CC\u06A9"},zho:{official:"\u9A6C\u63D0\u5C3C\u514B",common:"\u9A6C\u63D0\u5C3C\u514B"}},latlng:[14.666667,-61],landlocked:!1,area:1128,demonyms:{eng:{f:"Martinican",m:"Martinican"},fra:{f:"Martiniquaise",m:"Martiniquais"}},flag:"\u{1F1F2}\u{1F1F6}",maps:{googleMaps:"https://goo.gl/maps/87ER7sDAFU7JjcvR6",openStreetMaps:"https://www.openstreetmap.org/relation/2473088"},population:378243,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/mq.png",svg:"https://flagcdn.com/mq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mq.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.6,-61.08]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Guam",official:"Guam",nativeName:{cha:{official:"Gu\xE5h\xE5n",common:"Gu\xE5h\xE5n"},eng:{official:"Guam",common:"Guam"},spa:{official:"Guam",common:"Guam"}}},tld:[".gu"],cca2:"GU",ccn3:"316",cca3:"GUM",cioc:"GUM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["671"]},capital:["Hag\xE5t\xF1a"],altSpellings:["GU","Gu\xE5h\xE5n"],region:"Oceania",subregion:"Micronesia",languages:{cha:"Chamorro",eng:"English",spa:"Spanish"},translations:{ara:{official:"\u063A\u0648\u0627\u0645",common:"\u063A\u0648\u0627\u0645"},ces:{official:"Guam",common:"Guam"},cym:{official:"Guam",common:"Guam"},deu:{official:"Guam",common:"Guam"},est:{official:"Guami ala",common:"Guam"},fin:{official:"Guam",common:"Guam"},fra:{official:"Guam",common:"Guam"},hrv:{official:"Guam",common:"Guam"},hun:{official:"Guam",common:"Guam"},ita:{official:"Guam",common:"Guam"},jpn:{official:"\u30B0\u30A2\u30E0",common:"\u30B0\u30A2\u30E0"},kor:{official:"\uAD0C",common:"\uAD0C"},nld:{official:"Guam",common:"Guam"},per:{official:"\u06AF\u0648\u0622\u0645",common:"\u06AF\u0648\u0622\u0645"},pol:{official:"Terytorium Guamu",common:"Guam"},por:{official:"Guam",common:"Guam"},rus:{official:"\u0413\u0443\u0430\u043C",common:"\u0413\u0443\u0430\u043C"},slk:{official:"Guam",common:"Guam"},spa:{official:"Guam",common:"Guam"},swe:{official:"Guam",common:"Guam"},urd:{official:"\u06AF\u0648\u0627\u0645",common:"\u06AF\u0648\u0627\u0645"},zho:{official:"\u5173\u5C9B",common:"\u5173\u5C9B"}},latlng:[13.46666666,144.78333333],landlocked:!1,area:549,demonyms:{eng:{f:"Guamanian",m:"Guamanian"}},flag:"\u{1F1EC}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/Xfnq2i279b18cH3C9",openStreetMaps:"https://www.openstreetmap.org/relation/306001"},population:168783,fifa:"GUM",car:{signs:["USA"],side:"right"},timezones:["UTC+10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/gu.png",svg:"https://flagcdn.com/gu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.48,144.75]},postalCode:{format:"969##",regex:"^(969\\d{2})$"}},{name:{common:"Georgia",official:"Georgia",nativeName:{kat:{official:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD",common:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"}}},tld:[".ge"],cca2:"GE",ccn3:"268",cca3:"GEO",cioc:"GEO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GEL:{name:"lari",symbol:"\u20BE"}},idd:{root:"+9",suffixes:["95"]},capital:["Tbilisi"],altSpellings:["GE","Sakartvelo"],region:"Asia",subregion:"Western Asia",languages:{kat:"Georgian"},translations:{ara:{official:"\u062C\u0648\u0631\u062C\u064A\u0627",common:"\u062C\u0648\u0631\u062C\u064A\u0627"},ces:{official:"Gruzie",common:"Gruzie"},cym:{official:"Georgia",common:"Georgia"},deu:{official:"Georgien",common:"Georgien"},est:{official:"Gruusia",common:"Gruusia"},fin:{official:"Georgia",common:"Georgia"},fra:{official:"R\xE9publique de G\xE9orgie",common:"G\xE9orgie"},hrv:{official:"Gruzija",common:"Gruzija"},hun:{official:"Gr\xFAzia",common:"Gr\xFAzia"},ita:{official:"Georgia",common:"Georgia"},jpn:{official:"\u30B0\u30EB\u30B8\u30A2",common:"\u30B0\u30EB\u30B8\u30A2"},kor:{official:"\uC870\uC9C0\uC544",common:"\uC870\uC9C0\uC544"},nld:{official:"Georgia",common:"Georgi\xEB"},per:{official:"\u06AF\u0631\u062C\u0633\u062A\u0627\u0646",common:"\u06AF\u0631\u062C\u0633\u062A\u0627\u0646"},pol:{official:"Gruzja",common:"Gruzja"},por:{official:"Georgia",common:"Ge\xF3rgia"},rus:{official:"\u0413\u0440\u0443\u0437\u0438\u044F",common:"\u0413\u0440\u0443\u0437\u0438\u044F"},slk:{official:"Gruz\xEDnsko",common:"Gruz\xEDnsko"},spa:{official:"Georgia",common:"Georgia"},swe:{official:"Georgien",common:"Georgien"},urd:{official:"\u062C\u0627\u0631\u062C\u06CC\u0627",common:"\u062C\u0627\u0631\u062C\u06CC\u0627"},zho:{official:"\u683C\u9C81\u5409\u4E9A",common:"\u683C\u9C81\u5409\u4E9A"}},latlng:[42,43.5],landlocked:!1,borders:["ARM","AZE","RUS","TUR"],area:69700,demonyms:{eng:{f:"Georgian",m:"Georgian"},fra:{f:"G\xE9orgienne",m:"G\xE9orgien"}},flag:"\u{1F1EC}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/bvCaGBePR1ZEDK5cA",openStreetMaps:"https://www.openstreetmap.org/relation/28699"},population:3714e3,gini:{"2019":35.9},fifa:"GEO",car:{signs:["GE"],side:"right"},timezones:["UTC-04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ge.png",svg:"https://flagcdn.com/ge.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ge.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ge.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.68,44.83]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"United States",official:"United States of America",nativeName:{eng:{official:"United States of America",common:"United States"}}},tld:[".us"],cca2:"US",ccn3:"840",cca3:"USA",cioc:"USA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["201","202","203","205","206","207","208","209","210","212","213","214","215","216","217","218","219","220","224","225","227","228","229","231","234","239","240","248","251","252","253","254","256","260","262","267","269","270","272","274","276","281","283","301","302","303","304","305","307","308","309","310","312","313","314","315","316","317","318","319","320","321","323","325","327","330","331","334","336","337","339","346","347","351","352","360","361","364","380","385","386","401","402","404","405","406","407","408","409","410","412","413","414","415","417","419","423","424","425","430","432","434","435","440","442","443","447","458","463","464","469","470","475","478","479","480","484","501","502","503","504","505","507","508","509","510","512","513","515","516","517","518","520","530","531","534","539","540","541","551","559","561","562","563","564","567","570","571","573","574","575","580","585","586","601","602","603","605","606","607","608","609","610","612","614","615","616","617","618","619","620","623","626","628","629","630","631","636","641","646","650","651","657","660","661","662","667","669","678","681","682","701","702","703","704","706","707","708","712","713","714","715","716","717","718","719","720","724","725","727","730","731","732","734","737","740","743","747","754","757","760","762","763","765","769","770","772","773","774","775","779","781","785","786","801","802","803","804","805","806","808","810","812","813","814","815","816","817","818","828","830","831","832","843","845","847","848","850","854","856","857","858","859","860","862","863","864","865","870","872","878","901","903","904","906","907","908","909","910","912","913","914","915","916","917","918","919","920","925","928","929","930","931","934","936","937","938","940","941","947","949","951","952","954","956","959","970","971","972","973","975","978","979","980","984","985","989"]},capital:["Washington, D.C."],altSpellings:["US","USA","United States of America"],region:"Americas",subregion:"North America",languages:{eng:"English"},translations:{ara:{official:"\u0627\u0644\u0648\u0644\u0627\u064A\u0627\u062A \u0627\u0644\u0645\u062A\u062D\u062F\u0629 \u0627\u0644\u0627\u0645\u0631\u064A\u0643\u064A\u0629",common:"\u0627\u0644\u0648\u0644\u0627\u064A\u0627\u062A \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},ces:{official:"Spojen\xE9 st\xE1ty americk\xE9",common:"Spojen\xE9 st\xE1ty"},cym:{official:"United States of America",common:"United States"},deu:{official:"Vereinigte Staaten von Amerika",common:"Vereinigte Staaten"},est:{official:"Ameerika \xDChendriigid",common:"Ameerika \xDChendriigid"},fin:{official:"Amerikan yhdysvallat",common:"Yhdysvallat"},fra:{official:"Les \xE9tats-unis d'Am\xE9rique",common:"\xC9tats-Unis"},hrv:{official:"Sjedinjene Dr\u017Eave Amerike",common:"Sjedinjene Ameri\u010Dke Dr\u017Eave"},hun:{official:"Amerikai Egyes\xFClt \xC1llamok",common:"Amerikai Egyes\xFClt \xC1llamok"},ita:{official:"Stati Uniti d'America",common:"Stati Uniti d'America"},jpn:{official:"\u30A2\u30E1\u30EA\u30AB\u5408\u8846\u56FD",common:"\u30A2\u30E1\u30EA\u30AB\u5408\u8846\u56FD"},kor:{official:"\uC544\uBA54\uB9AC\uCE74 \uD569\uC911\uAD6D",common:"\uBBF8\uAD6D"},nld:{official:"Verenigde Staten van Amerika",common:"Verenigde Staten"},per:{official:"\u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627",common:"\u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627"},pol:{official:"Stany Zjednoczone Ameryki",common:"Stany Zjednoczone"},por:{official:"Estados Unidos da Am\xE9rica",common:"Estados Unidos"},rus:{official:"\u0421\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u043D\u044B\u0435 \u0428\u0442\u0430\u0442\u044B \u0410\u043C\u0435\u0440\u0438\u043A\u0438",common:"\u0421\u043E\u0435\u0434\u0438\u043D\u0451\u043D\u043D\u044B\u0435 \u0428\u0442\u0430\u0442\u044B \u0410\u043C\u0435\u0440\u0438\u043A\u0438"},slk:{official:"Spojen\xE9 \u0161t\xE1ty Americk\xE9",common:"Spojen\xE9 \u0161t\xE1ty americk\xE9"},spa:{official:"Estados Unidos de Am\xE9rica",common:"Estados Unidos"},swe:{official:"Amerikas f\xF6renta stater",common:"USA"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u06C1\u0627\u0626\u06D2 \u0645\u062A\u062D\u062F\u06C1 \u0627\u0645\u0631\u06CC\u06A9\u0627",common:"\u0631\u06CC\u0627\u0633\u062A\u06C1\u0627\u0626\u06D2 \u0645\u062A\u062D\u062F\u06C1"},zho:{official:"\u7F8E\u5229\u575A\u5408\u4F17\u56FD",common:"\u7F8E\u56FD"}},latlng:[38,-97],landlocked:!1,borders:["CAN","MEX"],area:9372610,demonyms:{eng:{f:"American",m:"American"},fra:{f:"Am\xE9ricaine",m:"Am\xE9ricain"}},flag:"\u{1F1FA}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/e8M246zY4BSjkjAv6",openStreetMaps:"https://www.openstreetmap.org/relation/148838#map=2/20.6/-85.8"},population:329484123,gini:{"2018":41.4},fifa:"USA",car:{signs:["USA"],side:"right"},timezones:["UTC-12:00","UTC-11:00","UTC-10:00","UTC-09:00","UTC-08:00","UTC-07:00","UTC-06:00","UTC-05:00","UTC-04:00","UTC+10:00","UTC+12:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/us.png",svg:"https://flagcdn.com/us.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/us.png",svg:"https://mainfacts.com/media/images/coats_of_arms/us.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[38.89,-77.05]},postalCode:{format:"#####-####",regex:"^\\d{5}(-\\d{4})?$"}},{name:{common:"Belize",official:"Belize",nativeName:{bjz:{official:"Belize",common:"Belize"},eng:{official:"Belize",common:"Belize"},spa:{official:"Belice",common:"Belice"}}},tld:[".bz"],cca2:"BZ",ccn3:"084",cca3:"BLZ",cioc:"BIZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BZD:{name:"Belize dollar",symbol:"$"}},idd:{root:"+5",suffixes:["01"]},capital:["Belmopan"],altSpellings:["BZ"],region:"Americas",subregion:"Central America",languages:{bjz:"Belizean Creole",eng:"English",spa:"Spanish"},translations:{ara:{official:"\u0628\u0644\u064A\u0632",common:"\u0628\u0644\u064A\u0632"},ces:{official:"Belize",common:"Belize"},cym:{official:"Bel\xEEs",common:"Bel\xEEs"},deu:{official:"Belize",common:"Belize"},est:{official:"Belize",common:"Belize"},fin:{official:"Belize",common:"Belize"},fra:{official:"Belize",common:"Belize"},hrv:{official:"Belize",common:"Belize"},hun:{official:"Belize",common:"Belize"},ita:{official:"Belize",common:"Belize"},jpn:{official:"\u30D9\u30EA\u30FC\u30BA",common:"\u30D9\u30EA\u30FC\u30BA"},kor:{official:"\uBCA8\uB9AC\uC988",common:"\uBCA8\uB9AC\uC988"},nld:{official:"Belize",common:"Belize"},per:{official:"\u0628\u0644\u06CC\u0632",common:"\u0628\u0644\u06CC\u0632"},pol:{official:"Belize",common:"Belize"},por:{official:"Belize",common:"Belize"},rus:{official:"\u0411\u0435\u043B\u0438\u0437",common:"\u0411\u0435\u043B\u0438\u0437"},slk:{official:"Belize",common:"Belize"},spa:{official:"Belice",common:"Belice"},swe:{official:"Belize",common:"Belize"},urd:{official:"\u0628\u06CC\u0644\u06CC\u0632",common:"\u0628\u06CC\u0644\u06CC\u0632"},zho:{official:"\u4F2F\u5229\u5179",common:"\u4F2F\u5229\u5179"}},latlng:[17.25,-88.75],landlocked:!1,borders:["GTM","MEX"],area:22966,demonyms:{eng:{f:"Belizean",m:"Belizean"},fra:{f:"B\xE9lizienne",m:"B\xE9lizien"}},flag:"\u{1F1E7}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/jdCccpdLodm1uTmo9",openStreetMaps:"https://www.openstreetmap.org/relation/287827"},population:397621,gini:{"1999":53.3},fifa:"BLZ",car:{signs:["BH"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bz.png",svg:"https://flagcdn.com/bz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.25,-88.77]}},{name:{common:"Mauritius",official:"Republic of Mauritius",nativeName:{eng:{official:"Republic of Mauritius",common:"Mauritius"},fra:{official:"R\xE9publique de Maurice",common:"Maurice"},mfe:{official:"Republik Moris",common:"Moris"}}},tld:[".mu"],cca2:"MU",ccn3:"480",cca3:"MUS",cioc:"MRI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MUR:{name:"Mauritian rupee",symbol:"\u20A8"}},idd:{root:"+2",suffixes:["30"]},capital:["Port Louis"],altSpellings:["MU","Republic of Mauritius","R\xE9publique de Maurice"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",fra:"French",mfe:"Mauritian Creole"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0648\u0631\u064A\u0634\u064A\u0648\u0633",common:"\u0645\u0648\u0631\u064A\u0634\u064A\u0648\u0633"},ces:{official:"Mauricijsk\xE1 republika",common:"Mauricius"},cym:{official:"Republic of Mauritius",common:"Mauritius"},deu:{official:"Republik Mauritius",common:"Mauritius"},est:{official:"Mauritiuse Vabariik",common:"Mauritius"},fin:{official:"Mauritiuksen tasavalta",common:"Mauritius"},fra:{official:"R\xE9publique de Maurice",common:"\xCEle Maurice"},hrv:{official:"Republika Mauricijus",common:"Mauricijus"},hun:{official:"Mauritiusi K\xF6zt\xE1rsas\xE1g",common:"Mauritius"},ita:{official:"Repubblica di Mauritius",common:"Mauritius"},jpn:{official:"\u30E2\u30FC\u30EA\u30B7\u30E3\u30B9\u5171\u548C\u56FD",common:"\u30E2\u30FC\u30EA\u30B7\u30E3\u30B9"},kor:{official:"\uBAA8\uB9AC\uC154\uC2A4 \uACF5\uD654\uAD6D",common:"\uBAA8\uB9AC\uC154\uC2A4"},nld:{official:"Republiek Mauritius",common:"Mauritius"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0648\u0631\u06CC\u0633",common:"\u0645\u0648\u0631\u06CC\u0633"},pol:{official:"Republika Mauritiusu",common:"Mauritius"},por:{official:"Rep\xFAblica das Maur\xEDcias",common:"Maur\xEDcio"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u0432\u0440\u0438\u043A\u0438\u0439",common:"\u041C\u0430\u0432\u0440\u0438\u043A\u0438\u0439"},slk:{official:"Maur\xEDcijsk\xE1 republika",common:"Maur\xEDcius"},spa:{official:"Rep\xFAblica de Mauricio",common:"Mauricio"},swe:{official:"Republiken Mauritius",common:"Mauritius"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0648\u0631\u06CC\u0634\u0633",common:"\u0645\u0648\u0631\u06CC\u0634\u0633"},zho:{official:"\u6BDB\u91CC\u6C42\u65AF\u5171\u548C\u56FD",common:"\u6BDB\u91CC\u6C42\u65AF"}},latlng:[-20.28333333,57.55],landlocked:!1,area:2040,demonyms:{eng:{f:"Mauritian",m:"Mauritian"},fra:{f:"Mauricienne",m:"Mauricien"}},flag:"\u{1F1F2}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/PpKtZ4W3tir5iGrz7",openStreetMaps:"https://www.openstreetmap.org/relation/535828"},population:1265740,gini:{"2017":36.8},fifa:"MRI",car:{signs:["MS"],side:"left"},timezones:["UTC+04:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mu.png",svg:"https://flagcdn.com/mu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-20.15,57.48]}},{name:{common:"Lebanon",official:"Lebanese Republic",nativeName:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0644\u0628\u0646\u0627\u0646\u064A\u0629",common:"\u0644\u0628\u0646\u0627\u0646"},fra:{official:"R\xE9publique libanaise",common:"Liban"}}},tld:[".lb"],cca2:"LB",ccn3:"422",cca3:"LBN",cioc:"LBN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LBP:{name:"Lebanese pound",symbol:"\u0644.\u0644"}},idd:{root:"+9",suffixes:["61"]},capital:["Beirut"],altSpellings:["LB","Lebanese Republic","Al-Jumh\u016Br\u012Byah Al-Libn\u0101n\u012Byah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic",fra:"French"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0644\u0628\u0646\u0627\u0646\u064A\u0629",common:"\u0644\u0628\u0646\u0627\u0646"},ces:{official:"Libanonsk\xE1 republika",common:"Libanon"},cym:{official:"Lebanese Republic",common:"Lebanon"},deu:{official:"Libanesische Republik",common:"Libanon"},est:{official:"Liibanoni Vabariik",common:"Liibanon"},fin:{official:"Libanonin tasavalta",common:"Libanon"},fra:{official:"R\xE9publique libanaise",common:"Liban"},hrv:{official:"Libanonska Republika",common:"Libanon"},hun:{official:"Libanoni K\xF6zt\xE1rsas\xE1g",common:"Libanon"},ita:{official:"Repubblica libanese",common:"Libano"},jpn:{official:"\u30EC\u30D0\u30CE\u30F3\u5171\u548C\u56FD",common:"\u30EC\u30D0\u30CE\u30F3"},kor:{official:"\uB808\uBC14\uB17C \uACF5\uD654\uAD6D",common:"\uB808\uBC14\uB17C"},nld:{official:"Libanese Republiek",common:"Libanon"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0644\u0628\u0646\u0627\u0646",common:"\u0644\u0628\u0646\u0627\u0646"},pol:{official:"Republika Liba\u0144ska",common:"Liban"},por:{official:"Rep\xFAblica Libanesa",common:"L\xEDbano"},rus:{official:"\u041B\u0438\u0432\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041B\u0438\u0432\u0430\u043D"},slk:{official:"Libanonsk\xE1 republika",common:"Libanon"},spa:{official:"Rep\xFAblica Libanesa",common:"L\xEDbano"},swe:{official:"Republiken Libanon",common:"Libanon"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0644\u0628\u0646\u0627\u0646",common:"\u0644\u0628\u0646\u0627\u0646"},zho:{official:"\u9ECE\u5DF4\u5AE9\u5171\u548C\u56FD",common:"\u9ECE\u5DF4\u5AE9"}},latlng:[33.83333333,35.83333333],landlocked:!1,borders:["ISR","SYR"],area:10452,demonyms:{eng:{f:"Lebanese",m:"Lebanese"},fra:{f:"Libanaise",m:"Libanais"}},flag:"\u{1F1F1}\u{1F1E7}",maps:{googleMaps:"https://goo.gl/maps/Sz5VCU8UFBqMyTdc9",openStreetMaps:"https://www.openstreetmap.org/relation/184843"},population:6825442,gini:{"2011":31.8},fifa:"LBN",car:{signs:["RL"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/lb.png",svg:"https://flagcdn.com/lb.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[33.87,35.5]},postalCode:{format:"#### ####|####",regex:"^(\\d{4}(\\d{4})?)$"}},{name:{common:"Saudi Arabia",official:"Kingdom of Saudi Arabia",nativeName:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629",common:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"}}},tld:[".sa",".\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"],cca2:"SA",ccn3:"682",cca3:"SAU",cioc:"KSA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SAR:{name:"Saudi riyal",symbol:"\u0631.\u0633"}},idd:{root:"+9",suffixes:["66"]},capital:["Riyadh"],altSpellings:["Saudi","SA","Kingdom of Saudi Arabia","Al-Mamlakah al-\u2018Arabiyyah as-Su\u2018\u016Bdiyyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629",common:"\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},ces:{official:"Sa\xFAdskoarabsk\xE9 kr\xE1lovstv\xED",common:"Sa\xFAdsk\xE1 Ar\xE1bie"},cym:{official:"Kingdom of Saudi Arabia",common:"Saudi Arabia"},deu:{official:"K\xF6nigreich Saudi-Arabien",common:"Saudi-Arabien"},est:{official:"Saudi Araabia Kuningriik",common:"Saudi Araabia"},fin:{official:"Saudi-Arabian kuningaskunta",common:"Saudi-Arabia"},fra:{official:"Royaume d'Arabie Saoudite",common:"Arabie Saoudite"},hrv:{official:"Kraljevina Saudijska Arabija",common:"Saudijska Arabija"},hun:{official:"Sza\xFAd-Ar\xE1bia",common:"Sza\xFAd-Ar\xE1bia"},ita:{official:"Arabia Saudita",common:"Arabia Saudita"},jpn:{official:"\u30B5\u30A6\u30B8\u30A2\u30E9\u30D3\u30A2\u738B\u56FD",common:"\u30B5\u30A6\u30B8\u30A2\u30E9\u30D3\u30A2"},kor:{official:"\uC0AC\uC6B0\uB514\uC544\uB77C\uBE44\uC544 \uC655\uAD6D",common:"\uC0AC\uC6B0\uB514\uC544\uB77C\uBE44\uC544"},nld:{official:"Koninkrijk van Saoedi-Arabi\xEB",common:"Saoedi-Arabi\xEB"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0639\u0631\u0628\u06CC \u0633\u064E\u0639\u0648\u062F\u06CC",common:"\u0639\u0631\u0628\u0633\u062A\u0627\u0646 \u0633\u0639\u0648\u062F\u06CC"},pol:{official:"Kr\xF3lestwo Arabii Saudyjskiej",common:"Arabia Saudyjska"},por:{official:"Reino da Ar\xE1bia Saudita",common:"Ar\xE1bia Saudita"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0421\u0430\u0443\u0434\u043E\u0432\u0441\u043A\u0430\u044F \u0410\u0440\u0430\u0432\u0438\u044F",common:"\u0421\u0430\u0443\u0434\u043E\u0432\u0441\u043A\u0430\u044F \u0410\u0440\u0430\u0432\u0438\u044F"},slk:{official:"Saudskoarabsk\xE9 kr\xE1\u013Eovstvo",common:"Saudsk\xE1 Ar\xE1bia"},spa:{official:"Reino de Arabia Saudita",common:"Arabia Saud\xED"},swe:{official:"Kungad\xF6met Saudiarabien",common:"Saudiarabien"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0633\u0639\u0648\u062F\u06CC \u0639\u0631\u0628",common:"\u0633\u0639\u0648\u062F\u06CC \u0639\u0631\u0628"},zho:{official:"\u6C99\u7279\u963F\u62C9\u4F2F\u738B\u56FD",common:"\u6C99\u7279\u963F\u62C9\u4F2F"}},latlng:[25,45],landlocked:!1,borders:["IRQ","JOR","KWT","OMN","QAT","ARE","YEM"],area:2149690,demonyms:{eng:{f:"Saudi Arabian",m:"Saudi Arabian"},fra:{f:"Saoudienne",m:"Saoudien"}},flag:"\u{1F1F8}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/5PSjvdJ1AyaLFRrG9",openStreetMaps:"https://www.openstreetmap.org/relation/307584"},population:34813867,fifa:"KSA",car:{signs:["SA"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/sa.png",svg:"https://flagcdn.com/sa.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sa.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sa.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[24.65,46.7]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Ecuador",official:"Republic of Ecuador",nativeName:{spa:{official:"Rep\xFAblica del Ecuador",common:"Ecuador"}}},tld:[".ec"],cca2:"EC",ccn3:"218",cca3:"ECU",cioc:"ECU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["93"]},capital:["Quito"],altSpellings:["EC","Republic of Ecuador","Rep\xFAblica del Ecuador"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0625\u0643\u0648\u0627\u062F\u0648\u0631",common:"\u0627\u0644\u0625\u0643\u0648\u0627\u062F\u0648\u0631"},ces:{official:"Ekv\xE1dorsk\xE1 republika",common:"Ekv\xE1dor"},cym:{official:"Gweriniaeth Ecwador",common:"Ecwador"},deu:{official:"Republik Ecuador",common:"Ecuador"},est:{official:"Ecuadori Vabariik",common:"Ecuador"},fin:{official:"Ecuadorin tasavalta",common:"Ecuador"},fra:{official:"R\xE9publique de l'\xC9quateur",common:"\xC9quateur"},hrv:{official:"Republika Ekvador",common:"Ekvador"},hun:{official:"Ecuadori K\xF6zt\xE1rsas\xE1g",common:"Ecuador"},ita:{official:"Repubblica dell'Ecuador",common:"Ecuador"},jpn:{official:"\u30A8\u30AF\u30A2\u30C9\u30EB\u5171\u548C\u56FD",common:"\u30A8\u30AF\u30A2\u30C9\u30EB"},kor:{official:"\uC5D0\uCF70\uB3C4\uB974 \uACF5\uD654\uAD6D",common:"\uC5D0\uCF70\uB3C4\uB974"},nld:{official:"Republiek Ecuador",common:"Ecuador"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u06A9\u0648\u0627\u062F\u0648\u0631",common:"\u0627\u06A9\u0648\u0627\u062F\u0648\u0631"},pol:{official:"Ekwador",common:"Ekwador"},por:{official:"Rep\xFAblica do Equador",common:"Equador"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u042D\u043A\u0432\u0430\u0434\u043E\u0440",common:"\u042D\u043A\u0432\u0430\u0434\u043E\u0440"},slk:{official:"Ekv\xE1dorsk\xE1 republika",common:"Ekv\xE1dor"},spa:{official:"Rep\xFAblica del Ecuador",common:"Ecuador"},swe:{official:"Republiken Ecuador",common:"Ecuador"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u06CC\u06A9\u0648\u0688\u0648\u0631",common:"\u0627\u06CC\u06A9\u0648\u0627\u0688\u0648\u0631"},zho:{official:"\u5384\u74DC\u591A\u5C14\u5171\u548C\u56FD",common:"\u5384\u74DC\u591A\u5C14"}},latlng:[-2,-77.5],landlocked:!1,borders:["COL","PER"],area:276841,demonyms:{eng:{f:"Ecuadorean",m:"Ecuadorean"},fra:{f:"\xC9quatorienne",m:"\xC9quatorien"}},flag:"\u{1F1EA}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/TbX8hUW4gcbRPZiK7",openStreetMaps:"https://www.openstreetmap.org/relation/108089"},population:17643060,gini:{"2019":45.7},fifa:"ECU",car:{signs:["EC"],side:"right"},timezones:["UTC-06:00","UTC-05:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/ec.png",svg:"https://flagcdn.com/ec.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ec.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ec.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-.22,-78.5]},postalCode:{format:"@####@",regex:"^([a-zA-Z]\\d{4}[a-zA-Z])$"}},{name:{common:"Marshall Islands",official:"Republic of the Marshall Islands",nativeName:{eng:{official:"Republic of the Marshall Islands",common:"Marshall Islands"},mah:{official:"Republic of the Marshall Islands",common:"M\u0327aje\u013C"}}},tld:[".mh"],cca2:"MH",ccn3:"584",cca3:"MHL",cioc:"MHL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["92"]},capital:["Majuro"],altSpellings:["MH","Republic of the Marshall Islands","Aolep\u0101n Aor\u014Dkin M\u0327aje\u013C"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",mah:"Marshallese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062C\u0632\u0631 \u0645\u0627\u0631\u0634\u0627\u0644",common:"\u062C\u0632\u0631 \u0645\u0627\u0631\u0634\u0627\u0644"},ces:{official:"Republika Marshallovy ostrovy",common:"Marshallovy ostrovy"},cym:{official:"Republic of the Marshall Islands",common:"Marshall Islands"},deu:{official:"Republik Marshallinseln",common:"Marshallinseln"},est:{official:"Marshalli Saarte Vabariik",common:"Marshalli Saared"},fin:{official:"Marshallinsaarten tasavalta",common:"Marshallinsaaret"},fra:{official:"R\xE9publique des \xCEles Marshall",common:"\xCEles Marshall"},hrv:{official:"Republika Mar\u0161alovi Otoci",common:"Mar\u0161alovi Otoci"},hun:{official:"Marshall-szigetek",common:"Marshall-szigetek"},ita:{official:"Repubblica delle Isole Marshall",common:"Isole Marshall"},jpn:{official:"\u30DE\u30FC\u30B7\u30E3\u30EB\u8AF8\u5CF6\u5171\u548C\u56FD",common:"\u30DE\u30FC\u30B7\u30E3\u30EB\u8AF8\u5CF6"},kor:{official:"\uB9C8\uC15C \uC81C\uB3C4 \uACF5\uD654\uAD6D",common:"\uB9C8\uC15C \uC81C\uB3C4"},nld:{official:"Republiek van de Marshall-eilanden",common:"Marshalleilanden"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062C\u0632\u0627\u06CC\u0631 \u0645\u0627\u0631\u0634\u0627\u0644",common:"\u062C\u0632\u0627\u06CC\u0631 \u0645\u0627\u0631\u0634\u0627\u0644"},pol:{official:"Republika Wysp Marshalla",common:"Wyspy Marshalla"},por:{official:"Rep\xFAblica das Ilhas Marshall",common:"Ilhas Marshall"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u0440\u0448\u0430\u043B\u043B\u043E\u0432\u044B \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u041C\u0430\u0440\u0448\u0430\u043B\u043B\u043E\u0432\u044B \u041E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Republika Marshallov\xFDch ostrovov",common:"Marshallove ostrovy"},spa:{official:"Rep\xFAblica de las Islas Marshall",common:"Islas Marshall"},swe:{official:"Republiken Marshall\xF6arna",common:"Marshall\xF6arna"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062C\u0632\u0627\u0626\u0631 \u0645\u0627\u0631\u0634\u0644",common:"\u062C\u0632\u0627\u0626\u0631 \u0645\u0627\u0631\u0634\u0644"},zho:{official:"\u9A6C\u7ECD\u5C14\u7FA4\u5C9B\u5171\u548C\u56FD",common:"\u9A6C\u7ECD\u5C14\u7FA4\u5C9B"}},latlng:[9,168],landlocked:!1,area:181,demonyms:{eng:{f:"Marshallese",m:"Marshallese"},fra:{f:"Marshallaise",m:"Marshallais"}},flag:"\u{1F1F2}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/A4xLi1XvcX88gi3W8",openStreetMaps:"https://www.openstreetmap.org/relation/571771"},population:59194,car:{signs:["MH"],side:"right"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/mh.png",svg:"https://flagcdn.com/mh.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[7.1,171.38]}},{name:{common:"Brazil",official:"Federative Republic of Brazil",nativeName:{por:{official:"Rep\xFAblica Federativa do Brasil",common:"Brasil"}}},tld:[".br"],cca2:"BR",ccn3:"076",cca3:"BRA",cioc:"BRA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BRL:{name:"Brazilian real",symbol:"R$"}},idd:{root:"+5",suffixes:["5"]},capital:["Bras\xEDlia"],altSpellings:["BR","Brasil","Federative Republic of Brazil","Rep\xFAblica Federativa do Brasil"],region:"Americas",subregion:"South America",languages:{por:"Portuguese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0628\u0631\u0627\u0632\u064A\u0644 \u0627\u0644\u0627\u062A\u062D\u0627\u062F\u064A\u0629",common:"\u0627\u0644\u0628\u0631\u0627\u0632\u064A\u0644"},ces:{official:"Brazilsk\xE1 federativn\xED republika",common:"Braz\xEDlie"},cym:{official:"Gweriniaeth Ffederal Brasil",common:"Brasil"},deu:{official:"F\xF6derative Republik Brasilien",common:"Brasilien"},est:{official:"Brasiilia Liitvabariik",common:"Brasiilia"},fin:{official:"Brasilian liittotasavalta",common:"Brasilia"},fra:{official:"R\xE9publique f\xE9d\xE9rative du Br\xE9sil",common:"Br\xE9sil"},hrv:{official:"Savezne Republike Brazil",common:"Brazil"},hun:{official:"Brazil Sz\xF6vets\xE9gi K\xF6zt\xE1rsas\xE1g",common:"Braz\xEDlia"},ita:{official:"Repubblica federativa del Brasile",common:"Brasile"},jpn:{official:"\u30D6\u30E9\u30B8\u30EB\u9023\u90A6\u5171\u548C\u56FD",common:"\u30D6\u30E9\u30B8\u30EB"},kor:{official:"\uBE0C\uB77C\uC9C8 \uC5F0\uBC29 \uACF5\uD654\uAD6D",common:"\uBE0C\uB77C\uC9C8"},nld:{official:"Federale Republiek Brazili\xEB",common:"Brazili\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u062F\u0631\u0627\u062A\u06CC\u0648 \u0628\u0631\u0632\u06CC\u0644",common:"\u0628\u0631\u0632\u06CC\u0644"},pol:{official:"Federacyjna Republika Brazylii",common:"Brazylia"},por:{official:"Rep\xFAblica Federativa do Brasil",common:"Brasil"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0440\u0430\u0437\u0438\u043B\u0438\u044F",common:"\u0411\u0440\u0430\u0437\u0438\u043B\u0438\u044F"},slk:{official:"Braz\xEDlska federat\xEDvna republika",common:"Braz\xEDlia"},spa:{official:"Rep\xFAblica Federativa del Brasil",common:"Brasil"},swe:{official:"F\xF6rbundsrepubliken Brasilien",common:"Brasilien"},urd:{official:"\u0648\u0641\u0627\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u0631\u0627\u0632\u06CC\u0644",common:"\u0628\u0631\u0627\u0632\u06CC\u0644"},zho:{official:"\u5DF4\u897F\u8054\u90A6\u5171\u548C\u56FD",common:"\u5DF4\u897F"}},latlng:[-10,-55],landlocked:!1,borders:["ARG","BOL","COL","GUF","GUY","PRY","PER","SUR","URY","VEN"],area:8515767,demonyms:{eng:{f:"Brazilian",m:"Brazilian"},fra:{f:"Br\xE9silienne",m:"Br\xE9silien"}},flag:"\u{1F1E7}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/waCKk21HeeqFzkNC9",openStreetMaps:"https://www.openstreetmap.org/relation/59470"},population:212559409,gini:{"2019":53.4},fifa:"BRA",car:{signs:["BR"],side:"right"},timezones:["UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/br.png",svg:"https://flagcdn.com/br.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/br.png",svg:"https://mainfacts.com/media/images/coats_of_arms/br.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-15.79,-47.88]},postalCode:{format:"#####-###",regex:"^(\\d{8})$"}},{name:{common:"Uganda",official:"Republic of Uganda",nativeName:{eng:{official:"Republic of Uganda",common:"Uganda"},swa:{official:"Republic of Uganda",common:"Uganda"}}},tld:[".ug"],cca2:"UG",ccn3:"800",cca3:"UGA",cioc:"UGA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UGX:{name:"Ugandan shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["56"]},capital:["Kampala"],altSpellings:["UG","Republic of Uganda","Jamhuri ya Uganda"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",swa:"Swahili"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0648\u063A\u0646\u062F\u0627",common:"\u0623\u0648\u063A\u0646\u062F\u0627"},ces:{official:"Ugandsk\xE1 republika",common:"Uganda"},cym:{official:"Republic of Uganda",common:"Uganda"},deu:{official:"Republik Uganda",common:"Uganda"},est:{official:"Uganda Vabariik",common:"Uganda"},fin:{official:"Ugandan tasavalta",common:"Uganda"},fra:{official:"R\xE9publique de l'Ouganda",common:"Ouganda"},hrv:{official:"Republika Uganda",common:"Uganda"},hun:{official:"Ugandai K\xF6zt\xE1rsas\xE1g",common:"Uganda"},ita:{official:"Repubblica di Uganda",common:"Uganda"},jpn:{official:"\u30A6\u30AC\u30F3\u30C0\u5171\u548C\u56FD",common:"\u30A6\u30AC\u30F3\u30C0"},kor:{official:"\uC6B0\uAC04\uB2E4 \uACF5\uD654\uAD6D",common:"\uC6B0\uAC04\uB2E4"},nld:{official:"Republiek Uganda",common:"Oeganda"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0648\u06AF\u0627\u0646\u062F\u0627",common:"\u0627\u0648\u06AF\u0627\u0646\u062F\u0627"},pol:{official:"Republika Ugandy",common:"Uganda"},por:{official:"Rep\xFAblica do Uganda",common:"Uganda"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0423\u0433\u0430\u043D\u0434\u0430",common:"\u0423\u0433\u0430\u043D\u0434\u0430"},slk:{official:"Ugandsk\xE1 republika",common:"Uganda"},spa:{official:"Rep\xFAblica de Uganda",common:"Uganda"},swe:{official:"Republiken Uganda",common:"Uganda"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06CC\u0648\u06AF\u0646\u0688\u0627",common:"\u06CC\u0648\u06AF\u0646\u0688\u0627"},zho:{official:"\u4E4C\u5E72\u8FBE\u5171\u548C\u56FD",common:"\u4E4C\u5E72\u8FBE"}},latlng:[1,32],landlocked:!0,borders:["COD","KEN","RWA","SSD","TZA"],area:241550,demonyms:{eng:{f:"Ugandan",m:"Ugandan"},fra:{f:"Ougandaise",m:"Ougandais"}},flag:"\u{1F1FA}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/Y7812hFiGa8LD9N68",openStreetMaps:"https://www.openstreetmap.org/relation/192796"},population:45741e3,gini:{"2016":42.8},fifa:"UGA",car:{signs:["EAU"],side:"left"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ug.png",svg:"https://flagcdn.com/ug.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ug.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ug.svg"},startOfWeek:"monday",capitalInfo:{latlng:[.32,32.55]}},{name:{common:"Qatar",official:"State of Qatar",nativeName:{ara:{official:"\u062F\u0648\u0644\u0629 \u0642\u0637\u0631",common:"\u0642\u0637\u0631"}}},tld:[".qa","\u0642\u0637\u0631."],cca2:"QA",ccn3:"634",cca3:"QAT",cioc:"QAT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{QAR:{name:"Qatari riyal",symbol:"\u0631.\u0642"}},idd:{root:"+9",suffixes:["74"]},capital:["Doha"],altSpellings:["QA","State of Qatar","Dawlat Qa\u1E6Dar"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0642\u0637\u0631",common:"\u0642\u0637\u0631"},ces:{official:"St\xE1t Katar",common:"Katar"},cym:{official:"State of Qatar",common:"Qatar"},deu:{official:"Staat Katar",common:"Katar"},est:{official:"Katari Riik",common:"Katar"},fin:{official:"Qatarin valtio",common:"Qatar"},fra:{official:"\xC9tat du Qatar",common:"Qatar"},hrv:{official:"Dr\u017Eava Katar",common:"Katar"},hun:{official:"Katari \xC1llam",common:"Katar"},ita:{official:"Stato del Qatar",common:"Qatar"},jpn:{official:"\u30AB\u30BF\u30FC\u30EB\u56FD",common:"\u30AB\u30BF\u30FC\u30EB"},kor:{official:"\uCE74\uD0C0\uB974\uAD6D",common:"\uCE74\uD0C0\uB974"},nld:{official:"Staat Qatar",common:"Qatar"},per:{official:"\u062F\u0648\u0644\u062A \u0642\u0637\u0631",common:"\u0642\u0637\u0631"},pol:{official:"Pa\u0144stwo Katar",common:"Katar"},por:{official:"Estado do Qatar",common:"Catar"},rus:{official:"\u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u041A\u0430\u0442\u0430\u0440",common:"\u041A\u0430\u0442\u0430\u0440"},slk:{official:"Katarsk\xFD \u0161t\xE1t",common:"Katar"},spa:{official:"Estado de Qatar",common:"Catar"},swe:{official:"Staten Qatar",common:"Qatar"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u0642\u0637\u0631",common:"\u0642\u0637\u0631"},zho:{official:"\u5361\u5854\u5C14\u56FD",common:"\u5361\u5854\u5C14"}},latlng:[25.5,51.25],landlocked:!1,borders:["SAU"],area:11586,demonyms:{eng:{f:"Qatari",m:"Qatari"},fra:{f:"Qatarienne",m:"Qatarien"}},flag:"\u{1F1F6}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/ZV76Y49z7LLUZ2KQ6",openStreetMaps:"https://www.openstreetmap.org/relation/305095"},population:2881060,fifa:"QAT",car:{signs:["Q"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/qa.png",svg:"https://flagcdn.com/qa.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/qa.png",svg:"https://mainfacts.com/media/images/coats_of_arms/qa.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[25.28,51.53]}},{name:{common:"Timor-Leste",official:"Democratic Republic of Timor-Leste",nativeName:{por:{official:"Rep\xFAblica Democr\xE1tica de Timor-Leste",common:"Timor-Leste"},tet:{official:"Rep\xFAblika Demokr\xE1tika Tim\xF3r-Leste",common:"Tim\xF3r-Leste"}}},tld:[".tl"],cca2:"TL",ccn3:"626",cca3:"TLS",cioc:"TLS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["70"]},capital:["Dili"],altSpellings:["TL","East Timor","Democratic Republic of Timor-Leste","Rep\xFAblica Democr\xE1tica de Timor-Leste","Rep\xFAblika Demokr\xE1tika Tim\xF3r-Leste","Tim\xF3r Lorosa'e","Timor Lorosae"],region:"Asia",subregion:"South-Eastern Asia",languages:{por:"Portuguese",tet:"Tetum"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u064A\u0645\u0648\u0631 \u0627\u0644\u0634\u0631\u0642\u064A\u0629 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629",common:"\u062A\u064A\u0645\u0648\u0631 \u0627\u0644\u0634\u0631\u0642\u064A\u0629"},ces:{official:"Demokratick\xE1 republika V\xFDchodn\xED Timor",common:"V\xFDchodn\xED Timor"},cym:{official:"Democratic Republic of Timor-Leste",common:"Timor-Leste"},deu:{official:"Demokratische Republik Timor-Leste",common:"Osttimor"},est:{official:"Timor-Leste Demokraatlik Vabariik",common:"Ida-Timor"},fin:{official:"It\xE4-Timorin demokraattinen tasavalta",common:"It\xE4-Timor"},fra:{official:"R\xE9publique d\xE9mocratique du Timor oriental",common:"Timor oriental"},hrv:{official:"Demokratska Republika Timor-Leste",common:"Isto\u010Dni Timor"},hun:{official:"Kelet-timori Demokratikus K\xF6zt\xE1rsas\xE1g",common:"Kelet-Timor"},ita:{official:"Repubblica Democratica di Timor Est",common:"Timor Est"},jpn:{official:"\u6771\u30C6\u30A3\u30E2\u30FC\u30EB\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u6771\u30C6\u30A3\u30E2\u30FC\u30EB"},kor:{official:"\uB3D9\uD2F0\uBAA8\uB974 \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uB3D9\uD2F0\uBAA8\uB974"},nld:{official:"Democratische Republiek Oost-Timor",common:"Oost-Timor"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u062A\u06CC\u0645\u0648\u0631 \u0634\u0631\u0642\u06CC",common:"\u062A\u06CC\u0645\u0648\u0631 \u0634\u0631\u0642\u06CC"},pol:{official:"Demokratyczna Republika Timoru Wschodniego",common:"Timor Wschodni"},por:{official:"Rep\xFAblica Democr\xE1tica de Timor-Leste",common:"Timor-Leste"},rus:{official:"\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0422\u0438\u043C\u043E\u0440 -\u041B\u0435\u0448\u0442\u0438",common:"\u0412\u043E\u0441\u0442\u043E\u0447\u043D\u044B\u0439 \u0422\u0438\u043C\u043E\u0440"},slk:{official:"V\xFDchodotimorsk\xE1 demokratick\xE1 republika",common:"V\xFDchodn\xFD Timor"},spa:{official:"Rep\xFAblica Democr\xE1tica de Timor-Leste",common:"Timor Oriental"},swe:{official:"Demokratiska republiken \xD6sttimor",common:"\xD6sttimor"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0634\u0631\u0642\u06CC \u062A\u06CC\u0645\u0648\u0631",common:"\u0645\u0634\u0631\u0642\u06CC \u062A\u06CC\u0645\u0648\u0631"},zho:{official:"\u4E1C\u5E1D\u6C76\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u4E1C\u5E1D\u6C76"}},latlng:[-8.83333333,125.91666666],landlocked:!1,borders:["IDN"],area:14874,demonyms:{eng:{f:"East Timorese",m:"East Timorese"},fra:{f:"Est-timoraise",m:"Est-timorais"}},flag:"\u{1F1F9}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/sFqBC9zjgUXPR1iTA",openStreetMaps:"https://www.openstreetmap.org/relation/305142"},population:1318442,gini:{"2014":28.7},fifa:"TLS",car:{signs:["TL"],side:"left"},timezones:["UTC+09:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/tl.png",svg:"https://flagcdn.com/tl.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-8.58,125.6]}},{name:{common:"Mongolia",official:"Mongolia",nativeName:{mon:{official:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441",common:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"}}},tld:[".mn"],cca2:"MN",ccn3:"496",cca3:"MNG",cioc:"MGL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MNT:{name:"Mongolian t\xF6gr\xF6g",symbol:"\u20AE"}},idd:{root:"+9",suffixes:["76"]},capital:["Ulan Bator"],altSpellings:["MN"],region:"Asia",subregion:"Eastern Asia",languages:{mon:"Mongolian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0646\u063A\u0648\u0644\u064A\u0627",common:"\u0645\u0646\u063A\u0648\u0644\u064A\u0627"},ces:{official:"St\xE1t Mongolsko",common:"Mongolsko"},cym:{official:"Mongolia",common:"Mongolia"},deu:{official:"Mongolei",common:"Mongolei"},est:{official:"Mongoolia",common:"Mongoolia"},fin:{official:"Mongolian tasavalta",common:"Mongolia"},fra:{official:"Mongolie",common:"Mongolie"},hrv:{official:"Mongolija",common:"Mongolija"},hun:{official:"Mong\xF3lia",common:"Mong\xF3lia"},ita:{official:"Mongolia",common:"Mongolia"},jpn:{official:"\u30E2\u30F3\u30B4\u30EB",common:"\u30E2\u30F3\u30B4\u30EB"},kor:{official:"\uBABD\uACE8",common:"\uBABD\uACE8\uAD6D"},nld:{official:"Mongoli\xEB",common:"Mongoli\xEB"},per:{official:"\u0645\u063A\u0648\u0644\u0633\u062A\u0627\u0646",common:"\u0645\u063A\u0648\u0644\u0633\u062A\u0627\u0646"},pol:{official:"Mongolia",common:"Mongolia"},por:{official:"Mong\xF3lia",common:"Mong\xF3lia"},rus:{official:"\u041C\u043E\u043D\u0433\u043E\u043B\u0438\u044F",common:"\u041C\u043E\u043D\u0433\u043E\u043B\u0438\u044F"},slk:{official:"Mongolsko",common:"Mongolsko"},spa:{official:"Mongolia",common:"Mongolia"},swe:{official:"Mongoliet",common:"Mongoliet"},urd:{official:"\u0645\u0646\u06AF\u0648\u0644\u06CC\u0627",common:"\u0645\u0646\u06AF\u0648\u0644\u06CC\u0627"},zho:{official:"\u8499\u53E4",common:"\u8499\u53E4"}},latlng:[46,105],landlocked:!0,borders:["CHN","RUS"],area:1564110,demonyms:{eng:{f:"Mongolian",m:"Mongolian"},fra:{f:"Mongole",m:"Mongol"}},flag:"\u{1F1F2}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/A1X7bMCKThBDNjzH6",openStreetMaps:"https://www.openstreetmap.org/relation/161033"},population:3278292,gini:{"2018":32.7},fifa:"MNG",car:{signs:["MGL"],side:"right"},timezones:["UTC+07:00","UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mn.png",svg:"https://flagcdn.com/mn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.92,106.91]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Chile",official:"Republic of Chile",nativeName:{spa:{official:"Rep\xFAblica de Chile",common:"Chile"}}},tld:[".cl"],cca2:"CL",ccn3:"152",cca3:"CHL",cioc:"CHI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CLP:{name:"Chilean peso",symbol:"$"}},idd:{root:"+5",suffixes:["6"]},capital:["Santiago"],altSpellings:["CL","Republic of Chile","Rep\xFAblica de Chile"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u0634\u064A\u0644\u064A",common:"\u062A\u0634\u064A\u0644\u064A"},ces:{official:"Chilsk\xE1 republika",common:"Chile"},cym:{official:"Gweriniaeth Chile",common:"Chile"},deu:{official:"Republik Chile",common:"Chile"},est:{official:"T\u0161iili Vabariik",common:"T\u0161iili"},fin:{official:"Chilen tasavalta",common:"Chile"},fra:{official:"R\xE9publique du Chili",common:"Chili"},hrv:{official:"Republika \u010Cile",common:"\u010Cile"},hun:{official:"Chilei K\xF6zt\xE1rsas\xE1g",common:"Chile"},ita:{official:"Repubblica del Cile",common:"Cile"},jpn:{official:"\u30C1\u30EA\u5171\u548C\u56FD",common:"\u30C1\u30EA"},kor:{official:"\uCE60\uB808 \uACF5\uD654\uAD6D",common:"\uCE60\uB808"},nld:{official:"Republiek Chili",common:"Chili"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0634\u06CC\u0644\u06CC",common:"\u0634\u06CC\u0644\u06CC"},pol:{official:"Republika Chile",common:"Chile"},por:{official:"Rep\xFAblica do Chile",common:"Chile"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0427\u0438\u043B\u0438",common:"\u0427\u0438\u043B\u0438"},slk:{official:"\u010C\xEDlska republika",common:"\u010Cile"},spa:{official:"Rep\xFAblica de Chile",common:"Chile"},swe:{official:"Republiken Chile",common:"Chile"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0686\u0644\u06CC",common:"\u0686\u0644\u06CC"},zho:{official:"\u667A\u5229\u5171\u548C\u56FD",common:"\u667A\u5229"}},latlng:[-30,-71],landlocked:!1,borders:["ARG","BOL","PER"],area:756102,demonyms:{eng:{f:"Chilean",m:"Chilean"},fra:{f:"Chilienne",m:"Chilien"}},flag:"\u{1F1E8}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/XboxyNHh2fAjCPNn9",openStreetMaps:"https://www.openstreetmap.org/relation/167454"},population:19116209,gini:{"2017":44.4},fifa:"CHI",car:{signs:["RCH"],side:"right"},timezones:["UTC-06:00","UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/cl.png",svg:"https://flagcdn.com/cl.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-33.45,-70.67]},postalCode:{format:"#######",regex:"^(\\d{7})$"}},{name:{common:"Liberia",official:"Republic of Liberia",nativeName:{eng:{official:"Republic of Liberia",common:"Liberia"}}},tld:[".lr"],cca2:"LR",ccn3:"430",cca3:"LBR",cioc:"LBR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LRD:{name:"Liberian dollar",symbol:"$"}},idd:{root:"+2",suffixes:["31"]},capital:["Monrovia"],altSpellings:["LR","Republic of Liberia"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0644\u064A\u0628\u064A\u0631\u064A\u0627",common:"\u0644\u064A\u0628\u064A\u0631\u064A\u0627"},ces:{official:"Liberijsk\xE1 republika",common:"Lib\xE9rie"},cym:{official:"Republic of Liberia",common:"Liberia"},deu:{official:"Republik Liberia",common:"Liberia"},est:{official:"Libeeria Vabariik",common:"Libeeria"},fin:{official:"Liberian tasavalta",common:"Liberia"},fra:{official:"R\xE9publique du Lib\xE9ria",common:"Liberia"},hrv:{official:"Republika Liberija",common:"Liberija"},hun:{official:"Lib\xE9riai K\xF6zt\xE1rsas\xE1g",common:"Lib\xE9ria"},ita:{official:"Repubblica di Liberia",common:"Liberia"},jpn:{official:"\u30EA\u30D9\u30EA\u30A2\u5171\u548C\u56FD",common:"\u30EA\u30D9\u30EA\u30A2"},kor:{official:"\uB77C\uC774\uBCA0\uB9AC\uC544 \uACF5\uD654\uAD6D",common:"\uB77C\uC774\uBCA0\uB9AC\uC544"},nld:{official:"Republiek Liberia",common:"Liberia"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0644\u06CC\u0628\u0631\u06CC\u0627",common:"\u0644\u06CC\u0628\u0640\u0650\u0631\u06CC\u0627"},pol:{official:"Republika Liberii",common:"Liberia"},por:{official:"Rep\xFAblica da Lib\xE9ria",common:"Lib\xE9ria"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041B\u0438\u0431\u0435\u0440\u0438\u044F",common:"\u041B\u0438\u0431\u0435\u0440\u0438\u044F"},slk:{official:"Lib\xE9rijsk\xE1 republika",common:"Lib\xE9ria"},spa:{official:"Rep\xFAblica de Liberia",common:"Liberia"},swe:{official:"Republiken Liberia",common:"Liberia"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0644\u0627\u0626\u0628\u06CC\u0631\u06CC\u0627",common:"\u0644\u0627\u0626\u0628\u06CC\u0631\u06CC\u0627"},zho:{official:"\u5229\u6BD4\u91CC\u4E9A\u5171\u548C\u56FD",common:"\u5229\u6BD4\u91CC\u4E9A"}},latlng:[6.5,-9.5],landlocked:!1,borders:["GIN","CIV","SLE"],area:111369,demonyms:{eng:{f:"Liberian",m:"Liberian"},fra:{f:"Lib\xE9rienne",m:"Lib\xE9rien"}},flag:"\u{1F1F1}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/4VsHsc2oeGeRL3wg6",openStreetMaps:"https://www.openstreetmap.org/relation/192780"},population:5057677,gini:{"2016":35.3},fifa:"LBR",car:{signs:["LB"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/lr.png",svg:"https://flagcdn.com/lr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.3,-10.8]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Nauru",official:"Republic of Nauru",nativeName:{eng:{official:"Republic of Nauru",common:"Nauru"},nau:{official:"Republic of Nauru",common:"Nauru"}}},tld:[".nr"],cca2:"NR",ccn3:"520",cca3:"NRU",cioc:"NRU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["74"]},capital:["Yaren"],altSpellings:["NR","Naoero","Pleasant Island","Republic of Nauru","Ripublik Naoero"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",nau:"Nauru"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0646\u0627\u0648\u0631\u0648",common:"\u0646\u0627\u0648\u0631\u0648"},ces:{official:"Republika Nauru",common:"Nauru"},cym:{official:"Republic of Nauru",common:"Nauru"},deu:{official:"Republik Nauru",common:"Nauru"},est:{official:"Nauru Vabariik",common:"Nauru"},fin:{official:"Naurun tasavalta",common:"Nauru"},fra:{official:"R\xE9publique de Nauru",common:"Nauru"},hrv:{official:"Republika Nauru",common:"Nauru"},hun:{official:"Naurui K\xF6zt\xE1rsas\xE1g",common:"Nauru"},ita:{official:"Repubblica di Nauru",common:"Nauru"},jpn:{official:"\u30CA\u30A6\u30EB\u5171\u548C\u56FD",common:"\u30CA\u30A6\u30EB"},kor:{official:"\uB098\uC6B0\uB8E8 \uACF5\uD654\uAD6D",common:"\uB098\uC6B0\uB8E8"},nld:{official:"Republiek Nauru",common:"Nauru"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0646\u0627\u0626\u0648\u0631\u0648",common:"\u0646\u0627\u0626\u0648\u0631\u0648"},pol:{official:"Republika Nauru",common:"Nauru"},por:{official:"Rep\xFAblica de Nauru",common:"Nauru"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041D\u0430\u0443\u0440\u0443",common:"\u041D\u0430\u0443\u0440\u0443"},slk:{official:"Naursk\xE1 republika",common:"Nauru"},spa:{official:"Rep\xFAblica de Nauru",common:"Nauru"},swe:{official:"Republiken Nauru",common:"Nauru"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0646\u0627\u0648\u0631\u0648",common:"\u0646\u0627\u0648\u0631\u0648"},zho:{official:"\u7459\u9C81\u5171\u548C\u56FD",common:"\u7459\u9C81"}},latlng:[-.53333333,166.91666666],landlocked:!1,area:21,demonyms:{eng:{f:"Nauruan",m:"Nauruan"},fra:{f:"Nauruane",m:"Nauruan"}},flag:"\u{1F1F3}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/kyAGw6XEJgjSMsTK7",openStreetMaps:"https://www.openstreetmap.org/relation/571804"},population:10834,gini:{"2012":34.8},car:{signs:["NAU"],side:"left"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nr.png",svg:"https://flagcdn.com/nr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-.55,166.92]}},{name:{common:"R\xE9union",official:"R\xE9union Island",nativeName:{fra:{official:"Ile de la R\xE9union",common:"La R\xE9union"}}},tld:[".re"],cca2:"RE",ccn3:"638",cca3:"REU",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+2",suffixes:["62"]},capital:["Saint-Denis"],altSpellings:["RE","Reunion"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0632\u064A\u0631\u0629 \u0644\u0627 \u0631\u064A\u0648\u0646\u064A\u0648\u0646",common:"\u0644\u0627 \u0631\u064A\u0648\u0646\u064A\u0648\u0646"},ces:{official:"R\xE9union",common:"R\xE9union"},cym:{official:"R\xE9union Island",common:"R\xE9union"},deu:{official:"R\xE9union",common:"R\xE9union"},est:{official:"R\xE9unioni departemang",common:"R\xE9union"},fin:{official:"R\xE9union",common:"R\xE9union"},fra:{official:"Ile de la R\xE9union",common:"R\xE9union"},hrv:{official:"R\xE9union Island",common:"R\xE9union"},hun:{official:"R\xE9union",common:"R\xE9union"},ita:{official:"R\xE9union",common:"Riunione"},jpn:{official:"\u30EC\u30E6\u30CB\u30AA\u30F3\u5CF6",common:"\u30EC\u30E6\u30CB\u30AA\u30F3"},kor:{official:"\uB808\uC704\uB2C8\uC639",common:"\uB808\uC704\uB2C8\uC639"},nld:{official:"R\xE9union",common:"R\xE9union"},per:{official:"\u0631\u0626\u0648\u0646\u06CC\u0648\u0646",common:"\u0631\u0626\u0648\u0646\u06CC\u0648\u0646"},pol:{official:"Reunion",common:"Reunion"},por:{official:"Ilha da Reuni\xE3o",common:"Reuni\xE3o"},rus:{official:"\u0420\u0435\u044E\u043D\u044C\u043E\u043D",common:"\u0420\u0435\u044E\u043D\u044C\u043E\u043D"},slk:{official:"R\xE9unionsk\xFD z\xE1morsk\xFD departm\xE1n",common:"R\xE9union"},spa:{official:"Isla de la Reuni\xF3n",common:"Reuni\xF3n"},swe:{official:"R\xE9union",common:"R\xE9union"},urd:{official:"\u0631\u06D2 \u06CC\u0648\u0646\u06CC\u0648\u06BA \u062C\u0632\u06CC\u0631\u06C1",common:"\u0631\u06D2 \u06CC\u0648\u0646\u06CC\u0648\u06BA"},zho:{official:"\u7559\u5C3C\u65FA\u5C9B",common:"\u7559\u5C3C\u65FA\u5C9B"}},latlng:[-21.15,55.5],landlocked:!1,area:2511,demonyms:{eng:{f:"R\xE9unionese",m:"R\xE9unionese"},fra:{f:"R\xE9unionnaise",m:"R\xE9unionnais"}},flag:"\u{1F1F7}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/wWpBrXsp8UHVbah29",openStreetMaps:"https://www.openstreetmap.org/relation/1785276"},population:840974,car:{signs:["F"],side:"right"},timezones:["UTC+04:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/re.png",svg:"https://flagcdn.com/re.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-20.88,55.45]},postalCode:{format:"#####",regex:"^((97|98)(4|7|8)\\d{2})$"}},{name:{common:"Montserrat",official:"Montserrat",nativeName:{eng:{official:"Montserrat",common:"Montserrat"}}},tld:[".ms"],cca2:"MS",ccn3:"500",cca3:"MSR",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["664"]},capital:["Plymouth"],altSpellings:["MS"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0645\u0648\u0646\u062A\u0633\u0631\u0627\u062A",common:"\u0645\u0648\u0646\u062A\u0633\u0631\u0627\u062A"},ces:{official:"Montserrat",common:"Montserrat"},cym:{official:"Montserrat",common:"Montserrat"},deu:{official:"Montserrat",common:"Montserrat"},est:{official:"Montserrat",common:"Montserrat"},fin:{official:"Montserrat",common:"Montserrat"},fra:{official:"Montserrat",common:"Montserrat"},hrv:{official:"Montserrat",common:"Montserrat"},hun:{official:"Montserrat",common:"Montserrat"},ita:{official:"Montserrat",common:"Montserrat"},jpn:{official:"\u30E2\u30F3\u30C8\u30BB\u30E9\u30C8",common:"\u30E2\u30F3\u30C8\u30BB\u30E9\u30C8"},kor:{official:"\uBAAC\uD2B8\uC138\uB7AB",common:"\uBAAC\uD2B8\uC138\uB7AB"},nld:{official:"Montserrat",common:"Montserrat"},per:{official:"\u0645\u0648\u0646\u062A\u0633\u0631\u0627\u062A",common:"\u0645\u0648\u0646\u062A\u0633\u0631\u0627\u062A"},pol:{official:"Montserrat",common:"Montserrat"},por:{official:"Montserrat",common:"Montserrat"},rus:{official:"\u041C\u043E\u043D\u0442\u0441\u0435\u0440\u0440\u0430\u0442",common:"\u041C\u043E\u043D\u0442\u0441\u0435\u0440\u0440\u0430\u0442"},slk:{official:"Montserrat",common:"Montserrat"},spa:{official:"Montserrat",common:"Montserrat"},swe:{official:"Montserrat",common:"Montserrat"},urd:{official:"\u0645\u0627\u0646\u0679\u0633\u0631\u06CC\u0679",common:"\u0645\u0627\u0646\u0679\u0633\u0631\u06CC\u0679"},zho:{official:"\u8499\u7279\u585E\u62C9\u7279",common:"\u8499\u7279\u585E\u62C9\u7279"}},latlng:[16.75,-62.2],landlocked:!1,area:102,demonyms:{eng:{f:"Montserratian",m:"Montserratian"},fra:{f:"Montserratienne",m:"Montserratien"}},flag:"\u{1F1F2}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/CSbe7UmxPmiwQB7GA",openStreetMaps:"https://www.openstreetmap.org/relation/537257"},population:4922,fifa:"MSR",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ms.png",svg:"https://flagcdn.com/ms.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ms.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ms.svg"},startOfWeek:"monday",capitalInfo:{latlng:[16.7,-62.22]}},{name:{common:"Taiwan",official:"Republic of China (Taiwan)",nativeName:{zho:{official:"\u4E2D\u83EF\u6C11\u570B",common:"\u53F0\u7063"}}},tld:[".tw",".\u53F0\u7063",".\u53F0\u6E7E"],cca2:"TW",ccn3:"158",cca3:"TWN",cioc:"TPE",independent:!1,status:"officially-assigned",unMember:!1,currencies:{TWD:{name:"New Taiwan dollar",symbol:"$"}},idd:{root:"+8",suffixes:["86"]},capital:["Taipei"],altSpellings:["TW","T\xE1iw\u0101n","Republic of China","\u4E2D\u83EF\u6C11\u570B","Zh\u014Dnghu\xE1 M\xEDngu\xF3","Chinese Taipei"],region:"Asia",subregion:"Eastern Asia",languages:{zho:"Chinese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0635\u064A\u0646 (\u062A\u0627\u064A\u0648\u0627\u0646)",common:"\u062A\u0627\u064A\u0648\u0627\u0646"},ces:{official:"\u010C\xEDnsk\xE1 republika",common:"Tchaj-wan"},cym:{official:"Republic of China (Taiwan)",common:"Taiwan"},deu:{official:"Republik China (Taiwan)",common:"Taiwan"},est:{official:"Taiwani",common:"Taiwan"},fin:{official:"Kiinan tasavalta",common:"Taiwan"},fra:{official:"R\xE9publique de Chine (Ta\xEFwan)",common:"Ta\xEFwan"},hrv:{official:"Republika Kina",common:"Tajvan"},hun:{official:"K\xEDnai K\xF6zt\xE1rsas\xE1g",common:"Tajvan"},ita:{official:"Repubblica cinese (Taiwan)",common:"Taiwan"},jpn:{official:"\u4E2D\u83EF\u6C11\u56FD",common:"\u53F0\u6E7E"},kor:{official:"\uC911\uD654\uBBFC\uAD6D",common:"\uB300\uB9CC"},nld:{official:"Republiek China (Taiwan)",common:"Taiwan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0686\u06CC\u0646",common:"\u062A\u0627\u06CC\u0648\u0627\u0646"},pol:{official:"Republika Chi\u0144ska (Tajwan)",common:"Tajwan"},por:{official:"Rep\xFAblica da China",common:"Ilha Formosa"},rus:{official:"\u041A\u0438\u0442\u0430\u0439\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0422\u0430\u0439\u0432\u0430\u043D\u044C"},slk:{official:"\u010C\xEDnska republika",common:"Taiwan"},spa:{official:"Rep\xFAblica de China en Taiw\xE1n",common:"Taiw\xE1n"},swe:{official:"Republiken Kina",common:"Taiwan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0686\u06CC\u0646 (\u062A\u0627\u0626\u06CC\u0648\u0627\u0646)",common:"\u062A\u0627\u0626\u06CC\u0648\u0627\u0646"}},latlng:[23.5,121],landlocked:!1,area:36193,demonyms:{eng:{f:"Taiwanese",m:"Taiwanese"},fra:{f:"Ta\xEFwanaise",m:"Ta\xEFwanais"}},flag:"\u{1F1F9}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/HgMKFQjNadF3Wa6B6",openStreetMaps:"https://www.openstreetmap.org/relation/449220"},population:23503349,fifa:"TPE",car:{signs:["RC"],side:"right"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tw.png",svg:"https://flagcdn.com/tw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[25.03,121.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Antarctica",official:"Antarctica"},tld:[".aq"],cca2:"AQ",ccn3:"010",cca3:"ATA",independent:!1,status:"officially-assigned",unMember:!1,idd:{},altSpellings:["AQ"],region:"Antarctic",translations:{ara:{official:"\u0623\u0646\u062A\u0627\u0631\u062A\u064A\u0643\u0627",common:"\u0623\u0646\u062A\u0627\u0631\u062A\u064A\u0643\u0627"},ces:{official:"Antarktida",common:"Antarktida"},cym:{official:"Yr Antarctig",common:"Yr Antarctig"},deu:{official:"Antarktika",common:"Antarktis"},est:{official:"Antarktika",common:"Antarktika"},fin:{official:"Etel\xE4manner",common:"Etel\xE4manner"},fra:{official:"Antarctique",common:"Antarctique"},hrv:{official:"Antarktika",common:"Antarktika"},hun:{official:"Antarktisz",common:"Antarktisz"},ita:{official:"Antartide",common:"Antartide"},jpn:{official:"\u5357\u6975\u5927\u9678",common:"\u5357\u6975"},kor:{official:"\uB0A8\uADF9",common:"\uB0A8\uADF9"},nld:{official:"Antarctica",common:"Antarctica"},per:{official:"\u062C\u0646\u0648\u0628\u06AF\u0627\u0646",common:"\u062C\u0646\u0648\u0628\u06AF\u0627\u0646"},pol:{official:"Antarktyka",common:"Antarktyka"},por:{official:"Ant\xE1rtica",common:"Ant\xE1rtida"},rus:{official:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0430",common:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0434\u0430"},slk:{official:"Antarkt\xEDda",common:"Antarkt\xEDda"},spa:{official:"Ant\xE1rtida",common:"Ant\xE1rtida"},swe:{official:"Antarktis",common:"Antarktis"},urd:{official:"\u0627\u0646\u0679\u0627\u0631\u06A9\u0679\u06A9\u0627",common:"\u0627\u0646\u0679\u0627\u0631\u06A9\u0679\u06A9\u0627"},zho:{official:"\u5357\u6781\u6D32",common:"\u5357\u6781\u6D32"}},latlng:[-90,0],landlocked:!1,area:14e6,demonyms:{eng:{f:"Antarctican",m:"Antarctican"},fra:{f:"Antarcticaine",m:"Antarcticain"}},flag:"\u{1F1E6}\u{1F1F6}",maps:{googleMaps:"https://goo.gl/maps/kyBuJriu4itiXank7",openStreetMaps:"https://www.openstreetmap.org/node/36966060"},population:1e3,car:{signs:[""],side:"right"},timezones:["UTC-03:00","UTC+03:00","UTC+05:00","UTC+06:00","UTC+07:00","UTC+08:00","UTC+10:00","UTC+12:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/aq.png",svg:"https://flagcdn.com/aq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/aq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/aq.svg"},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Saint Pierre and Miquelon",official:"Saint Pierre and Miquelon",nativeName:{fra:{official:"Collectivit\xE9 territoriale de Saint-Pierre-et-Miquelon",common:"Saint-Pierre-et-Miquelon"}}},tld:[".pm"],cca2:"PM",ccn3:"666",cca3:"SPM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+5",suffixes:["08"]},capital:["Saint-Pierre"],altSpellings:["PM","Collectivit\xE9 territoriale de Saint-Pierre-et-Miquelon"],region:"Americas",subregion:"North America",languages:{fra:"French"},translations:{ara:{official:"\u0633\u0627\u0646 \u0628\u064A\u064A\u0631 \u0648\u0645\u064A\u0643\u0644\u0648\u0646",common:"\u0633\u0627\u0646 \u0628\u064A\u064A\u0631 \u0648\u0645\u064A\u0643\u0644\u0648\u0646"},ces:{official:"Saint-Pierre a Miquelon",common:"Saint-Pierre a Miquelon"},cym:{official:"Saint Pierre and Miquelon",common:"Saint Pierre and Miquelon"},deu:{official:"St. Pierre und Miquelon",common:"St. Pierre und Miquelon"},est:{official:"Saint-Pierre\u2019i ja Miqueloni territoriaal\xFChendus",common:"Saint-Pierre ja Miquelon"},fin:{official:"Saint-Pierre ja Miquelon",common:"Saint-Pierre ja Miquelon"},fra:{official:"Saint-Pierre-et-Miquelon",common:"Saint-Pierre-et-Miquelon"},hrv:{official:"Saint Pierre i Miquelon",common:"Sveti Petar i Mikelon"},hun:{official:"Saint-Pierre \xE9s Miquelon",common:"Saint-Pierre \xE9s Miquelon"},ita:{official:"Saint Pierre e Miquelon",common:"Saint-Pierre e Miquelon"},jpn:{official:"\u30B5\u30F3\u30D4\u30A8\u30FC\u30EB\u5CF6\xB7\u30DF\u30AF\u30ED\u30F3\u5CF6",common:"\u30B5\u30F3\u30D4\u30A8\u30FC\u30EB\u5CF6\u30FB\u30DF\u30AF\u30ED\u30F3\u5CF6"},kor:{official:"\uC0DD\uD53C\uC5D0\uB974 \uBBF8\uD074\uB871",common:"\uC0DD\uD53C\uC5D0\uB974 \uBBF8\uD074\uB871"},nld:{official:"Saint-Pierre en Miquelon",common:"Saint Pierre en Miquelon"},per:{official:"\u0633\u0646-\u067E\u06CC\u0631-\u0627-\u0645\u06CC\u06A9\u0644\u0648\u0646",common:"\u0633\u0646-\u067E\u06CC\u0650\u0631 \u0648 \u0645\u06CC\u06A9\u0644\u064F\u0646"},pol:{official:"Saint-Pierre i Miquelon",common:"Saint-Pierre i Miquelon"},por:{official:"Saint Pierre e Miquelon",common:"Saint-Pierre e Miquelon"},rus:{official:"\u0421\u0435\u043D-\u041F\u044C\u0435\u0440 \u0438 \u041C\u0438\u043A\u0435\u043B\u043E\u043D",common:"\u0421\u0435\u043D-\u041F\u044C\u0435\u0440 \u0438 \u041C\u0438\u043A\u0435\u043B\u043E\u043D"},slk:{official:"Ostrovy Saint Pierre a Miquelon",common:"Saint Pierre a Miquelon"},spa:{official:"San Pedro y Miquel\xF3n",common:"San Pedro y Miquel\xF3n"},swe:{official:"Saint-Pierre och Miquelon",common:"Saint-Pierre och Miquelon"},urd:{official:"\u0633\u06CC\u0646\u0679 \u067E\u06CC\u0626\u0631 \u0648 \u0645\u06CC\u06A9\u06CC\u0644\u0648\u0646",common:"\u0633\u06CC\u0646\u0679 \u067E\u06CC\u0626\u0631 \u0648 \u0645\u06CC\u06A9\u06CC\u0644\u0648\u0646"},zho:{official:"\u5723\u76AE\u57C3\u5C14\u548C\u5BC6\u514B\u9686",common:"\u5723\u76AE\u57C3\u5C14\u548C\u5BC6\u514B\u9686"}},latlng:[46.83333333,-56.33333333],landlocked:!1,area:242,demonyms:{eng:{f:"Saint-Pierrais, Miquelonnais",m:"Saint-Pierrais, Miquelonnais"},fra:{f:"Saint-Pierraise, Miquelonaise",m:"Saint-Pierrais, Miquelonais"}},flag:"\u{1F1F5}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/bUM8Yc8pA8ghyhmt6",openStreetMaps:"https://www.openstreetmap.org/relation/3406826"},population:6069,car:{signs:["F"],side:"right"},timezones:["UTC-03:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/pm.png",svg:"https://flagcdn.com/pm.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[46.77,-56.18]},postalCode:{format:"#####",regex:"^(97500)$"}},{name:{common:"Argentina",official:"Argentine Republic",nativeName:{grn:{official:"Argentine Republic",common:"Argentina"},spa:{official:"Rep\xFAblica Argentina",common:"Argentina"}}},tld:[".ar"],cca2:"AR",ccn3:"032",cca3:"ARG",cioc:"ARG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ARS:{name:"Argentine peso",symbol:"$"}},idd:{root:"+5",suffixes:["4"]},capital:["Buenos Aires"],altSpellings:["AR","Argentine Republic","Rep\xFAblica Argentina"],region:"Americas",subregion:"South America",languages:{grn:"Guaran\xED",spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0623\u0631\u062C\u0646\u062A\u064A\u0646",common:"\u0627\u0644\u0623\u0631\u062C\u0646\u062A\u064A\u0646"},ces:{official:"Argentinsk\xE1 republika",common:"Argentina"},cym:{official:"Gweriniaeth yr Ariannin",common:"Ariannin"},deu:{official:"Argentinische Republik",common:"Argentinien"},est:{official:"Argentina Vabariik",common:"Argentina"},fin:{official:"Argentiinan tasavalta",common:"Argentiina"},fra:{official:"R\xE9publique argentine",common:"Argentine"},hrv:{official:"Argentinski Republika",common:"Argentina"},hun:{official:"Argentin K\xF6zt\xE1rsas\xE1g",common:"Argent\xEDna"},ita:{official:"Repubblica Argentina",common:"Argentina"},jpn:{official:"\u30A2\u30EB\u30BC\u30F3\u30C1\u30F3\u5171\u548C\u56FD",common:"\u30A2\u30EB\u30BC\u30F3\u30C1\u30F3"},kor:{official:"\uC544\uB974\uD5E8\uD2F0\uB098 \uACF5\uD654\uAD6D",common:"\uC544\uB974\uD5E8\uD2F0\uB098"},nld:{official:"Argentijnse Republiek",common:"Argentini\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0631\u0698\u0627\u0646\u062A\u06CC\u0646",common:"\u0622\u0631\u0698\u0627\u0646\u062A\u06CC\u0646"},pol:{official:"Republika Argenty\u0144ska",common:"Argentyna"},por:{official:"Rep\xFAblica Argentina",common:"Argentina"},rus:{official:"\u0410\u0440\u0433\u0435\u043D\u0442\u0438\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0410\u0440\u0433\u0435\u043D\u0442\u0438\u043D\u0430"},slk:{official:"Argent\xEDnska republika",common:"Argent\xEDna"},spa:{official:"Rep\xFAblica Argentina",common:"Argentina"},swe:{official:"Republiken Argentina",common:"Argentina"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0631\u062C\u0646\u0679\u0627\u0626\u0646",common:"\u0627\u0631\u062C\u0646\u0679\u0627\u0626\u0646"},zho:{official:"\u963F\u6839\u5EF7\u5171\u548C\u56FD",common:"\u963F\u6839\u5EF7"}},latlng:[-34,-64],landlocked:!1,borders:["BOL","BRA","CHL","PRY","URY"],area:2780400,demonyms:{eng:{f:"Argentine",m:"Argentine"},fra:{f:"Argentine",m:"Argentin"}},flag:"\u{1F1E6}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/Z9DXNxhf2o93kvyc6",openStreetMaps:"https://www.openstreetmap.org/relation/286393"},population:45376763,gini:{"2019":42.9},fifa:"ARG",car:{signs:["RA"],side:"right"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/ar.png",svg:"https://flagcdn.com/ar.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ar.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ar.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-34.58,-58.67]},postalCode:{format:"@####@@@",regex:"^([A-Z]\\d{4}[A-Z]{3})$"}},{name:{common:"Togo",official:"Togolese Republic",nativeName:{fra:{official:"R\xE9publique togolaise",common:"Togo"}}},tld:[".tg"],cca2:"TG",ccn3:"768",cca3:"TGO",cioc:"TOG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["28"]},capital:["Lom\xE9"],altSpellings:["TG","Togolese","Togolese Republic","R\xE9publique Togolaise"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u0648\u063A\u0648",common:"\u062A\u0648\u063A\u0648"},ces:{official:"Republika Togo",common:"Togo"},cym:{official:"Togolese Republic",common:"Togo"},deu:{official:"Republik Togo",common:"Togo"},est:{official:"Togo Vabariik",common:"Togo"},fin:{official:"Togon tasavalta",common:"Togo"},fra:{official:"R\xE9publique togolaise",common:"Togo"},hrv:{official:"Togolese Republika",common:"Togo"},hun:{official:"Tog\xF3i K\xF6zt\xE1rsas\xE1g",common:"Togo"},ita:{official:"Repubblica del Togo",common:"Togo"},jpn:{official:"\u30C8\u30FC\u30B4\u5171\u548C\u56FD",common:"\u30C8\u30FC\u30B4"},kor:{official:"\uD1A0\uACE0 \uACF5\uD654\uAD6D",common:"\uD1A0\uACE0"},nld:{official:"Republiek Togo",common:"Togo"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062A\u0648\u06AF\u0648",common:"\u062A\u0648\u06AF\u0648"},pol:{official:"Republika Togijska",common:"Togo"},por:{official:"Rep\xFAblica do Togo",common:"Togo"},rus:{official:"\u0422\u043E\u0433\u043E \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0422\u043E\u0433\u043E"},slk:{official:"Togsk\xE1 republika",common:"Togo"},spa:{official:"Rep\xFAblica de Togo",common:"Togo"},swe:{official:"Republiken Togo",common:"Togo"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0679\u0648\u06AF\u0648",common:"\u0679\u0648\u06AF\u0648"},zho:{official:"\u591A\u54E5\u5171\u548C\u56FD",common:"\u591A\u54E5"}},latlng:[8,1.16666666],landlocked:!1,borders:["BEN","BFA","GHA"],area:56785,demonyms:{eng:{f:"Togolese",m:"Togolese"},fra:{f:"Togolaise",m:"Togolais"}},flag:"\u{1F1F9}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/jzAa9feXuXPrKVb89",openStreetMaps:"https://www.openstreetmap.org/relation/192782"},population:8278737,gini:{"2015":43.1},fifa:"TOG",car:{signs:["TG"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/tg.png",svg:"https://flagcdn.com/tg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.14,1.21]}},{name:{common:"Austria",official:"Republic of Austria",nativeName:{bar:{official:"Republik \xD6sterreich",common:"\xD6sterreich"}}},tld:[".at"],cca2:"AT",ccn3:"040",cca3:"AUT",cioc:"AUT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+4",suffixes:["3"]},capital:["Vienna"],altSpellings:["AT","Osterreich","Oesterreich"],region:"Europe",subregion:"Central Europe",languages:{bar:"Austro-Bavarian German"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0646\u0645\u0633\u0627",common:"\u0627\u0644\u0646\u0645\u0633\u0627"},ces:{official:"Rakousk\xE1 republika",common:"Rakousko"},cym:{official:"Gweriniaeth Awstria",common:"Awstria"},deu:{official:"Republik \xD6sterreich",common:"\xD6sterreich"},est:{official:"Austria Vabariik",common:"Austria"},fin:{official:"It\xE4vallan tasavalta",common:"It\xE4valta"},fra:{official:"R\xE9publique d'Autriche",common:"Autriche"},hrv:{official:"Republika Austrija",common:"Austrija"},hun:{official:"Ausztria",common:"Ausztria"},ita:{official:"Repubblica d'Austria",common:"Austria"},jpn:{official:"\u30AA\u30FC\u30B9\u30C8\u30EA\u30A2\u5171\u548C\u56FD",common:"\u30AA\u30FC\u30B9\u30C8\u30EA\u30A2"},kor:{official:"\uC624\uC2A4\uD2B8\uB9AC\uC544 \uACF5\uD654\uAD6D",common:"\uC624\uC2A4\uD2B8\uB9AC\uC544"},nld:{official:"Republiek Oostenrijk",common:"Oostenrijk"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u062A\u0631\u06CC\u0634",common:"\u0627\u062A\u0631\u06CC\u0634"},pol:{official:"Republika Austrii",common:"Austria"},por:{official:"Rep\xFAblica da \xC1ustria",common:"\xC1ustria"},rus:{official:"\u0410\u0432\u0441\u0442\u0440\u0438\u0439\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0410\u0432\u0441\u0442\u0440\u0438\u044F"},slk:{official:"Rak\xFAska republika",common:"Rak\xFAsko"},spa:{official:"Rep\xFAblica de Austria",common:"Austria"},swe:{official:"Republiken \xD6sterrike",common:"\xD6sterrike"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0622\u0633\u0679\u0631\u06CC\u0627",common:"\u0622\u0633\u0679\u0631\u06CC\u0627"},zho:{official:"\u5965\u5730\u5229\u5171\u548C\u56FD",common:"\u5965\u5730\u5229"}},latlng:[47.33333333,13.33333333],landlocked:!0,borders:["CZE","DEU","HUN","ITA","LIE","SVK","SVN","CHE"],area:83871,demonyms:{eng:{f:"Austrian",m:"Austrian"},fra:{f:"Autrichienne",m:"Autrichien"}},flag:"\u{1F1E6}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/pCWpWQhznHyRzQcu9",openStreetMaps:"https://www.openstreetmap.org/relation/16239"},population:8917205,gini:{"2018":30.8},fifa:"AUT",car:{signs:["A"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/at.png",svg:"https://flagcdn.com/at.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/at.png",svg:"https://mainfacts.com/media/images/coats_of_arms/at.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.2,16.37]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Grenada",official:"Grenada",nativeName:{eng:{official:"Grenada",common:"Grenada"}}},tld:[".gd"],cca2:"GD",ccn3:"308",cca3:"GRD",cioc:"GRN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["473"]},capital:["St. George's"],altSpellings:["GD"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u063A\u0631\u064A\u0646\u0627\u062F\u0627",common:"\u063A\u0631\u064A\u0646\u0627\u062F\u0627"},ces:{official:"Grenada",common:"Grenada"},cym:{official:"Grenada",common:"Grenada"},deu:{official:"Grenada",common:"Grenada"},est:{official:"Grenada",common:"Grenada"},fin:{official:"Grenada",common:"Grenada"},fra:{official:"Grenade",common:"Grenade"},hrv:{official:"Grenada",common:"Grenada"},hun:{official:"Grenada",common:"Grenada"},ita:{official:"Grenada",common:"Grenada"},jpn:{official:"\u30B0\u30EC\u30CA\u30C0",common:"\u30B0\u30EC\u30CA\u30C0"},kor:{official:"\uADF8\uB808\uB098\uB2E4",common:"\uADF8\uB808\uB098\uB2E4"},nld:{official:"Grenada",common:"Grenada"},per:{official:"\u06AF\u0631\u0646\u0627\u062F\u0627",common:"\u06AF\u0631\u0646\u0627\u062F\u0627"},pol:{official:"Grenada",common:"Grenada"},por:{official:"Grenada",common:"Granada"},rus:{official:"\u0413\u0440\u0435\u043D\u0430\u0434\u0430",common:"\u0413\u0440\u0435\u043D\u0430\u0434\u0430"},slk:{official:"Grenada",common:"Grenada"},spa:{official:"Granada",common:"Grenada"},swe:{official:"Grenada",common:"Grenada"},urd:{official:"\u06AF\u0631\u06CC\u0646\u0627\u0688\u0627",common:"\u06AF\u0631\u06CC\u0646\u0627\u0688\u0627"},zho:{official:"\u683C\u6797\u7EB3\u8FBE",common:"\u683C\u6797\u7EB3\u8FBE"}},latlng:[12.11666666,-61.66666666],landlocked:!1,area:344,demonyms:{eng:{f:"Grenadian",m:"Grenadian"},fra:{f:"Grenadienne",m:"Grenadien"}},flag:"\u{1F1EC}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/rqWyfUAt4xhvk1Zy9",openStreetMaps:"https://www.openstreetmap.org/relation/550727"},population:112519,fifa:"GRN",car:{signs:["WG"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gd.png",svg:"https://flagcdn.com/gd.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gd.svg"},startOfWeek:"monday",capitalInfo:{latlng:[32.38,-64.68]}},{name:{common:"Faroe Islands",official:"Faroe Islands",nativeName:{dan:{official:"F\xE6r\xF8erne",common:"F\xE6r\xF8erne"},fao:{official:"F\xF8royar",common:"F\xF8royar"}}},tld:[".fo"],cca2:"FO",ccn3:"234",cca3:"FRO",independent:!1,status:"officially-assigned",unMember:!1,currencies:{DKK:{name:"Danish krone",symbol:"kr"},FOK:{name:"Faroese kr\xF3na",symbol:"kr"}},idd:{root:"+2",suffixes:["98"]},capital:["T\xF3rshavn"],altSpellings:["FO","F\xF8royar","F\xE6r\xF8erne"],region:"Europe",subregion:"Northern Europe",languages:{dan:"Danish",fao:"Faroese"},translations:{ara:{official:"\u062C\u0632\u0631 \u0641\u0627\u0631\u0648",common:"\u062C\u0632\u0631 \u0641\u0627\u0631\u0648"},ces:{official:"Faersk\xE9 ostrovy",common:"Faersk\xE9 ostrovy"},cym:{official:"Faroe Islands",common:"Faroe Islands"},deu:{official:"F\xE4r\xF6er",common:"F\xE4r\xF6er-Inseln"},est:{official:"F\xE4\xE4ri saared",common:"F\xE4\xE4ri saared"},fin:{official:"F\xE4rsaaret",common:"F\xE4rsaaret"},fra:{official:"\xCEles F\xE9ro\xE9",common:"\xCEles F\xE9ro\xE9"},hrv:{official:"Farski Otoci",common:"Farski Otoci"},hun:{official:"Fer\xF6er",common:"Fer\xF6er"},ita:{official:"Isole Faroe",common:"Isole Far Oer"},jpn:{official:"\u30D5\u30A7\u30ED\u30FC\u8AF8\u5CF6",common:"\u30D5\u30A7\u30ED\u30FC\u8AF8\u5CF6"},kor:{official:"\uD398\uB85C \uC81C\uB3C4",common:"\uD398\uB85C \uC81C\uB3C4"},nld:{official:"Faer\xF6er",common:"Faer\xF6er"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0641\u0627\u0631\u0648\u0626\u0647",common:"\u062C\u0632\u0627\u06CC\u0631 \u0641\u0627\u0631\u0648\u0626\u0647"},pol:{official:"Wyspy Owcze",common:"Wyspy Owcze"},por:{official:"Ilhas Faroe",common:"Ilhas Faro\xE9"},rus:{official:"\u0424\u0430\u0440\u0435\u0440\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0424\u0430\u0440\u0435\u0440\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Faersk\xE9 ostrovy",common:"Faersk\xE9 ostrovy"},spa:{official:"Islas Feroe",common:"Islas Faroe"},swe:{official:"F\xE4r\xF6arna",common:"F\xE4r\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u0641\u0627\u0631\u0648",common:"\u062C\u0632\u0627\u0626\u0631 \u0641\u0627\u0631\u0648"},zho:{official:"\u6CD5\u7F57\u7FA4\u5C9B",common:"\u6CD5\u7F57\u7FA4\u5C9B"}},latlng:[62,-7],landlocked:!1,area:1393,demonyms:{eng:{f:"Faroese",m:"Faroese"},fra:{f:"F\xE9ro\xEFenne",m:"F\xE9ro\xEFen"}},flag:"\u{1F1EB}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/6sTru4SmHdEVcNkM6",openStreetMaps:"https://www.openstreetmap.org/relation/52939"},population:48865,fifa:"FRO",car:{signs:["FO"],side:"right"},timezones:["UTC+00:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/fo.png",svg:"https://flagcdn.com/fo.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fo.svg"},startOfWeek:"monday",capitalInfo:{latlng:[62.01,-6.77]},postalCode:{format:"FO-###",regex:"^(?:FO)*(\\d{3})$"}},{name:{common:"Morocco",official:"Kingdom of Morocco",nativeName:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0645\u063A\u0631\u0628\u064A\u0629",common:"\u0627\u0644\u0645\u063A\u0631\u0628"},ber:{official:"\u2D5C\u2D30\u2D33\u2D4D\u2D37\u2D49\u2D5C \u2D4F \u2D4D\u2D4E\u2D56\u2D54\u2D49\u2D31",common:"\u2D4D\u2D4E\u2D30\u2D56\u2D54\u2D49\u2D31"}}},tld:[".ma","\u0627\u0644\u0645\u063A\u0631\u0628."],cca2:"MA",ccn3:"504",cca3:"MAR",cioc:"MAR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MAD:{name:"Moroccan dirham",symbol:"\u062F.\u0645."}},idd:{root:"+2",suffixes:["12"]},capital:["Rabat"],altSpellings:["MA","Kingdom of Morocco","Al-Mamlakah al-Ma\u0121ribiyah"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic",ber:"Berber"},translations:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0645\u063A\u0631\u0628\u064A\u0629",common:"\u0627\u0644\u0645\u063A\u0631\u0628"},ces:{official:"Marock\xE9 kr\xE1lovstv\xED",common:"Maroko"},cym:{official:"Kingdom of Morocco",common:"Morocco"},deu:{official:"K\xF6nigreich Marokko",common:"Marokko"},est:{official:"Maroko Kuningriik",common:"Maroko"},fin:{official:"Marokon kuningaskunta",common:"Marokko"},fra:{official:"Royaume du Maroc",common:"Maroc"},hrv:{official:"Kraljevina Maroko",common:"Maroko"},hun:{official:"Marokk\xF3i Kir\xE1lys\xE1g",common:"Marokk\xF3"},ita:{official:"Regno del Marocco",common:"Marocco"},jpn:{official:"\u30E2\u30ED\u30C3\u30B3\u738B\u56FD",common:"\u30E2\u30ED\u30C3\u30B3"},kor:{official:"\uBAA8\uB85C\uCF54 \uC655\uAD6D",common:"\uBAA8\uB85C\uCF54"},nld:{official:"Koninkrijk Marokko",common:"Marokko"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0645\u0631\u0627\u06A9\u0634",common:"\u0645\u0631\u0627\u06A9\u0634"},pol:{official:"Kr\xF3lestwo Maroka\u0144skie",common:"Maroko"},por:{official:"Reino de Marrocos",common:"Marrocos"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u041C\u0430\u0440\u043E\u043A\u043A\u043E",common:"\u041C\u0430\u0440\u043E\u043A\u043A\u043E"},slk:{official:"Marock\xE9 knie\u017Eatstvo",common:"Maroko"},spa:{official:"Reino de Marruecos",common:"Marruecos"},swe:{official:"Konungariket Marocko",common:"Marocko"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0645\u0631\u0627\u06A9\u0634",common:"\u0645\u0631\u0627\u06A9\u0634"},zho:{official:"\u6469\u6D1B\u54E5\u738B\u56FD",common:"\u6469\u6D1B\u54E5"}},latlng:[32,-5],landlocked:!1,borders:["DZA","ESH","ESP"],area:446550,demonyms:{eng:{f:"Moroccan",m:"Moroccan"},fra:{f:"Marocaine",m:"Marocain"}},flag:"\u{1F1F2}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/6oMv3dyBZg3iaXQ5A",openStreetMaps:"https://www.openstreetmap.org/relation/3630439"},population:36910558,gini:{"2013":39.5},fifa:"MAR",car:{signs:["MA"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ma.png",svg:"https://flagcdn.com/ma.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ma.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ma.svg"},startOfWeek:"monday",capitalInfo:{latlng:[34.02,-6.82]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Anguilla",official:"Anguilla",nativeName:{eng:{official:"Anguilla",common:"Anguilla"}}},tld:[".ai"],cca2:"AI",ccn3:"660",cca3:"AIA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["264"]},capital:["The Valley"],altSpellings:["AI"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",common:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627"},ces:{official:"Anguilla",common:"Anguilla"},cym:{official:"Anguilla",common:"Anguilla"},deu:{official:"Anguilla",common:"Anguilla"},est:{official:"Anguilla",common:"Anguilla"},fin:{official:"Anguilla",common:"Anguilla"},fra:{official:"Anguilla",common:"Anguilla"},hrv:{official:"Anguilla",common:"Angvila"},hun:{official:"Anguilla",common:"Anguilla"},ita:{official:"Anguilla",common:"Anguilla"},jpn:{official:"\u30A2\u30F3\u30B0\u30A3\u30E9",common:"\u30A2\u30F3\u30AE\u30E9"},kor:{official:"\uC575\uADC8\uB77C",common:"\uC575\uADC8\uB77C"},nld:{official:"Anguilla",common:"Anguilla"},per:{official:"\u0622\u0646\u06AF\u0648\u06CC\u0644\u0627",common:"\u0622\u0646\u06AF\u0648\u06CC\u0644\u0627"},pol:{official:"Anguilla",common:"Anguilla"},por:{official:"Anguilla",common:"Anguilla"},rus:{official:"\u0410\u043D\u0433\u0438\u043B\u044C\u044F",common:"\u0410\u043D\u0433\u0438\u043B\u044C\u044F"},slk:{official:"Anguilla",common:"Anguilla"},spa:{official:"Anguila",common:"Anguilla"},swe:{official:"Anguilla",common:"Anguilla"},urd:{official:"\u0627\u06CC\u0646\u06AF\u0648\u06CC\u0644\u0627",common:"\u0627\u06CC\u0646\u06AF\u0648\u06CC\u0644\u0627"},zho:{official:"\u5B89\u572D\u62C9",common:"\u5B89\u572D\u62C9"}},latlng:[18.25,-63.16666666],landlocked:!1,area:91,demonyms:{eng:{f:"Anguillian",m:"Anguillian"},fra:{f:"Anguillane",m:"Anguillan"}},flag:"\u{1F1E6}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/3KgLnEyN7amdno2p9",openStreetMaps:"https://www.openstreetmap.org/relation/2177161"},population:13452,fifa:"AIA",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ai.png",svg:"https://flagcdn.com/ai.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ai.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ai.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.22,-63.05]}},{name:{common:"Palau",official:"Republic of Palau",nativeName:{eng:{official:"Republic of Palau",common:"Palau"},pau:{official:"Beluu er a Belau",common:"Belau"}}},tld:[".pw"],cca2:"PW",ccn3:"585",cca3:"PLW",cioc:"PLW",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["80"]},capital:["Ngerulmud"],altSpellings:["PW","Republic of Palau","Beluu er a Belau"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",pau:"Palauan"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0627\u0644\u0627\u0648",common:"\u0628\u0627\u0644\u0627\u0648"},ces:{official:"Republika Palau",common:"Palau"},cym:{official:"Republic of Palau",common:"Palau"},deu:{official:"Republik Palau",common:"Palau"},est:{official:"Belau Vabariik",common:"Belau"},fin:{official:"Palaun tasavalta",common:"Palau"},fra:{official:"R\xE9publique des Palaos (Palau)",common:"Palaos (Palau)"},hrv:{official:"Republika Palau",common:"Palau"},hun:{official:"Palaui K\xF6zt\xE1rsas\xE1g",common:"Palau"},ita:{official:"Repubblica di Palau",common:"Palau"},jpn:{official:"\u30D1\u30E9\u30AA\u5171\u548C\u56FD",common:"\u30D1\u30E9\u30AA"},kor:{official:"\uD314\uB77C\uC6B0 \uACF5\uD654\uAD6D",common:"\uD314\uB77C\uC6B0"},nld:{official:"Republiek van Palau",common:"Palau"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u067E\u0627\u0644\u0627\u0626\u0648",common:"\u067E\u0627\u0644\u0627\u0626\u0648"},pol:{official:"Republika Palau",common:"Palau"},por:{official:"Rep\xFAblica de Palau",common:"Palau"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041F\u0430\u043B\u0430\u0443",common:"\u041F\u0430\u043B\u0430\u0443"},slk:{official:"Palausk\xE1 republika",common:"Palau"},spa:{official:"Rep\xFAblica de Palau",common:"Palau"},swe:{official:"Republiken Palau",common:"Palau"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u0644\u0627\u0624",common:"\u067E\u0644\u0627\u0624"},zho:{official:"\u5E15\u52B3\u5171\u548C\u56FD",common:"\u5E15\u52B3"}},latlng:[7.5,134.5],landlocked:!1,area:459,demonyms:{eng:{f:"Palauan",m:"Palauan"},fra:{f:"Paluane",m:"Paluan"}},flag:"\u{1F1F5}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/MVasQBbUkQP7qQDR9",openStreetMaps:"https://www.openstreetmap.org/relation/571805"},population:18092,car:{signs:["PAL"],side:"right"},timezones:["UTC+09:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pw.png",svg:"https://flagcdn.com/pw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[7.5,134.62]},postalCode:{format:"96940",regex:"^(96940)$"}},{name:{common:"Northern Mariana Islands",official:"Commonwealth of the Northern Mariana Islands",nativeName:{cal:{official:"Commonwealth of the Northern Mariana Islands",common:"Northern Mariana Islands"},cha:{official:"Sankattan Siha Na Islas Mari\xE5nas",common:"Na Islas Mari\xE5nas"},eng:{official:"Commonwealth of the Northern Mariana Islands",common:"Northern Mariana Islands"}}},tld:[".mp"],cca2:"MP",ccn3:"580",cca3:"MNP",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["670"]},capital:["Saipan"],altSpellings:["MP","Commonwealth of the Northern Mariana Islands","Sankattan Siha Na Islas Mari\xE5nas"],region:"Oceania",subregion:"Micronesia",languages:{cal:"Carolinian",cha:"Chamorro",eng:"English"},translations:{ara:{official:"\u0643\u0648\u0645\u0648\u0646\u0648\u0644\u062B \u062C\u0632\u0631 \u0645\u0627\u0631\u064A\u0627\u0646\u0627 \u0627\u0644\u0634\u0645\u0627\u0644\u064A\u0629",common:"\u062C\u0632\u0631 \u0645\u0627\u0631\u064A\u0627\u0646\u0627 \u0627\u0644\u0634\u0645\u0627\u0644\u064A\u0629"},ces:{official:"Spole\u010Denstv\xED Severn\xEDch Marian",common:"Severn\xED Mariany"},cym:{official:"Commonwealth of the Northern Mariana Islands",common:"Northern Mariana Islands"},deu:{official:"Commonwealth der N\xF6rdlichen Marianen",common:"N\xF6rdliche Marianen"},est:{official:"P\xF5hja-Mariaani \xDChendus",common:"P\xF5hja-Mariaanid"},fin:{official:"Pohjois-Mariaanit",common:"Pohjois-Mariaanit"},fra:{official:"Commonwealth des \xEEles Mariannes du Nord",common:"\xCEles Mariannes du Nord"},hrv:{official:"Zajednica je Sjeverni Marijanski otoci",common:"Sjevernomarijanski otoci"},hun:{official:"\xC9szaki-Mariana-szigetek",common:"\xC9szaki-Mariana-szigetek"},ita:{official:"Commonwealth delle Isole Marianne Settentrionali",common:"Isole Marianne Settentrionali"},jpn:{official:"\u5317\u30DE\u30EA\u30A2\u30CA\u8AF8\u5CF6",common:"\u5317\u30DE\u30EA\u30A2\u30CA\u8AF8\u5CF6"},kor:{official:"\uBD81\uB9C8\uB9AC\uC544\uB098 \uC81C\uB3C4",common:"\uBD81\uB9C8\uB9AC\uC544\uB098 \uC81C\uB3C4"},nld:{official:"Commonwealth van de Noordelijke Marianen",common:"Noordelijke Marianeneilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0645\u0627\u0631\u06CC\u0627\u0646\u0627\u06CC \u0634\u0645\u0627\u0644\u06CC",common:"\u062C\u0632\u0627\u06CC\u0631 \u0645\u0627\u0631\u06CC\u0627\u0646\u0627\u06CC \u0634\u0645\u0627\u0644\u06CC"},pol:{official:"Wsp\xF3lnota Marian\xF3w P\xF3\u0142nocnych",common:"Mariany P\xF3\u0142nocne"},por:{official:"Comunidade das Ilhas Marianas do Norte",common:"Marianas Setentrionais"},rus:{official:"\u0421\u043E\u0434\u0440\u0443\u0436\u0435\u0441\u0442\u0432\u043E \u0421\u0435\u0432\u0435\u0440\u043D\u044B\u0445 \u041C\u0430\u0440\u0438\u0430\u043D\u0441\u043A\u0438\u0445 \u043E\u0441\u0442\u0440\u043E\u0432\u043E\u0432",common:"\u0421\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u041C\u0430\u0440\u0438\u0430\u043D\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Spolo\u010Denstvo ostrovov Severn\xE9 Mari\xE1ny",common:"Severn\xE9 Mari\xE1ny"},spa:{official:"Mancomunidad de las Islas Marianas del Norte",common:"Islas Marianas del Norte"},swe:{official:"Nordmarianerna",common:"Nordmarianerna"},urd:{official:"\u062F\u0648\u0644\u062A\u0650 \u0645\u0634\u062A\u0631\u06A9\u06C1 \u062C\u0632\u0627\u0626\u0631 \u0634\u0645\u0627\u0644\u06CC \u0645\u0627\u0631\u06CC\u0627\u0646\u0627",common:"\u062C\u0632\u0627\u0626\u0631 \u0634\u0645\u0627\u0644\u06CC \u0645\u0627\u0631\u06CC\u0627\u0646\u0627"},zho:{official:"\u5317\u9A6C\u91CC\u4E9A\u7EB3\u7FA4\u5C9B",common:"\u5317\u9A6C\u91CC\u4E9A\u7EB3\u7FA4\u5C9B"}},latlng:[15.2,145.75],landlocked:!1,area:464,demonyms:{eng:{f:"American",m:"American"},fra:{f:"Am\xE9ricaine",m:"Am\xE9rican"}},flag:"\u{1F1F2}\u{1F1F5}",maps:{googleMaps:"https://goo.gl/maps/cpZ67knoRAcfu1417",openStreetMaps:"https://www.openstreetmap.org/relation/306004"},population:57557,car:{signs:["USA"],side:"right"},timezones:["UTC+10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/mp.png",svg:"https://flagcdn.com/mp.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[15.2,145.75]}},{name:{common:"Mauritania",official:"Islamic Republic of Mauritania",nativeName:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0625\u0633\u0644\u0627\u0645\u064A\u0629 \u0627\u0644\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0629",common:"\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627"}}},tld:[".mr"],cca2:"MR",ccn3:"478",cca3:"MRT",cioc:"MTN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MRU:{name:"Mauritanian ouguiya",symbol:"UM"}},idd:{root:"+2",suffixes:["22"]},capital:["Nouakchott"],altSpellings:["MR","Islamic Republic of Mauritania","al-Jumh\u016Briyyah al-\u02BEIsl\u0101miyyah al-M\u016Br\u012Bt\u0101niyyah"],region:"Africa",subregion:"Western Africa",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0625\u0633\u0644\u0627\u0645\u064A\u0629 \u0627\u0644\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0629",common:"\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627"},ces:{official:"Maurit\xE1nsk\xE1 isl\xE1msk\xE1 republika",common:"Maurit\xE1nie"},cym:{official:"Islamic Republic of Mauritania",common:"Mauritania"},deu:{official:"Islamische Republik Mauretanien",common:"Mauretanien"},est:{official:"Mauritaania Islamivabariik",common:"Mauritaania"},fin:{official:"Mauritanian islamilainen tasavalta",common:"Mauritania"},fra:{official:"R\xE9publique islamique de Mauritanie",common:"Mauritanie"},hrv:{official:"Islamska Republika Mauritanija",common:"Mauritanija"},hun:{official:"Maurit\xE1niai Iszl\xE1m K\xF6zt\xE1rsas\xE1g",common:"Maurit\xE1nia"},ita:{official:"Repubblica islamica di Mauritania",common:"Mauritania"},jpn:{official:"\u30E2\u30FC\u30EA\u30BF\u30CB\u30A2\xB7\u30A4\u30B9\u30E9\u30E0\u5171\u548C\u56FD",common:"\u30E2\u30FC\u30EA\u30BF\u30CB\u30A2"},kor:{official:"\uBAA8\uB9AC\uD0C0\uB2C8 \uC774\uC2AC\uB78C \uACF5\uD654\uAD6D",common:"\uBAA8\uB9AC\uD0C0\uB2C8"},nld:{official:"Islamitische Republiek Mauritani\xEB",common:"Mauritani\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0627\u0645\u06CC \u0645\u0648\u0631\u06CC\u062A\u0627\u0646\u06CC",common:"\u0645\u0648\u0631\u06CC\u062A\u0627\u0646\u06CC"},pol:{official:"Islamska Republika Maureta\u0144ska",common:"Mauretania"},por:{official:"Rep\xFAblica Isl\xE2mica da Maurit\xE2nia",common:"Maurit\xE2nia"},rus:{official:"\u0418\u0441\u043B\u0430\u043C\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u0432\u0440\u0438\u0442\u0430\u043D\u0438\u044F",common:"\u041C\u0430\u0432\u0440\u0438\u0442\u0430\u043D\u0438\u044F"},slk:{official:"Maurit\xE1nska islamsk\xE1 republika",common:"Maurit\xE1nia"},spa:{official:"Rep\xFAblica Isl\xE1mica de Mauritania",common:"Mauritania"},swe:{official:"Islamiska republiken Mauretanien",common:"Mauretanien"},urd:{official:"\u0627\u0633\u0644\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0648\u0631\u06CC\u062A\u0627\u0646\u06CC\u06C1",common:"\u0645\u0648\u0631\u06CC\u062A\u0627\u0646\u06CC\u06C1"},zho:{official:"\u6BDB\u91CC\u5854\u5C3C\u4E9A\u4F0A\u65AF\u5170\u5171\u548C\u56FD",common:"\u6BDB\u91CC\u5854\u5C3C\u4E9A"}},latlng:[20,-12],landlocked:!1,borders:["DZA","MLI","SEN","ESH"],area:1030700,demonyms:{eng:{f:"Mauritanian",m:"Mauritanian"},fra:{f:"Mauritanienne",m:"Mauritanien"}},flag:"\u{1F1F2}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/im2MmQ5jFjzxWBks5",openStreetMaps:"https://www.openstreetmap.org/relation/192763"},population:4649660,gini:{"2014":32.6},fifa:"MTN",car:{signs:["RIM"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mr.png",svg:"https://flagcdn.com/mr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.07,-15.97]}},{name:{common:"Ukraine",official:"Ukraine",nativeName:{ukr:{official:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430",common:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"}}},tld:[".ua",".\u0443\u043A\u0440"],cca2:"UA",ccn3:"804",cca3:"UKR",cioc:"UKR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UAH:{name:"Ukrainian hryvnia",symbol:"\u20B4"}},idd:{root:"+3",suffixes:["80"]},capital:["Kyiv"],altSpellings:["UA","Ukrayina"],region:"Europe",subregion:"Eastern Europe",languages:{ukr:"Ukrainian"},translations:{ara:{official:"\u0623\u0648\u0643\u0631\u0627\u0646\u064A\u0627",common:"\u0623\u0648\u0643\u0631\u0627\u0646\u064A\u0627"},ces:{official:"Ukrajina",common:"Ukrajina"},cym:{official:"Ukraine",common:"Ukraine"},deu:{official:"Ukraine",common:"Ukraine"},est:{official:"Ukraina",common:"Ukraina"},fin:{official:"Ukraina",common:"Ukraina"},fra:{official:"Ukraine",common:"Ukraine"},hrv:{official:"Ukrajina",common:"Ukrajina"},hun:{official:"Ukrajna",common:"Ukrajna"},ita:{official:"Ucraina",common:"Ucraina"},jpn:{official:"\u30A6\u30AF\u30E9\u30A4\u30CA",common:"\u30A6\u30AF\u30E9\u30A4\u30CA"},kor:{official:"\uC6B0\uD06C\uB77C\uC774\uB098",common:"\uC6B0\uD06C\uB77C\uC774\uB098"},nld:{official:"Oekra\xEFne",common:"Oekra\xEFne"},per:{official:"\u0627\u0648\u06A9\u0631\u0627\u06CC\u0646",common:"\u0627\u0648\u06A9\u0631\u0627\u06CC\u0646"},pol:{official:"Ukraina",common:"Ukraina"},por:{official:"Ucr\xE2nia",common:"Ucr\xE2nia"},rus:{official:"\u0423\u043A\u0440\u0430\u0438\u043D\u0430",common:"\u0423\u043A\u0440\u0430\u0438\u043D\u0430"},slk:{official:"Ukrajina",common:"Ukrajina"},spa:{official:"Ucrania",common:"Ucrania"},swe:{official:"Ukraina",common:"Ukraina"},urd:{official:"\u06CC\u0648\u06A9\u0631\u06CC\u0646",common:"\u06CC\u0648\u06A9\u0631\u06CC\u0646"},zho:{official:"\u4E4C\u514B\u5170",common:"\u4E4C\u514B\u5170"}},latlng:[49,32],landlocked:!1,borders:["BLR","HUN","MDA","POL","ROU","RUS","SVK"],area:603500,demonyms:{eng:{f:"Ukrainian",m:"Ukrainian"},fra:{f:"Ukrainienne",m:"Ukrainien"}},flag:"\u{1F1FA}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/DvgJMiPJ7aozKFZv7",openStreetMaps:"https://www.openstreetmap.org/relation/60199"},population:44134693,gini:{"2019":26.6},fifa:"UKR",car:{signs:["UA"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ua.png",svg:"https://flagcdn.com/ua.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ua.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ua.svg"},startOfWeek:"monday",capitalInfo:{latlng:[50.43,30.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"China",official:"People's Republic of China",nativeName:{zho:{official:"\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD",common:"\u4E2D\u56FD"}}},tld:[".cn",".\u4E2D\u56FD",".\u4E2D\u570B",".\u516C\u53F8",".\u7F51\u7EDC"],cca2:"CN",ccn3:"156",cca3:"CHN",cioc:"CHN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CNY:{name:"Chinese yuan",symbol:"\xA5"}},idd:{root:"+8",suffixes:["6"]},capital:["Beijing"],altSpellings:["CN","Zh\u014Dnggu\xF3","Zhongguo","Zhonghua","People's Republic of China","\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD","Zh\u014Dnghu\xE1 R\xE9nm\xEDn G\xF2ngh\xE9gu\xF3"],region:"Asia",subregion:"Eastern Asia",languages:{zho:"Chinese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0635\u064A\u0646 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0627\u0644\u0635\u064A\u0646"},ces:{official:"\u010C\xEDnsk\xE1 lidov\xE1 republika",common:"\u010C\xEDna"},cym:{official:"Gweriniaeth Pobl Tsieina",common:"Tsieina"},deu:{official:"Volksrepublik China",common:"China"},est:{official:"Hiina Rahvavabariik",common:"Hiina"},fin:{official:"Kiinan kansantasavalta",common:"Kiina"},fra:{official:"R\xE9publique populaire de Chine",common:"Chine"},hrv:{official:"Narodna Republika Kina",common:"Kina"},hun:{official:"K\xEDnai N\xE9pk\xF6zt\xE1rsas\xE1g",common:"K\xEDna"},ita:{official:"Repubblica popolare cinese",common:"Cina"},jpn:{official:"\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD",common:"\u4E2D\u56FD"},kor:{official:"\uC911\uD654\uC778\uBBFC\uACF5\uD654\uAD6D",common:"\uC911\uAD6D"},nld:{official:"Volksrepubliek China",common:"China"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062E\u0644\u0642 \u0686\u06CC\u0646",common:"\u0686\u06CC\u0646"},pol:{official:"Chi\u0144ska Republika Ludowa",common:"Chiny"},por:{official:"Rep\xFAblica Popular da China",common:"China"},rus:{official:"\u041D\u0430\u0440\u043E\u0434\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0438\u0442\u0430\u0439",common:"\u041A\u0438\u0442\u0430\u0439"},slk:{official:"\u010C\xEDnska \u013Eudov\xE1 republika",common:"\u010C\xEDna"},spa:{official:"Rep\xFAblica Popular de China",common:"China"},swe:{official:"Folkrepubliken Kina",common:"Kina"},urd:{official:"\u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0686\u06CC\u0646",common:"\u0686\u06CC\u0646"}},latlng:[35,105],landlocked:!1,borders:["AFG","BTN","MMR","HKG","IND","KAZ","NPL","PRK","KGZ","LAO","MAC","MNG","PAK","RUS","TJK","VNM"],area:9706961,demonyms:{eng:{f:"Chinese",m:"Chinese"},fra:{f:"Chinoise",m:"Chinois"}},flag:"\u{1F1E8}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/p9qC6vgiFRRXzvGi7",openStreetMaps:"https://www.openstreetmap.org/relation/270056"},population:1402112e3,gini:{"2016":38.5},fifa:"CHN",car:{signs:["RC"],side:"right"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/cn.png",svg:"https://flagcdn.com/cn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[39.92,116.38]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Lesotho",official:"Kingdom of Lesotho",nativeName:{eng:{official:"Kingdom of Lesotho",common:"Lesotho"},sot:{official:"Kingdom of Lesotho",common:"Lesotho"}}},tld:[".ls"],cca2:"LS",ccn3:"426",cca3:"LSO",cioc:"LES",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LSL:{name:"Lesotho loti",symbol:"L"},ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["66"]},capital:["Maseru"],altSpellings:["LS","Kingdom of Lesotho","Muso oa Lesotho"],region:"Africa",subregion:"Southern Africa",languages:{eng:"English",sot:"Sotho"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0644\u064A\u0633\u0648\u062A\u0648",common:"\u0644\u064A\u0633\u0648\u062A\u0648"},ces:{official:"Lesothsk\xE9 kr\xE1lovstv\xED",common:"Lesotho"},cym:{official:"Kingdom of Lesotho",common:"Lesotho"},deu:{official:"K\xF6nigreich Lesotho",common:"Lesotho"},est:{official:"Lesotho Kuningriik",common:"Lesotho"},fin:{official:"Lesothon kuningaskunta",common:"Lesotho"},fra:{official:"Royaume du Lesotho",common:"Lesotho"},hrv:{official:"Kraljevina Lesoto",common:"Lesoto"},hun:{official:"Lesoth\xF3i Kir\xE1lys\xE1g",common:"Lesotho"},ita:{official:"Regno del Lesotho",common:"Lesotho"},jpn:{official:"\u30EC\u30BD\u30C8\u738B\u56FD",common:"\u30EC\u30BD\u30C8"},kor:{official:"\uB808\uC18C\uD1A0 \uC655\uAD6D",common:"\uB808\uC18C\uD1A0"},nld:{official:"Koninkrijk Lesotho",common:"Lesotho"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0644\u0633\u0648\u062A\u0648",common:"\u0644\u0633\u0648\u062A\u0648"},pol:{official:"Kr\xF3lestwo Lesotho",common:"Lesotho"},por:{official:"Reino do Lesoto",common:"Lesoto"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u041B\u0435\u0441\u043E\u0442\u043E",common:"\u041B\u0435\u0441\u043E\u0442\u043E"},slk:{official:"Lesothsk\xE9 kr\xE1\u013Eovstvo",common:"Lesotho"},spa:{official:"Reino de Lesotho",common:"Lesotho"},swe:{official:"Konungariket Lesotho",common:"Lesotho"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0644\u06CC\u0633\u0648\u062A\u06BE\u0648",common:"\u0644\u06CC\u0633\u0648\u062A\u06BE\u0648"},zho:{official:"\u83B1\u7D22\u6258\u738B\u56FD",common:"\u83B1\u7D22\u6258"}},latlng:[-29.5,28.5],landlocked:!0,borders:["ZAF"],area:30355,demonyms:{eng:{f:"Mosotho",m:"Mosotho"},fra:{f:"L\xE9sothienne",m:"L\xE9sothien"}},flag:"\u{1F1F1}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/H8gJi5mL4Cmd1SF28",openStreetMaps:"https://www.openstreetmap.org/relation/2093234"},population:2142252,gini:{"2017":44.9},fifa:"LES",car:{signs:["LS"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ls.png",svg:"https://flagcdn.com/ls.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ls.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ls.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-29.32,27.48]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Cyprus",official:"Republic of Cyprus",nativeName:{ell:{official:"\u0394\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4\u03AF\u03B1 \u03C4\u03B7\u03C2 \u039A\u03CD\u03C0\u03C1\u03BF\u03C2",common:"\u039A\u03CD\u03C0\u03C1\u03BF\u03C2"},tur:{official:"K\u0131br\u0131s Cumhuriyeti",common:"K\u0131br\u0131s"}}},tld:[".cy"],cca2:"CY",ccn3:"196",cca3:"CYP",cioc:"CYP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["57"]},capital:["Nicosia"],altSpellings:["CY","K\xFDpros","K\u0131br\u0131s","Republic of Cyprus","\u039A\u03C5\u03C0\u03C1\u03B9\u03B1\u03BA\u03AE \u0394\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4\u03AF\u03B1","K\u0131br\u0131s Cumhuriyeti"],region:"Europe",subregion:"Southern Europe",languages:{ell:"Greek",tur:"Turkish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0642\u0628\u0631\u0635",common:"\u0642\u0628\u0631\u0635"},ces:{official:"Kypersk\xE1 republika",common:"Kypr"},cym:{official:"Gweriniaeth Cyprus",common:"Cyprus"},deu:{official:"Republik Zypern",common:"Zypern"},est:{official:"K\xFCprose Vabariik",common:"K\xFCpros"},fin:{official:"Kyproksen tasavalta",common:"Kypros"},fra:{official:"R\xE9publique de Chypre",common:"Chypre"},hrv:{official:"Republika Cipar",common:"Cipar"},hun:{official:"Ciprusi K\xF6zt\xE1rsas\xE1g",common:"Ciprus"},ita:{official:"Repubblica di Cipro",common:"Cipro"},jpn:{official:"\u30AD\u30D7\u30ED\u30B9\u5171\u548C\u56FD",common:"\u30AD\u30D7\u30ED\u30B9"},kor:{official:"\uD0A4\uD504\uB85C\uC2A4 \uACF5\uD654\uAD6D",common:"\uD0A4\uD504\uB85C\uC2A4"},nld:{official:"Republiek Cyprus",common:"Cyprus"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0642\u0628\u0631\u0633",common:"\u0642\u0650\u0628\u0631\u0650\u0633"},pol:{official:"Republika Cypryjska",common:"Cypr"},por:{official:"Rep\xFAblica de Chipre",common:"Chipre"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0438\u043F\u0440",common:"\u041A\u0438\u043F\u0440"},slk:{official:"Cypersk\xE1 republika",common:"Cyprus"},spa:{official:"Rep\xFAblica de Chipre",common:"Chipre"},swe:{official:"Republiken Cypern",common:"Cypern"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0642\u0628\u0631\u0635",common:"\u0642\u0628\u0631\u0635"},zho:{official:"\u585E\u6D66\u8DEF\u65AF\u5171\u548C\u56FD",common:"\u585E\u6D66\u8DEF\u65AF"}},latlng:[35,33],landlocked:!1,area:9251,demonyms:{eng:{f:"Cypriot",m:"Cypriot"},fra:{f:"Chypriote",m:"Chypriote"}},flag:"\u{1F1E8}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/77hPBRdLid8yD5Bm7",openStreetMaps:"https://www.openstreetmap.org/relation/307787"},population:1207361,gini:{"2018":32.7},fifa:"CYP",car:{signs:["CY"],side:"left"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/cy.png",svg:"https://flagcdn.com/cy.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[35.17,33.37]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"DR Congo",official:"Democratic Republic of the Congo",nativeName:{fra:{official:"R\xE9publique d\xE9mocratique du Congo",common:"RD Congo"},kon:{official:"Repubilika ya Kongo Demokratiki",common:"Repubilika ya Kongo Demokratiki"},lin:{official:"Republiki ya Kong\xF3 Demokratiki",common:"Republiki ya Kong\xF3 Demokratiki"},lua:{official:"Ditunga dia Kongu wa Mungalaata",common:"Ditunga dia Kongu wa Mungalaata"},swa:{official:"Jamhuri ya Kidemokrasia ya Kongo",common:"Jamhuri ya Kidemokrasia ya Kongo"}}},tld:[".cd"],cca2:"CD",ccn3:"180",cca3:"COD",cioc:"COD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CDF:{name:"Congolese franc",symbol:"FC"}},idd:{root:"+2",suffixes:["43"]},capital:["Kinshasa"],altSpellings:["CD","DR Congo","Congo-Kinshasa","Congo, the Democratic Republic of the","DRC"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",kon:"Kikongo",lin:"Lingala",lua:"Tshiluba",swa:"Swahili"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0643\u0648\u0646\u063A\u0648 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629",common:"\u0627\u0644\u0643\u0648\u0646\u063A\u0648"},ces:{official:"Demokratick\xE1 republika Kongo",common:"DR Kongo"},cym:{official:"Gweriniaeth Ddemocrataidd Congo",common:"Gweriniaeth Ddemocrataidd Congo"},deu:{official:"Demokratische Republik Kongo",common:"Kongo (Dem. Rep.)"},est:{official:"Kongo Demokraatlik Vabariik",common:"Kongo DV"},fin:{official:"Kongon demokraattinen tasavalta",common:"Kongon demokraattinen tasavalta"},fra:{official:"R\xE9publique d\xE9mocratique du Congo",common:"Congo (R\xE9p. d\xE9m.)"},hrv:{official:"Demokratska Republika Kongo",common:"Kongo, Demokratska Republika"},hun:{official:"Kong\xF3i Demokratikus K\xF6zt\xE1rsas\xE1g",common:"Kong\xF3i Demokratikus K\xF6zt\xE1rsas\xE1g"},ita:{official:"Repubblica Democratica del Congo",common:"Congo (Rep. Dem.)"},jpn:{official:"\u30B3\u30F3\u30B4\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u30B3\u30F3\u30B4\u6C11\u4E3B\u5171\u548C\u56FD"},kor:{official:"\uCF69\uACE0 \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uCF69\uACE0 \uBBFC\uC8FC \uACF5\uD654\uAD6D"},nld:{official:"Democratische Republiek Congo",common:"Congo (DRC)"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u06A9\u0646\u06AF\u0648",common:"\u06A9\u0646\u06AF\u0648 \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9"},pol:{official:"Demokratyczna Republika Konga",common:"Demokratyczna Republika Konga"},por:{official:"Rep\xFAblica Democr\xE1tica do Congo",common:"Rep\xFAblica Democr\xE1tica do Congo"},rus:{official:"\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u043D\u0433\u043E",common:"\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u043D\u0433\u043E"},slk:{official:"Kon\u017Esk\xE1 demokratick\xE1 republika",common:"Kongo"},spa:{official:"Rep\xFAblica Democr\xE1tica del Congo",common:"Congo (Rep. Dem.)"},swe:{official:"Demokratiska republiken Kongo",common:"Kongo-Kinshasa"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0627\u0646\u06AF\u0648",common:"\u06A9\u0627\u0646\u06AF\u0648"},zho:{official:"\u521A\u679C\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u6C11\u4E3B\u521A\u679C"}},latlng:[0,25],landlocked:!1,borders:["AGO","BDI","CAF","COG","RWA","SSD","TZA","UGA","ZMB"],area:2344858,demonyms:{eng:{f:"Congolese",m:"Congolese"},fra:{f:"Congolaise",m:"Congolais"}},flag:"\u{1F1E8}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/KfhNVn6VqdZXWu8n9",openStreetMaps:"https://www.openstreetmap.org/relation/192795"},population:89561404,gini:{"2012":42.1},fifa:"COD",car:{signs:["CGO"],side:"right"},timezones:["UTC+01:00","UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cd.png",svg:"https://flagcdn.com/cd.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cd.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-4.32,15.3]}},{name:{common:"Russia",official:"Russian Federation",nativeName:{rus:{official:"\u0420\u043E\u0441\u0441\u0438\u0439\u0441\u043A\u0430\u044F \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044F",common:"\u0420\u043E\u0441\u0441\u0438\u044F"}}},tld:[".ru",".su",".\u0440\u0444"],cca2:"RU",ccn3:"643",cca3:"RUS",cioc:"RUS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RUB:{name:"Russian ruble",symbol:"\u20BD"}},idd:{root:"+7",suffixes:["3","4","5","8","9"]},capital:["Moscow"],altSpellings:["RU","Russian Federation","\u0420\u043E\u0441\u0441\u0438\u0439\u0441\u043A\u0430\u044F \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044F"],region:"Europe",subregion:"Eastern Europe",languages:{rus:"Russian"},translations:{ara:{official:"\u0631\u0648\u0633\u064A\u0627 \u0627\u0644\u0627\u062A\u062D\u0627\u062F\u064A\u0629",common:"\u0631\u0648\u0633\u064A\u0627"},ces:{official:"Rusk\xE1 federace",common:"Rusko"},cym:{official:"Russian Federation",common:"Russia"},deu:{official:"Russische F\xF6deration",common:"Russland"},est:{official:"Venemaa F\xF6deratsioon",common:"Venemaa"},fin:{official:"Ven\xE4j\xE4n federaatio",common:"Ven\xE4j\xE4"},fra:{official:"F\xE9d\xE9ration de Russie",common:"Russie"},hrv:{official:"Ruska Federacija",common:"Rusija"},hun:{official:"Oroszorsz\xE1gi F\xF6der\xE1ci\xF3",common:"Oroszorsz\xE1g"},ita:{official:"Federazione russa",common:"Russia"},jpn:{official:"\u30ED\u30B7\u30A2\u9023\u90A6",common:"\u30ED\u30B7\u30A2\u9023\u90A6"},kor:{official:"\uB7EC\uC2DC\uC544 \uC5F0\uBC29",common:"\uB7EC\uC2DC\uC544"},nld:{official:"Russische Federatie",common:"Rusland"},per:{official:"\u0641\u062F\u0631\u0627\u0633\u06CC\u0648\u0646 \u0631\u0648\u0633\u06CC\u0647",common:"\u0631\u0648\u0633\u06CC\u0647"},pol:{official:"Federacja Rosyjska",common:"Rosja"},por:{official:"Federa\xE7\xE3o Russa",common:"R\xFAssia"},rus:{official:"\u0420\u043E\u0441\u0441\u0438\u0439\u0441\u043A\u0430\u044F \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044F",common:"\u0420\u043E\u0441\u0441\u0438\u044F"},slk:{official:"Rusk\xE1 feder\xE1cia",common:"Rusko"},spa:{official:"Federaci\xF3n de Rusia",common:"Rusia"},swe:{official:"Ryska federationen",common:"Ryssland"},urd:{official:"\u0631\u0648\u0633\u06CC \u0648\u0641\u0627\u0642",common:"\u0631\u0648\u0633"},zho:{official:"\u4FC4\u7F57\u65AF\u8054\u90A6",common:"\u4FC4\u7F57\u65AF"}},latlng:[60,100],landlocked:!1,borders:["AZE","BLR","CHN","EST","FIN","GEO","KAZ","PRK","LVA","LTU","MNG","NOR","POL","UKR"],area:17098242,demonyms:{eng:{f:"Russian",m:"Russian"},fra:{f:"Russe",m:"Russe"}},flag:"\u{1F1F7}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/4F4PpDhGJgVvLby57",openStreetMaps:"https://www.openstreetmap.org/relation/60189#map=3/65.15/105.29"},population:144104080,gini:{"2018":37.5},fifa:"RUS",car:{signs:["RUS"],side:"right"},timezones:["UTC+03:00","UTC+04:00","UTC+06:00","UTC+07:00","UTC+08:00","UTC+09:00","UTC+10:00","UTC+11:00","UTC+12:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ru.png",svg:"https://flagcdn.com/ru.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ru.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ru.svg"},startOfWeek:"monday",capitalInfo:{latlng:[55.75,37.6]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Bangladesh",official:"People's Republic of Bangladesh",nativeName:{ben:{official:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6 \u0997\u09A3\u09AA\u09CD\u09B0\u099C\u09BE\u09A4\u09A8\u09CD\u09A4\u09CD\u09B0\u09C0",common:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"}}},tld:[".bd"],cca2:"BD",ccn3:"050",cca3:"BGD",cioc:"BAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BDT:{name:"Bangladeshi taka",symbol:"\u09F3"}},idd:{root:"+8",suffixes:["80"]},capital:["Dhaka"],altSpellings:["BD","People's Republic of Bangladesh","G\xF4n\xF4pr\xF4jat\xF4ntri Bangladesh"],region:"Asia",subregion:"Southern Asia",languages:{ben:"Bengali"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0646\u063A\u0644\u0627\u062F\u064A\u0634 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0628\u0646\u063A\u0644\u0627\u062F\u064A\u0634"},ces:{official:"Banglad\xE9\u0161sk\xE1 lidov\xE1 republika",common:"Banglad\xE9\u0161"},cym:{official:"Gweriniaeth Pobl Bangladesh",common:"Bangladesh"},deu:{official:"Volksrepublik Bangladesch",common:"Bangladesch"},est:{official:"Bangladeshi Rahvavabariik",common:"Bangladesh"},fin:{official:"Bangladeshin kansantasavalta",common:"Bangladesh"},fra:{official:"La R\xE9publique populaire du Bangladesh",common:"Bangladesh"},hrv:{official:"Narodna Republika Banglade\u0161",common:"Banglade\u0161"},hun:{official:"Banglades",common:"Banglades"},ita:{official:"Repubblica popolare del Bangladesh",common:"Bangladesh"},jpn:{official:"\u30D0\u30F3\u30B0\u30E9\u30C7\u30B7\u30E5\u4EBA\u6C11\u5171\u548C\u56FD",common:"\u30D0\u30F3\u30B0\u30E9\u30C7\u30B7\u30E5"},kor:{official:"\uBC29\uAE00\uB77C\uB370\uC2DC \uC778\uBBFC \uACF5\uD654\uAD6D",common:"\uBC29\uAE00\uB77C\uB370\uC2DC"},nld:{official:"Volksrepubliek Bangladesh",common:"Bangladesh"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062E\u0644\u0642 \u0628\u0646\u06AF\u0644\u0627\u062F\u0634",common:"\u0628\u0646\u06AF\u0644\u0627\u062F\u0634"},pol:{official:"Ludowa Republika Bangladeszu",common:"Bangladesz"},por:{official:"Rep\xFAblica Popular do Bangladesh",common:"Bangladesh"},rus:{official:"\u041D\u0430\u0440\u043E\u0434\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0430\u043D\u0433\u043B\u0430\u0434\u0435\u0448",common:"\u0411\u0430\u043D\u0433\u043B\u0430\u0434\u0435\u0448"},slk:{official:"Banglad\xE9\u0161ska \u013Eudov\xE1 republika",common:"Banglad\xE9\u0161"},spa:{official:"Rep\xFAblica Popular de Bangladesh",common:"Bangladesh"},swe:{official:"Folkrepubliken Bangladesh",common:"Bangladesh"},urd:{official:"\u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u0646\u06AF\u0644\u06C1 \u062F\u06CC\u0634",common:"\u0628\u0646\u06AF\u0644\u06C1 \u062F\u06CC\u0634"},zho:{official:"\u5B5F\u52A0\u62C9\u4EBA\u6C11\u5171\u548C\u56FD",common:"\u5B5F\u52A0\u62C9\u56FD"}},latlng:[24,90],landlocked:!1,borders:["MMR","IND"],area:147570,demonyms:{eng:{f:"Bangladeshi",m:"Bangladeshi"},fra:{f:"Bangladaise",m:"Bangladais"}},flag:"\u{1F1E7}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/op6gmLbHcvv6rLhH6",openStreetMaps:"https://www.openstreetmap.org/relation/184640"},population:164689383,gini:{"2016":32.4},fifa:"BAN",car:{signs:["BD"],side:"left"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bd.png",svg:"https://flagcdn.com/bd.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bd.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[23.72,90.4]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"South Africa",official:"Republic of South Africa",nativeName:{afr:{official:"Republiek van Suid-Afrika",common:"South Africa"},eng:{official:"Republic of South Africa",common:"South Africa"},nbl:{official:"IRiphabliki yeSewula Afrika",common:"Sewula Afrika"},nso:{official:"Rephaboliki ya Afrika-Borwa ",common:"Afrika-Borwa"},sot:{official:"Rephaboliki ya Afrika Borwa",common:"Afrika Borwa"},ssw:{official:"IRiphabhulikhi yeNingizimu Afrika",common:"Ningizimu Afrika"},tsn:{official:"Rephaboliki ya Aforika Borwa",common:"Aforika Borwa"},tso:{official:"Riphabliki ra Afrika Dzonga",common:"Afrika Dzonga"},ven:{official:"Riphabu\u1E3Diki ya Afurika Tshipembe",common:"Afurika Tshipembe"},xho:{official:"IRiphabliki yaseMzantsi Afrika",common:"Mzantsi Afrika"},zul:{official:"IRiphabliki yaseNingizimu Afrika",common:"Ningizimu Afrika"}}},tld:[".za"],cca2:"ZA",ccn3:"710",cca3:"ZAF",cioc:"RSA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["7"]},capital:["Pretoria","Bloemfontein","Cape Town"],altSpellings:["ZA","RSA","Suid-Afrika","Republic of South Africa"],region:"Africa",subregion:"Southern Africa",languages:{afr:"Afrikaans",eng:"English",nbl:"Southern Ndebele",nso:"Northern Sotho",sot:"Southern Sotho",ssw:"Swazi",tsn:"Tswana",tso:"Tsonga",ven:"Venda",xho:"Xhosa",zul:"Zulu"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062C\u0646\u0648\u0628 \u0623\u0641\u0631\u064A\u0642\u064A\u0627",common:"\u062C\u0646\u0648\u0628 \u0623\u0641\u0631\u064A\u0642\u064A\u0627"},ces:{official:"Jihoafrick\xE1 republika",common:"Jihoafrick\xE1 republika"},cym:{official:"Republic of South Africa",common:"South Africa"},deu:{official:"Republik S\xFCdafrika",common:"S\xFCdafrika"},est:{official:"L\xF5una-Aafrika Vabariik",common:"L\xF5una-Aafrika Vabariik"},fin:{official:"Etel\xE4-Afrikan tasavalta",common:"Etel\xE4-Afrikka"},fra:{official:"R\xE9publique d'Afrique du Sud",common:"Afrique du Sud"},hrv:{official:"Ju\u017Enoafri\u010Dka Republika",common:"Ju\u017Enoafri\u010Dka Republika"},hun:{official:"D\xE9l-afrikai K\xF6zt\xE1rsas\xE1g",common:"D\xE9l-afrikai K\xF6zt\xE1rsas\xE1g"},ita:{official:"Repubblica del Sud Africa",common:"Sud Africa"},jpn:{official:"\u5357\u30A2\u30D5\u30EA\u30AB\u5171\u548C\u56FD",common:"\u5357\u30A2\u30D5\u30EA\u30AB"},kor:{official:"\uB0A8\uC544\uD504\uB9AC\uCE74 \uACF5\uD654\uAD6D",common:"\uB0A8\uC544\uD504\uB9AC\uCE74"},nld:{official:"Republiek Zuid-Afrika",common:"Zuid-Afrika"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0641\u0631\u06CC\u0642\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC",common:"\u0622\u0641\u0631\u06CC\u0642\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC"},pol:{official:"Republika Po\u0142udniowej Afryki",common:"Po\u0142udniowa Afryka"},por:{official:"Rep\xFAblica da \xC1frica do Sul",common:"\xC1frica do Sul"},rus:{official:"\u042E\u0436\u043D\u043E-\u0410\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u042E\u0436\u043D\u043E-\u0410\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430"},slk:{official:"Juhoafrick\xE1 republika",common:"Juhoafrick\xE1 republika"},spa:{official:"Rep\xFAblica de Sud\xE1frica",common:"Rep\xFAblica de Sud\xE1frica"},swe:{official:"Republiken Sydafrika",common:"Sydafrika"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062C\u0646\u0648\u0628\u06CC \u0627\u0641\u0631\u06CC\u0642\u0627",common:"\u062C\u0646\u0648\u0628\u06CC \u0627\u0641\u0631\u06CC\u0642\u0627"},zho:{official:"\u5357\u975E\u5171\u548C\u56FD",common:"\u5357\u975E"}},latlng:[-29,24],landlocked:!1,borders:["BWA","LSO","MOZ","NAM","SWZ","ZWE"],area:1221037,demonyms:{eng:{f:"South African",m:"South African"},fra:{f:"Sud-africaine",m:"Sud-africain"}},flag:"\u{1F1FF}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/CLCZ1R8Uz1KpYhRv6",openStreetMaps:"https://www.openstreetmap.org/relation/87565"},population:59308690,gini:{"2014":63},fifa:"RSA",car:{signs:["ZA"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/za.png",svg:"https://flagcdn.com/za.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/za.png",svg:"https://mainfacts.com/media/images/coats_of_arms/za.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-25.7,28.22]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Cura\xE7ao",official:"Country of Cura\xE7ao",nativeName:{eng:{official:"Country of Cura\xE7ao",common:"Cura\xE7ao"},nld:{official:"Land Cura\xE7ao",common:"Cura\xE7ao"},pap:{official:"Pais K\xF2rsou",common:"Pais K\xF2rsou"}}},tld:[".cw"],cca2:"CW",ccn3:"531",cca3:"CUW",independent:!1,status:"officially-assigned",unMember:!1,currencies:{ANG:{name:"Netherlands Antillean guilder",symbol:"\u0192"}},idd:{root:"+5",suffixes:["99"]},capital:["Willemstad"],altSpellings:["CW","Curacao","K\xF2rsou","Country of Cura\xE7ao","Land Cura\xE7ao","Pais K\xF2rsou"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",nld:"Dutch",pap:"Papiamento"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0643\u0648\u0631\u0627\u0633\u0627\u0648",common:"\u0643\u0648\u0631\u0627\u0633\u0627\u0648"},ces:{official:"Autonomn\xED zem\u011B Cura\xE7ao",common:"Cura\xE7ao"},cym:{official:"Country of Cura\xE7ao",common:"Cura\xE7ao"},deu:{official:"Land Cura\xE7ao",common:"Cura\xE7ao"},est:{official:"Cura\xE7ao",common:"Cura\xE7ao"},fin:{official:"Cura\xE7ao",common:"Cura\xE7ao"},fra:{official:"Pays de Cura\xE7ao",common:"Cura\xE7ao"},hun:{official:"Cura\xE7ao",common:"Cura\xE7ao"},ita:{official:"Paese di Cura\xE7ao",common:"Cura\xE7ao"},kor:{official:"\uD034\uB77C\uC18C",common:"\uD034\uB77C\uC18C"},nld:{official:"Land Cura\xE7ao",common:"Cura\xE7ao"},per:{official:"\u06A9\u0648\u0631\u0627\u0633\u0627\u0626\u0648",common:"\u06A9\u0648\u0631\u0627\u0633\u0627\u0626\u0648"},pol:{official:"Cura\xE7ao",common:"Cura\xE7ao"},por:{official:"Pa\xEDs de Cura\xE7ao",common:"ilha da Cura\xE7\xE3o"},rus:{official:"\u0421\u0442\u0440\u0430\u043D\u0430 \u041A\u044E\u0440\u0430\u0441\u0430\u043E",common:"\u041A\u044E\u0440\u0430\u0441\u0430\u043E"},slk:{official:"Curacao",common:"Curacao"},spa:{official:"Pa\xEDs de Curazao",common:"Curazao"},swe:{official:"Cura\xE7ao",common:"Cura\xE7ao"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u06A9\u06CC\u0648\u0631\u0627\u0633\u0627\u0624",common:"\u06A9\u06CC\u0648\u0631\u0627\u0633\u0627\u0624"},zho:{official:"\u5E93\u62C9\u7D22",common:"\u5E93\u62C9\u7D22"}},latlng:[12.116667,-68.933333],landlocked:!1,area:444,demonyms:{eng:{f:"Cura\xE7aoan",m:"Cura\xE7aoan"},fra:{f:"Curacienne",m:"Curacien"}},flag:"\u{1F1E8}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/9D3hTeA3qKaRT7S16",openStreetMaps:"https://www.openstreetmap.org/relation/1216719"},population:155014,fifa:"CUW",car:{signs:["CW"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/cw.png",svg:"https://flagcdn.com/cw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.1,-68.92]}},{name:{common:"Guatemala",official:"Republic of Guatemala",nativeName:{spa:{official:"Rep\xFAblica de Guatemala",common:"Guatemala"}}},tld:[".gt"],cca2:"GT",ccn3:"320",cca3:"GTM",cioc:"GUA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GTQ:{name:"Guatemalan quetzal",symbol:"Q"}},idd:{root:"+5",suffixes:["02"]},capital:["Guatemala City"],altSpellings:["GT"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u0648\u0627\u062A\u064A\u0645\u0627\u0644\u0627",common:"\u063A\u0648\u0627\u062A\u064A\u0645\u0627\u0644\u0627"},ces:{official:"Republika Guatemala",common:"Guatemala"},cym:{official:"Republic of Guatemala",common:"Guatemala"},deu:{official:"Republik Guatemala",common:"Guatemala"},est:{official:"Guatemala Vabariik",common:"Guatemala"},fin:{official:"Guatemalan tasavalta",common:"Guatemala"},fra:{official:"R\xE9publique du Guatemala",common:"Guatemala"},hrv:{official:"Republika Gvatemala",common:"Gvatemala"},hun:{official:"Guatemalai K\xF6zt\xE1rsas\xE1g",common:"Guatemala"},ita:{official:"Repubblica del Guatemala",common:"Guatemala"},jpn:{official:"\u30B0\u30A2\u30C6\u30DE\u30E9\u5171\u548C\u56FD",common:"\u30B0\u30A2\u30C6\u30DE\u30E9"},kor:{official:"\uACFC\uD14C\uB9D0\uB77C \uACF5\uD654\uAD6D",common:"\uACFC\uD14C\uB9D0\uB77C"},nld:{official:"Republiek Guatemala",common:"Guatemala"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06AF\u0648\u0627\u062A\u0650\u0645\u0627\u0644\u0627",common:"\u06AF\u0648\u0627\u062A\u0650\u0645\u0627\u0644\u0627"},pol:{official:"Republika Gwatemali",common:"Gwatemala"},por:{official:"Rep\xFAblica da Guatemala",common:"Guatemala"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0432\u0430\u0442\u0435\u043C\u0430\u043B\u0430",common:"\u0413\u0432\u0430\u0442\u0435\u043C\u0430\u043B\u0430"},slk:{official:"Guatemalsk\xE1 republika",common:"Guatemala"},spa:{official:"Rep\xFAblica de Guatemala",common:"Guatemala"},swe:{official:"Republiken Guatemala",common:"Guatemala"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u0648\u0627\u062A\u06CC\u0645\u0627\u0644\u0627",common:"\u06AF\u0648\u0627\u062A\u06CC\u0645\u0627\u0644\u0627"},zho:{official:"\u5371\u5730\u9A6C\u62C9\u5171\u548C\u56FD",common:"\u5371\u5730\u9A6C\u62C9"}},latlng:[15.5,-90.25],landlocked:!1,borders:["BLZ","SLV","HND","MEX"],area:108889,demonyms:{eng:{f:"Guatemalan",m:"Guatemalan"},fra:{f:"Guat\xE9malt\xE8que",m:"Guat\xE9malt\xE8que"}},flag:"\u{1F1EC}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/JoRAbem4Hxb9FYbVA",openStreetMaps:"https://www.openstreetmap.org/relation/1521463"},population:16858333,gini:{"2014":48.3},fifa:"GUA",car:{signs:["GCA"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gt.png",svg:"https://flagcdn.com/gt.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.62,-90.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Puerto Rico",official:"Commonwealth of Puerto Rico",nativeName:{eng:{official:"Commonwealth of Puerto Rico",common:"Puerto Rico"},spa:{official:"Estado Libre Asociado de Puerto Rico",common:"Puerto Rico"}}},tld:[".pr"],cca2:"PR",ccn3:"630",cca3:"PRI",cioc:"PUR",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["787","939"]},capital:["San Juan"],altSpellings:["PR","Commonwealth of Puerto Rico","Estado Libre Asociado de Puerto Rico"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",spa:"Spanish"},translations:{ara:{official:"\u0643\u0648\u0645\u0646\u0648\u0644\u062B \u0628\u0648\u064A\u0631\u062A\u0648\u0631\u064A\u0643\u0648",common:"\u0628\u0648\u064A\u0631\u062A\u0648\u0631\u064A\u0643\u0648"},ces:{official:"Portoriko",common:"Portoriko"},cym:{official:"Commonwealth of Puerto Rico",common:"Puerto Rico"},deu:{official:"Freistaat Puerto Rico",common:"Puerto Rico"},est:{official:"Puerto Rico \xDChendus",common:"Puerto Rico"},fin:{official:"Puerto Rico",common:"Puerto Rico"},fra:{official:"Porto Rico",common:"Porto Rico"},hrv:{official:"Zajednica Puerto Rico",common:"Portoriko"},hun:{official:"Puerto Rico",common:"Puerto Rico"},ita:{official:"Commonwealth di Porto Rico",common:"Porto Rico"},jpn:{official:"\u30D7\u30A8\u30EB\u30C8\u30EA\u30B3\u306E\u30B3\u30E2\u30F3\u30A6\u30A7\u30EB\u30B9",common:"\u30D7\u30A8\u30EB\u30C8\u30EA\u30B3"},kor:{official:"\uD478\uC5D0\uB974\uD1A0\uB9AC\uCF54",common:"\uD478\uC5D0\uB974\uD1A0\uB9AC\uCF54"},nld:{official:"Gemenebest van Puerto Rico",common:"Puerto Rico"},per:{official:"\u0642\u0644\u0645\u0631\u0648 \u0647\u0645\u0633\u0648\u062F \u067E\u0648\u0631\u062A\u0648\u0631\u06CC\u06A9\u0648",common:"\u067E\u0648\u0631\u062A\u0648\u0631\u06CC\u06A9\u0648"},pol:{official:"Wolne Stowarzyszone Pa\u0144stwo Portoryko",common:"Portoryko"},por:{official:"Commonwealth of Puerto Rico",common:"Porto Rico"},rus:{official:"\u0421\u043E\u0434\u0440\u0443\u0436\u0435\u0441\u0442\u0432\u043E \u041F\u0443\u044D\u0440\u0442\u043E-\u0420\u0438\u043A\u043E",common:"\u041F\u0443\u044D\u0440\u0442\u043E-\u0420\u0438\u043A\u043E"},slk:{official:"Portorick\xE9 spolo\u010Denstvo",common:"Portoriko"},spa:{official:"Asociado de Puerto Rico",common:"Puerto Rico"},swe:{official:"Puerto Rico",common:"Puerto Rico"},urd:{official:" \u062F\u0648\u0644\u062A\u0650 \u0645\u0634\u062A\u0631\u06A9\u06C1 \u067E\u0648\u0631\u0679\u0648 \u0631\u06CC\u06A9\u0648",common:"\u067E\u0648\u0631\u0679\u0648 \u0631\u06CC\u06A9\u0648"},zho:{official:"\u6CE2\u591A\u9ECE\u5404\u8054\u90A6",common:"\u6CE2\u591A\u9ECE\u5404"}},latlng:[18.25,-66.5],landlocked:!1,area:8870,demonyms:{eng:{f:"Puerto Rican",m:"Puerto Rican"},fra:{f:"Portoricaine",m:"Portoricain"}},flag:"\u{1F1F5}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/sygfDbtwn389wu8x5",openStreetMaps:"https://www.openstreetmap.org/relation/4422604"},population:3194034,fifa:"PUR",car:{signs:["USA"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/pr.png",svg:"https://flagcdn.com/pr.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.47,-66.12]},postalCode:{format:"#####-####",regex:"^(\\d{9})$"}},{name:{common:"Antigua and Barbuda",official:"Antigua and Barbuda",nativeName:{eng:{official:"Antigua and Barbuda",common:"Antigua and Barbuda"}}},tld:[".ag"],cca2:"AG",ccn3:"028",cca3:"ATG",cioc:"ANT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["268"]},capital:["Saint John's"],altSpellings:["AG"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0623\u0646\u062A\u064A\u063A\u0648\u0627 \u0648\u0628\u0627\u0631\u0628\u0648\u062F\u0627",common:"\u0623\u0646\u062A\u064A\u063A\u0648\u0627 \u0648\u0628\u0627\u0631\u0628\u0648\u062F\u0627"},ces:{official:"Antigua a Barbuda",common:"Antigua a Barbuda"},cym:{official:"Antigwa a Barbiwda",common:"Antigwa a Barbiwda"},deu:{official:"Antigua und Barbuda",common:"Antigua und Barbuda"},est:{official:"Antigua ja Barbuda",common:"Antigua ja Barbuda"},fin:{official:"Antigua ja Barbuda",common:"Antigua ja Barbuda"},fra:{official:"Antigua -et-Barbuda",common:"Antigua-et-Barbuda"},hrv:{official:"Antigva i Barbuda",common:"Antigva i Barbuda"},hun:{official:"Antigua \xE9s Barbuda",common:"Antigua \xE9s Barbuda"},ita:{official:"Antigua e Barbuda",common:"Antigua e Barbuda"},jpn:{official:"\u30A2\u30F3\u30C1\u30B0\u30A2\u30D0\u30FC\u30D6\u30FC\u30C0",common:"\u30A2\u30F3\u30C6\u30A3\u30B0\u30A2\u30FB\u30D0\u30FC\u30D6\u30FC\u30C0"},kor:{official:"\uC564\uD2F0\uAC00 \uBC14\uBD80\uB2E4",common:"\uC564\uD2F0\uAC00 \uBC14\uBD80\uB2E4"},nld:{official:"Antigua en Barbuda",common:"Antigua en Barbuda"},per:{official:"\u0622\u0646\u062A\u06CC\u06AF\u0648\u0627 \u0648 \u0628\u0627\u0631\u0628\u0648\u062F\u0627",common:"\u0622\u0646\u062A\u06CC\u06AF\u0648\u0627 \u0648 \u0628\u0627\u0631\u0628\u0648\u062F\u0627"},pol:{official:"Antigua i Barbuda",common:"Antigua i Barbuda"},por:{official:"Antigua e Barbuda",common:"Ant\xEDgua e Barbuda"},rus:{official:"\u0410\u043D\u0442\u0438\u0433\u0443\u0430 \u0438 \u0411\u0430\u0440\u0431\u0443\u0434\u0430",common:"\u0410\u043D\u0442\u0438\u0433\u0443\u0430 \u0438 \u0411\u0430\u0440\u0431\u0443\u0434\u0430"},slk:{official:"Antigua a Barbuda",common:"Antigua a Barbuda"},spa:{official:"Antigua y Barbuda",common:"Antigua y Barbuda"},swe:{official:"Antigua och Barbuda",common:"Antigua och Barbuda"},urd:{official:"\u0627\u06CC\u0646\u0679\u06CC\u06AF\u0648\u0627 \u0648 \u0628\u0627\u0631\u0628\u0648\u0688\u0627",common:"\u0627\u06CC\u0646\u0679\u06CC\u06AF\u0648\u0627 \u0648 \u0628\u0627\u0631\u0628\u0648\u0688\u0627"},zho:{official:"\u5B89\u63D0\u74DC\u548C\u5DF4\u5E03\u8FBE",common:"\u5B89\u63D0\u74DC\u548C\u5DF4\u5E03\u8FBE"}},latlng:[17.05,-61.8],landlocked:!1,area:442,demonyms:{eng:{f:"Antiguan, Barbudan",m:"Antiguan, Barbudan"},fra:{f:"Antiguaise et barbudienne",m:"Antiguaise et barbudien"}},flag:"\u{1F1E6}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/fnye4wGJ1RzC9jpX9",openStreetMaps:"https://www.openstreetmap.org/relation/536900"},population:97928,fifa:"ATG",car:{signs:["AG"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ag.png",svg:"https://flagcdn.com/ag.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ag.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ag.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.12,-61.85]}},{name:{common:"Israel",official:"State of Israel",nativeName:{ara:{official:"\u062F\u0648\u0644\u0629 \u0625\u0633\u0631\u0627\u0626\u064A\u0644",common:"\u0625\u0633\u0631\u0627\u0626\u064A\u0644"},heb:{official:"\u05DE\u05D3\u05D9\u05E0\u05EA \u05D9\u05E9\u05E8\u05D0\u05DC",common:"\u05D9\u05E9\u05E8\u05D0\u05DC"}}},tld:[".il"],cca2:"IL",ccn3:"376",cca3:"ISR",cioc:"ISR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ILS:{name:"Israeli new shekel",symbol:"\u20AA"}},idd:{root:"+9",suffixes:["72"]},capital:["Jerusalem"],altSpellings:["IL","State of Israel","Med\u012Bnat Yisr\u0101'el"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic",heb:"Hebrew"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0625\u0633\u0631\u0627\u0626\u064A\u0644",common:"\u0625\u0633\u0631\u0627\u0626\u064A\u0644"},ces:{official:"St\xE1t Izrael",common:"Izrael"},cym:{official:"State of Israel",common:"Israel"},deu:{official:"Staat Israel",common:"Israel"},est:{official:"Iisraeli Riik",common:"Iisrael"},fin:{official:"Israelin valtio",common:"Israel"},fra:{official:"\xC9tat d'Isra\xEBl",common:"Isra\xEBl"},hrv:{official:"Dr\u017Eava Izrael",common:"Izrael"},hun:{official:"Izrael",common:"Izrael"},ita:{official:"Stato di Israele",common:"Israele"},jpn:{official:"\u30A4\u30B9\u30E9\u30A8\u30EB\u56FD",common:"\u30A4\u30B9\u30E9\u30A8\u30EB"},kor:{official:"\uC774\uC2A4\uB77C\uC5D8\uAD6D",common:"\uC774\uC2A4\uB77C\uC5D8"},nld:{official:"Staat Isra\xEBl",common:"Isra\xEBl"},per:{official:"\u0641\u0644\u0633\u0637\u064A\u0646 \u0627\u0634\u063A\u0627\u0644\u06CC",common:"\u0641\u0644\u0633\u0637\u064A\u0646 \u0627\u0634\u063A\u0627\u0644\u06CC"},pol:{official:"Pa\u0144stwo Izrael",common:"Izrael"},por:{official:"Estado de Israel",common:"Israel"},rus:{official:"\u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u0418\u0437\u0440\u0430\u0438\u043B\u044C",common:"\u0418\u0437\u0440\u0430\u0438\u043B\u044C"},slk:{official:"Izraelsk\xFD \u0161t\xE1t",common:"Izrael"},spa:{official:"Estado de Israel",common:"Israel"},swe:{official:"Staten Israel",common:"Israel"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u0627\u0633\u0631\u0627\u0626\u06CC\u0644",common:"\u0627\u0633\u0631\u0627\u0626\u06CC\u0644"},zho:{official:"\u4EE5\u8272\u5217\u56FD",common:"\u4EE5\u8272\u5217"}},latlng:[31.47,35.13],landlocked:!1,borders:["EGY","JOR","LBN","PSE","SYR"],area:20770,demonyms:{eng:{f:"Israeli",m:"Israeli"},fra:{f:"Isra\xE9lienne",m:"Isra\xE9lien"}},flag:"\u{1F1EE}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/6UY1AH8XeafVwdC97",openStreetMaps:"https://www.openstreetmap.org/relation/1473946"},population:9216900,gini:{"2016":39},fifa:"ISR",car:{signs:["IL"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/il.png",svg:"https://flagcdn.com/il.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/il.png",svg:"https://mainfacts.com/media/images/coats_of_arms/il.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[31.77,35.23]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Guyana",official:"Co-operative Republic of Guyana",nativeName:{eng:{official:"Co-operative Republic of Guyana",common:"Guyana"}}},tld:[".gy"],cca2:"GY",ccn3:"328",cca3:"GUY",cioc:"GUY",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GYD:{name:"Guyanese dollar",symbol:"$"}},idd:{root:"+5",suffixes:["92"]},capital:["Georgetown"],altSpellings:["GY","Co-operative Republic of Guyana"],region:"Americas",subregion:"South America",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u064A\u0627\u0646\u0627 \u0627\u0644\u062A\u0639\u0627\u0648\u0646\u064A\u0629",common:"\u063A\u064A\u0627\u0646\u0627"},ces:{official:"Kooperativn\xED republika Guyana",common:"Guyana"},cym:{official:"Co-operative Republic of Guyana",common:"Guyana"},deu:{official:"Kooperative Republik Guyana",common:"Guyana"},est:{official:"Guyana Vabariik",common:"Guyana"},fin:{official:"Guayanan osuustoiminnallinen tasavalta",common:"Guayana"},fra:{official:"R\xE9publique coop\xE9rative de Guyana",common:"Guyana"},hrv:{official:"Zadruga Republika Gvajana",common:"Gvajana"},hun:{official:"Guyanai Sz\xF6vetkezeti K\xF6zt\xE1rsas\xE1g",common:"Guyana"},ita:{official:"Co -operative Republic of Guyana",common:"Guyana"},jpn:{official:"\u30AC\u30A4\u30A2\u30CA\u306E\u5354\u540C\u5171\u548C\u56FD",common:"\u30AC\u30A4\u30A2\u30CA"},kor:{official:"\uAC00\uC774\uC544\uB098 \uD611\uB3D9 \uACF5\uD654\uAD6D",common:"\uAC00\uC774\uC544\uB098"},nld:{official:"Co\xF6peratieve Republiek Guyana",common:"Guyana"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062A\u0639\u0627\u0648\u0646\u06CC \u06AF\u0648\u06CC\u0627\u0646",common:"\u06AF\u0648\u06CC\u0627\u0646"},pol:{official:"Kooperacyjna Republika Gujany",common:"Gujana"},por:{official:"Co -operative Rep\xFAblica da Guiana",common:"Guiana"},rus:{official:"\u041A\u043E\u043E\u043F\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0430\u0439\u0430\u043D\u0430",common:"\u0413\u0430\u0439\u0430\u043D\u0430"},slk:{official:"Guyansk\xE1 kooperat\xEDvna republika",common:"Guyana"},spa:{official:"Rep\xFAblica Cooperativa de Guyana",common:"Guyana"},swe:{official:"Kooperativa republiken Guyana",common:"Guyana"},urd:{official:"\u062A\u0639\u0627\u0648\u0646\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u06CC\u0627\u0646\u0627",common:"\u06AF\u06CC\u0627\u0646\u0627"},zho:{official:"\u572D\u4E9A\u90A3\u5171\u548C\u56FD",common:"\u572D\u4E9A\u90A3"}},latlng:[5,-59],landlocked:!1,borders:["BRA","SUR","VEN"],area:214969,demonyms:{eng:{f:"Guyanese",m:"Guyanese"},fra:{f:"Guyanienne",m:"Guyanien"}},flag:"\u{1F1EC}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/DFsme2xEeugUAsCx5",openStreetMaps:"https://www.openstreetmap.org/relation/287083"},population:786559,gini:{"1998":45.1},fifa:"GUY",car:{signs:["GUY"],side:"left"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/gy.png",svg:"https://flagcdn.com/gy.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.8,-58.15]}},{name:{common:"Cayman Islands",official:"Cayman Islands",nativeName:{eng:{official:"Cayman Islands",common:"Cayman Islands"}}},tld:[".ky"],cca2:"KY",ccn3:"136",cca3:"CYM",cioc:"CAY",independent:!1,status:"officially-assigned",unMember:!1,currencies:{KYD:{name:"Cayman Islands dollar",symbol:"$"}},idd:{root:"+1",suffixes:["345"]},capital:["George Town"],altSpellings:["KY"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0643\u0627\u064A\u0645\u0627\u0646",common:"\u062C\u0632\u0631 \u0643\u0627\u064A\u0645\u0627\u0646"},ces:{official:"Kajmansk\xE9 ostrovy",common:"Kajmansk\xE9 ostrovy"},cym:{official:"Ynysoedd Cayman",common:"Ynysoedd Cayman"},deu:{official:"Cayman-Inseln",common:"Kaimaninseln"},est:{official:"Kaimanisaared",common:"Kaimanisaared"},fin:{official:"Caymansaaret",common:"Caymansaaret"},fra:{official:"\xCEles Ca\xEFmans",common:"\xCEles Ca\xEFmans"},hrv:{official:"Kajmanski otoci",common:"Kajmanski otoci"},hun:{official:"Kajm\xE1n-szigetek",common:"Kajm\xE1n-szigetek"},ita:{official:"Isole Cayman",common:"Isole Cayman"},jpn:{official:"\u30B1\u30A4\u30DE\u30F3\u8AF8\u5CF6",common:"\u30B1\u30A4\u30DE\u30F3\u8AF8\u5CF6"},kor:{official:"\uCF00\uC774\uB9E8 \uC81C\uB3C4",common:"\uCF00\uC774\uB9E8 \uC81C\uB3C4"},nld:{official:"Caymaneilanden",common:"Caymaneilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u06CC\u0645\u0646",common:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u06CC\u0645\u0646"},pol:{official:"Kajmany",common:"Kajmany"},por:{official:"Ilhas Cayman",common:"Ilhas Caim\xE3o"},rus:{official:"\u041A\u0430\u0439\u043C\u0430\u043D\u043E\u0432\u044B \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u041A\u0430\u0439\u043C\u0430\u043D\u043E\u0432\u044B \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Kajmanie ostrovy",common:"Kajmanie ostrovy"},spa:{official:"Islas Caim\xE1n",common:"Islas Caim\xE1n"},swe:{official:"Cayman\xF6arna",common:"Cayman\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u06CC\u0645\u06CC\u0646",common:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u06CC\u0645\u06CC\u0646"},zho:{official:"\u5F00\u66FC\u7FA4\u5C9B",common:"\u5F00\u66FC\u7FA4\u5C9B"}},latlng:[19.5,-80.5],landlocked:!1,area:264,demonyms:{eng:{f:"Caymanian",m:"Caymanian"},fra:{f:"Ca\xEFmanienne",m:"Ca\xEFmanien"}},flag:"\u{1F1F0}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/P3ZVXX3LH63t91hL8",openStreetMaps:"https://www.openstreetmap.org/relation/7269765"},population:65720,fifa:"CAY",car:{signs:["GB"],side:"left"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ky.png",svg:"https://flagcdn.com/ky.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ky.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ky.svg"},startOfWeek:"monday",capitalInfo:{latlng:[19.3,-81.38]}},{name:{common:"Croatia",official:"Republic of Croatia",nativeName:{hrv:{official:"Republika Hrvatska",common:"Hrvatska"}}},tld:[".hr"],cca2:"HR",ccn3:"191",cca3:"HRV",cioc:"CRO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HRK:{name:"Croatian kuna",symbol:"kn"}},idd:{root:"+3",suffixes:["85"]},capital:["Zagreb"],altSpellings:["HR","Hrvatska","Republic of Croatia","Republika Hrvatska"],region:"Europe",subregion:"Southeast Europe",languages:{hrv:"Croatian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0631\u0648\u0627\u062A\u064A\u0627",common:"\u0643\u0631\u0648\u0627\u062A\u064A\u0627"},ces:{official:"Chorvatsk\xE1 republika",common:"Chorvatsko"},cym:{official:"Gweriniaeth Croatia",common:"Croatia"},deu:{official:"Republik Kroatien",common:"Kroatien"},est:{official:"Horvaatia Vabariik",common:"Horvaatia"},fin:{official:"Kroatian tasavalta",common:"Kroatia"},fra:{official:"R\xE9publique de Croatie",common:"Croatie"},hrv:{official:"Republika Hrvatska",common:"Hrvatska"},hun:{official:"Horv\xE1t K\xF6zt\xE1rsas\xE1g",common:"Horv\xE1torsz\xE1g"},ita:{official:"Repubblica di Croazia",common:"Croazia"},jpn:{official:"\u30AF\u30ED\u30A2\u30C1\u30A2\u5171\u548C\u56FD",common:"\u30AF\u30ED\u30A2\u30C1\u30A2"},kor:{official:"\uD06C\uB85C\uC544\uD2F0\uC544 \uACF5\uD654\uAD6D",common:"\uD06C\uB85C\uC544\uD2F0\uC544"},nld:{official:"Republiek Kroati\xEB",common:"Kroati\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0631\u0648\u0627\u0633\u06CC",common:"\u06A9\u0631\u064F\u0648\u0627\u0633\u06CC"},pol:{official:"Republika Chorwacji",common:"Chorwacja"},por:{official:"Rep\xFAblica da Cro\xE1cia",common:"Cro\xE1cia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0425\u043E\u0440\u0432\u0430\u0442\u0438\u044F",common:"\u0425\u043E\u0440\u0432\u0430\u0442\u0438\u044F"},slk:{official:"Chorv\xE1tska republika",common:"Chorv\xE1tsko"},spa:{official:"Rep\xFAblica de Croacia",common:"Croacia"},swe:{official:"Republiken Kroatien",common:"Kroatien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0631\u0648\u06CC\u0626\u0634\u0627",common:"\u06A9\u0631\u0648\u06CC\u0626\u0634\u0627"},zho:{official:"\u514B\u7F57\u5730\u4E9A\u5171\u548C\u56FD",common:"\u514B\u7F57\u5730\u4E9A"}},latlng:[45.16666666,15.5],landlocked:!1,borders:["BIH","HUN","MNE","SRB","SVN"],area:56594,demonyms:{eng:{f:"Croatian",m:"Croatian"},fra:{f:"Croate",m:"Croate"}},flag:"\u{1F1ED}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/qSG6xTKUmrYpwmGQ6",openStreetMaps:"https://www.openstreetmap.org/relation/214885"},population:4047200,gini:{"2018":29.7},fifa:"CRO",car:{signs:["HR"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/hr.png",svg:"https://flagcdn.com/hr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[45.8,16]},postalCode:{format:"HR-#####",regex:"^(?:HR)*(\\d{5})$"}},{name:{common:"Iceland",official:"Iceland",nativeName:{isl:{official:"\xCDsland",common:"\xCDsland"}}},tld:[".is"],cca2:"IS",ccn3:"352",cca3:"ISL",cioc:"ISL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ISK:{name:"Icelandic kr\xF3na",symbol:"kr"}},idd:{root:"+3",suffixes:["54"]},capital:["Reykjavik"],altSpellings:["IS","Island","Republic of Iceland","L\xFD\xF0veldi\xF0 \xCDsland"],region:"Europe",subregion:"Northern Europe",languages:{isl:"Icelandic"},translations:{ara:{official:"\u0622\u064A\u0633\u0644\u0646\u062F\u0627",common:"\u0622\u064A\u0633\u0644\u0646\u062F\u0627"},ces:{official:"Island",common:"Island"},cym:{official:"Iceland",common:"Iceland"},deu:{official:"Island",common:"Island"},est:{official:"Islandi Vabariik",common:"Island"},fin:{official:"Islanti",common:"Islanti"},fra:{official:"R\xE9publique d'Islande",common:"Islande"},hrv:{official:"Island",common:"Island"},hun:{official:"Izland",common:"Izland"},ita:{official:"Islanda",common:"Islanda"},jpn:{official:"\u30A2\u30A4\u30B9\u30E9\u30F3\u30C9",common:"\u30A2\u30A4\u30B9\u30E9\u30F3\u30C9"},kor:{official:"\uC544\uC774\uC2AC\uB780\uB4DC \uACF5\uD654\uAD6D",common:"\uC544\uC774\uC2AC\uB780\uB4DC"},nld:{official:"IJsland",common:"IJsland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u06CC\u0633\u0644\u0646\u062F",common:"\u0627\u06CC\u0633\u0644\u0646\u062F"},pol:{official:"Republika Islandii",common:"Islandia"},por:{official:"Isl\xE2ndia",common:"Isl\xE2ndia"},rus:{official:"\u0418\u0441\u043B\u0430\u043D\u0434\u0438\u044F",common:"\u0418\u0441\u043B\u0430\u043D\u0434\u0438\u044F"},slk:{official:"Islandsk\xE1 republika",common:"Island"},spa:{official:"Islandia",common:"Islandia"},swe:{official:"Island",common:"Island"},urd:{official:"\u0622\u0626\u0633 \u0644\u06CC\u0646\u0688",common:"\u0622\u0626\u0633 \u0644\u06CC\u0646\u0688"},zho:{official:"\u51B0\u5C9B",common:"\u51B0\u5C9B"}},latlng:[65,-18],landlocked:!1,area:103e3,demonyms:{eng:{f:"Icelander",m:"Icelander"},fra:{f:"Islandaise",m:"Islandais"}},flag:"\u{1F1EE}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/WxFWSQuc3oamNxoE6",openStreetMaps:"https://www.openstreetmap.org/relation/299133"},population:366425,gini:{"2017":26.1},fifa:"ISL",car:{signs:["IS"],side:"right"},timezones:["UTC"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/is.png",svg:"https://flagcdn.com/is.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/is.png",svg:"https://mainfacts.com/media/images/coats_of_arms/is.svg"},startOfWeek:"monday",capitalInfo:{latlng:[64.15,-21.95]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Caribbean Netherlands",official:"Bonaire, Sint Eustatius and Saba",nativeName:{nld:{official:"Bonaire, Sint Eustatius en Saba",common:"Caribisch Nederland"},pap:{official:"Boneiru, Sint Eustatius y Saba",common:"Boneiru, Sint Eustatius y Saba"}}},tld:[".bq",".nl"],cca2:"BQ",ccn3:"535",cca3:"BES",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["99"]},capital:["Kralendijk"],altSpellings:["BES islands"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",nld:"Dutch",pap:"Papiamento"},translations:{ara:{official:"\u0628\u0648\u0646\u064A\u0631 \u0648\u0633\u064A\u0646\u062A \u0623\u0648\u0633\u062A\u0627\u062A\u064A\u0648\u0633 \u0648\u0633\u0627\u0628\u0627",common:"\u0627\u0644\u062C\u0632\u0631 \u0627\u0644\u0643\u0627\u0631\u064A\u0628\u064A\u0629 \u0627\u0644\u0647\u0648\u0644\u0646\u062F\u064A\u0629"},ces:{official:"Karibsk\xE9 Nizozemsko",common:"Karibsk\xE9 Nizozemsko"},cym:{official:"Bonaire, Sint Eustatius and Saba",common:"Caribbean Netherlands"},deu:{official:"Bonaire, Sint Eustatius und Saba",common:"Karibische Niederlande"},est:{official:"Bonaire, Sint Eustatius ja Saba",common:"Bonaire, Sint Eustatius ja Saba"},fin:{official:"Bonaire, Sint Eustatius ja Saba",common:"Bonaire, Sint Eustatius ja Saba"},fra:{official:"Bonaire, Saint-Eustache et Saba",common:"Pays-Bas carib\xE9ens"},hrv:{official:"Bonaire, Sint Eustatius i Saba",common:"Bonaire, Sint Eustatius i Saba"},hun:{official:"Bonaire",common:"Bonaire"},ita:{official:"Bonaire, Sint Eustatius e Saba",common:"Paesi Bassi caraibici"},jpn:{official:"\u30DC\u30CD\u30FC\u30EB\u3001\u30B7\u30F3\u30C8\u30FB\u30E6\u30FC\u30B9\u30BF\u30C6\u30A3\u30A6\u30B9\u304A\u3088\u3073\u30B5\u30D0",common:"\u30DC\u30CD\u30FC\u30EB\u3001\u30B7\u30F3\u30C8\u30FB\u30E6\u30FC\u30B9\u30BF\u30C6\u30A3\u30A6\u30B9\u304A\u3088\u3073\u30B5\u30D0"},kor:{official:"\uBCF4\uB124\uB974, \uC2E0\uD2B8\uC678\uC2A4\uD0C0\uD2F0\uC704\uC2A4, \uC0AC\uBC14",common:"\uCE74\uB9AC\uBE0C \uB124\uB35C\uB780\uB4DC"},nld:{official:"Bonaire, Sint Eustatius en Saba",common:"Caribisch Nederland"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0627\u0631\u0627\u0626\u06CC\u0628 \u0647\u0644\u0646\u062F",common:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0627\u0631\u0627\u0626\u06CC\u0628 \u0647\u0644\u0646\u062F"},pol:{official:"Bonaire, Sint Eustatius i Saba",common:"Antyle Holenderskie"},por:{official:"Bonaire, Saba e Santo Eust\xE1quio",common:"Pa\xEDses Baixos Caribenhos"},rus:{official:"\u0411\u043E\u043D\u044D\u0439\u0440, \u0421\u0438\u043D\u0442-\u042D\u0441\u0442\u0430\u0442\u0438\u0443\u0441 \u0438 \u0421\u0430\u0431\u0430",common:"\u041A\u0430\u0440\u0438\u0431\u0441\u043A\u0438\u0435 \u041D\u0438\u0434\u0435\u0440\u043B\u0430\u043D\u0434\u044B"},slk:{official:"Bonaire, Sint Eustatius a Saba",common:"Bonaire, Sint Eustatius a Saba"},spa:{official:"Bonaire, San Eustaquio y Saba",common:"Caribe Neerland\xE9s"},swe:{official:"Bonaire, Sint Eustatius and Saba",common:"Karibiska Nederl\xE4nderna"},urd:{official:"\u0628\u0648\u0646\u0627\u06CC\u0631\u060C \u0633\u06CC\u0646\u0679 \u0627\u06CC\u0648\u0633\u0679\u0627\u0626\u06CC\u0633 \u0627\u0648\u0631 \u0633\u0627\u0628\u0627",common:"\u06A9\u06CC\u0631\u06CC\u0628\u06CC\u0646 \u0646\u06CC\u062F\u0631\u0644\u06CC\u0646\u0688\u0632"},zho:{official:"\u8377\u862D\u52A0\u52D2\u6BD4\u5340",common:"\u8377\u862D\u52A0\u52D2\u6BD4\u5340"}},latlng:[12.18,-68.25],landlocked:!1,area:328,demonyms:{eng:{f:"Dutch",m:"Dutch"},fra:{f:"N\xE9erlandaise",m:"N\xE9erlandais"}},maps:{googleMaps:"https://goo.gl/maps/4XVes1P6uEDTz77WA",openStreetMaps:"https://www.openstreetmap.org/relation/1216720"},population:25987,car:{signs:[""],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bq.png",svg:"https://flagcdn.com/bq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bq.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.14,-68.27]}},{name:{common:"Sint Maarten",official:"Sint Maarten",nativeName:{eng:{official:"Sint Maarten",common:"Sint Maarten"},fra:{official:"Saint-Martin",common:"Saint-Martin"},nld:{official:"Sint Maarten",common:"Sint Maarten"}}},tld:[".sx"],cca2:"SX",ccn3:"534",cca3:"SXM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{ANG:{name:"Netherlands Antillean guilder",symbol:"\u0192"}},idd:{root:"+1",suffixes:["721"]},capital:["Philipsburg"],altSpellings:["SX","Sint Maarten (Dutch part)"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",fra:"French",nld:"Dutch"},translations:{ara:{official:"\u0633\u064A\u0646\u062A \u0645\u0627\u0631\u062A\u0646",common:"\u0633\u064A\u0646\u062A \u0645\u0627\u0631\u062A\u0646"},ces:{official:"Svat\xFD Martin",common:"Svat\xFD Martin (Nizozemsko)"},cym:{official:"Sint Maarten",common:"Sint Maarten"},deu:{official:"Sint Maarten",common:"Sint Maarten"},est:{official:"Sint Maarten",common:"Sint Maarten"},fin:{official:"Sint Maarten",common:"Sint Maarten"},fra:{official:"Sint Maarten",common:"Saint-Martin"},hrv:{official:"Sveti Martin",common:"Sveti Martin"},hun:{official:"Sint Maarten",common:"Sint Maarten"},ita:{official:"Sint Maarten",common:"Sint Maarten"},jpn:{official:"\u30B7\u30F3\u30C8\u30DE\u30FC\u30EB\u30C6\u30F3\u5CF6",common:"\u30B7\u30F3\u30C8\u30FB\u30DE\u30FC\u30EB\u30C6\u30F3"},kor:{official:"\uC2E0\uD2B8\uB9C8\uB974\uD134",common:"\uC2E0\uD2B8\uB9C8\uB974\uD134"},nld:{official:"Sint Maarten",common:"Sint Maarten"},per:{official:"\u0633\u0646 \u0645\u0627\u0631\u062A\u0646",common:"\u0633\u0646 \u0645\u0627\u0631\u062A\u0646"},pol:{official:"Sint Maarten",common:"Sint Maarten"},por:{official:"Sint Maarten",common:"S\xE3o Martinho"},rus:{official:"\u0421\u0438\u043D\u0442-\u041C\u0430\u0430\u0440\u0442\u0435\u043D",common:"\u0421\u0438\u043D\u0442-\u041C\u0430\u0440\u0442\u0435\u043D"},slk:{official:"Sint Maarten",common:"Sint Maarten"},spa:{official:"Sint Maarten",common:"Sint Maarten"},swe:{official:"Sint Maarten",common:"Sint Maarten"},urd:{official:"\u0633\u0646\u0679 \u0645\u0627\u0631\u0679\u0646",common:"\u0633\u0646\u0679 \u0645\u0627\u0631\u0679\u0646"},zho:{official:"\u5723\u9A6C\u4E01\u5C9B",common:"\u5723\u9A6C\u4E01\u5C9B"}},latlng:[18.033333,-63.05],landlocked:!1,borders:["MAF"],area:34,demonyms:{eng:{f:"St. Maartener",m:"St. Maartener"},fra:{f:"Saint-Martinoise",m:"Saint-Martinois"}},flag:"\u{1F1F8}\u{1F1FD}",maps:{googleMaps:"https://goo.gl/maps/DjvcESy1a1oGEZuNA",openStreetMaps:"https://www.openstreetmap.org/relation/1231790"},population:40812,car:{signs:["SX"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/sx.png",svg:"https://flagcdn.com/sx.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.02,-63.03]}},{name:{common:"Namibia",official:"Republic of Namibia",nativeName:{afr:{official:"Republiek van Namibi\xEB",common:"Namibi\xEB"},deu:{official:"Republik Namibia",common:"Namibia"},eng:{official:"Republic of Namibia",common:"Namibia"},her:{official:"Republic of Namibia",common:"Namibia"},hgm:{official:"Republic of Namibia",common:"Namibia"},kwn:{official:"Republic of Namibia",common:"Namibia"},loz:{official:"Republic of Namibia",common:"Namibia"},ndo:{official:"Republic of Namibia",common:"Namibia"},tsn:{official:"Lefatshe la Namibia",common:"Namibia"}}},tld:[".na"],cca2:"NA",ccn3:"516",cca3:"NAM",cioc:"NAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NAD:{name:"Namibian dollar",symbol:"$"},ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["64"]},capital:["Windhoek"],altSpellings:["NA","Namibi\xEB","Republic of Namibia"],region:"Africa",subregion:"Southern Africa",languages:{afr:"Afrikaans",deu:"German",eng:"English",her:"Herero",hgm:"Khoekhoe",kwn:"Kwangali",loz:"Lozi",ndo:"Ndonga",tsn:"Tswana"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0646\u0627\u0645\u064A\u0628\u064A\u0627",common:"\u0646\u0627\u0645\u064A\u0628\u064A\u0627"},ces:{official:"Namibijsk\xE1 republika",common:"Namibie"},cym:{official:"Republic of Namibia",common:"Namibia"},deu:{official:"Republik Namibia",common:"Namibia"},est:{official:"Namiibia Vabariik",common:"Namiibia"},fin:{official:"Namibian tasavalta",common:"Namibia"},fra:{official:"R\xE9publique de Namibie",common:"Namibie"},hrv:{official:"Republika Namibija",common:"Namibija"},hun:{official:"Nam\xEDbiai K\xF6zt\xE1rsas\xE1g",common:"Nam\xEDbia"},ita:{official:"Repubblica di Namibia",common:"Namibia"},jpn:{official:"\u30CA\u30DF\u30D3\u30A2\u5171\u548C\u56FD",common:"\u30CA\u30DF\u30D3\u30A2"},kor:{official:"\uB098\uBBF8\uBE44\uC544 \uACF5\uD654\uAD6D",common:"\uB098\uBBF8\uBE44\uC544"},nld:{official:"Republiek Namibi\xEB",common:"Namibi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0646\u0627\u0645\u06CC\u0628\u06CC\u0627",common:"\u0646\u0627\u0645\u06CC\u0628\u06CC\u0627"},pol:{official:"Republika Namibii",common:"Namibia"},por:{official:"Rep\xFAblica da Nam\xEDbia",common:"Nam\xEDbia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041D\u0430\u043C\u0438\u0431\u0438\u044F",common:"\u041D\u0430\u043C\u0438\u0431\u0438\u044F"},slk:{official:"Nam\xEDbijsk\xE1 republika",common:"Nam\xEDbia"},spa:{official:"Rep\xFAblica de Namibia",common:"Namibia"},swe:{official:"Republiken Namibia",common:"Namibia"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0646\u0645\u06CC\u0628\u06CC\u0627",common:"\u0646\u0645\u06CC\u0628\u06CC\u0627"},zho:{official:"\u7EB3\u7C73\u6BD4\u4E9A\u5171\u548C\u56FD",common:"\u7EB3\u7C73\u6BD4\u4E9A"}},latlng:[-22,17],landlocked:!1,borders:["AGO","BWA","ZAF","ZMB"],area:825615,demonyms:{eng:{f:"Namibian",m:"Namibian"},fra:{f:"Namibienne",m:"Namibien"}},flag:"\u{1F1F3}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/oR1i8BFEYX3EY83WA",openStreetMaps:"https://www.openstreetmap.org/relation/195266"},population:2540916,gini:{"2015":59.1},fifa:"NAM",car:{signs:["NAM"],side:"left"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/na.png",svg:"https://flagcdn.com/na.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/na.png",svg:"https://mainfacts.com/media/images/coats_of_arms/na.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-22.57,17.08]}},{name:{common:"Dominica",official:"Commonwealth of Dominica",nativeName:{eng:{official:"Commonwealth of Dominica",common:"Dominica"}}},tld:[".dm"],cca2:"DM",ccn3:"212",cca3:"DMA",cioc:"DMA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["767"]},capital:["Roseau"],altSpellings:["DM","Dominique","Wai\u2018tu kubuli","Commonwealth of Dominica"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0643\u0648\u0645\u0648\u0646\u0648\u0644\u062B \u062F\u0648\u0645\u064A\u0646\u064A\u0643\u0627",common:"\u062F\u0648\u0645\u064A\u0646\u064A\u0643\u0627"},ces:{official:"Dominik\xE1nsk\xE9 spole\u010Denstv\xED",common:"Dominika"},cym:{official:"Cymanwlad Dominica",common:"Dominica"},deu:{official:"Commonwealth von Dominica",common:"Dominica"},est:{official:"Dominica \xDChendus",common:"Dominica"},fin:{official:"Dominican liittovaltio",common:"Dominica"},fra:{official:"Commonwealth de la Dominique",common:"Dominique"},hrv:{official:"Zajednica Dominika",common:"Dominika"},hun:{official:"Dominikai K\xF6z\xF6ss\xE9g",common:"Dominikai K\xF6z\xF6ss\xE9g"},ita:{official:"Commonwealth di Dominica",common:"Dominica"},jpn:{official:"\u30C9\u30DF\u30CB\u30AB\u56FD",common:"\u30C9\u30DF\u30CB\u30AB\u56FD"},kor:{official:"\uB3C4\uBBF8\uB2C8\uCE74 \uACF5\uD654\uAD6D",common:"\uB3C4\uBBF8\uB2C8\uCE74 \uACF5\uD654\uAD6D"},nld:{official:"Gemenebest Dominica",common:"Dominica"},per:{official:"\u0642\u0644\u0645\u0631\u0648 \u0647\u0645\u0633\u0648\u062F \u062F\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0627",common:"\u062F\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0627"},pol:{official:"Wsp\xF3lnota Dominiki",common:"Dominika"},por:{official:"Comunidade da Dominica",common:"Dominica"},rus:{official:"\u0421\u043E\u0434\u0440\u0443\u0436\u0435\u0441\u0442\u0432\u043E \u0414\u043E\u043C\u0438\u043D\u0438\u043A\u0438",common:"\u0414\u043E\u043C\u0438\u043D\u0438\u043A\u0430"},slk:{official:"Dominick\xE9 spolo\u010Denstvo",common:"Dominika"},spa:{official:"Mancomunidad de Dominica",common:"Dominica"},swe:{official:"Samv\xE4ldet Dominica",common:"Dominica"},urd:{official:"\u062F\u0648\u0644\u062A\u0650 \u0645\u0634\u062A\u0631\u06A9\u06C1 \u0688\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0627",common:"\u0688\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0627"},zho:{official:"\u591A\u7C73\u5C3C\u52A0\u5171\u548C\u56FD",common:"\u591A\u7C73\u5C3C\u52A0"}},latlng:[15.41666666,-61.33333333],landlocked:!1,area:751,demonyms:{eng:{f:"Dominican",m:"Dominican"},fra:{f:"Dominiquaise",m:"Dominiquais"}},flag:"\u{1F1E9}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/HSKdHYpFC8oHHuyV7",openStreetMaps:"https://www.openstreetmap.org/relation/307823"},population:71991,fifa:"DMA",car:{signs:["WD"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/dm.png",svg:"https://flagcdn.com/dm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[15.3,-61.4]}},{name:{common:"Gibraltar",official:"Gibraltar",nativeName:{eng:{official:"Gibraltar",common:"Gibraltar"}}},tld:[".gi"],cca2:"GI",ccn3:"292",cca3:"GIB",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GIP:{name:"Gibraltar pound",symbol:"\xA3"}},idd:{root:"+3",suffixes:["50"]},capital:["Gibraltar"],altSpellings:["GI"],region:"Europe",subregion:"Southern Europe",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0628\u0644 \u0637\u0627\u0631\u0642",common:"\u062C\u0628\u0644 \u0637\u0627\u0631\u0642"},ces:{official:"Gibraltar",common:"Gibraltar"},cym:{official:"Gibraltar",common:"Gibraltar"},deu:{official:"Gibraltar",common:"Gibraltar"},est:{official:"Gibraltar",common:"Gibraltar"},fin:{official:"Gibraltar",common:"Gibraltar"},fra:{official:"Gibraltar",common:"Gibraltar"},hrv:{official:"Gibraltar",common:"Gibraltar"},hun:{official:"Gibralt\xE1r",common:"Gibralt\xE1r"},ita:{official:"Gibilterra",common:"Gibilterra"},jpn:{official:"\u30B8\u30D6\u30E9\u30EB\u30BF\u30EB",common:"\u30B8\u30D6\u30E9\u30EB\u30BF\u30EB"},kor:{official:"\uC9C0\uBE0C\uB864\uD130",common:"\uC9C0\uBE0C\uB864\uD130"},nld:{official:"Gibraltar",common:"Gibraltar"},per:{official:"\u062C\u0628\u0644 \u0637\u0627\u0631\u0642",common:"\u062C\u0628\u0644 \u0637\u0627\u0631\u0642"},pol:{official:"Gibraltar",common:"Gibraltar"},por:{official:"Gibraltar",common:"Gibraltar"},rus:{official:"\u0413\u0438\u0431\u0440\u0430\u043B\u0442\u0430\u0440",common:"\u0413\u0438\u0431\u0440\u0430\u043B\u0442\u0430\u0440"},slk:{official:"Gibralt\xE1r",common:"Gibralt\xE1r"},spa:{official:"Gibraltar",common:"Gibraltar"},swe:{official:"Gibraltar",common:"Gibraltar"},urd:{official:"\u062C\u0628\u0644 \u0627\u0644\u0637\u0627\u0631\u0642",common:"\u062C\u0628\u0644 \u0627\u0644\u0637\u0627\u0631\u0642"},zho:{official:"\u76F4\u5E03\u7F57\u9640",common:"\u76F4\u5E03\u7F57\u9640"}},latlng:[36.13333333,-5.35],landlocked:!1,borders:["ESP"],area:6,demonyms:{eng:{f:"Gibraltar",m:"Gibraltar"},fra:{f:"Gibraltarienne",m:"Gibraltarien"}},flag:"\u{1F1EC}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/CEoHAs1t6byCBhHFA",openStreetMaps:"https://www.openstreetmap.org/relation/1278736"},population:33691,fifa:"GIB",car:{signs:["GBZ"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gi.png",svg:"https://flagcdn.com/gi.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gi.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gi.svg"},startOfWeek:"monday",capitalInfo:{latlng:[36.13,-5.35]}},{name:{common:"Senegal",official:"Republic of Senegal",nativeName:{fra:{official:"R\xE9publique du S\xE9n\xE9gal",common:"S\xE9n\xE9gal"}}},tld:[".sn"],cca2:"SN",ccn3:"686",cca3:"SEN",cioc:"SEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["21"]},capital:["Dakar"],altSpellings:["SN","Republic of Senegal","R\xE9publique du S\xE9n\xE9gal"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0633\u0646\u063A\u0627\u0644",common:"\u0627\u0644\u0633\u0646\u063A\u0627\u0644"},ces:{official:"Senegalsk\xE1 republika",common:"Senegal"},cym:{official:"Republic of Senegal",common:"Senegal"},deu:{official:"Republik Senegal",common:"Senegal"},est:{official:"Senegali Vabariik",common:"Senegal"},fin:{official:"Senegalin tasavalta",common:"Senegal"},fra:{official:"R\xE9publique du S\xE9n\xE9gal",common:"S\xE9n\xE9gal"},hrv:{official:"Republika Senegal",common:"Senegal"},hun:{official:"Szeneg\xE1li K\xF6zt\xE1rsas\xE1g",common:"Szeneg\xE1l"},ita:{official:"Repubblica del Senegal",common:"Senegal"},jpn:{official:"\u30BB\u30CD\u30AC\u30EB\u5171\u548C\u56FD",common:"\u30BB\u30CD\u30AC\u30EB"},kor:{official:"\uC138\uB124\uAC08 \uACF5\uD654\uAD6D",common:"\uC138\uB124\uAC08"},nld:{official:"Republiek Senegal",common:"Senegal"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0646\u06AF\u0627\u0644",common:"\u0633\u0646\u06AF\u0627\u0644"},pol:{official:"Senegal",common:"Senegal"},por:{official:"Rep\xFAblica do Senegal",common:"Senegal"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0435\u043D\u0435\u0433\u0430\u043B",common:"\u0421\u0435\u043D\u0435\u0433\u0430\u043B"},slk:{official:"Senegalsk\xE1 republika",common:"Senegal"},spa:{official:"Rep\xFAblica de Senegal",common:"Senegal"},swe:{official:"Republiken Senegal",common:"Senegal"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u06CC\u0646\u06CC\u06AF\u0627\u0644",common:"\u0633\u06CC\u0646\u06CC\u06AF\u0627\u0644"},zho:{official:"\u585E\u5185\u52A0\u5C14\u5171\u548C\u56FD",common:"\u585E\u5185\u52A0\u5C14"}},latlng:[14,-14],landlocked:!1,borders:["GMB","GIN","GNB","MLI","MRT"],area:196722,demonyms:{eng:{f:"Senegalese",m:"Senegalese"},fra:{f:"S\xE9n\xE9galaise",m:"S\xE9n\xE9galais"}},flag:"\u{1F1F8}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/o5f1uD5nyihCL3HCA",openStreetMaps:"https://www.openstreetmap.org/relation/192775"},population:16743930,gini:{"2011":40.3},fifa:"SEN",car:{signs:["SN"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sn.png",svg:"https://flagcdn.com/sn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.73,-17.63]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Saint Kitts and Nevis",official:"Federation of Saint Christopher and Nevis",nativeName:{eng:{official:"Federation of Saint Christopher and Nevis",common:"Saint Kitts and Nevis"}}},tld:[".kn"],cca2:"KN",ccn3:"659",cca3:"KNA",cioc:"SKN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["869"]},capital:["Basseterre"],altSpellings:["KN","Federation of Saint Christopher and Nevis"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0642\u062F\u064A\u0633 \u0643\u0631\u064A\u0633\u062A\u0648\u0641\u0631 \u0648\u0646\u064A\u0641\u064A\u0633",common:"\u0633\u0627\u0646\u062A \u0643\u064A\u062A\u0633 \u0648\u0646\u064A\u0641\u064A\u0633"},ces:{official:"Federace Sv. Kry\u0161tof a Nevis",common:"Svat\xFD Kry\u0161tof a Nevis"},cym:{official:"Federation of Saint Christopher and Nevis",common:"Saint Kitts and Nevis"},deu:{official:"F\xF6deration von St. Kitts und Nevis",common:"St. Kitts und Nevis"},est:{official:"Saint Kittsi ja Nevise F\xF6deratsioon",common:"Saint Kitts ja Nevis"},fin:{official:"Saint Christopherin ja Nevisin federaatio",common:"Saint Kitts ja Nevis"},fra:{official:"F\xE9d\xE9ration de Saint-Christophe-et-Ni\xE9v\xE8s",common:"Saint-Christophe-et-Ni\xE9v\xE8s"},hrv:{official:"Federacija Sv.Kristofora i Nevisa",common:"Sveti Kristof i Nevis"},hun:{official:"Saint Christopher \xE9s Nevis \xC1llamsz\xF6vets\xE9g",common:"Saint Kitts \xE9s Nevis"},ita:{official:"Federazione di Saint Christopher e Nevis",common:"Saint Kitts e Nevis"},jpn:{official:"\u30BB\u30F3\u30C8\u30AF\u30EA\u30B9\u30C8\u30D5\u30A1\u30FCNevis\u9023\u76DF",common:"\u30BB\u30F3\u30C8\u30AF\u30EA\u30B9\u30C8\u30D5\u30A1\u30FC\u30FB\u30CD\u30A4\u30D3\u30B9"},kor:{official:"\uC138\uC778\uD2B8\uD0A4\uCE20 \uB124\uBE44\uC2A4 \uC5F0\uBC29",common:"\uC138\uC778\uD2B8\uD0A4\uCE20 \uB124\uBE44\uC2A4"},nld:{official:"Federatie van Saint Kitts en Nevis",common:"Saint Kitts en Nevis"},per:{official:"\u0641\u062F\u0631\u0627\u0633\u06CC\u0648\u0646 \u0633\u0646\u062A \u06A9\u06CC\u062A\u0633 \u0648 \u0646\u0648\u06CC\u0633",common:"\u0633\u0646\u062A \u06A9\u06CC\u062A\u0633 \u0648 \u0646\u0648\u06CC\u0633"},pol:{official:"Federacja Saint Kitts i Nevis",common:"Saint Kitts i Nevis"},por:{official:"Federa\xE7\xE3o de S\xE3o Crist\xF3v\xE3o e Nevis",common:"S\xE3o Crist\xF3v\xE3o e Nevis"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044F \u0421\u0435\u043D\u0442-\u041A\u0440\u0438\u0441\u0442\u043E\u0444\u0435\u0440 \u0438 \u041D \u0435 \u0432 \u0438 \u0441",common:"\u0421\u0435\u043D\u0442-\u041A\u0438\u0442\u0441 \u0438 \u041D\u0435\u0432\u0438\u0441"},slk:{official:"Feder\u0EE1cia Sv\xE4t\xE9ho Kri\u0161tofa a Nevisu",common:"Sv\xE4t\xFD Kri\u0161tof a Nevis"},spa:{official:"Federaci\xF3n de San Crist\xF3bal y Nevis",common:"San Crist\xF3bal y Nieves"},swe:{official:"Federationen Saint Kitts och Nevis",common:"Saint Kitts och Nevis"},urd:{official:"\u0648\u0641\u0627\u0642\u0650 \u0633\u06CC\u0646\u0679 \u06A9\u06CC\u0679\u0632 \u0648 \u0646\u0627\u0648\u06CC\u0633",common:"\u0633\u06CC\u0646\u0679 \u06A9\u06CC\u0679\u0632 \u0648 \u0646\u0627\u0648\u06CC\u0633"},zho:{official:"\u5723\u514B\u91CC\u65AF\u6258\u5F17\u548C\u5C3C\u7EF4\u65AF\u8054\u90A6",common:"\u5723\u57FA\u8328\u548C\u5C3C\u7EF4\u65AF"}},latlng:[17.33333333,-62.75],landlocked:!1,area:261,demonyms:{eng:{f:"Kittitian or Nevisian",m:"Kittitian or Nevisian"},fra:{f:"Kittitienne-et-nevicienne",m:"Kittitien-et-nevicien"}},flag:"\u{1F1F0}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/qiaVwcLVTXX3eoTNA",openStreetMaps:"https://www.openstreetmap.org/relation/536899"},population:53192,fifa:"SKN",car:{signs:["KN"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/kn.png",svg:"https://flagcdn.com/kn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.3,-62.72]}},{name:{common:"Oman",official:"Sultanate of Oman",nativeName:{ara:{official:"\u0633\u0644\u0637\u0646\u0629 \u0639\u0645\u0627\u0646",common:"\u0639\u0645\u0627\u0646"}}},tld:[".om"],cca2:"OM",ccn3:"512",cca3:"OMN",cioc:"OMA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{OMR:{name:"Omani rial",symbol:"\u0631.\u0639."}},idd:{root:"+9",suffixes:["68"]},capital:["Muscat"],altSpellings:["OM","Sultanate of Oman","Sal\u1E6Danat \u02BBUm\u0101n"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0633\u0644\u0637\u0646\u0629 \u0639\u0645\u0627\u0646",common:"\u0639\u0645\u0627\u0646"},ces:{official:"Sultan\xE1t Om\xE1n",common:"Om\xE1n"},cym:{official:"Sultanate of Oman",common:"Oman"},deu:{official:"Sultanat Oman",common:"Oman"},est:{official:"Omaani Sultaniriik",common:"Omaan"},fin:{official:"Omanin sulttaanikunta",common:"Oman"},fra:{official:"Sultanat d'Oman",common:"Oman"},hrv:{official:"Sultanat Oman",common:"Oman"},hun:{official:"Om\xE1ni Szultan\xE1tus",common:"Om\xE1n"},ita:{official:"Sultanato dell'Oman",common:"oman"},jpn:{official:"\u30AA\u30DE\u30FC\u30F3\xB7\u30B9\u30EB\u30BF\u30F3\u56FD",common:"\u30AA\u30DE\u30FC\u30F3"},kor:{official:"\uC624\uB9CC \uC220\uD0C4\uAD6D",common:"\uC624\uB9CC"},nld:{official:"Sultanaat van Oman",common:"Oman"},per:{official:"\u0633\u0644\u0637\u0627\u0646\u200C\u0646\u0634\u06CC\u0646 \u0639\u064F\u0645\u0627\u0646",common:"\u0639\u0645\u0627\u0646"},pol:{official:"Su\u0142tanat Omanu",common:"Oman"},por:{official:"Sultanato de Om\xE3",common:"Om\xE3"},rus:{official:"\u0421\u0443\u043B\u0442\u0430\u043D\u0430\u0442 \u041E\u043C\u0430\u043D",common:"\u041E\u043C\u0430\u043D"},slk:{official:"Om\xE1nsky sultan\xE1t",common:"Om\xE1n"},spa:{official:"Sultanato de Om\xE1n",common:"Om\xE1n"},swe:{official:"Sultanatet Oman",common:"Oman"},urd:{official:"\u0633\u0644\u0637\u0646\u062A \u0639\u0645\u0627\u0646",common:"\u0639\u0645\u0627\u0646"},zho:{official:"\u963F\u66FC\u82CF\u4E39\u56FD",common:"\u963F\u66FC"}},latlng:[21,57],landlocked:!1,borders:["SAU","ARE","YEM"],area:309500,demonyms:{eng:{f:"Omani",m:"Omani"},fra:{f:"Omanaise",m:"Omanais"}},flag:"\u{1F1F4}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/L2BoXoAwDDwWecnw5",openStreetMaps:"https://www.openstreetmap.org/relation/305138"},population:5106622,fifa:"OMA",car:{signs:["OM"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/om.png",svg:"https://flagcdn.com/om.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/om.png",svg:"https://mainfacts.com/media/images/coats_of_arms/om.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[23.62,58.58]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Kuwait",official:"State of Kuwait",nativeName:{ara:{official:"\u062F\u0648\u0644\u0629 \u0627\u0644\u0643\u0648\u064A\u062A",common:"\u0627\u0644\u0643\u0648\u064A\u062A"}}},tld:[".kw"],cca2:"KW",ccn3:"414",cca3:"KWT",cioc:"KUW",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KWD:{name:"Kuwaiti dinar",symbol:"\u062F.\u0643"}},idd:{root:"+9",suffixes:["65"]},capital:["Kuwait City"],altSpellings:["KW","State of Kuwait","Dawlat al-Kuwait"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0627\u0644\u0643\u0648\u064A\u062A",common:"\u0627\u0644\u0643\u0648\u064A\u062A"},ces:{official:"St\xE1t Kuvajt",common:"Kuvajt"},cym:{official:"State of Kuwait",common:"Kuwait"},deu:{official:"Staat Kuwait",common:"Kuwait"},est:{official:"Kuveidi Riik",common:"Kuveit"},fin:{official:"Kuwaitin valtio",common:"Kuwait"},fra:{official:"\xC9tat du Kowe\xEFt",common:"Kowe\xEFt"},hrv:{official:"Dr\u017Eava Kuvajt",common:"Kuvajt"},hun:{official:"Kuvaiti \xC1llam",common:"Kuvait"},ita:{official:"Stato del Kuwait",common:"Kuwait"},jpn:{official:"\u30AF\u30A6\u30A7\u30FC\u30C8\u56FD",common:"\u30AF\u30A6\u30A7\u30FC\u30C8"},kor:{official:"\uCFE0\uC6E8\uC774\uD2B8\uAD6D",common:"\uCFE0\uC6E8\uC774\uD2B8"},nld:{official:"Staat Koeweit",common:"Koeweit"},per:{official:"\u062F\u0648\u0644\u062A \u06A9\u0648\u06CC\u062A",common:"\u06A9\u064F\u0648\u06CC\u062A"},pol:{official:"Pa\u0144stwo Kuwejt",common:"Kuwejt"},por:{official:"Estado do Kuwait",common:"Kuwait"},rus:{official:"\u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u041A\u0443\u0432\u0435\u0439\u0442",common:"\u041A\u0443\u0432\u0435\u0439\u0442"},slk:{official:"Kuvajtsk\xFD \u0161t\xE1t",common:"Kuvajt"},spa:{official:"Estado de Kuwait",common:"Kuwait"},swe:{official:"Staten Kuwait",common:"Kuwait"},urd:{official:"\u062F\u0648\u0644\u062A\u0650 \u06A9\u0648\u06CC\u062A",common:"\u06A9\u0648\u06CC\u062A"},zho:{official:"\u79D1\u5A01\u7279\u56FD",common:"\u79D1\u5A01\u7279"}},latlng:[29.5,45.75],landlocked:!1,borders:["IRQ","SAU"],area:17818,demonyms:{eng:{f:"Kuwaiti",m:"Kuwaiti"},fra:{f:"Kowe\xEFtienne",m:"Kowe\xEFtien"}},flag:"\u{1F1F0}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/aqr3aNQjS1BAvksJ7",openStreetMaps:"https://www.openstreetmap.org/relation/305099"},population:4270563,fifa:"KUW",car:{signs:["KWT"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kw.png",svg:"https://flagcdn.com/kw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kw.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[29.37,47.97]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"\xC5land Islands",official:"\xC5land Islands",nativeName:{swe:{official:"Landskapet \xC5land",common:"\xC5land"}}},tld:[".ax"],cca2:"AX",ccn3:"248",cca3:"ALA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["5818"]},capital:["Mariehamn"],altSpellings:["AX","Aaland","Aland","Ahvenanmaa"],region:"Europe",subregion:"Northern Europe",languages:{swe:"Swedish"},translations:{ara:{official:"\u062C\u0632\u0631 \u0623\u0648\u0644\u0627\u0646\u062F",common:"\u062C\u0632\u0631 \u0623\u0648\u0644\u0627\u0646\u062F"},ces:{official:"\xC5landsk\xE9 ostrovy",common:"\xC5landy"},cym:{official:"\xC5land Islands",common:"\xC5land Islands"},deu:{official:"\xC5land-Inseln",common:"\xC5land"},est:{official:"Ahvenamaa maakond",common:"Ahvenamaa"},fin:{official:"Ahvenanmaan maakunta",common:"Ahvenanmaa"},fra:{official:"Ahvenanmaa",common:"Ahvenanmaa"},hrv:{official:"Aland Islands",common:"\xC5landski otoci"},hun:{official:"\xC5land-szigetek",common:"\xC5land-szigetek"},ita:{official:"Isole \xC5land",common:"Isole Aland"},jpn:{official:"\u30AA\u30FC\u30E9\u30F3\u30C9\u8AF8\u5CF6",common:"\u30AA\u30FC\u30E9\u30F3\u30C9\u8AF8\u5CF6"},kor:{official:"\uC62C\uB780\uB4DC \uC81C\uB3C4",common:"\uC62C\uB780\uB4DC \uC81C\uB3C4"},nld:{official:"\xC5land eilanden",common:"\xC5landeilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0646\u062F",common:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0646\u062F"},pol:{official:"Wyspy Alandzkie",common:"Wyspy Alandzkie"},por:{official:"Ilhas \xC5land",common:"Al\xE2ndia"},rus:{official:"\u0410\u043B\u0430\u043D\u0434\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0410\u043B\u0430\u043D\u0434\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Alandsk\xE9 ostrovy",common:"Alandy"},spa:{official:"Islas \xC5land",common:"Alandia"},swe:{official:"\xC5land",common:"\xC5land"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u0627\u0648\u0644\u0646\u062F",common:"\u062C\u0632\u0627\u0626\u0631 \u0627\u0648\u0644\u0646\u062F"},zho:{official:"\u5965\u5170\u7FA4\u5C9B",common:"\u5965\u5170\u7FA4\u5C9B"}},latlng:[60.116667,19.9],landlocked:!1,area:1580,demonyms:{eng:{f:"\xC5landish",m:"\xC5landish"},fra:{f:"\xC5landaise",m:"\xC5landais"}},flag:"\u{1F1E6}\u{1F1FD}",maps:{googleMaps:"https://goo.gl/maps/ewFb3vYsfUmVCoSb8",openStreetMaps:"https://www.openstreetmap.org/relation/1650407"},population:29458,car:{signs:[""],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ax.png",svg:"https://flagcdn.com/ax.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ax.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ax.svg"},startOfWeek:"monday",capitalInfo:{latlng:[60.12,19.9]}},{name:{common:"United States Virgin Islands",official:"Virgin Islands of the United States",nativeName:{eng:{official:"Virgin Islands of the United States",common:"United States Virgin Islands"}}},tld:[".vi"],cca2:"VI",ccn3:"850",cca3:"VIR",cioc:"ISV",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["340"]},capital:["Charlotte Amalie"],altSpellings:["VI","Virgin Islands, U.S."],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0627\u0644\u0639\u0630\u0631\u0627\u0621 \u0627\u0644\u0627\u0645\u0631\u064A\u0643\u064A\u0629",common:"\u062C\u0632\u0631 \u0627\u0644\u0639\u0630\u0631\u0627\u0621 \u0627\u0644\u0627\u0645\u0631\u064A\u0643\u064A\u0629"},ces:{official:"Americk\xE9 Panensk\xE9 ostrovy",common:"Americk\xE9 Panensk\xE9 ostrovy"},cym:{official:"Virgin Islands of the United States",common:"United States Virgin Islands"},deu:{official:"Amerikanische Jungferninseln",common:"Amerikanische Jungferninseln"},est:{official:"\xDChendriikide Neitsisaared",common:"Neitsisaared, USA"},fin:{official:"Yhdysvaltain Neitsytsaaret",common:"Neitsytsaaret"},fra:{official:"\xCEles Vierges des \xC9tats-Unis",common:"\xCEles Vierges des \xC9tats-Unis"},hrv:{official:"Djevi\u010Danski Otoci SAD",common:"Ameri\u010Dki Djevi\u010Danski Otoci"},hun:{official:"Amerikai Virgin-szigetek",common:"Amerikai Virgin-szigetek"},ita:{official:"Isole Vergini degli Stati Uniti",common:"Isole Vergini americane"},jpn:{official:"\u7C73\u56FD\u306E\u30D0\u30FC\u30B8\u30F3\u8AF8\u5CF6",common:"\u30A2\u30E1\u30EA\u30AB\u9818\u30F4\u30A1\u30FC\u30B8\u30F3\u8AF8\u5CF6"},kor:{official:"\uBBF8\uAD6D\uB839 \uBC84\uC9C4\uC544\uC77C\uB79C\uB4DC",common:"\uBBF8\uAD6D\uB839 \uBC84\uC9C4\uC544\uC77C\uB79C\uB4DC"},nld:{official:"Maagdeneilanden van de Verenigde Staten",common:"Amerikaanse Maagdeneilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u06CC\u0631\u062C\u06CC\u0646 \u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627",common:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u06CC\u0631\u062C\u06CC\u0646 \u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627"},pol:{official:"Wyspy Dziewicze Stan\xF3w Zjednoczonych",common:"Wyspy Dziewicze Stan\xF3w Zjednoczonych"},por:{official:"Ilhas Virgens dos Estados Unidos",common:"Ilhas Virgens dos Estados Unidos"},rus:{official:"\u0412\u0438\u0440\u0433\u0438\u043D\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u0421\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u043D\u044B\u0445 \u0428\u0442\u0430\u0442\u043E\u0432",common:"\u0412\u0438\u0440\u0433\u0438\u043D\u0441\u043A\u0438\u0435 \u041E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Americk\xE9 Panensk\xE9 ostrovy",common:"Americk\xE9 Panensk\xE9 ostrovy"},spa:{official:"Islas V\xEDrgenes de los Estados Unidos",common:"Islas V\xEDrgenes de los Estados Unidos"},swe:{official:"Amerikanska Jungfru\xF6arna",common:"Amerikanska Jungfru\xF6arna"},urd:{official:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u062C\u0632\u0627\u0626\u0631 \u0648\u0631\u062C\u0646",common:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u062C\u0632\u0627\u0626\u0631 \u0648\u0631\u062C\u0646"},zho:{official:"\u7F8E\u5C5E\u7EF4\u5C14\u4EAC\u7FA4\u5C9B",common:"\u7F8E\u5C5E\u7EF4\u5C14\u4EAC\u7FA4\u5C9B"}},latlng:[18.35,-64.933333],landlocked:!1,area:347,demonyms:{eng:{f:"Virgin Islander",m:"Virgin Islander"}},flag:"\u{1F1FB}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/mBfreywj8dor6q4m9",openStreetMaps:"openstreetmap.org/relation/286898"},population:106290,fifa:"VIR",car:{signs:["USA"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/vi.png",svg:"https://flagcdn.com/vi.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.35,-64.93]}},{name:{common:"Bouvet Island",official:"Bouvet Island",nativeName:{nor:{official:"Bouvet\xF8ya",common:"Bouvet\xF8ya"}}},tld:[".bv"],cca2:"BV",ccn3:"074",cca3:"BVT",independent:!1,status:"officially-assigned",unMember:!1,idd:{root:"+4",suffixes:["7"]},altSpellings:["BV","Bouvet\xF8ya","Bouvet-\xF8ya"],region:"Antarctic",languages:{nor:"Norwegian"},translations:{ara:{official:"\u062C\u0632\u0631 \u0628\u0648\u0641\u064A\u0647",common:"\u062C\u0632\u0631 \u0628\u0648\u0641\u064A\u0647"},ces:{official:"Bouvet\u016Fv ostrov",common:"Bouvet\u016Fv ostrov"},cym:{official:"Bouvet Island",common:"Bouvet Island"},deu:{official:"Bouvetinsel",common:"Bouvetinsel"},est:{official:"Bouvet\u2019 saar",common:"Bouvet\u2019 saar"},fin:{official:"Bouvet'nsaari",common:"Bouvet'nsaari"},fra:{official:"\xCEle Bouvet",common:"\xCEle Bouvet"},hrv:{official:"Bouvet Island",common:"Otok Bouvet"},hun:{official:"Bouvet-sziget",common:"Bouvet-sziget"},ita:{official:"Isola Bouvet",common:"Isola Bouvet"},jpn:{official:"\u30D6\u30FC\u30F4\u30A7\u5CF6",common:"\u30D6\u30FC\u30D9\u5CF6"},kor:{official:"\uBD80\uBCA0 \uC12C",common:"\uBD80\uBCA0 \uC12C"},nld:{official:"Bouvet Island",common:"Bouveteiland"},per:{official:"\u062C\u0632\u06CC\u0631\u0647\u0654 \u0628\u0648\u0648\u0647",common:"\u062C\u0632\u06CC\u0631\u0647\u0654 \u0628\u0648\u0648\u0647"},pol:{official:"Wyspa Bouveta",common:"Wyspa Bouveta"},por:{official:"Ilha Bouvet",common:"Ilha Bouvet"},rus:{official:"\u041E\u0441\u0442\u0440\u043E\u0432 \u0411\u0443\u0432\u0435",common:"\u041E\u0441\u0442\u0440\u043E\u0432 \u0411\u0443\u0432\u0435"},slk:{official:"Bouvetov ostrov",common:"Bouvetov ostrov"},spa:{official:"Isla Bouvet",common:"Isla Bouvet"},swe:{official:"Bouvet\xF6n",common:"Bouvet\xF6n"},urd:{official:"\u062C\u0632\u06CC\u0631\u06C1 \u0628\u0648\u0648\u06C1",common:"\u062C\u0632\u06CC\u0631\u06C1 \u0628\u0648\u0648\u06C1"},zho:{official:"\u5E03\u7EF4\u5C9B",common:"\u5E03\u7EF4\u5C9B"}},latlng:[-54.43333333,3.4],landlocked:!1,area:49,flag:"\u{1F1E7}\u{1F1FB}",maps:{googleMaps:"https://goo.gl/maps/7WRQAEKZb4uK36yi9",openStreetMaps:"https://www.openstreetmap.org/way/174996681"},population:0,car:{signs:[""],side:"right"},timezones:["UTC+01:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/bv.png",svg:"https://flagcdn.com/bv.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{}},{name:{common:"United Kingdom",official:"United Kingdom of Great Britain and Northern Ireland",nativeName:{eng:{official:"United Kingdom of Great Britain and Northern Ireland",common:"United Kingdom"}}},tld:[".uk"],cca2:"GB",ccn3:"826",cca3:"GBR",cioc:"GBR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GBP:{name:"British pound",symbol:"\xA3"}},idd:{root:"+4",suffixes:["4"]},capital:["London"],altSpellings:["GB","UK","Great Britain"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English"},translations:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629 \u0644\u0628\u0631\u064A\u0637\u0627\u0646\u064A\u0627 \u0627\u0644\u0639\u0638\u0645\u0649 \u0648\u0627\u064A\u0631\u0644\u0646\u062F\u0627 \u0627\u0644\u0634\u0645\u0627\u0644\u064A\u0629",common:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},ces:{official:"Spojen\xE9 kr\xE1lovstv\xED Velk\xE9 Brit\xE1nie a Severn\xEDho Irska",common:"Spojen\xE9 kr\xE1lovstv\xED"},cym:{official:"United Kingdom of Great Britain and Northern Ireland",common:"United Kingdom"},deu:{official:"Vereinigtes K\xF6nigreich Gro\xDFbritannien und Nordirland",common:"Vereinigtes K\xF6nigreich"},est:{official:"Suurbritannia ja P\xF5hja-Iiri \xDChendkuningriik",common:"Suurbritannia"},fin:{official:"Ison-Britannian ja Pohjois-Irlannin yhdistynyt kuningaskunta",common:"Yhdistynyt kuningaskunta"},fra:{official:"Royaume-Uni de Grande-Bretagne et d'Irlande du Nord",common:"Royaume-Uni"},hrv:{official:"Ujedinjeno Kraljevstvo Velike Britanije i Sjeverne Irske",common:"Ujedinjeno Kraljevstvo"},hun:{official:"Nagy-Britannia \xE9s \xC9szak-\xCDrorsz\xE1g Egyes\xFClt Kir\xE1lys\xE1ga",common:"Egyes\xFClt Kir\xE1lys\xE1g"},ita:{official:"Regno Unito di Gran Bretagna e Irlanda del Nord",common:"Regno Unito"},jpn:{official:"\u30B0\u30EC\u30FC\u30C8\xB7\u30D6\u30EA\u30C6\u30F3\u304A\u3088\u3073\u5317\u30A2\u30A4\u30EB\u30E9\u30F3\u30C9\u9023\u5408\u738B\u56FD",common:"\u30A4\u30AE\u30EA\u30B9"},kor:{official:"\uADF8\uB808\uC774\uD2B8\uBE0C\uB9AC\uD2BC \uBD81\uC544\uC77C\uB79C\uB4DC \uC5F0\uD569 \uC655\uAD6D",common:"\uC601\uAD6D"},nld:{official:"Verenigd Koninkrijk van Groot-Brittanni\xEB en Noord-Ierland",common:"Verenigd Koninkrijk"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0645\u062A\u062D\u062F \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627\u06CC \u06A9\u0628\u06CC\u0631 \u0648 \u0627\u06CC\u0631\u0644\u0646\u062F \u0634\u0645\u0627\u0644\u06CC",common:"\u0627\u0646\u06AF\u0644\u06CC\u0633"},pol:{official:"Zjednoczone Kr\xF3lestwo Wielkiej Brytanii i Irlandii P\xF3\u0142nocnej",common:"Zjednoczone Kr\u0142lestwo"},por:{official:"Reino Unido da Gr\xE3-Bretanha e Irlanda do Norte",common:"Reino Unido"},rus:{official:"\u0421\u043E\u0435\u0434\u0438\u043D\u0435\u043D\u043D\u043E\u0435 \u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0412\u0435\u043B\u0438\u043A\u043E\u0431\u0440\u0438\u0442\u0430\u043D\u0438\u0438 \u0438 \u0421\u0435\u0432\u0435\u0440\u043D\u043E\u0439 \u0418\u0440\u043B\u0430\u043D\u0434\u0438\u0438",common:"\u0412\u0435\u043B\u0438\u043A\u043E\u0431\u0440\u0438\u0442\u0430\u043D\u0438\u044F"},slk:{official:"Spojen\xE9 kr\xE1\u013Eovstvo Ve\u013Ekej Brit\xE1nie a Severn\xE9ho\xCCrska",common:"Ve\u013Ek\xE1 Brit\xE1nia (Spojen\xE9 kr\xE1\u013Eovstvo)"},spa:{official:"Reino Unido de Gran Breta\xF1a e Irlanda del Norte",common:"Reino Unido"},swe:{official:"F\xF6renade konungariket Storbritannien och Nordirland",common:"Storbritannien"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0645\u062A\u062D\u062F\u06C1 \u0628\u0631\u0637\u0627\u0646\u06CC\u06C1 \u0639\u0638\u0645\u06CC \u0648 \u0634\u0645\u0627\u0644\u06CC \u0622\u0626\u0631\u0644\u06CC\u0646\u0688",common:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0645\u062A\u062D\u062F\u06C1"},zho:{official:"\u5927\u4E0D\u5217\u98A0\u53CA\u5317\u7231\u5C14\u5170\u8054\u5408\u738B\u56FD",common:"\u82F1\u56FD"}},latlng:[54,-2],landlocked:!1,borders:["IRL"],area:242900,demonyms:{eng:{f:"British",m:"British"},fra:{f:"Britannique",m:"Britannique"}},flag:"\u{1F1EC}\u{1F1E7}",maps:{googleMaps:"https://goo.gl/maps/FoDtc3UKMkFsXAjHA",openStreetMaps:"https://www.openstreetmap.org/relation/62149"},population:67215293,gini:{"2017":35.1},car:{signs:["GB"],side:"left"},timezones:["UTC-08:00","UTC-05:00","UTC-04:00","UTC-03:00","UTC-02:00","UTC","UTC+01:00","UTC+02:00","UTC+06:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gb.png",svg:"https://flagcdn.com/gb.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[51.5,-.08]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Honduras",official:"Republic of Honduras",nativeName:{spa:{official:"Rep\xFAblica de Honduras",common:"Honduras"}}},tld:[".hn"],cca2:"HN",ccn3:"340",cca3:"HND",cioc:"HON",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HNL:{name:"Honduran lempira",symbol:"L"}},idd:{root:"+5",suffixes:["04"]},capital:["Tegucigalpa"],altSpellings:["HN","Republic of Honduras","Rep\xFAblica de Honduras"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0647\u0646\u062F\u0648\u0631\u0627\u0633",common:"\u0647\u0646\u062F\u0648\u0631\u0627\u0633"},ces:{official:"Hondurask\xE1 republika",common:"Honduras"},cym:{official:"Republic of Honduras",common:"Honduras"},deu:{official:"Republik Honduras",common:"Honduras"},est:{official:"Hondurase Vabariik",common:"Honduras"},fin:{official:"Hondurasin tasavalta",common:"Honduras"},fra:{official:"R\xE9publique du Honduras",common:"Honduras"},hrv:{official:"Republika Honduras",common:"Honduras"},hun:{official:"Hondurasi K\xF6zt\xE1rsas\xE1g",common:"Honduras"},ita:{official:"Repubblica di Honduras",common:"Honduras"},jpn:{official:"\u30DB\u30F3\u30B8\u30E5\u30E9\u30B9\u5171\u548C\u56FD",common:"\u30DB\u30F3\u30B8\u30E5\u30E9\u30B9"},kor:{official:"\uC628\uB450\uB77C\uC2A4 \uACF5\uD654\uAD6D",common:"\uC628\uB450\uB77C\uC2A4"},nld:{official:"Republiek Honduras",common:"Honduras"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0647\u0646\u062F\u0648\u0631\u0627\u0633",common:"\u0647\u064F\u0646\u062F\u0648\u0631\u0627\u0633"},pol:{official:"Republika Hondurasu",common:"Honduras"},por:{official:"Rep\xFAblica de Honduras",common:"Honduras"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u043E\u043D\u0434\u0443\u0440\u0430\u0441",common:"\u0413\u043E\u043D\u0434\u0443\u0440\u0430\u0441"},slk:{official:"Hondurask\xE1 republika",common:"Honduras"},spa:{official:"Rep\xFAblica de Honduras",common:"Honduras"},swe:{official:"Republiken Honduras",common:"Honduras"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06C1\u0648\u0646\u0688\u0648\u0631\u0627\u0633",common:"\u06C1\u0648\u0646\u0688\u0648\u0631\u0627\u0633"},zho:{official:"\u6D2A\u90FD\u62C9\u65AF\u5171\u548C\u56FD",common:"\u6D2A\u90FD\u62C9\u65AF"}},latlng:[15,-86.5],landlocked:!1,borders:["GTM","SLV","NIC"],area:112492,demonyms:{eng:{f:"Honduran",m:"Honduran"},fra:{f:"Hondurienne",m:"Hondurien"}},flag:"\u{1F1ED}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/BbeJK8Sk2VkMHbdF8",openStreetMaps:"https://www.openstreetmap.org/relation/287670"},population:9904608,gini:{"2019":48.2},fifa:"HON",car:{signs:["HN"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/hn.png",svg:"https://flagcdn.com/hn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.1,-87.22]},postalCode:{format:"@@####",regex:"^([A-Z]{2}\\d{4})$"}},{name:{common:"South Georgia",official:"South Georgia and the South Sandwich Islands",nativeName:{eng:{official:"South Georgia and the South Sandwich Islands",common:"South Georgia"}}},tld:[".gs"],cca2:"GS",ccn3:"239",cca3:"SGS",independent:!1,status:"officially-assigned",unMember:!1,currencies:{SHP:{name:"Saint Helena pound",symbol:"\xA3"}},idd:{root:"+5",suffixes:["00"]},capital:["King Edward Point"],altSpellings:["GS","South Georgia and the South Sandwich Islands"],region:"Antarctic",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0648\u0631\u062C\u064A\u0627 \u0627\u0644\u062C\u0646\u0648\u0628\u064A\u0629 \u0648\u062C\u0632\u0631 \u0633\u0627\u0646\u062F\u0648\u062A\u0634 \u0627\u0644\u062C\u0646\u0648\u0628\u064A\u0629",common:"\u062C\u0648\u0631\u062C\u064A\u0627 \u0627\u0644\u062C\u0646\u0648\u0628\u064A\u0629"},ces:{official:"Ji\u017En\xED Georgie a Ji\u017En\xED Sandwichovy ostrovy",common:"Ji\u017En\xED Georgie a Ji\u017En\xED Sandwichovy ostrovy"},cym:{official:"South Georgia and the South Sandwich Islands",common:"South Georgia"},deu:{official:"S\xFCdgeorgien und die S\xFCdlichen Sandwichinseln",common:"S\xFCdgeorgien und die S\xFCdlichen Sandwichinseln"},est:{official:"L\xF5una-Georgia ja L\xF5una-Sandwichi saared",common:"L\xF5una-Georgia ja L\xF5una-Sandwichi saared"},fin:{official:"Etel\xE4-Georgia ja Etel\xE4iset Sandwichsaaret",common:"Etel\xE4-Georgia ja Etel\xE4iset Sandwichsaaret"},fra:{official:"G\xE9orgie du Sud et les \xEEles Sandwich du Sud",common:"G\xE9orgie du Sud-et-les \xCEles Sandwich du Sud"},hrv:{official:"Ju\u017Ena D\u017Eord\u017Eija i Otoci Ju\u017Eni Sendvi\u010D",common:"Ju\u017Ena Georgija i oto\u010Dje Ju\u017Eni Sandwich"},hun:{official:"D\xE9li-Georgia \xE9s D\xE9li-Sandwich-szigetek",common:"D\xE9li-Georgia \xE9s D\xE9li-Sandwich-szigetek"},ita:{official:"Georgia del Sud e isole Sandwich del Sud",common:"Georgia del Sud e Isole Sandwich Meridionali"},jpn:{official:"\u30B5\u30A6\u30B9\u30B8\u30E7\u30FC\u30B8\u30A2\xB7\u30B5\u30A6\u30B9\u30B5\u30F3\u30C9\u30A6\u30A3\u30C3\u30C1\u8AF8\u5CF6",common:"\u30B5\u30A6\u30B9\u30B8\u30E7\u30FC\u30B8\u30A2\u30FB\u30B5\u30A6\u30B9\u30B5\u30F3\u30C9\u30A6\u30A3\u30C3\u30C1\u8AF8\u5CF6"},kor:{official:"\uC870\uC9C0\uC544",common:"\uC870\uC9C0\uC544"},nld:{official:"Zuid-Georgi\xEB en de Zuidelijke Sandwich-eilanden",common:"Zuid-Georgia en Zuidelijke Sandwicheilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u062C\u0648\u0631\u062C\u06CC\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC \u0648 \u0633\u0627\u0646\u062F\u0648\u06CC\u0686 \u062C\u0646\u0648\u0628\u06CC",common:"\u062C\u0632\u0627\u06CC\u0631 \u062C\u0648\u0631\u062C\u06CC\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC \u0648 \u0633\u0627\u0646\u062F\u0648\u06CC\u0686 \u062C\u0646\u0648\u0628\u06CC"},pol:{official:"Georgia Po\u0142udniowa i Sandwich Po\u0142udniowy",common:"Georgia Po\u0142udniowa i Sandwich Po\u0142udniowy"},por:{official:"Ge\xF3rgia do Sul e Sandwich do Sul",common:"Ilhas Ge\xF3rgia do Sul e Sandwich do Sul"},rus:{official:"\u042E\u0436\u043D\u0430\u044F \u0413\u0435\u043E\u0440\u0433\u0438\u044F \u0438 \u042E\u0436\u043D\u044B\u0435 \u0421\u0430\u043D\u0434\u0432\u0438\u0447\u0435\u0432\u044B \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u042E\u0436\u043D\u0430\u044F \u0413\u0435\u043E\u0440\u0433\u0438\u044F \u0438 \u042E\u0436\u043D\u044B\u0435 \u0421\u0430\u043D\u0434\u0432\u0438\u0447\u0435\u0432\u044B \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Ju\u017En\xE1 Georgia a Ju\u017En\xE9 Sandwichove ostrovy",common:"Ju\u017En\xE1 Georgia a Ju\u017En\xE9 Sandwichove ostrovy"},spa:{official:"Georgia del Sur y las Islas Sandwich del Sur",common:"Islas Georgias del Sur y Sandwich del Sur"},swe:{official:"Sydgeorgien",common:"Sydgeorgien"},urd:{official:"\u062C\u0646\u0648\u0628\u06CC \u062C\u0627\u0631\u062C\u06CC\u0627 \u0648 \u062C\u0632\u0627\u0626\u0631 \u062C\u0646\u0648\u0628\u06CC \u0633\u06CC\u0646\u0688\u0648\u0686",common:"\u062C\u0646\u0648\u0628\u06CC \u062C\u0627\u0631\u062C\u06CC\u0627"},zho:{official:"\u5357\u4E54\u6CBB\u4E9A\u5C9B\u548C\u5357\u6851\u5A01\u5947\u7FA4\u5C9B",common:"\u5357\u4E54\u6CBB\u4E9A"}},latlng:[-54.5,-37],landlocked:!1,area:3903,demonyms:{eng:{f:"South Georgian South Sandwich Islander",m:"South Georgian South Sandwich Islander"}},flag:"\u{1F1EC}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/mJzdaBwKBbm2B81q9",openStreetMaps:"https://www.openstreetmap.org/relation/1983629"},population:30,car:{signs:[""],side:"right"},timezones:["UTC-02:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/gs.png",svg:"https://flagcdn.com/gs.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-54.28,-36.5]}},{name:{common:"Cambodia",official:"Kingdom of Cambodia",nativeName:{khm:{official:"\u1796\u17D2\u179A\u17C7\u179A\u17B6\u1787\u17B6\u178E\u17B6\u1785\u1780\u17D2\u179A\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6",common:"K\xE2mp\u016Dch\xE9a"}}},tld:[".kh"],cca2:"KH",ccn3:"116",cca3:"KHM",cioc:"CAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KHR:{name:"Cambodian riel",symbol:"\u17DB"},USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+8",suffixes:["55"]},capital:["Phnom Penh"],altSpellings:["KH","Kingdom of Cambodia"],region:"Asia",subregion:"South-Eastern Asia",languages:{khm:"Khmer"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0643\u0645\u0628\u0648\u062F\u064A\u0627",common:"\u0643\u0645\u0628\u0648\u062F\u064A\u0627"},ces:{official:"Kambod\u017Esk\xE9 kr\xE1lovstv\xED",common:"Kambod\u017Ea"},cym:{official:"Teyrnas Cambodia",common:"Cambodia"},deu:{official:"K\xF6nigreich Kambodscha",common:"Kambodscha"},est:{official:"Kambod\u017Ea Kuningriik",common:"Kambod\u017Ea"},fin:{official:"Kambod\u017Ean kuningaskunta",common:"Kambod\u017Ea"},fra:{official:"Royaume du Cambodge",common:"Cambodge"},hrv:{official:"Kraljevina Kambod\u017Ea",common:"Kambod\u017Ea"},hun:{official:"Kambodzsai Kir\xE1lys\xE1g",common:"Kambodzsa"},ita:{official:"Regno di Cambogia",common:"Cambogia"},jpn:{official:"\u30AB\u30F3\u30DC\u30B8\u30A2\u738B\u56FD",common:"\u30AB\u30F3\u30DC\u30B8\u30A2"},kor:{official:"\uCE84\uBCF4\uB514\uC544 \uC655\uAD6D",common:"\uCE84\uBCF4\uB514\uC544"},nld:{official:"Koninkrijk Cambodja",common:"Cambodja"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u06A9\u0627\u0645\u0628\u0648\u062C",common:"\u06A9\u0627\u0645\u0628\u0648\u062C"},pol:{official:"Kr\xF3lestwo Kambod\u017Cy",common:"Kambod\u017Ca"},por:{official:"Reino do Camboja",common:"Camboja"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u041A\u0430\u043C\u0431\u043E\u0434\u0436\u0430",common:"\u041A\u0430\u043C\u0431\u043E\u0434\u0436\u0430"},slk:{official:"Kambo\u01C6sk\xE9 kr\xE1\u013Eovstvo",common:"Kambo\u01C6a"},spa:{official:"Reino de Camboya",common:"Camboya"},swe:{official:"Konungariket Kambodja",common:"Kambodja"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u06A9\u0645\u0628\u0648\u0688\u06CC\u0627",common:"\u06A9\u0645\u0628\u0648\u0688\u06CC\u0627"},zho:{official:"\u67EC\u57D4\u5BE8\u738B\u56FD",common:"\u67EC\u57D4\u5BE8"}},latlng:[13,105],landlocked:!1,borders:["LAO","THA","VNM"],area:181035,demonyms:{eng:{f:"Cambodian",m:"Cambodian"},fra:{f:"Cambodgienne",m:"Cambodgien"}},flag:"\u{1F1F0}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/nztQtFSrUXZymJaW8",openStreetMaps:"https://www.openstreetmap.org/relation/49898"},population:16718971,fifa:"CAM",car:{signs:["K"],side:"right"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kh.png",svg:"https://flagcdn.com/kh.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[11.55,104.92]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"North Macedonia",official:"Republic of North Macedonia",nativeName:{mkd:{official:"\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430",common:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"}}},tld:[".mk"],cca2:"MK",ccn3:"807",cca3:"MKD",cioc:"MKD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MKD:{name:"denar",symbol:"den"}},idd:{root:"+3",suffixes:["89"]},capital:["Skopje"],altSpellings:["MK","The former Yugoslav Republic of Macedonia","Republic of North Macedonia","Macedonia, The Former Yugoslav Republic of","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"],region:"Europe",subregion:"Southeast Europe",languages:{mkd:"Macedonian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0634\u0645\u0627\u0644 \u0645\u0642\u062F\u0648\u0646\u064A\u0627",common:"\u0634\u0645\u0627\u0644 \u0645\u0642\u062F\u0648\u0646\u064A\u0627"},ces:{official:"Republika Severn\xED Makedonie",common:"Severn\xED Makedonie"},cym:{official:"Republic of North Macedonia",common:"North Macedonia"},deu:{official:"Republik Nordmazedonien",common:"Nordmazedonien"},est:{official:"P\xF5hja-Makedoonia Vabariik",common:"P\xF5hja-Makedoonia"},fin:{official:"Pohjois-Makedonian tasavalta",common:"Pohjois-Makedonia"},fra:{official:"R\xE9publique de Mac\xE9doine du Nord",common:"Mac\xE9doine du Nord"},hrv:{official:"Republika Sjeverna Makedonija",common:"Sjeverna Makedonija"},hun:{official:"\xC9szak-maced\xF3n K\xF6zt\xE1rsas\xE1g",common:"\xC9szak-Maced\xF3nia"},ita:{official:"Repubblica di Macedonia del Nord",common:"Macedonia del Nord"},jpn:{official:"\u5317\u30DE\u30B1\u30C9\u30CB\u30A2\u5171\u548C\u56FD",common:"\u5317\u30DE\u30B1\u30C9\u30CB\u30A2 "},kor:{official:"\uBD81\uB9C8\uCF00\uB3C4\uB2C8\uC544 \uACF5\uD654\uAD6D",common:"\uBD81\uB9C8\uCF00\uB3C4\uB2C8\uC544"},nld:{official:"Republiek Noord-Macedoni\xEB",common:"Noord-Macedoni\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0642\u062F\u0648\u0646\u06CC\u0647 \u0634\u0645\u0627\u0644\u06CC",common:"\u0645\u0642\u062F\u0648\u0646\u06CC\u0647 \u0634\u0645\u0627\u0644\u06CC"},pol:{official:"Republika Macedonii P\xF3\u0142nocnej",common:"Macedonia P\xF3\u0142nocna"},por:{official:"Rep\xFAblica da Maced\xF4nia do Norte",common:"Maced\xF3nia do Norte"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u044F",common:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u044F"},slk:{official:"Severomaced\xF3nska republika",common:"Severn\xE9 Maced\xF3nsko"},spa:{official:"Rep\xFAblica de Macedonia del Norte",common:"Macedonia del Norte"},swe:{official:"Republiken Nordmakedonien",common:"Nordmakedonien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0642\u062F\u0648\u0646\u06CC\u06C1",common:"\u0634\u0645\u0627\u0644\u06CC \u0645\u0642\u062F\u0648\u0646\u06CC\u06C1"},zho:{official:"\u5317\u99AC\u5176\u9813\u5171\u548C\u570B",common:"\u5317\u99AC\u5176\u9813"}},latlng:[41.83333333,22],landlocked:!0,borders:["ALB","BGR","GRC","UNK","SRB"],area:25713,demonyms:{eng:{f:"Macedonian",m:"Macedonian"},fra:{f:"Mac\xE9donienne",m:"Mac\xE9donien"}},flag:"\u{1F1F2}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/55Q8MEnF6ACdu3q79",openStreetMaps:"https://www.openstreetmap.org/relation/53293"},population:2077132,gini:{"2018":33},fifa:"MKD",car:{signs:["MK"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/mk.png",svg:"https://flagcdn.com/mk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42,21.43]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Iran",official:"Islamic Republic of Iran",nativeName:{fas:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0627\u0645\u06CC \u0627\u06CC\u0631\u0627\u0646",common:"\u0627\u06CC\u0631\u0627\u0646"}}},tld:[".ir","\u0627\u06CC\u0631\u0627\u0646."],cca2:"IR",ccn3:"364",cca3:"IRN",cioc:"IRI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{IRR:{name:"Iranian rial",symbol:"\uFDFC"}},idd:{root:"+9",suffixes:["8"]},capital:["Tehran"],altSpellings:["IR","Islamic Republic of Iran","Iran, Islamic Republic of","Jomhuri-ye Esl\u0101mi-ye Ir\u0101n"],region:"Asia",subregion:"Southern Asia",languages:{fas:"Persian (Farsi)"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0625\u064A\u0631\u0627\u0646 \u0627\u0644\u0625\u0633\u0644\u0627\u0645\u064A\u0629",common:"\u0625\u064A\u0631\u0627\u0646"},ces:{official:"Isl\xE1msk\xE1 republika \xCDr\xE1n",common:"\xCDr\xE1n"},cym:{official:"Islamic Republic of Iran",common:"Iran"},deu:{official:"Islamische Republik Iran",common:"Iran"},est:{official:"Iraani Islamivabariik",common:"Iraan"},fin:{official:"Iranin islamilainen tasavalta",common:"Iran"},fra:{official:"R\xE9publique islamique d'Iran",common:"Iran"},hrv:{official:"Islamska Republika Iran",common:"Iran"},hun:{official:"Ir\xE1ni Iszl\xE1m K\xF6zt\xE1rsas\xE1g",common:"Ir\xE1n"},ita:{official:"Repubblica islamica dell'Iran",common:"Iran"},jpn:{official:"\u30A4\u30E9\u30F3\xB7\u30A4\u30B9\u30E9\u30E0\u5171\u548C\u56FD",common:"\u30A4\u30E9\u30F3\u30FB\u30A4\u30B9\u30E9\u30E0\u5171\u548C\u56FD"},kor:{official:"\uC774\uB780 \uC774\uC2AC\uB78C \uACF5\uD654\uAD6D",common:"\uC774\uB780"},nld:{official:"Islamitische Republiek Iran",common:"Iran"},pol:{official:"Islamska Republika Iranu",common:"Iran"},por:{official:"Rep\xFAblica Isl\xE2mica do Ir\xE3",common:"Ir\xE3o"},rus:{official:"\u0418\u0441\u043B\u0430\u043C\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0418\u0440\u0430\u043D",common:"\u0418\u0440\u0430\u043D"},slk:{official:"Ir\xE1nska islamsk\xE1 republika",common:"Ir\xE1n"},spa:{official:"Rep\xFAblica Isl\xE1mica de Ir\xE1n",common:"Iran"},swe:{official:"Islamiska republiken Iran",common:"Iran"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u06CC\u0631\u0627\u0646",common:"\u0627\u06CC\u0631\u0627\u0646"},zho:{official:"\u4F0A\u6717\u4F0A\u65AF\u5170\u5171\u548C\u56FD",common:"\u4F0A\u6717"}},latlng:[32,53],landlocked:!1,borders:["AFG","ARM","AZE","IRQ","PAK","TUR","TKM"],area:1648195,demonyms:{eng:{f:"Iranian",m:"Iranian"},fra:{f:"Iranienne",m:"Iranien"}},flag:"\u{1F1EE}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/dMgEGuacBPGYQnjY7",openStreetMaps:"https://www.openstreetmap.org/relation/304938"},population:83992953,gini:{"2018":42},fifa:"IRN",car:{signs:["IR"],side:"right"},timezones:["UTC+03:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ir.png",svg:"https://flagcdn.com/ir.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ir.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ir.svg"},startOfWeek:"turday",capitalInfo:{latlng:[35.7,51.42]},postalCode:{format:"##########",regex:"^(\\d{10})$"}},{name:{common:"Panama",official:"Republic of Panama",nativeName:{spa:{official:"Rep\xFAblica de Panam\xE1",common:"Panam\xE1"}}},tld:[".pa"],cca2:"PA",ccn3:"591",cca3:"PAN",cioc:"PAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PAB:{name:"Panamanian balboa",symbol:"B/."},USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["07"]},capital:["Panama City"],altSpellings:["PA","Republic of Panama","Rep\xFAblica de Panam\xE1"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0646\u0645\u0627",common:"\u0628\u0646\u0645\u0627"},ces:{official:"Panamsk\xE1 republika",common:"Panama"},cym:{official:"Republic of Panama",common:"Panama"},deu:{official:"Republik Panama",common:"Panama"},est:{official:"Panama Vabariik",common:"Panama"},fin:{official:"Panaman tasavalta",common:"Panama"},fra:{official:"R\xE9publique du Panama",common:"Panama"},hrv:{official:"Republika Panama",common:"Panama"},hun:{official:"Panamai K\xF6zt\xE1rsas\xE1g",common:"Panama"},ita:{official:"Repubblica di Panama",common:"Panama"},jpn:{official:"\u30D1\u30CA\u30DE\u5171\u548C\u56FD",common:"\u30D1\u30CA\u30DE"},kor:{official:"\uD30C\uB098\uB9C8 \uACF5\uD654\uAD6D",common:"\uD30C\uB098\uB9C8"},nld:{official:"Republiek Panama",common:"Panama"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u067E\u0627\u0646\u0627\u0645\u0627",common:"\u067E\u0627\u0646\u0627\u0645\u0627"},pol:{official:"Republika Panamy",common:"Panama"},por:{official:"Rep\xFAblica do Panam\xE1",common:"Panam\xE1"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041F\u0430\u043D\u0430\u043C\u0430",common:"\u041F\u0430\u043D\u0430\u043C\u0430"},slk:{official:"Panamsk\xE1 republika",common:"Panama"},spa:{official:"Rep\xFAblica de Panam\xE1",common:"Panam\xE1"},swe:{official:"Republiken Panama",common:"Panama"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u0627\u0646\u0627\u0645\u0627",common:"\u067E\u0627\u0646\u0627\u0645\u0627"},zho:{official:"\u5DF4\u62FF\u9A6C\u5171\u548C\u56FD",common:"\u5DF4\u62FF\u9A6C"}},latlng:[9,-80],landlocked:!1,borders:["COL","CRI"],area:75417,demonyms:{eng:{f:"Panamanian",m:"Panamanian"},fra:{f:"Panam\xE9enne",m:"Panam\xE9en"}},flag:"\u{1F1F5}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/sEN7sKqeawa5oPNLA",openStreetMaps:"https://www.openstreetmap.org/relation/287668"},population:4314768,gini:{"2019":49.8},fifa:"PAN",car:{signs:["PA"],side:"right"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/pa.png",svg:"https://flagcdn.com/pa.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pa.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pa.svg"},startOfWeek:"monday",capitalInfo:{latlng:[8.97,-79.53]}},{name:{common:"Cook Islands",official:"Cook Islands",nativeName:{eng:{official:"Cook Islands",common:"Cook Islands"},rar:{official:"K\u016Bki '\u0100irani",common:"K\u016Bki '\u0100irani"}}},tld:[".ck"],cca2:"CK",ccn3:"184",cca3:"COK",cioc:"COK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{CKD:{name:"Cook Islands dollar",symbol:"$"},NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["82"]},capital:["Avarua"],altSpellings:["CK","K\u016Bki '\u0100irani"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",rar:"Cook Islands M\u0101ori"},translations:{ara:{official:"\u062C\u0632\u0631 \u0643\u0648\u0643",common:"\u062C\u0632\u0631 \u0643\u0648\u0643"},ces:{official:"Cookovy ostrovy",common:"Cookovy ostrovy"},cym:{official:"Ynysoedd Cook",common:"Ynysoedd Cook"},deu:{official:"Cookinseln",common:"Cookinseln"},est:{official:"Cooki saared",common:"Cooki saared"},fin:{official:"Cookinsaaret",common:"Cookinsaaret"},fra:{official:"\xCEles Cook",common:"\xCEles Cook"},hrv:{official:"Cook Islands",common:"Cookovo Oto\u010Dje"},hun:{official:"Cook-szigetek",common:"Cook-szigetek"},ita:{official:"Isole Cook",common:"Isole Cook"},jpn:{official:"\u30AF\u30C3\u30AF\u8AF8\u5CF6",common:"\u30AF\u30C3\u30AF\u8AF8\u5CF6"},kor:{official:"\uCFE1 \uC81C\uB3C4",common:"\uCFE1 \uC81C\uB3C4"},nld:{official:"Cook eilanden",common:"Cookeilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u06A9",common:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u06A9"},pol:{official:"Wyspy Cooka",common:"Wyspy Cooka"},por:{official:"Ilhas Cook",common:"Ilhas Cook"},rus:{official:"\u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u041A\u0443\u043A\u0430",common:"\u041E\u0441\u0442\u0440\u043E\u0432\u0430 \u041A\u0443\u043A\u0430"},slk:{official:"Cookove ostrovy",common:"Cookove ostrovy"},spa:{official:"Islas Cook",common:"Islas Cook"},swe:{official:"Cook\xF6arna",common:"Cook\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u06A9",common:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u06A9"},zho:{official:"\u5E93\u514B\u7FA4\u5C9B",common:"\u5E93\u514B\u7FA4\u5C9B"}},latlng:[-21.23333333,-159.76666666],landlocked:!1,area:236,demonyms:{eng:{f:"Cook Islander",m:"Cook Islander"},fra:{f:"Cookienne",m:"Cookien"}},flag:"\u{1F1E8}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/nrGZrvWRGB4WHgDC9",openStreetMaps:"https://www.openstreetmap.org/relation/2184233"},population:18100,fifa:"COK",car:{signs:["NZ"],side:"left"},timezones:["UTC-10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/ck.png",svg:"https://flagcdn.com/ck.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ck.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ck.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-21.2,-159.77]}},{name:{common:"Andorra",official:"Principality of Andorra",nativeName:{cat:{official:"Principat d'Andorra",common:"Andorra"}}},tld:[".ad"],cca2:"AD",ccn3:"020",cca3:"AND",cioc:"AND",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["76"]},capital:["Andorra la Vella"],altSpellings:["AD","Principality of Andorra","Principat d'Andorra"],region:"Europe",subregion:"Southern Europe",languages:{cat:"Catalan"},translations:{ara:{official:"\u0625\u0645\u0627\u0631\u0629 \u0623\u0646\u062F\u0648\u0631\u0627",common:"\u0623\u0646\u062F\u0648\u0631\u0627"},ces:{official:"Andorrsk\xE9 kn\xED\u017Eectv\xED",common:"Andorra"},cym:{official:"Tywysogaeth Andorra",common:"Andorra"},deu:{official:"F\xFCrstentum Andorra",common:"Andorra"},est:{official:"Andorra V\xFCrstiriik",common:"Andorra"},fin:{official:"Andorran ruhtinaskunta",common:"Andorra"},fra:{official:"Principaut\xE9 d'Andorre",common:"Andorre"},hrv:{official:"Kne\u017Eevina Andora",common:"Andora"},hun:{official:"Andorra",common:"Andorra"},ita:{official:"Principato di Andorra",common:"Andorra"},jpn:{official:"\u30A2\u30F3\u30C9\u30E9\u516C\u56FD",common:"\u30A2\u30F3\u30C9\u30E9"},kor:{official:"\uC548\uB3C4\uB77C \uACF5\uAD6D",common:"\uC548\uB3C4\uB77C"},nld:{official:"Prinsdom Andorra",common:"Andorra"},per:{official:"\u0634\u0627\u0647\u0632\u0627\u062F\u0647\u200C\u0646\u0634\u06CC\u0646 \u0622\u0646\u062F\u0648\u0631\u0627",common:"\u0622\u0646\u062F\u0648\u0631\u0627"},pol:{official:"Ksi\u0119stwo Andory",common:"Andora"},por:{official:"Principado de Andorra",common:"Andorra"},rus:{official:"\u041A\u043D\u044F\u0436\u0435\u0441\u0442\u0432\u043E \u0410\u043D\u0434\u043E\u0440\u0440\u0430",common:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430"},slk:{official:"Andorrsk\xE9 knie\u017Eatstvo",common:"Andorra"},spa:{official:"Principado de Andorra",common:"Andorra"},swe:{official:"Furstend\xF6met Andorra",common:"Andorra"},urd:{official:"\u0627\u0645\u0627\u0631\u0627\u062A\u0650 \u0627\u0646\u0688\u0648\u0631\u0627",common:"\u0627\u0646\u0688\u0648\u0631\u0627"},zho:{official:"\u5B89\u9053\u5C14\u516C\u56FD",common:"\u5B89\u9053\u5C14"}},latlng:[42.5,1.5],landlocked:!0,borders:["FRA","ESP"],area:468,demonyms:{eng:{f:"Andorran",m:"Andorran"},fra:{f:"Andorrane",m:"Andorran"}},flag:"\u{1F1E6}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/JqAnacWE2qEznKgw7",openStreetMaps:"https://www.openstreetmap.org/relation/9407"},population:77265,fifa:"AND",car:{signs:["AND"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ad.png",svg:"https://flagcdn.com/ad.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ad.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ad.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.5,1.52]},postalCode:{format:"AD###",regex:"^(?:AD)*(\\d{3})$"}},{name:{common:"Burundi",official:"Republic of Burundi",nativeName:{fra:{official:"R\xE9publique du Burundi",common:"Burundi"},run:{official:"Republika y'Uburundi ",common:"Uburundi"}}},tld:[".bi"],cca2:"BI",ccn3:"108",cca3:"BDI",cioc:"BDI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BIF:{name:"Burundian franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["57"]},capital:["Gitega"],altSpellings:["BI","Republic of Burundi","Republika y'Uburundi","R\xE9publique du Burundi"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French",run:"Kirundi"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0648\u0631\u0648\u0646\u062F\u064A",common:"\u0628\u0648\u0631\u0648\u0646\u062F\u064A"},ces:{official:"Burundsk\xE1 republika",common:"Burundi"},cym:{official:"Gweriniaeth Bwrwndi",common:"Bwrwndi"},deu:{official:"Republik Burundi",common:"Burundi"},est:{official:"Burundi Vabariik",common:"Burundi"},fin:{official:"Burundin tasavalta",common:"Burundi"},fra:{official:"R\xE9publique du Burundi",common:"Burundi"},hrv:{official:"Burundi",common:"Burundi"},hun:{official:"Burundi",common:"Burundi"},ita:{official:"Repubblica del Burundi",common:"Burundi"},jpn:{official:"\u30D6\u30EB\u30F3\u30B8\u5171\u548C\u56FD",common:"\u30D6\u30EB\u30F3\u30B8"},kor:{official:"\uBD80\uB8EC\uB514",common:"\uBD80\uB8EC\uB514"},nld:{official:"Republiek Burundi",common:"Burundi"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0648\u0631\u0648\u0646\u062F\u06CC",common:"\u0628\u0648\u0631\u0648\u0646\u062F\u06CC"},pol:{official:"Republika Burundi",common:"Burundi"},por:{official:"Rep\xFAblica do Burundi",common:"Burundi"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0443\u0440\u0443\u043D\u0434\u0438",common:"\u0411\u0443\u0440\u0443\u043D\u0434\u0438"},slk:{official:"Burundsk\xE1 republika",common:"Burundi"},spa:{official:"Rep\xFAblica de Burundi",common:"Burundi"},swe:{official:"Republiken Burundi",common:"Burundi"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u0631\u0648\u0646\u0688\u06CC",common:"\u0628\u0631\u0648\u0646\u0688\u06CC"},zho:{official:"\u5E03\u9686\u8FEA\u5171\u548C\u56FD",common:"\u5E03\u9686\u8FEA"}},latlng:[-3.5,30],landlocked:!0,borders:["COD","RWA","TZA"],area:27834,demonyms:{eng:{f:"Burundian",m:"Burundian"},fra:{f:"Burundaise",m:"Burundais"}},flag:"\u{1F1E7}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/RXPWoRrB9tfrJpUG7",openStreetMaps:"https://www.openstreetmap.org/relation/195269"},population:11890781,gini:{"2013":38.6},fifa:"BDI",car:{signs:["RU"],side:"right"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bi.png",svg:"https://flagcdn.com/bi.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bi.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bi.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-3.43,29.93]}},{name:{common:"Trinidad and Tobago",official:"Republic of Trinidad and Tobago",nativeName:{eng:{official:"Republic of Trinidad and Tobago",common:"Trinidad and Tobago"}}},tld:[".tt"],cca2:"TT",ccn3:"780",cca3:"TTO",cioc:"TTO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TTD:{name:"Trinidad and Tobago dollar",symbol:"$"}},idd:{root:"+1",suffixes:["868"]},capital:["Port of Spain"],altSpellings:["TT","Republic of Trinidad and Tobago"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u0631\u064A\u0646\u064A\u062F\u0627\u062F \u0648\u062A\u0648\u0628\u0627\u063A\u0648",common:"\u062A\u0631\u064A\u0646\u064A\u062F\u0627\u062F \u0648\u062A\u0648\u0628\u0627\u063A\u0648"},ces:{official:"Republika Trinidad a Tobago",common:"Trinidad a Tobago"},cym:{official:"Republic of Trinidad and Tobago",common:"Trinidad and Tobago"},deu:{official:"Republik Trinidad und Tobago",common:"Trinidad und Tobago"},est:{official:"Trinidadi ja Tobago Vabariik",common:"Trinidad ja Tobago"},fin:{official:"Trinidadin ja Tobagon tasavalta",common:"Trinidad ja Tobago"},fra:{official:"R\xE9publique de Trinit\xE9-et-Tobago",common:"Trinit\xE9-et-Tobago"},hrv:{official:"Republika Trinidad i Tobago",common:"Trinidad i Tobago"},hun:{official:"Trinidad \xE9s Tobago K\xF6zt\xE1rsas\xE1g",common:"Trinidad \xE9s Tobago"},ita:{official:"Repubblica di Trinidad e Tobago",common:"Trinidad e Tobago"},jpn:{official:"\u30C8\u30EA\u30CB\u30C0\u30FC\u30C9\xB7\u30C8\u30D0\u30B4\u5171\u548C\u56FD",common:"\u30C8\u30EA\u30CB\u30C0\u30FC\u30C9\u30FB\u30C8\u30D0\u30B4"},kor:{official:"\uD2B8\uB9AC\uB2C8\uB2E4\uB4DC \uD1A0\uBC14\uACE0 \uACF5\uD654\uAD6D",common:"\uD2B8\uB9AC\uB2C8\uB2E4\uB4DC \uD1A0\uBC14\uACE0"},nld:{official:"Republiek Trinidad en Tobago",common:"Trinidad en Tobago"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062A\u0631\u06CC\u0646\u06CC\u062F\u0627\u062F \u0648 \u062A\u0648\u0628\u0627\u06AF\u0648",common:"\u062A\u0631\u06CC\u0646\u06CC\u062F\u0627\u062F \u0648 \u062A\u0648\u0628\u0627\u06AF\u0648"},pol:{official:"Trynidad i Tobago",common:"Trynidad i Tobago"},por:{official:"Rep\xFAblica de Trinidad e Tobago",common:"Trinidade e Tobago"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0422\u0440\u0438\u043D\u0438\u0434\u0430\u0434 \u0438 \u0422\u043E\u0431\u0430\u0433\u043E",common:"\u0422\u0440\u0438\u043D\u0438\u0434\u0430\u0434 \u0438 \u0422\u043E\u0431\u0430\u0433\u043E"},slk:{official:"Republika Trinidad a Tobaga",common:"Trinidad a Tobago"},spa:{official:"Rep\xFAblica de Trinidad y Tobago",common:"Trinidad y Tobago"},swe:{official:"Republiken Trinidad och Tobago",common:"Trinidad och Tobago"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0679\u0631\u06CC\u0646\u06CC\u0688\u0627\u0688 \u0648 \u0679\u0648\u0628\u0627\u06AF\u0648",common:"\u0679\u0631\u06CC\u0646\u06CC\u0688\u0627\u0688 \u0648 \u0679\u0648\u0628\u0627\u06AF\u0648"},zho:{official:"\u7279\u7ACB\u5C3C\u8FBE\u548C\u591A\u5DF4\u54E5\u5171\u548C\u56FD",common:"\u7279\u7ACB\u5C3C\u8FBE\u548C\u591A\u5DF4\u54E5"}},latlng:[11,-61],landlocked:!1,area:5130,demonyms:{eng:{f:"Trinidadian",m:"Trinidadian"},fra:{f:"Trinidadienne",m:"Trinidadien"}},flag:"\u{1F1F9}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/NrRfDEWoG8FGZqWY7",openStreetMaps:"https://www.openstreetmap.org/relation/555717"},population:1399491,gini:{"1992":40.3},fifa:"TRI",car:{signs:["TT"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/tt.png",svg:"https://flagcdn.com/tt.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[10.65,-61.52]}},{name:{common:"Comoros",official:"Union of the Comoros",nativeName:{ara:{official:"\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0642\u0645\u0631\u064A",common:"\u0627\u0644\u0642\u0645\u0631\u200E"},fra:{official:"Union des Comores",common:"Comores"},zdj:{official:"Udzima wa Komori",common:"Komori"}}},tld:[".km"],cca2:"KM",ccn3:"174",cca3:"COM",cioc:"COM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KMF:{name:"Comorian franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["69"]},capital:["Moroni"],altSpellings:["KM","Union of the Comoros","Union des Comores","Udzima wa Komori","al-Itti\u1E25\u0101d al-Qumur\u012B"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",fra:"French",zdj:"Comorian"},translations:{ara:{official:"\u0627\u0644\u0625\u062A\u062D\u0627\u062F \u0627\u0644\u0642\u0645\u0631\u064A",common:"\u062C\u0632\u0631 \u0627\u0644\u0642\u0645\u0631"},ces:{official:"Komorsk\xFD svaz",common:"Komory"},cym:{official:"Undeb y Comoros",common:"Y Comoros"},deu:{official:"Union der Komoren",common:"Komoren"},est:{official:"Komoori Liit",common:"Komoorid"},fin:{official:"Komorien liitto",common:"Komorit"},fra:{official:"Union des Comores",common:"Comores"},hrv:{official:"Savez Komori",common:"Komori"},hun:{official:"Comore-szigeteki Uni\xF3",common:"Comore-szigetek"},ita:{official:"Unione delle Comore",common:"Comore"},jpn:{official:"\u30B3\u30E2\u30ED\u9023\u5408",common:"\u30B3\u30E2\u30ED"},kor:{official:"\uCF54\uBAA8\uB85C \uC5F0\uBC29",common:"\uCF54\uBAA8\uB85C"},nld:{official:"Unie van de Comoren",common:"Comoren"},per:{official:"\u0645\u062C\u0645\u0639\u200C\u0627\u0644\u062C\u0632\u0627\u06CC\u0631 \u0642\u0645\u0631",common:"\u0627\u062A\u062D\u0627\u062F \u0642\u064F\u0645\u064F\u0631"},pol:{official:"Zwi\u0105zek Komor\xF3w",common:"Komory"},por:{official:"Uni\xE3o das Comores",common:"Comores"},rus:{official:"\u0421\u043E\u044E\u0437 \u041A\u043E\u043C\u043E\u0440\u0441\u043A\u0438\u0445 \u041E\u0441\u0442\u0440\u043E\u0432\u043E\u0432",common:"\u041A\u043E\u043C\u043E\u0440\u044B"},slk:{official:"Komorsk\xE1 \xFAnia",common:"Komory"},spa:{official:"Uni\xF3n de las Comoras",common:"Comoras"},swe:{official:"Unionen Komorerna",common:"Komorerna"},urd:{official:"\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0642\u0645\u0631\u06CC",common:"\u0627\u0644\u0642\u0645\u0631\u06CC"},zho:{official:"\u79D1\u6469\u7F57\u8054\u76DF",common:"\u79D1\u6469\u7F57"}},latlng:[-12.16666666,44.25],landlocked:!1,area:1862,demonyms:{eng:{f:"Comoran",m:"Comoran"},fra:{f:"Comorienne",m:"Comorien"}},flag:"\u{1F1F0}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/eas4GP28C1GyStnu6",openStreetMaps:"https://www.openstreetmap.org/relation/535790"},population:869595,gini:{"2014":45.3},fifa:"COM",car:{signs:["COM"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/km.png",svg:"https://flagcdn.com/km.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/km.png",svg:"https://mainfacts.com/media/images/coats_of_arms/km.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-11.7,43.23]}},{name:{common:"French Southern and Antarctic Lands",official:"Territory of the French Southern and Antarctic Lands",nativeName:{fra:{official:"Territoire des Terres australes et antarctiques fran\xE7aises",common:"Terres australes et antarctiques fran\xE7aises"}}},tld:[".tf"],cca2:"TF",ccn3:"260",cca3:"ATF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+2",suffixes:["62"]},capital:["Port-aux-Fran\xE7ais"],altSpellings:["TF","French Southern Territories"],region:"Antarctic",languages:{fra:"French"},translations:{ara:{official:"\u0645\u0642\u0627\u0637\u0639\u0627\u062A \u0648\u0623\u0642\u0627\u0644\u064A\u0645 \u0645\u0627 \u0648\u0631\u0627\u0621 \u0627\u0644\u0628\u062D\u0627\u0631 \u0627\u0644\u0641\u0631\u0646\u0633\u064A\u0629",common:"\u0623\u0631\u0627\u0636 \u0641\u0631\u0646\u0633\u064A\u0629 \u062C\u0646\u0648\u0628\u064A\u0629 \u0648\u0623\u0646\u062A\u0627\u0631\u062A\u064A\u0643\u064A\u0629"},ces:{official:"Teritorium Francouzsk\xE1 ji\u017En\xED a antarktick\xE1 \xFAzem\xED",common:"Francouzsk\xE1 ji\u017En\xED a antarktick\xE1 \xFAzem\xED"},cym:{official:"Territory of the French Southern and Antarctic Lands",common:"French Southern and Antarctic Lands"},deu:{official:"Gebiet der Franz\xF6sisch S\xFCd- und Antarktisgebiete",common:"Franz\xF6sische S\xFCd- und Antarktisgebiete"},est:{official:"Prantsuse L\xF5unaalad",common:"Prantsuse L\xF5unaalad"},fin:{official:"Ranskan etel\xE4iset ja antarktiset alueet",common:"Ranskan etel\xE4iset ja antarktiset alueet"},fra:{official:"Territoire des Terres australes et antarctiques fran\xE7aises",common:"Terres australes et antarctiques fran\xE7aises"},hrv:{official:"Teritoriju Francuski ju\u017Eni i antarkti\u010Dki teritoriji",common:"Francuski ju\u017Eni i antarkti\u010Dki teritoriji"},hun:{official:"Francia d\xE9li \xE9s antarktiszi ter\xFCletek",common:"Francia d\xE9li \xE9s antarktiszi ter\xFCletek"},ita:{official:"Territorio della australi e antartiche francesi Terre",common:"Territori Francesi del Sud"},jpn:{official:"\u30D5\u30E9\u30F3\u30B9\u9818\u5357\u65B9\xB7\u5357\u6975\u5730\u57DF\u306E\u9818\u571F",common:"\u30D5\u30E9\u30F3\u30B9\u9818\u5357\u65B9\u30FB\u5357\u6975\u5730\u57DF"},kor:{official:"\uD504\uB791\uC2A4\uB839 \uB0A8\uBD80\uC640 \uB0A8\uADF9 \uC9C0\uC5ED",common:"\uD504\uB791\uC2A4\uB839 \uB0A8\uBD80\uC640 \uB0A8\uADF9 \uC9C0\uC5ED"},nld:{official:"Grondgebied van de Franse Zuidelijke en Antarctische gebieden",common:"Franse Gebieden in de zuidelijke Indische Oceaan"},per:{official:"\u0633\u0631\u0632\u0645\u06CC\u0646\u200C\u0647\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC \u0648 \u062C\u0646\u0648\u0628\u06AF\u0627\u0646\u06CC \u0641\u0631\u0627\u0646\u0633\u0647",common:"\u0633\u0631\u0632\u0645\u06CC\u0646\u200C\u0647\u0627\u06CC \u062C\u0646\u0648\u0628\u06CC \u0648 \u062C\u0646\u0648\u0628\u06AF\u0627\u0646\u06CC \u0641\u0631\u0627\u0646\u0633\u0647"},pol:{official:"Francuskie Terytoria Po\u0142udniowe i Antarktyczne",common:"Francuskie Terytoria Po\u0142udniowe i Antarktyczne"},por:{official:"Territ\xF3rio do Sul e Ant\xE1rtica Francesa",common:"Terras Austrais e Ant\xE1rticas Francesas"},rus:{official:"\u0422\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u0424\u0440\u0430\u043D\u0446\u0443\u0437\u0441\u043A\u0438\u0435 \u042E\u0436\u043D\u044B\u0435 \u0438 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0437\u0435\u043C\u043B\u0438",common:"\u0424\u0440\u0430\u043D\u0446\u0443\u0437\u0441\u043A\u0438\u0435 \u042E\u0436\u043D\u044B\u0435 \u0438 \u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0442\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u0438"},slk:{official:"Franc\xFAzske ju\u017En\xE9 a antarktick\xE9 \xFAzemia",common:"Franc\xFAzske ju\u017Dn\xE9 a antarktick\xE9 \xFAzemia"},spa:{official:"Territorio del Franc\xE9s Tierras australes y ant\xE1rticas",common:"Tierras Australes y Ant\xE1rticas Francesas"},swe:{official:"Franska syd- och Antarktisterritorierna",common:"Franska s\xF6dra territorierna"},urd:{official:"\u0633\u0631\u0632\u0645\u06CC\u0646\u0650 \u062C\u0646\u0648\u0628\u06CC \u0641\u0631\u0627\u0646\u0633\u06CC\u0633\u06CC\u06C1 \u0648 \u0627\u0646\u0679\u0627\u0631\u06A9\u0679\u06CC\u06A9\u06C1",common:"\u0633\u0631\u0632\u0645\u06CC\u0646 \u062C\u0646\u0648\u0628\u06CC \u0641\u0631\u0627\u0646\u0633\u06CC\u0633\u06CC\u06C1 \u0648 \u0627\u0646\u0679\u0627\u0631\u06A9\u0679\u06CC\u06A9\u0627"},zho:{official:"\u6CD5\u56FD\u5357\u90E8\u548C\u5357\u6781\u571F\u5730",common:"\u6CD5\u56FD\u5357\u90E8\u548C\u5357\u6781\u571F\u5730"}},latlng:[-49.25,69.167],landlocked:!1,area:7747,demonyms:{eng:{f:"French",m:"French"},fra:{f:"Fran\xE7aise",m:"Fran\xE7ais"}},flag:"\u{1F1F9}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/6ua6CX1m4w1xF2Em7",openStreetMaps:"https://www.openstreetmap.org/relation/2186658"},population:400,car:{signs:[""],side:"right"},timezones:["UTC+05:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/tf.png",svg:"https://flagcdn.com/tf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.81,-1.4]}},{name:{common:"Kosovo",official:"Republic of Kosovo",nativeName:{sqi:{official:"Republika e Kosov\xEBs",common:"Kosova"},srp:{official:"\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0441\u043E\u0432\u043E",common:"\u041A\u043E\u0441\u043E\u0432\u043E"}}},cca2:"XK",cca3:"UNK",cioc:"KOS",status:"user-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["83"]},capital:["Pristina"],altSpellings:["XK","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0441\u043E\u0432\u043E"],region:"Europe",subregion:"Southeast Europe",languages:{sqi:"Albanian",srp:"Serbian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0648\u0633\u0648\u0641\u0648",common:"\u0643\u0648\u0633\u0648\u0641\u0648"},ces:{official:"Kosovsk\xE1 republika",common:"Kosovo"},cym:{official:"Republic of Kosovo",common:"Kosovo"},deu:{official:"Republik Kosovo",common:"Kosovo"},est:{official:"Kosovo Vabariik",common:"Kosovo"},fin:{official:"Kosovon tasavalta",common:"Kosovo"},fra:{official:"R\xE9publique du Kosovo",common:"Kosovo"},hrv:{official:"Republika Kosovo",common:"Kosovo"},hun:{official:"Koszov\xF3",common:"Koszov\xF3"},ita:{official:"Repubblica del Kosovo",common:"Kosovo"},kor:{official:"\uCF54\uC18C\uBCF4 \uACF5\uD654\uAD6D",common:"\uCF54\uC18C\uBCF4"},nld:{official:"Republiek Kosovo",common:"Kosovo"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0648\u0632\u0648\u0648",common:"\u06A9\u0648\u0632\u0648\u0648"},pol:{official:"Republika Kosowa",common:"Kosowo"},por:{official:"Rep\xFAblica do Kosovo",common:"Kosovo"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0441\u043E\u0432\u043E",common:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0441\u043E\u0432\u043E"},slk:{official:"Republika Kosovo",common:"Kosovo"},spa:{official:"Rep\xFAblica de Kosovo",common:"Kosovo"},swe:{official:"Republiken Kosovo",common:"Kosovo"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0648\u0633\u0648\u0648\u06C1",common:"\u06A9\u0648\u0633\u0648\u0648\u06C1"},zho:{official:"\u79D1\u7D22\u6C83\u5171\u548C\u56FD",common:"\u79D1\u7D22\u6C83"}},latlng:[42.666667,21.166667],landlocked:!0,borders:["ALB","MKD","MNE","SRB"],area:10908,demonyms:{eng:{f:"Kosovar",m:"Kosovar"},fra:{f:"Kosovare",m:"Kosovar"}},flag:"\u{1F1FD}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/CSC4Yc8SWPgburuD9",openStreetMaps:"https://www.openstreetmap.org/relation/2088990"},population:1775378,gini:{"2017":29},fifa:"KVX",car:{signs:["CS"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/xk.png",svg:"https://flagcdn.com/xk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/xk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/xk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.67,21.17]}},{name:{common:"Nigeria",official:"Federal Republic of Nigeria",nativeName:{eng:{official:"Federal Republic of Nigeria",common:"Nigeria"}}},tld:[".ng"],cca2:"NG",ccn3:"566",cca3:"NGA",cioc:"NGR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NGN:{name:"Nigerian naira",symbol:"\u20A6"}},idd:{root:"+2",suffixes:["34"]},capital:["Abuja"],altSpellings:["NG","Nijeriya","Na\xEDj\xEDr\xED\xE0","Federal Republic of Nigeria"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0646\u064A\u062C\u064A\u0631\u064A\u0627 \u0627\u0644\u0627\u062A\u062D\u0627\u062F\u064A\u0629",common:"\u0646\u064A\u062C\u064A\u0631\u064A\u0627"},ces:{official:"Nigerijsk\xE1 federativn\xED republika",common:"Nig\xE9rie"},cym:{official:"Federal Republic of Nigeria",common:"Nigeria"},deu:{official:"Bundesrepublik Nigeria",common:"Nigeria"},est:{official:"Nigeeria Liitvabariik",common:"Nigeeria"},fin:{official:"Nigerian liittotasavalta",common:"Nigeria"},fra:{official:"R\xE9publique f\xE9d\xE9rale du Nigeria",common:"Nig\xE9ria"},hrv:{official:"Savezna Republika Nigerija",common:"Nigerija"},hun:{official:"Nig\xE9ria",common:"Nig\xE9ria"},ita:{official:"Repubblica federale di Nigeria",common:"Nigeria"},jpn:{official:"\u30CA\u30A4\u30B8\u30A7\u30EA\u30A2\u9023\u90A6\u5171\u548C\u56FD",common:"\u30CA\u30A4\u30B8\u30A7\u30EA\u30A2"},kor:{official:"\uB098\uC774\uC9C0\uB9AC\uC544 \uC5F0\uBC29 \uACF5\uD654\uAD6D",common:"\uB098\uC774\uC9C0\uB9AC\uC544"},nld:{official:"Federale Republiek Nigeria",common:"Nigeria"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u062F\u0631\u0627\u0644 \u0646\u06CC\u062C\u0631\u06CC\u0647",common:"\u0646\u06CC\u062C\u0631\u06CC\u0647"},pol:{official:"Federalna Republika Nigerii",common:"Nigeria"},por:{official:"Rep\xFAblica Federal da Nig\xE9ria",common:"Nig\xE9ria"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041D\u0438\u0433\u0435\u0440\u0438\u044F",common:"\u041D\u0438\u0433\u0435\u0440\u0438\u044F"},slk:{official:"Nig\xE9rijsk\xE1 federat\xEDvna republika",common:"Nig\xE9ria"},spa:{official:"Rep\xFAblica Federal de Nigeria",common:"Nigeria"},swe:{official:"F\xF6rbundsrepubliken Nigeria",common:"Nigeria"},urd:{official:"\u0648\u0641\u0627\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0646\u0627\u0626\u062C\u06CC\u0631\u06CC\u0627",common:"\u0646\u0627\u0626\u062C\u06CC\u0631\u06CC\u0627"},zho:{official:"\u5C3C\u65E5\u5229\u4E9A\u8054\u90A6\u5171\u548C\u56FD",common:"\u5C3C\u65E5\u5229\u4E9A"}},latlng:[10,8],landlocked:!1,borders:["BEN","CMR","TCD","NER"],area:923768,demonyms:{eng:{f:"Nigerian",m:"Nigerian"},fra:{f:"Nig\xE9riane",m:"Nig\xE9rian"}},flag:"\u{1F1F3}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/LTn417qWwBPFszuV9",openStreetMaps:"https://www.openstreetmap.org/relation/192787"},population:206139587,gini:{"2018":35.1},fifa:"NGA",car:{signs:["WAN"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ng.png",svg:"https://flagcdn.com/ng.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ng.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ng.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.08,7.53]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Poland",official:"Republic of Poland",nativeName:{pol:{official:"Rzeczpospolita Polska",common:"Polska"}}},tld:[".pl"],cca2:"PL",ccn3:"616",cca3:"POL",cioc:"POL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PLN:{name:"Polish z\u0142oty",symbol:"z\u0142"}},idd:{root:"+4",suffixes:["8"]},capital:["Warsaw"],altSpellings:["PL","Republic of Poland","Rzeczpospolita Polska"],region:"Europe",subregion:"Central Europe",languages:{pol:"Polish"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0628\u0648\u0644\u0646\u062F\u064A\u0629",common:"\u0628\u0648\u0644\u0646\u062F\u0627"},ces:{official:"Polsk\xE1 republika",common:"Polsko"},cym:{official:"Republic of Poland",common:"Poland"},deu:{official:"Republik Polen",common:"Polen"},est:{official:"Poola Vabariik",common:"Poola"},fin:{official:"Puolan tasavalta",common:"Puola"},fra:{official:"R\xE9publique de Pologne",common:"Pologne"},hrv:{official:"Republika Poljska",common:"Poljska"},hun:{official:"Lengyel K\xF6zt\xE1rsas\xE1g",common:"Lengyelorsz\xE1g"},ita:{official:"Repubblica di Polonia",common:"Polonia"},jpn:{official:"\u30DD\u30FC\u30E9\u30F3\u30C9\u5171\u548C\u56FD",common:"\u30DD\u30FC\u30E9\u30F3\u30C9"},kor:{official:"\uD3F4\uB780\uB4DC \uACF5\uD654\uAD6D",common:"\uD3F4\uB780\uB4DC"},nld:{official:"Republiek Polen",common:"Polen"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0644\u0647\u0633\u062A\u0627\u0646",common:"\u0644\u0647\u0633\u062A\u0627\u0646"},pol:{official:"Rzeczpospolita Polska",common:"Polska"},por:{official:"Rep\xFAblica da Pol\xF3nia",common:"Pol\xF3nia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041F\u043E\u043B\u044C\u0448\u0430",common:"\u041F\u043E\u043B\u044C\u0448\u0430"},slk:{official:"Po\u013Esk\xE1 republika",common:"Po\u013Esko"},spa:{official:"Rep\xFAblica de Polonia",common:"Polonia"},swe:{official:"Republiken Polen",common:"Polen"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u0648\u0644\u06CC\u0646\u0688",common:"\u067E\u0648\u0644\u06CC\u0646\u0688"},zho:{official:"\u6CE2\u5170\u5171\u548C\u56FD",common:"\u6CE2\u5170"}},latlng:[52,20],landlocked:!1,borders:["BLR","CZE","DEU","LTU","RUS","SVK","UKR"],area:312679,demonyms:{eng:{f:"Polish",m:"Polish"},fra:{f:"Polonaise",m:"Polonais"}},flag:"\u{1F1F5}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/gY9Xw4Sf4415P4949",openStreetMaps:"https://www.openstreetmap.org/relation/49715"},population:37950802,gini:{"2018":30.2},fifa:"POL",car:{signs:["PL"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/pl.png",svg:"https://flagcdn.com/pl.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[52.25,21]},postalCode:{format:"##-###",regex:"^(\\d{5})$"}},{name:{common:"Niue",official:"Niue",nativeName:{eng:{official:"Niue",common:"Niue"},niu:{official:"Niu\u0113",common:"Niu\u0113"}}},tld:[".nu"],cca2:"NU",ccn3:"570",cca3:"NIU",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["83"]},capital:["Alofi"],altSpellings:["NU"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",niu:"Niuean"},translations:{ara:{official:"\u0646\u064A\u064A\u0648\u064A",common:"\u0646\u064A\u064A\u0648\u064A"},ces:{official:"Niue",common:"Niue"},cym:{official:"Niue",common:"Niue"},deu:{official:"Niue",common:"Niue"},est:{official:"Niue",common:"Niue"},fin:{official:"Niue",common:"Niue"},fra:{official:"Niue",common:"Niue"},hrv:{official:"Niue",common:"Niue"},hun:{official:"Niue",common:"Niue"},ita:{official:"Niue",common:"Niue"},jpn:{official:"\u30CB\u30A6\u30A8",common:"\u30CB\u30A6\u30A8"},kor:{official:"\uB2C8\uC6B0\uC5D0",common:"\uB2C8\uC6B0\uC5D0"},nld:{official:"Niue",common:"Niue"},per:{official:"\u0646\u06CC\u0648\u0648\u06CC",common:"\u0646\u06CC\u0648\u0648\u06CC"},pol:{official:"Niue",common:"Niue"},por:{official:"Niue",common:"Niue"},rus:{official:"\u041D\u0438\u0443\u044D",common:"\u041D\u0438\u0443\u044D"},slk:{official:"Niue",common:"Niue"},spa:{official:"Niue",common:"Niue"},swe:{official:"Niue",common:"Niue"},urd:{official:"\u0646\u06CC\u0648\u0648\u06D2",common:"\u0646\u06CC\u0648\u0648\u06D2"},zho:{official:"\u7EBD\u57C3",common:"\u7EBD\u57C3"}},latlng:[-19.03333333,-169.86666666],landlocked:!1,area:260,demonyms:{eng:{f:"Niuean",m:"Niuean"},fra:{f:"Niu\xE9enne",m:"Niu\xE9en"}},flag:"\u{1F1F3}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/xFgdzs3E55Rk1y8P9",openStreetMaps:"https://www.openstreetmap.org/relation/1558556"},population:1470,car:{signs:["NZ"],side:"left"},timezones:["UTC-11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nu.png",svg:"https://flagcdn.com/nu.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-19.02,-169.92]}},{name:{common:"New Caledonia",official:"New Caledonia",nativeName:{fra:{official:"Nouvelle-Cal\xE9donie",common:"Nouvelle-Cal\xE9donie"}}},tld:[".nc"],cca2:"NC",ccn3:"540",cca3:"NCL",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XPF:{name:"CFP franc",symbol:"\u20A3"}},idd:{root:"+6",suffixes:["87"]},capital:["Noum\xE9a"],altSpellings:["NC"],region:"Oceania",subregion:"Melanesia",languages:{fra:"French"},translations:{ara:{official:"\u0643\u0627\u0644\u064A\u062F\u0648\u0646\u064A\u0627 \u0627\u0644\u062C\u062F\u064A\u062F\u0629",common:"\u0643\u0627\u0644\u064A\u062F\u0648\u0646\u064A\u0627 \u0627\u0644\u062C\u062F\u064A\u062F\u0629"},ces:{official:"Nov\xE1 Kaledonie",common:"Nov\xE1 Kaledonie"},cym:{official:"New Caledonia",common:"New Caledonia"},deu:{official:"Neukaledonien",common:"Neukaledonien"},est:{official:"Uus-Kaledoonia",common:"Uus-Kaledoonia"},fin:{official:"Uusi-Kaledonia",common:"Uusi-Kaledonia"},fra:{official:"Nouvelle-Cal\xE9donie",common:"Nouvelle-Cal\xE9donie"},hrv:{official:"Nova Kaledonija",common:"Nova Kaledonija"},hun:{official:"\xDAj-Kaled\xF3nia",common:"\xDAj-Kaled\xF3nia"},ita:{official:"Nuova Caledonia",common:"Nuova Caledonia"},jpn:{official:"\u30CB\u30E5\u30FC\u30AB\u30EC\u30C9\u30CB\u30A2",common:"\u30CB\u30E5\u30FC\u30AB\u30EC\u30C9\u30CB\u30A2"},kor:{official:"\uB204\uBCA8\uCE7C\uB808\uB3C4\uB2C8",common:"\uB204\uBCA8\uCE7C\uB808\uB3C4\uB2C8"},nld:{official:"nieuw -Caledoni\xEB",common:"Nieuw-Caledoni\xEB"},per:{official:"\u06A9\u0627\u0644\u062F\u0648\u0646\u06CC\u0627\u06CC \u062C\u062F\u06CC\u062F",common:"\u06A9\u0627\u0644\u062F\u0648\u0646\u06CC\u0627\u06CC \u062C\u062F\u06CC\u062F"},pol:{official:"Nowa Kaledonia",common:"Nowa Kaledonia"},por:{official:"New Caledonia",common:"Nova Caled\xF3nia"},rus:{official:"\u041D\u043E\u0432\u0430\u044F \u041A\u0430\u043B\u0435\u0434\u043E\u043D\u0438\u044F",common:"\u041D\u043E\u0432\u0430\u044F \u041A\u0430\u043B\u0435\u0434\u043E\u043D\u0438\u044F"},slk:{official:"Nov\xE1 Kaled\xF3nia",common:"Nov\xE1 Kaled\xF3nia"},spa:{official:"nueva Caledonia",common:"Nueva Caledonia"},swe:{official:"Nya Kaledonien",common:"Nya Kaledonien"},urd:{official:"\u0646\u06CC\u0648 \u06A9\u06CC\u0644\u06CC\u0688\u0648\u0646\u06CC\u0627",common:"\u0646\u06CC\u0648 \u06A9\u06CC\u0644\u06CC\u0688\u0648\u0646\u06CC\u0627"},zho:{official:"\u65B0\u5580\u91CC\u591A\u5C3C\u4E9A",common:"\u65B0\u5580\u91CC\u591A\u5C3C\u4E9A"}},latlng:[-21.5,165.5],landlocked:!1,area:18575,demonyms:{eng:{f:"New Caledonian",m:"New Caledonian"},fra:{f:"N\xE9o-Cal\xE9donienne",m:"N\xE9o-Cal\xE9donien"}},flag:"\u{1F1F3}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/cBhtCeMdob4U7FRU9",openStreetMaps:"https://www.openstreetmap.org/relation/3407643"},population:271960,fifa:"NCL",car:{signs:["F"],side:"right"},timezones:["UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nc.png",svg:"https://flagcdn.com/nc.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-22.27,166.45]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Ethiopia",official:"Federal Democratic Republic of Ethiopia",nativeName:{amh:{official:"\u12E8\u12A2\u1275\u12EE\u1335\u12EB \u134C\u12F4\u122B\u120B\u12CA \u12F2\u121E\u12AD\u122B\u1232\u12EB\u12CA \u122A\u1350\u1265\u120A\u12AD",common:"\u12A2\u1275\u12EE\u1335\u12EB"}}},tld:[".et"],cca2:"ET",ccn3:"231",cca3:"ETH",cioc:"ETH",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ETB:{name:"Ethiopian birr",symbol:"Br"}},idd:{root:"+2",suffixes:["51"]},capital:["Addis Ababa"],altSpellings:["ET","\u02BE\u012Aty\u014D\u1E57\u1E57y\u0101","Federal Democratic Republic of Ethiopia","\u12E8\u12A2\u1275\u12EE\u1335\u12EB \u134C\u12F4\u122B\u120B\u12CA \u12F2\u121E\u12AD\u122B\u1232\u12EB\u12CA \u122A\u1350\u1265\u120A\u12AD"],region:"Africa",subregion:"Eastern Africa",languages:{amh:"Amharic"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0625\u062B\u064A\u0648\u0628\u064A\u0627 \u0627\u0644\u0641\u062F\u0631\u0627\u0644\u064A\u0629 \u0627\u0644\u062F\u064A\u0645\u0648\u0642\u0631\u0627\u0637\u064A\u0629",common:"\u0625\u062B\u064A\u0648\u0628\u064A\u0627"},ces:{official:"Etiopsk\xE1 federativn\xED demokratick\xE1 republika",common:"Etiopie"},cym:{official:"Gweriniaeth Ddemocrataidd Ffederal Ethiopia",common:"Ethiopia"},deu:{official:"Demokratische Bundesrepublik \xC4thiopien",common:"\xC4thiopien"},est:{official:"Etioopia Demokraatlik Liitvabariik",common:"Etioopia"},fin:{official:"Etiopian demokraattinen liittotasavalta",common:"Etiopia"},fra:{official:"R\xE9publique f\xE9d\xE9rale d\xE9mocratique d'\xC9thiopie",common:"\xC9thiopie"},hrv:{official:"Savezna Demokratska Republika Etiopija",common:"Etiopija"},hun:{official:"Eti\xF3p Sz\xF6vets\xE9gi Demokratikus K\xF6zt\xE1rsas\xE1g",common:"Eti\xF3pia"},ita:{official:"Repubblica federale democratica di Etiopia",common:"Etiopia"},jpn:{official:"\u30A8\u30C1\u30AA\u30D4\u30A2\u9023\u90A6\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u30A8\u30C1\u30AA\u30D4\u30A2"},kor:{official:"\uC5D0\uD2F0\uC624\uD53C\uC544 \uC5F0\uBC29 \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uC5D0\uD2F0\uC624\uD53C\uC544"},nld:{official:"Federale Democratische Republiek Ethiopi\xEB",common:"Ethiopi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u062F\u0631\u0627\u0644 \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u0627\u062A\u06CC\u0648\u067E\u06CC",common:"\u0627\u0650\u062A\u06CC\u0648\u067E\u06CC"},pol:{official:"Federalna Demokratyczna Republika Etiopii",common:"Etiopia"},por:{official:"Rep\xFAblica Federal Democr\xE1tica da Eti\xF3pia",common:"Eti\xF3pia"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u042D\u0444\u0438\u043E\u043F\u0438\u044F",common:"\u042D\u0444\u0438\u043E\u043F\u0438\u044F"},slk:{official:"Eti\xF3pska federat\xEDvna demokratick\xE1 republika",common:"Eti\xF3pia"},spa:{official:"Rep\xFAblica Democr\xE1tica Federal de Etiop\xEDa",common:"Etiop\xEDa"},swe:{official:"Demokratiska f\xF6rbundsrepubliken Etiopien",common:"Etiopien"},urd:{official:"\u0648\u0641\u0627\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u06CC\u062A\u06BE\u0648\u067E\u06CC\u0627",common:"\u0627\u06CC\u062A\u06BE\u0648\u067E\u06CC\u0627"},zho:{official:"\u57C3\u585E\u4FC4\u6BD4\u4E9A\u8054\u90A6\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u57C3\u585E\u4FC4\u6BD4\u4E9A"}},latlng:[8,38],landlocked:!0,borders:["DJI","ERI","KEN","SOM","SSD","SDN"],area:1104300,demonyms:{eng:{f:"Ethiopian",m:"Ethiopian"},fra:{f:"\xC9thiopienne",m:"\xC9thiopien"}},flag:"\u{1F1EA}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/2Q4hQWCbhuZLj3fG6",openStreetMaps:"https://www.openstreetmap.org/relation/192800"},population:114963583,gini:{"2015":35},fifa:"ETH",car:{signs:["ETH"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/et.png",svg:"https://flagcdn.com/et.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/et.png",svg:"https://mainfacts.com/media/images/coats_of_arms/et.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.03,38.7]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Germany",official:"Federal Republic of Germany",nativeName:{deu:{official:"Bundesrepublik Deutschland",common:"Deutschland"}}},tld:[".de"],cca2:"DE",ccn3:"276",cca3:"DEU",cioc:"GER",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+4",suffixes:["9"]},capital:["Berlin"],altSpellings:["DE","Federal Republic of Germany","Bundesrepublik Deutschland"],region:"Europe",subregion:"Western Europe",languages:{deu:"German"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0644\u0645\u0627\u0646\u064A\u0627 \u0627\u0644\u0627\u062A\u062D\u0627\u062F\u064A\u0629",common:"\u0623\u0644\u0645\u0627\u0646\u064A\u0627"},ces:{official:"Spolkov\xE1 republika N\u011Bmecko",common:"N\u011Bmecko"},cym:{official:"Federal Republic of Germany",common:"Germany"},deu:{official:"Bundesrepublik Deutschland",common:"Deutschland"},est:{official:"Saksamaa Liitvabariik",common:"Saksamaa"},fin:{official:"Saksan liittotasavalta",common:"Saksa"},fra:{official:"R\xE9publique f\xE9d\xE9rale d'Allemagne",common:"Allemagne"},hrv:{official:"Njema\u010Dka Federativna Republika",common:"Njema\u010Dka"},hun:{official:"N\xE9met Sz\xF6vets\xE9gi K\xF6zt\xE1rsas\xE1g",common:"N\xE9metorsz\xE1g"},ita:{official:"Repubblica federale di Germania",common:"Germania"},jpn:{official:"\u30C9\u30A4\u30C4\u9023\u90A6\u5171\u548C\u56FD",common:"\u30C9\u30A4\u30C4"},kor:{official:"\uB3C5\uC77C \uC5F0\uBC29 \uACF5\uD654\uAD6D",common:"\uB3C5\uC77C"},nld:{official:"Bondsrepubliek Duitsland",common:"Duitsland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u062F\u0631\u0627\u0644 \u0622\u0644\u0645\u0627\u0646",common:"\u0622\u0644\u0645\u0627\u0646"},pol:{official:"Republika Federalna Niemiec",common:"Niemcy"},por:{official:"Rep\xFAblica Federal da Alemanha",common:"Alemanha"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0435\u0440\u043C\u0430\u043D\u0438\u044F",common:"\u0413\u0435\u0440\u043C\u0430\u043D\u0438\u044F"},slk:{official:"Nemeck\xE1 spolkov\xE1 republika",common:"Nemecko"},spa:{official:"Rep\xFAblica Federal de Alemania",common:"Alemania"},swe:{official:"F\xF6rbundsrepubliken Tyskland",common:"Tyskland"},urd:{official:"\u0648\u0641\u0627\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062C\u0631\u0645\u0646\u06CC",common:"\u062C\u0631\u0645\u0646\u06CC"},zho:{official:"\u5FB7\u610F\u5FD7\u8054\u90A6\u5171\u548C\u56FD",common:"\u5FB7\u56FD"}},latlng:[51,9],landlocked:!1,borders:["AUT","BEL","CZE","DNK","FRA","LUX","NLD","POL","CHE"],area:357114,demonyms:{eng:{f:"German",m:"German"},fra:{f:"Allemande",m:"Allemand"}},flag:"\u{1F1E9}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/mD9FBMq1nvXUBrkv6",openStreetMaps:"https://www.openstreetmap.org/relation/51477"},population:83240525,gini:{"2016":31.9},fifa:"GER",car:{signs:["DY"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/de.png",svg:"https://flagcdn.com/de.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/de.png",svg:"https://mainfacts.com/media/images/coats_of_arms/de.svg"},startOfWeek:"monday",capitalInfo:{latlng:[52.52,13.4]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Azerbaijan",official:"Republic of Azerbaijan",nativeName:{aze:{official:"Az\u0259rbaycan Respublikas\u0131",common:"Az\u0259rbaycan"},rus:{official:"\u0410\u0437\u0435\u0440\u0431\u0430\u0439\u0434\u0436\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0410\u0437\u0435\u0440\u0431\u0430\u0439\u0434\u0436\u0430\u043D"}}},tld:[".az"],cca2:"AZ",ccn3:"031",cca3:"AZE",cioc:"AZE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AZN:{name:"Azerbaijani manat",symbol:"\u20BC"}},idd:{root:"+9",suffixes:["94"]},capital:["Baku"],altSpellings:["AZ","Republic of Azerbaijan","Az\u0259rbaycan Respublikas\u0131"],region:"Asia",subregion:"Western Asia",languages:{aze:"Azerbaijani",rus:"Russian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0630\u0631\u0628\u064A\u062C\u0627\u0646",common:"\u0623\u0630\u0631\u0628\u064A\u062C\u0627\u0646"},ces:{official:"\xC1zerb\xE1jd\u017E\xE1nsk\xE1 republika",common:"\xC1zerb\xE1jd\u017E\xE1n"},cym:{official:"Gweriniaeth Aserbaijan",common:"Aserbaijan"},deu:{official:"Republik Aserbaidschan",common:"Aserbaidschan"},est:{official:"Aserbaid\u017Eaani Vabariik",common:"Aserbaid\u017Eaan"},fin:{official:"Azerbaidzanin tasavalta",common:"Azerbaidzan"},fra:{official:"R\xE9publique d'Azerba\xEFdjan",common:"Azerba\xEFdjan"},hrv:{official:"Republika Azerbajd\u017Ean",common:"Azerbajd\u017Ean"},hun:{official:"Azerbajdzs\xE1n",common:"Azerbajdzs\xE1n"},ita:{official:"Repubblica dell'Azerbaigian",common:"Azerbaijan"},jpn:{official:"\u30A2\u30BC\u30EB\u30D0\u30A4\u30B8\u30E3\u30F3\u5171\u548C\u56FD",common:"\u30A2\u30BC\u30EB\u30D0\u30A4\u30B8\u30E3\u30F3"},kor:{official:"\uC544\uC81C\uB974\uBC14\uC774\uC794 \uACF5\uD654\uAD6D",common:"\uC544\uC81C\uB974\uBC14\uC774\uC794"},nld:{official:"Republiek Azerbeidzjan",common:"Azerbeidzjan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0630\u0631\u0628\u0627\u06CC\u062C\u0627\u0646",common:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0630\u0631\u0628\u0627\u06CC\u062C\u0627\u0646"},pol:{official:"Republika Azerbejd\u017Canu",common:"Azerbejd\u017Can"},por:{official:"Rep\xFAblica do Azerbaij\xE3o",common:"Azerbeij\xE3o"},rus:{official:"\u0410\u0437\u0435\u0440\u0431\u0430\u0439\u0434\u0436\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0410\u0437\u0435\u0440\u0431\u0430\u0439\u0434\u0436\u0430\u043D"},slk:{official:"Azerbaj\u01C6ansk\xE1 republika",common:"Azerbaj\u01C7an"},spa:{official:"Rep\xFAblica de Azerbaiy\xE1n",common:"Azerbaiy\xE1n"},swe:{official:"Republiken Azerbajdzjan",common:"Azerbajdzjan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0622\u0630\u0631\u0628\u0627\u0626\u06CC\u062C\u0627\u0646",common:"\u0622\u0630\u0631\u0628\u0627\u0626\u06CC\u062C\u0627\u0646"},zho:{official:"\u963F\u585E\u62DC\u7586\u5171\u548C\u56FD",common:"\u963F\u585E\u62DC\u7586"}},latlng:[40.5,47.5],landlocked:!0,borders:["ARM","GEO","IRN","RUS","TUR"],area:86600,demonyms:{eng:{f:"Azerbaijani",m:"Azerbaijani"},fra:{f:"Azerba\xEFdjanaise",m:"Azerba\xEFdjanais"}},flag:"\u{1F1E6}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/az3Zz7ar2aoB9AUc6",openStreetMaps:"https://www.openstreetmap.org/relation/364110"},population:10110116,gini:{"2005":26.6},fifa:"AZE",car:{signs:["AZ"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/az.png",svg:"https://flagcdn.com/az.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/az.png",svg:"https://mainfacts.com/media/images/coats_of_arms/az.svg"},startOfWeek:"monday",capitalInfo:{latlng:[40.38,49.87]},postalCode:{format:"AZ ####",regex:"^(?:AZ)*(\\d{4})$"}},{name:{common:"Netherlands",official:"Kingdom of the Netherlands",nativeName:{nld:{official:"Koninkrijk der Nederlanden",common:"Nederland"}}},tld:[".nl"],cca2:"NL",ccn3:"528",cca3:"NLD",cioc:"NED",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["1"]},capital:["Amsterdam"],altSpellings:["NL","Holland","Nederland","The Netherlands"],region:"Europe",subregion:"Western Europe",languages:{nld:"Dutch"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0647\u0648\u0644\u0646\u062F\u0627",common:"\u0647\u0648\u0644\u0646\u062F\u0627"},ces:{official:"Nizozemsk\xE9 kr\xE1lovstv\xED",common:"Nizozemsko"},cym:{official:"Kingdom of the Netherlands",common:"Netherlands"},deu:{official:"Niederlande",common:"Niederlande"},est:{official:"Madalmaade Kuningriik",common:"Holland"},fin:{official:"Alankomaat",common:"Alankomaat"},fra:{official:"Pays-Bas",common:"Pays-Bas"},hrv:{official:"Holandija",common:"Nizozemska"},hun:{official:"Holland Kir\xE1lys\xE1g",common:"Hollandia"},ita:{official:"Paesi Bassi",common:"Paesi Bassi"},jpn:{official:"\u30AA\u30E9\u30F3\u30C0",common:"\u30AA\u30E9\u30F3\u30C0"},kor:{official:"\uB124\uB35C\uB780\uB4DC \uC655\uAD6D",common:"\uB124\uB35C\uB780\uB4DC"},nld:{official:"Nederland",common:"Nederland"},per:{official:"\u0647\u0644\u0646\u062F",common:"\u0647\u0644\u0646\u062F"},pol:{official:"Kr\xF3lestwo Niderland\xF3w",common:"Holandia"},por:{official:"Holanda",common:"Holanda"},rus:{official:"\u041D\u0438\u0434\u0435\u0440\u043B\u0430\u043D\u0434\u044B",common:"\u041D\u0438\u0434\u0435\u0440\u043B\u0430\u043D\u0434\u044B"},slk:{official:"Holandsk\xE9 kr\xE1\u013Eovstvo",common:"Holansko"},spa:{official:"Pa\xEDses Bajos",common:"Pa\xEDses Bajos"},swe:{official:"Nederl\xE4nderna",common:"Nederl\xE4nderna"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0646\u06CC\u062F\u0631\u0644\u06CC\u0646\u0688\u0632",common:"\u0646\u06CC\u062F\u0631\u0644\u06CC\u0646\u0688\u0632"},zho:{official:"\u8377\u5170",common:"\u8377\u5170"}},latlng:[52.5,5.75],landlocked:!1,borders:["BEL","DEU"],area:41850,demonyms:{eng:{f:"Dutch",m:"Dutch"},fra:{f:"N\xE9erlandaise",m:"N\xE9erlandais"}},flag:"\u{1F1F3}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/Hv6zQswGhFxoVVBm6",openStreetMaps:"https://www.openstreetmap.org/relation/47796"},population:16655799,gini:{"2018":28.1},fifa:"NED",car:{signs:["NL"],side:"right"},timezones:["UTC-04:00","UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/nl.png",svg:"https://flagcdn.com/nl.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[52.35,4.92]},postalCode:{format:"#### @@",regex:"^(\\d{4}[A-Z]{2})$"}},{name:{common:"France",official:"French Republic",nativeName:{fra:{official:"R\xE9publique fran\xE7aise",common:"France"}}},tld:[".fr"],cca2:"FR",ccn3:"250",cca3:"FRA",cioc:"FRA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["3"]},capital:["Paris"],altSpellings:["FR","French Republic","R\xE9publique fran\xE7aise"],region:"Europe",subregion:"Western Europe",languages:{fra:"French"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0641\u0631\u0646\u0633\u064A\u0629",common:"\u0641\u0631\u0646\u0633\u0627"},ces:{official:"Francouzsk\xE1 republika",common:"Francie"},cym:{official:"French Republic",common:"France"},deu:{official:"Franz\xF6sische Republik",common:"Frankreich"},est:{official:"Prantsuse Vabariik",common:"Prantsusmaa"},fin:{official:"Ranskan tasavalta",common:"Ranska"},fra:{official:"R\xE9publique fran\xE7aise",common:"France"},hrv:{official:"Francuska Republika",common:"Francuska"},hun:{official:"Francia K\xF6zt\xE1rsas\xE1g",common:"Franciaorsz\xE1g"},ita:{official:"Repubblica francese",common:"Francia"},jpn:{official:"\u30D5\u30E9\u30F3\u30B9\u5171\u548C\u56FD",common:"\u30D5\u30E9\u30F3\u30B9"},kor:{official:"\uD504\uB791\uC2A4 \uACF5\uD654\uAD6D",common:"\uD504\uB791\uC2A4"},nld:{official:"Franse Republiek",common:"Frankrijk"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u0631\u0627\u0646\u0633\u0647",common:"\u0641\u0631\u0627\u0646\u0633\u0647"},pol:{official:"Republika Francuska",common:"Francja"},por:{official:"Rep\xFAblica Francesa",common:"Fran\xE7a"},rus:{official:"\u0424\u0440\u0430\u043D\u0446\u0443\u0437\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0424\u0440\u0430\u043D\u0446\u0438\u044F"},slk:{official:"Franc\xFAzska republika",common:"Franc\xFAzsko"},spa:{official:"Rep\xFAblica franc\xE9s",common:"Francia"},swe:{official:"Republiken Frankrike",common:"Frankrike"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0641\u0631\u0627\u0646\u0633",common:"\u0641\u0631\u0627\u0646\u0633"},zho:{official:"\u6CD5\u5170\u897F\u5171\u548C\u56FD",common:"\u6CD5\u56FD"}},latlng:[46,2],landlocked:!1,borders:["AND","BEL","DEU","ITA","LUX","MCO","ESP","CHE"],area:551695,demonyms:{eng:{f:"French",m:"French"},fra:{f:"Fran\xE7aise",m:"Fran\xE7ais"}},flag:"\u{1F1EB}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/g7QxxSFsWyTPKuzd7",openStreetMaps:"https://www.openstreetmap.org/relation/1403916"},population:67391582,gini:{"2018":32.4},fifa:"FRA",car:{signs:["F"],side:"right"},timezones:["UTC-10:00","UTC-09:30","UTC-09:00","UTC-08:00","UTC-04:00","UTC-03:00","UTC+01:00","UTC+02:00","UTC+03:00","UTC+04:00","UTC+05:00","UTC+10:00","UTC+11:00","UTC+12:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/fr.png",svg:"https://flagcdn.com/fr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.87,2.33]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Nepal",official:"Federal Democratic Republic of Nepal",nativeName:{nep:{official:"\u0928\u0947\u092A\u093E\u0932 \u0938\u0902\u0918\u0940\u092F \u0932\u094B\u0915\u0924\u093E\u0928\u094D\u0924\u094D\u0930\u093F\u0915 \u0917\u0923\u0924\u0928\u094D\u0924\u094D\u0930",common:"\u0928\u0947\u092A\u093E\u0932"}}},tld:[".np"],cca2:"NP",ccn3:"524",cca3:"NPL",cioc:"NEP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NPR:{name:"Nepalese rupee",symbol:"\u20A8"}},idd:{root:"+9",suffixes:["77"]},capital:["Kathmandu"],altSpellings:["NP","Federal Democratic Republic of Nepal","Lokt\u0101ntrik Ganatantra Nep\u0101l"],region:"Asia",subregion:"Southern Asia",languages:{nep:"Nepali"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0646\u064A\u0628\u0627\u0644 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629 \u0627\u0644\u0627\u062A\u062D\u0627\u062F\u064A\u0629",common:"\u0646\u064A\u0628\u0627\u0644"},ces:{official:"Federativn\xED demokratick\xE1 republika Nep\xE1l",common:"Nep\xE1l"},cym:{official:"Federal Democratic Republic of Nepal",common:"Nepal"},deu:{official:"Demokratische Bundesrepublik Nepal",common:"Nepal"},est:{official:"Nepali Demokraatlik Liitvabariik",common:"Nepal"},fin:{official:"Nepalin demokraattinen liittotasavalta",common:"Nepal"},fra:{official:"R\xE9publique du N\xE9pal",common:"N\xE9pal"},hrv:{official:"Savezna Demokratska Republika Nepal",common:"Nepal"},hun:{official:"Nep\xE1li Sz\xF6vets\xE9gi Demokratikus K\xF6zt\xE1rsas\xE1g",common:"Nep\xE1l"},ita:{official:"Repubblica federale democratica del Nepal",common:"Nepal"},jpn:{official:"\u30CD\u30D1\u30FC\u30EB\u9023\u90A6\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u30CD\u30D1\u30FC\u30EB"},kor:{official:"\uB124\uD314 \uC5F0\uBC29 \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uB124\uD314"},nld:{official:"Federale Democratische Republiek Nepal",common:"Nepal"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u062F\u0631\u0627\u0644 \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u0646\u067E\u0627\u0644",common:"\u0646\u067E\u0627\u0644"},pol:{official:"Federalna Demokratyczna Republika Nepalu",common:"Nepal"},por:{official:"Rep\xFAblica Democr\xE1tica Federal do Nepal",common:"Nepal"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041D\u0435\u043F\u0430\u043B",common:"\u041D\u0435\u043F\u0430\u043B"},slk:{official:"Nep\xE1lska federat\xEDvna demokratick\xE1 republika",common:"Nep\xE1l"},spa:{official:"Rep\xFAblica Democr\xE1tica Federal de Nepal",common:"Nepal"},swe:{official:"Demokratiska f\xF6rbundsrepubliken Nepal",common:"Nepal"},urd:{official:"\u0648\u0641\u0627\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0646\u06CC\u067E\u0627\u0644",common:"\u0646\u06CC\u067E\u0627\u0644"},zho:{official:"\u5C3C\u6CCA\u5C14\u8054\u90A6\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u5C3C\u6CCA\u5C14"}},latlng:[28,84],landlocked:!0,borders:["CHN","IND"],area:147181,demonyms:{eng:{f:"Nepalese",m:"Nepalese"},fra:{f:"N\xE9palaise",m:"N\xE9palais"}},flag:"\u{1F1F3}\u{1F1F5}",maps:{googleMaps:"https://goo.gl/maps/UMj2zpbQp7B5c3yT7",openStreetMaps:"https://www.openstreetmap.org/relation/184633"},population:29136808,gini:{"2010":32.8},fifa:"NEP",car:{signs:["NEP"],side:"left"},timezones:["UTC+05:45"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/np.png",svg:"https://flagcdn.com/np.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/np.png",svg:"https://mainfacts.com/media/images/coats_of_arms/np.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[27.72,85.32]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Barbados",official:"Barbados",nativeName:{eng:{official:"Barbados",common:"Barbados"}}},tld:[".bb"],cca2:"BB",ccn3:"052",cca3:"BRB",cioc:"BAR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BBD:{name:"Barbadian dollar",symbol:"$"}},idd:{root:"+1",suffixes:["246"]},capital:["Bridgetown"],altSpellings:["BB"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0628\u0627\u0631\u0628\u0627\u062F\u0648\u0633",common:"\u0628\u0627\u0631\u0628\u0627\u062F\u0648\u0633"},ces:{official:"Barbados",common:"Barbados"},cym:{official:"Barbados",common:"Barbados"},deu:{official:"Barbados",common:"Barbados"},est:{official:"Barbados",common:"Barbados"},fin:{official:"Barbados",common:"Barbados"},fra:{official:"Barbade",common:"Barbade"},hrv:{official:"Barbados",common:"Barbados"},hun:{official:"Barbados",common:"Barbados"},ita:{official:"Barbados",common:"Barbados"},jpn:{official:"\u30D0\u30EB\u30D0\u30C9\u30B9",common:"\u30D0\u30EB\u30D0\u30C9\u30B9"},kor:{official:"\uBC14\uBCA0\uC774\uB3C4\uC2A4",common:"\uBC14\uBCA0\uC774\uB3C4\uC2A4"},nld:{official:"Barbados",common:"Barbados"},per:{official:"\u0628\u0627\u0631\u0628\u0627\u062F\u0648\u0633",common:"\u0628\u0627\u0631\u0628\u0627\u062F\u0648\u0633"},pol:{official:"Barbados",common:"Barbados"},por:{official:"Barbados",common:"Barbados"},rus:{official:"\u0411\u0430\u0440\u0431\u0430\u0434\u043E\u0441",common:"\u0411\u0430\u0440\u0431\u0430\u0434\u043E\u0441"},slk:{official:"Barbados",common:"Barbados"},spa:{official:"Barbados",common:"Barbados"},swe:{official:"Barbados",common:"Barbados"},urd:{official:"\u0628\u0627\u0631\u0628\u0627\u0688\u0648\u0633",common:"\u0628\u0627\u0631\u0628\u0627\u0688\u0648\u0633"},zho:{official:"\u5DF4\u5DF4\u591A\u65AF",common:"\u5DF4\u5DF4\u591A\u65AF"}},latlng:[13.16666666,-59.53333333],landlocked:!1,area:430,demonyms:{eng:{f:"Barbadian",m:"Barbadian"},fra:{f:"Barbadienne",m:"Barbadien"}},flag:"\u{1F1E7}\u{1F1E7}",maps:{googleMaps:"https://goo.gl/maps/2m36v8STvbGAWd9c7",openStreetMaps:"https://www.openstreetmap.org/relation/547511"},population:287371,fifa:"BRB",car:{signs:["BDS"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bb.png",svg:"https://flagcdn.com/bb.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.1,-59.62]},postalCode:{format:"BB#####",regex:"^(?:BB)*(\\d{5})$"}},{name:{common:"Jersey",official:"Bailiwick of Jersey",nativeName:{eng:{official:"Bailiwick of Jersey",common:"Jersey"},fra:{official:"Bailliage de Jersey",common:"Jersey"},nrf:{official:"Bailliage d\xE9 J\xE8rri",common:"J\xE8rri"}}},tld:[".je"],cca2:"JE",ccn3:"832",cca3:"JEY",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"British pound",symbol:"\xA3"},JEP:{name:"Jersey pound",symbol:"\xA3"}},idd:{root:"+4",suffixes:["4"]},capital:["Saint Helier"],altSpellings:["JE","Bailiwick of Jersey","Bailliage de Jersey","Bailliage d\xE9 J\xE8rri"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",fra:"French",nrf:"J\xE8rriais"},translations:{ara:{official:"\u062C\u064A\u0631\u0632\u064A",common:"\u062C\u064A\u0631\u0632\u064A"},ces:{official:"Rycht\xE1\u0159stv\xED Jersey",common:"Jersey"},cym:{official:"Bailiwick of Jersey",common:"Jersey"},deu:{official:"Vogtei Jersey",common:"Jersey"},est:{official:"Jersey foogtkond",common:"Jersey"},fin:{official:"Jersey",common:"Jersey"},fra:{official:"Bailliage de Jersey",common:"Jersey"},hrv:{official:"Struka od Jersey",common:"Jersey"},hun:{official:"Jersey",common:"Jersey"},ita:{official:"Baliato di Jersey",common:"Isola di Jersey"},jpn:{official:"\u30B8\u30E3\u30FC\u30B8\u306E\u5F97\u610F\u5206\u91CE",common:"\u30B8\u30E3\u30FC\u30B8\u30FC"},kor:{official:"\uC800\uC9C0 \uC12C",common:"\uC800\uC9C0 \uC12C"},nld:{official:"Baljuwschap Jersey",common:"Jersey"},per:{official:"\u062C\u0631\u0632\u06CC",common:"\u062C\u0631\u0632\u06CC"},pol:{official:"Jersey",common:"Jersey"},por:{official:"Bailiado de Jersey",common:"Jersey"},rus:{official:"\u041A\u043E\u0440\u043E\u043D\u043D\u043E\u0435 \u0432\u043B\u0430\u0434\u0435\u043D\u0438\u0435 \u0414\u0436\u0435\u0440\u0441\u0438",common:"\u0414\u0436\u0435\u0440\u0441\u0438"},slk:{official:"Bailiwick Jersey",common:"Jersey"},spa:{official:"Bail\xEDa de Jersey",common:"Jersey"},swe:{official:"Jersey",common:"Jersey"},urd:{official:"\u062C\u0631\u0632\u06CC",common:"\u062C\u0631\u0632\u06CC"},zho:{official:"\u6CFD\u897F\u5C9B",common:"\u6CFD\u897F\u5C9B"}},latlng:[49.25,-2.16666666],landlocked:!1,area:116,demonyms:{eng:{f:"Channel Islander",m:"Channel Islander"},fra:{f:"Jersiaise",m:"Jersiais"}},flag:"\u{1F1EF}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/rXG8GZZtsqK92kTCA",openStreetMaps:"https://www.openstreetmap.org/relation/367988"},population:100800,car:{signs:["GBJ"],side:"left"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/je.png",svg:"https://flagcdn.com/je.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/je.png",svg:"https://mainfacts.com/media/images/coats_of_arms/je.svg"},startOfWeek:"monday",capitalInfo:{latlng:[49.18,-2.1]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"India",official:"Republic of India",nativeName:{eng:{official:"Republic of India",common:"India"},hin:{official:"\u092D\u093E\u0930\u0924 \u0917\u0923\u0930\u093E\u091C\u094D\u092F",common:"\u092D\u093E\u0930\u0924"},tam:{official:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0B95\u0BCD \u0B95\u0BC1\u0B9F\u0BBF\u0BAF\u0BB0\u0B9A\u0BC1",common:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"}}},tld:[".in"],cca2:"IN",ccn3:"356",cca3:"IND",cioc:"IND",independent:!0,status:"officially-assigned",unMember:!0,currencies:{INR:{name:"Indian rupee",symbol:"\u20B9"}},idd:{root:"+9",suffixes:["1"]},capital:["New Delhi"],altSpellings:["IN","Bh\u0101rat","Republic of India","Bharat Ganrajya","\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"],region:"Asia",subregion:"Southern Asia",languages:{eng:"English",hin:"Hindi",tam:"Tamil"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0647\u0646\u062F",common:"\u0627\u0644\u0647\u0646\u062F"},ces:{official:"Indick\xE1 republika",common:"Indie"},cym:{official:"Republic of India",common:"India"},deu:{official:"Republik Indien",common:"Indien"},est:{official:"India Vabariik",common:"India"},fin:{official:"Intian tasavalta",common:"Intia"},fra:{official:"R\xE9publique de l'Inde",common:"Inde"},hrv:{official:"Republika Indija",common:"Indija"},hun:{official:"Indiai K\xF6zt\xE1rsas\xE1g",common:"India"},ita:{official:"Repubblica dell'India",common:"India"},jpn:{official:"\u30A4\u30F3\u30C9\u5171\u548C\u56FD",common:"\u30A4\u30F3\u30C9"},kor:{official:"\uC778\uB3C4 \uACF5\uD654\uAD6D",common:"\uC778\uB3C4"},nld:{official:"Republiek India",common:"India"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0647\u0646\u062F\u0648\u0633\u062A\u0627\u0646",common:"\u0647\u0646\u062F"},pol:{official:"Republika Indii",common:"Indie"},por:{official:"Rep\xFAblica da \xCDndia",common:"\xCDndia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0418\u043D\u0434\u0438\u044F",common:"\u0418\u043D\u0434\u0438\u044F"},slk:{official:"Indick\xE1 republika",common:"India"},spa:{official:"Rep\xFAblica de la India",common:"India"},swe:{official:"Republiken Indien",common:"Indien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u06BE\u0627\u0631\u062A",common:"\u0628\u06BE\u0627\u0631\u062A"},zho:{official:"\u5370\u5EA6\u5171\u548C\u56FD",common:"\u5370\u5EA6"}},latlng:[20,77],landlocked:!1,borders:["BGD","BTN","MMR","CHN","NPL","PAK"],area:3287590,demonyms:{eng:{f:"Indian",m:"Indian"},fra:{f:"Indienne",m:"Indien"}},flag:"\u{1F1EE}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/WSk3fLwG4vtPQetp7",openStreetMaps:"https://www.openstreetmap.org/relation/304716"},population:1380004385,gini:{"2011":35.7},fifa:"IND",car:{signs:["IND"],side:"left"},timezones:["UTC+05:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/in.png",svg:"https://flagcdn.com/in.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/in.png",svg:"https://mainfacts.com/media/images/coats_of_arms/in.svg"},startOfWeek:"monday",capitalInfo:{latlng:[28.6,77.2]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Kyrgyzstan",official:"Kyrgyz Republic",nativeName:{kir:{official:"\u041A\u044B\u0440\u0433\u044B\u0437 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u044B",common:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},rus:{official:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041A\u0438\u0440\u0433\u0438\u0437\u0438\u044F"}}},tld:[".kg"],cca2:"KG",ccn3:"417",cca3:"KGZ",cioc:"KGZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KGS:{name:"Kyrgyzstani som",symbol:"\u0441"}},idd:{root:"+9",suffixes:["96"]},capital:["Bishkek"],altSpellings:["KG","\u041A\u0438\u0440\u0433\u0438\u0437\u0438\u044F","Kyrgyz Republic","\u041A\u044B\u0440\u0433\u044B\u0437 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u044B","Kyrgyz Respublikasy"],region:"Asia",subregion:"Central Asia",languages:{kir:"Kyrgyz",rus:"Russian"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0642\u064A\u0631\u063A\u064A\u0632\u064A\u0629",common:"\u0642\u064A\u0631\u063A\u064A\u0632\u0633\u062A\u0627\u0646"},ces:{official:"Kyrgyzsk\xE1 republika",common:"Kyrgyzst\xE1n"},cym:{official:"Kyrgyz Republic",common:"Kyrgyzstan"},deu:{official:"Kirgisische Republik",common:"Kirgisistan"},est:{official:"Kirgiisi Vabariik",common:"K\xF5rg\xF5zstan"},fin:{official:"Kirgisian tasavalta",common:"Kirgisia"},fra:{official:"R\xE9publique kirghize",common:"Kirghizistan"},hrv:{official:"Kirgistanu",common:"Kirgistan"},hun:{official:"Kirgiz K\xF6zt\xE1rsas\xE1g",common:"Kirgiziszt\xE1n"},ita:{official:"Kirghizistan",common:"Kirghizistan"},jpn:{official:"\u30AD\u30EB\u30AE\u30B9\u5171\u548C\u56FD",common:"\u30AD\u30EB\u30AE\u30B9"},kor:{official:"\uD0A4\uB974\uAE30\uC2A4 \uACF5\uD654\uAD6D",common:"\uD0A4\uB974\uAE30\uC2A4\uC2A4\uD0C4"},nld:{official:"Kirgizische Republiek",common:"Kirgizi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0642\u0650\u0631\u0642\u06CC\u0632\u0633\u062A\u0627\u0646",common:"\u0642\u0631\u0642\u06CC\u0632\u0633\u062A\u0627\u0646"},pol:{official:"Republika Kirgiska",common:"Kirgistan"},por:{official:"Rep\xFAblica do Quirguist\xE3o",common:"Quirguist\xE3o"},rus:{official:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041A\u0438\u0440\u0433\u0438\u0437\u0438\u044F"},slk:{official:"Kirgizsk\xE1 republika",common:"Kirgizsko"},spa:{official:"Rep\xFAblica Kirguisa",common:"Kirguizist\xE1n"},swe:{official:"Republiken Kirgizistan",common:"Kirgizistan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0631\u063A\u06CC\u0632\u0633\u062A\u0627\u0646",common:"\u06A9\u0631\u063A\u06CC\u0632\u0633\u062A\u0627\u0646"},zho:{official:"\u5409\u5C14\u5409\u65AF\u65AF\u5766\u5171\u548C\u56FD",common:"\u5409\u5C14\u5409\u65AF\u65AF\u5766"}},latlng:[41,75],landlocked:!0,borders:["CHN","KAZ","TJK","UZB"],area:199951,demonyms:{eng:{f:"Kirghiz",m:"Kirghiz"},fra:{f:"Kirghize",m:"Kirghize"}},flag:"\u{1F1F0}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/SKG8BSMMQVvxkRkB7",openStreetMaps:"https://www.openstreetmap.org/relation/178009"},population:6591600,gini:{"2019":29.7},fifa:"KGZ",car:{signs:["KS"],side:"right"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kg.png",svg:"https://flagcdn.com/kg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.87,74.6]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"South Sudan",official:"Republic of South Sudan",nativeName:{eng:{official:"Republic of South Sudan",common:"South Sudan"}}},tld:[".ss"],cca2:"SS",ccn3:"728",cca3:"SSD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SSP:{name:"South Sudanese pound",symbol:"\xA3"}},idd:{root:"+2",suffixes:["11"]},capital:["Juba"],altSpellings:["SS"],region:"Africa",subregion:"Middle Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062C\u0646\u0648\u0628 \u0627\u0644\u0633\u0648\u062F\u0627\u0646",common:"\u062C\u0646\u0648\u0628 \u0627\u0644\u0633\u0648\u062F\u0627\u0646"},ces:{official:"Jihos\xFAd\xE1nsk\xE1 republika",common:"Ji\u017En\xED S\xFAd\xE1n"},cym:{official:"Republic of South Sudan",common:"South Sudan"},deu:{official:"Republik S\xFCdsudan",common:"S\xFCdsudan"},est:{official:"L\xF5una-Sudaani Vabariik",common:"L\xF5una-Sudaan"},fin:{official:"Etel\xE4-Sudanin tasavalta",common:"Etel\xE4-Sudan"},fra:{official:"R\xE9publique du Soudan du Sud",common:"Soudan du Sud"},hrv:{official:"Republika Ju\u017Eni Sudan",common:"Ju\u017Eni Sudan"},hun:{official:"D\xE9l-szud\xE1ni K\xF6zt\xE1rsas\xE1g",common:"D\xE9l-Szud\xE1n"},ita:{official:"Repubblica del Sudan del Sud",common:"Sudan del sud"},jpn:{official:"\u5357\u30B9\u30FC\u30C0\u30F3\u5171\u548C\u56FD",common:"\u5357\u30B9\u30FC\u30C0\u30F3"},kor:{official:"\uB0A8\uC218\uB2E8 \uACF5\uD654\uAD6D",common:"\uB0A8\uC218\uB2E8"},nld:{official:"Republiek Zuid-Soedan",common:"Zuid-Soedan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0648\u062F\u0627\u0646 \u062C\u0646\u0648\u0628\u06CC",common:"\u0633\u0648\u062F\u0627\u0646 \u062C\u0646\u0648\u0628\u06CC"},pol:{official:"Republika Sudanu",common:"Sudan"},por:{official:"Rep\xFAblica do Sud\xE3o do Sul",common:"Sud\xE3o do Sul"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u042E\u0436\u043D\u044B\u0439 \u0421\u0443\u0434\u0430\u043D",common:"\u042E\u0436\u043D\u044B\u0439 \u0421\u0443\u0434\u0430\u043D"},slk:{official:"Juhosud\xE1nska republika",common:"Ju\u017En\xFD Sud\xE1n"},spa:{official:"Rep\xFAblica de Sud\xE1n del Sur",common:"Sud\xE1n del Sur"},swe:{official:"Republiken Sydsudan",common:"Sydsudan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062C\u0646\u0648\u0628\u06CC \u0633\u0648\u0688\u0627\u0646",common:"\u062C\u0646\u0648\u0628\u06CC \u0633\u0648\u0688\u0627\u0646"},zho:{official:"\u5357\u82CF\u4E39\u5171\u548C\u56FD",common:"\u5357\u82CF\u4E39"}},latlng:[7,30],landlocked:!0,borders:["CAF","COD","ETH","KEN","SDN","UGA"],area:619745,demonyms:{eng:{f:"South Sudanese",m:"South Sudanese"},fra:{f:"Sud-Soudanaise",m:"Sud-Soudanais"}},flag:"\u{1F1F8}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/Zm1AYCXb9HSNF1P27",openStreetMaps:"https://www.openstreetmap.org/relation/1656678"},population:11193729,gini:{"2016":44.1},fifa:"SSD",car:{signs:[""],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ss.png",svg:"https://flagcdn.com/ss.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ss.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ss.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[4.85,31.62]}},{name:{common:"Iraq",official:"Republic of Iraq",nativeName:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0639\u0631\u0627\u0642",common:"\u0627\u0644\u0639\u0631\u0627\u0642"},arc:{official:"\u0729\u0718\u073C\u071B\u0722\u0735\u0710 \u0710\u071D\u073C\u072A\u0732\u0729",common:"\u0729\u0718\u073C\u071B\u0722\u0735\u0710"},ckb:{official:"\u06A9\u06C6\u0645\u0627\u0631\u06CC \u0639\u06CE\u0631\u0627\u0642",common:"\u06A9\u06C6\u0645\u0627\u0631\u06CC"}}},tld:[".iq"],cca2:"IQ",ccn3:"368",cca3:"IRQ",cioc:"IRQ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{IQD:{name:"Iraqi dinar",symbol:"\u0639.\u062F"}},idd:{root:"+9",suffixes:["64"]},capital:["Baghdad"],altSpellings:["IQ","Republic of Iraq","Jumh\u016Briyyat al-\u2018Ir\u0101q"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic",arc:"Aramaic",ckb:"Sorani"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0639\u0631\u0627\u0642",common:"\u0627\u0644\u0639\u0631\u0627\u0642"},ces:{official:"Ir\xE1ck\xE1 republika",common:"Ir\xE1k"},cym:{official:"Republic of Iraq",common:"Iraq"},deu:{official:"Republik Irak",common:"Irak"},est:{official:"Iraagi Vabariik",common:"Iraak"},fin:{official:"Irakin tasavalta",common:"Irak"},fra:{official:"R\xE9publique d'Irak",common:"Irak"},hrv:{official:"Republika Irak",common:"Irak"},hun:{official:"Iraki K\xF6zt\xE1rsas\xE1g",common:"Irak"},ita:{official:"Repubblica dell'Iraq",common:"Iraq"},jpn:{official:"\u30A4\u30E9\u30AF\u5171\u548C\u56FD",common:"\u30A4\u30E9\u30AF"},kor:{official:"\uC774\uB77C\uD06C \uACF5\uD654\uAD6D",common:"\uC774\uB77C\uD06C"},nld:{official:"Republiek Irak",common:"Irak"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0639\u0631\u0627\u0642",common:"\u0639\u0631\u0627\u0642"},pol:{official:"Republika Iraku",common:"Irak"},por:{official:"Rep\xFAblica do Iraque",common:"Iraque"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0418\u0440\u0430\u043A",common:"\u0418\u0440\u0430\u043A"},slk:{official:"Irack\xE1 republika",common:"Irak"},spa:{official:"Rep\xFAblica de Irak",common:"Irak"},swe:{official:"Republiken Irak",common:"Irak"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0639\u0631\u0627\u0642",common:"\u0639\u0631\u0627\u0642"},zho:{official:"\u4F0A\u62C9\u514B\u5171\u548C\u56FD",common:"\u4F0A\u62C9\u514B"}},latlng:[33,44],landlocked:!1,borders:["IRN","JOR","KWT","SAU","SYR","TUR"],area:438317,demonyms:{eng:{f:"Iraqi",m:"Iraqi"},fra:{f:"Irakienne",m:"Irakien"}},flag:"\u{1F1EE}\u{1F1F6}",maps:{googleMaps:"https://goo.gl/maps/iL8Bmy1sUCW9fUk18",openStreetMaps:"https://www.openstreetmap.org/relation/304934"},population:40222503,gini:{"2012":29.5},fifa:"IRQ",car:{signs:["IRQ"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/iq.png",svg:"https://flagcdn.com/iq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/iq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/iq.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[33.33,44.4]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Italy",official:"Italian Republic",nativeName:{ita:{official:"Repubblica italiana",common:"Italia"}}},tld:[".it"],cca2:"IT",ccn3:"380",cca3:"ITA",cioc:"ITA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["9"]},capital:["Rome"],altSpellings:["IT","Italian Republic","Repubblica italiana"],region:"Europe",subregion:"Southern Europe",languages:{ita:"Italian"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0625\u064A\u0637\u0627\u0644\u064A\u0629",common:"\u0625\u064A\u0637\u0627\u0644\u064A\u0627"},ces:{official:"Italsk\xE1 republika",common:"It\xE1lie"},cym:{official:"Italian Republic",common:"Italy"},deu:{official:"Italienische Republik",common:"Italien"},est:{official:"Itaalia Vabariik",common:"Itaalia"},fin:{official:"Italian tasavalta",common:"Italia"},fra:{official:"R\xE9publique italienne",common:"Italie"},hrv:{official:"talijanska Republika",common:"Italija"},hun:{official:"Olasz K\xF6zt\xE1rsas\xE1g",common:"Olaszorsz\xE1g"},ita:{official:"Repubblica italiana",common:"Italia"},jpn:{official:"\u30A4\u30BF\u30EA\u30A2\u5171\u548C\u56FD",common:"\u30A4\u30BF\u30EA\u30A2"},kor:{official:"\uC774\uD0C8\uB9AC\uC544 \uACF5\uD654\uAD6D",common:"\uC774\uD0C8\uB9AC\uC544"},nld:{official:"Italiaanse Republiek",common:"Itali\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u06CC\u062A\u0627\u0644\u06CC\u0627",common:"\u0627\u06CC\u062A\u0627\u0644\u06CC\u0627"},pol:{official:"Republika W\u0142oska",common:"W\u0142ochy"},por:{official:"Rep\xFAblica Italiana",common:"It\xE1lia"},rus:{official:"\u0438\u0442\u0430\u043B\u044C\u044F\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0418\u0442\u0430\u043B\u0438\u044F"},slk:{official:"Talianska republika",common:"Taliansko"},spa:{official:"Rep\xFAblica Italiana",common:"Italia"},swe:{official:"Republiken Italien",common:"Italien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0637\u0627\u0644\u06CC\u06C1",common:"\u0627\u0637\u0627\u0644\u06CC\u06C1"},zho:{official:"\u610F\u5927\u5229\u5171\u548C\u56FD",common:"\u610F\u5927\u5229"}},latlng:[42.83333333,12.83333333],landlocked:!1,borders:["AUT","FRA","SMR","SVN","CHE","VAT"],area:301336,demonyms:{eng:{f:"Italian",m:"Italian"},fra:{f:"Italienne",m:"Italien"}},flag:"\u{1F1EE}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/8M1K27TDj7StTRTq8",openStreetMaps:"https://www.openstreetmap.org/relation/365331"},population:59554023,gini:{"2017":35.9},fifa:"ITA",car:{signs:["I"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/it.png",svg:"https://flagcdn.com/it.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/it.png",svg:"https://mainfacts.com/media/images/coats_of_arms/it.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.9,12.48]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Cuba",official:"Republic of Cuba",nativeName:{spa:{official:"Rep\xFAblica de Cuba",common:"Cuba"}}},tld:[".cu"],cca2:"CU",ccn3:"192",cca3:"CUB",cioc:"CUB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CUC:{name:"Cuban convertible peso",symbol:"$"},CUP:{name:"Cuban peso",symbol:"$"}},idd:{root:"+5",suffixes:["3"]},capital:["Havana"],altSpellings:["CU","Republic of Cuba","Rep\xFAblica de Cuba"],region:"Americas",subregion:"Caribbean",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0648\u0628\u0627",common:"\u0643\u0648\u0628\u0627"},ces:{official:"Kub\xE1nsk\xE1 republika",common:"Kuba"},cym:{official:"Gweriniaeth Ciwba",common:"Ciwba"},deu:{official:"Republik Kuba",common:"Kuba"},est:{official:"Kuuba Vabariik",common:"Kuuba"},fin:{official:"Kuuban tasavalta",common:"Kuuba"},fra:{official:"R\xE9publique de Cuba",common:"Cuba"},hrv:{official:"Republika Kuba",common:"Kuba"},hun:{official:"Kubai K\xF6zt\xE1rsas\xE1g",common:"Kuba"},ita:{official:"Repubblica di Cuba",common:"Cuba"},jpn:{official:"\u30AD\u30E5\u30FC\u30D0\u5171\u548C\u56FD",common:"\u30AD\u30E5\u30FC\u30D0"},kor:{official:"\uCFE0\uBC14 \uACF5\uD654\uAD6D",common:"\uCFE0\uBC14"},nld:{official:"Republiek Cuba",common:"Cuba"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0648\u0628\u0627",common:"\u06A9\u0648\u0628\u0627"},pol:{official:"Republika Kuby",common:"Kuba"},por:{official:"Rep\xFAblica de Cuba",common:"Cuba"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0443\u0431\u0430",common:"\u041A\u0443\u0431\u0430"},slk:{official:"Kub\xE1nska republika",common:"Kuba"},spa:{official:"Rep\xFAblica de Cuba",common:"Cuba"},swe:{official:"Republiken Kuba",common:"Kuba"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u06CC\u0648\u0628\u0627",common:"\u06A9\u06CC\u0648\u0628\u0627"},zho:{official:"\u53E4\u5DF4\u5171\u548C\u56FD",common:"\u53E4\u5DF4"}},latlng:[21.5,-80],landlocked:!1,area:109884,demonyms:{eng:{f:"Cuban",m:"Cuban"},fra:{f:"Cubaine",m:"Cubain"}},flag:"\u{1F1E8}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/1dDw1QfZspfMUTm99",openStreetMaps:"https://www.openstreetmap.org/relation/307833"},population:11326616,fifa:"CUB",car:{signs:["C"],side:"right"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/cu.png",svg:"https://flagcdn.com/cu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[23.12,-82.35]},postalCode:{format:"CP #####",regex:"^(?:CP)*(\\d{5})$"}},{name:{common:"Bhutan",official:"Kingdom of Bhutan",nativeName:{dzo:{official:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F62\u0F92\u0FB1\u0F63\u0F0B\u0F41\u0F56\u0F0B",common:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B"}}},tld:[".bt"],cca2:"BT",ccn3:"064",cca3:"BTN",cioc:"BHU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BTN:{name:"Bhutanese ngultrum",symbol:"Nu."},INR:{name:"Indian rupee",symbol:"\u20B9"}},idd:{root:"+9",suffixes:["75"]},capital:["Thimphu"],altSpellings:["BT","Kingdom of Bhutan"],region:"Asia",subregion:"Southern Asia",languages:{dzo:"Dzongkha"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0628\u0648\u062A\u0627\u0646",common:"\u0628\u0648\u062A\u0627\u0646"},ces:{official:"Bh\xFAt\xE1nsk\xE9 kr\xE1lovstv\xED",common:"Bh\xFAt\xE1n"},cym:{official:"Teyrnas Bhwtan",common:"Bhwtan"},deu:{official:"K\xF6nigreich Bhutan",common:"Bhutan"},est:{official:"Bhutani Kuningriik",common:"Bhutan"},fin:{official:"Bhutanin kuningaskunta",common:"Bhutan"},fra:{official:"Royaume du Bhoutan",common:"Bhoutan"},hrv:{official:"Kraljevina Butan",common:"Butan"},hun:{official:"Bhut\xE1ni Kir\xE1lys\xE1g",common:"Bhut\xE1n"},ita:{official:"Regno del Bhutan",common:"Bhutan"},jpn:{official:"\u30D6\u30FC\u30BF\u30F3\u738B\u56FD",common:"\u30D6\u30FC\u30BF\u30F3"},kor:{official:"\uBD80\uD0C4 \uC655\uAD6D",common:"\uBD80\uD0C4"},nld:{official:"Koninkrijk Bhutan",common:"Bhutan"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0628\u0648\u062A\u0627\u0646",common:"\u0628\u0648\u062A\u0627\u0646"},pol:{official:"Bhutan",common:"Bhutan"},por:{official:"Reino do But\xE3o",common:"But\xE3o"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0411\u0443\u0442\u0430\u043D",common:"\u0411\u0443\u0442\u0430\u043D"},slk:{official:"Bhut\xE1nske kr\xE2\u013Eovstvo",common:"Bhut\xE1n"},spa:{official:"Reino de But\xE1n",common:"But\xE1n"},swe:{official:"Konungariket Bhutan",common:"Bhutan"},urd:{official:"\u0633\u0644\u0637\u0646\u062A \u0628\u06BE\u0648\u0679\u0627\u0646",common:"\u0628\u06BE\u0648\u0679\u0627\u0646"},zho:{official:"\u4E0D\u4E39\u738B\u56FD",common:"\u4E0D\u4E39"}},latlng:[27.5,90.5],landlocked:!0,borders:["CHN","IND"],area:38394,demonyms:{eng:{f:"Bhutanese",m:"Bhutanese"},fra:{f:"Bhoutanaise",m:"Bhoutanais"}},flag:"\u{1F1E7}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/VEfXXBftTFLUpNgp8",openStreetMaps:"https://www.openstreetmap.org/relation/184629"},population:771612,gini:{"2017":37.4},fifa:"BHU",car:{signs:["BHT"],side:"left"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bt.png",svg:"https://flagcdn.com/bt.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[27.47,89.63]}},{name:{common:"Bahamas",official:"Commonwealth of the Bahamas",nativeName:{eng:{official:"Commonwealth of the Bahamas",common:"Bahamas"}}},tld:[".bs"],cca2:"BS",ccn3:"044",cca3:"BHS",cioc:"BAH",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BSD:{name:"Bahamian dollar",symbol:"$"},USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["242"]},capital:["Nassau"],altSpellings:["BS","Commonwealth of the Bahamas"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0643\u0648\u0645\u0646\u0648\u0644\u062B \u062C\u0632\u0631 \u0627\u0644\u0628\u0647\u0627\u0645\u0627",common:"\u0628\u0627\u0647\u0627\u0645\u0627\u0633"},ces:{official:"Bahamsk\xE9 spole\u010Denstv\xED",common:"Bahamy"},cym:{official:"Cymanwlad y Bahamas",common:"Bahamas"},deu:{official:"Commonwealth der Bahamas",common:"Bahamas"},est:{official:"Bahama \xDChendus",common:"Bahama"},fin:{official:"Bahaman liittovaltio",common:"Bahamasaaret"},fra:{official:"Commonwealth des Bahamas",common:"Bahamas"},hrv:{official:"Zajednica Bahama",common:"Bahami"},hun:{official:"Bahamai K\xF6z\xF6ss\xE9g",common:"Bahama-szigetek"},ita:{official:"Commonwealth delle Bahamas",common:"Bahamas"},jpn:{official:"\u30D0\u30CF\u30DE",common:"\u30D0\u30CF\u30DE"},kor:{official:"\uBC14\uD558\uB9C8 \uC5F0\uBC29",common:"\uBC14\uD558\uB9C8"},nld:{official:"Gemenebest van de Bahama's",common:"Bahama\u2019s"},per:{official:"\u0642\u0644\u0645\u0631\u0648 \u0647\u0645\u0633\u0648\u062F \u0628\u0627\u0647\u0627\u0645\u0627",common:"\u0628\u0627\u0647\u0627\u0645\u0627"},pol:{official:"Bahamy",common:"Bahamy"},por:{official:"Comunidade das Bahamas",common:"Bahamas"},rus:{official:"\u0421\u043E\u0434\u0440\u0443\u0436\u0435\u0441\u0442\u0432\u043E \u0411\u0430\u0433\u0430\u043C\u0441\u043A\u0438\u0445 \u041E\u0441\u0442\u0440\u043E\u0432\u043E\u0432",common:"\u0411\u0430\u0433\u0430\u043C\u0441\u043A\u0438\u0435 \u041E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Bahamsk\xE9 spolo\u010Denstvo",common:"Bahamy"},spa:{official:"Commonwealth de las Bahamas",common:"Bahamas"},swe:{official:"Samv\xE4ldet Bahamas",common:"Bahamas"},urd:{official:"\u062F\u0648\u0644\u062A\u0650 \u0645\u0634\u062A\u0631\u06A9\u06C1 \u0628\u06C1\u0627\u0645\u0627\u0633",common:"\u0628\u06C1\u0627\u0645\u0627\u0633"},zho:{official:"\u5DF4\u54C8\u9A6C\u8054\u90A6",common:"\u5DF4\u54C8\u9A6C"}},latlng:[24.25,-76],landlocked:!1,area:13943,demonyms:{eng:{f:"Bahamian",m:"Bahamian"},fra:{f:"Bahamienne",m:"Bahamien"}},flag:"\u{1F1E7}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/1YzRs1BZrG8p8pmVA",openStreetMaps:"https://www.openstreetmap.org/relation/547469"},population:393248,fifa:"BAH",car:{signs:["BS"],side:"left"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bs.png",svg:"https://flagcdn.com/bs.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bs.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bs.svg"},startOfWeek:"monday",capitalInfo:{latlng:[25.08,-77.35]}},{name:{common:"Norway",official:"Kingdom of Norway",nativeName:{nno:{official:"Kongeriket Noreg",common:"Noreg"},nob:{official:"Kongeriket Norge",common:"Norge"},smi:{official:"Norgga gonagasriika",common:"Norgga"}}},tld:[".no"],cca2:"NO",ccn3:"578",cca3:"NOR",cioc:"NOR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NOK:{name:"Norwegian krone",symbol:"kr"}},idd:{root:"+4",suffixes:["7"]},capital:["Oslo"],altSpellings:["NO","Norge","Noreg","Kingdom of Norway","Kongeriket Norge","Kongeriket Noreg"],region:"Europe",subregion:"Northern Europe",languages:{nno:"Norwegian Nynorsk",nob:"Norwegian Bokm\xE5l",smi:"Sami"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0646\u0631\u0648\u064A\u062C",common:"\u0627\u0644\u0646\u0631\u0648\u064A\u062C"},ces:{official:"Norsk\xE9 kr\xE1lovstv\xED",common:"Norsko"},cym:{official:"Kingdom of Norway",common:"Norway"},deu:{official:"K\xF6nigreich Norwegen",common:"Norwegen"},est:{official:"Norra Kuningriik",common:"Norra"},fin:{official:"Norjan kuningaskunta",common:"Norja"},fra:{official:"Royaume de Norv\xE8ge",common:"Norv\xE8ge"},hrv:{official:"Kraljevina Norve\u0161ka",common:"Norve\u0161ka"},hun:{official:"Norv\xE9g Kir\xE1lys\xE1g",common:"Norv\xE9gia"},ita:{official:"Regno di Norvegia",common:"Norvegia"},jpn:{official:"\u30CE\u30EB\u30A6\u30A7\u30FC\u738B\u56FD",common:"\u30CE\u30EB\u30A6\u30A7\u30FC"},kor:{official:"\uB178\uB974\uC6E8\uC774 \uC655\uAD6D",common:"\uB178\uB974\uC6E8\uC774"},nld:{official:"Koninkrijk Noorwegen",common:"Noorwegen"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0646\u0631\u0648\u0698",common:"\u0646\u0631\u0648\u0698"},pol:{official:"Kr\xF3lestwo Norwegii",common:"Norwegia"},por:{official:"Reino da Noruega",common:"Noruega"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u041D\u043E\u0440\u0432\u0435\u0433\u0438\u044F",common:"\u041D\u043E\u0440\u0432\u0435\u0433\u0438\u044F"},slk:{official:"N\xF3rske kr\xE1\u013Eovstvo",common:"N\xF3rsko"},spa:{official:"Reino de Noruega",common:"Noruega"},swe:{official:"Konungariket Norge",common:"Norge"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0646\u0627\u0631\u0648\u06D2",common:"\u0646\u0627\u0631\u0648\u06D2"},zho:{official:"\u632A\u5A01\u738B\u56FD",common:"\u632A\u5A01"}},latlng:[62,10],landlocked:!1,borders:["FIN","SWE","RUS"],area:323802,demonyms:{eng:{f:"Norwegian",m:"Norwegian"},fra:{f:"Norv\xE9gienne",m:"Norv\xE9gien"}},flag:"\u{1F1F3}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/htWRrphA7vNgQNdSA",openStreetMaps:"https://www.openstreetmap.org/relation/2978650"},population:5379475,gini:{"2018":27.6},fifa:"NOR",car:{signs:["N"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/no.png",svg:"https://flagcdn.com/no.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/no.png",svg:"https://mainfacts.com/media/images/coats_of_arms/no.svg"},startOfWeek:"monday",capitalInfo:{latlng:[59.92,10.75]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Lithuania",official:"Republic of Lithuania",nativeName:{lit:{official:"Lietuvos Respublikos",common:"Lietuva"}}},tld:[".lt"],cca2:"LT",ccn3:"440",cca3:"LTU",cioc:"LTU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["70"]},capital:["Vilnius"],altSpellings:["LT","Republic of Lithuania","Lietuvos Respublika"],region:"Europe",subregion:"Northern Europe",languages:{lit:"Lithuanian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0644\u064A\u062A\u0648\u0627\u0646\u064A\u0627",common:"\u0644\u064A\u062A\u0648\u0627\u0646\u064A\u0627"},ces:{official:"Litevsk\xE1 republika",common:"Litva"},cym:{official:"Republic of Lithuania",common:"Lithuania"},deu:{official:"Republik Litauen",common:"Litauen"},est:{official:"Leedu Vabariik",common:"Leedu"},fin:{official:"Liettuan tasavalta",common:"Liettua"},fra:{official:"R\xE9publique de Lituanie",common:"Lituanie"},hrv:{official:"Republika Litva",common:"Litva"},hun:{official:"Litv\xE1n K\xF6zt\xE1rsas\xE1g",common:"Litv\xE1nia"},ita:{official:"Repubblica di Lituania",common:"Lituania"},jpn:{official:"\u30EA\u30C8\u30A2\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30EA\u30C8\u30A2\u30CB\u30A2"},kor:{official:"\uB9AC\uD22C\uC544\uB2C8\uC544 \uACF5\uD654\uAD6D",common:"\uB9AC\uD22C\uC544\uB2C8\uC544"},nld:{official:"Republiek Litouwen",common:"Litouwen"},per:{official:"\u0644\u06CC\u062A\u0648\u0627\u0646\u06CC\u0627\u06CC\u06CC\u200C\u0647\u0627",common:"\u0644\u06CC\u062A\u0648\u0627\u0646\u06CC\u0627\u06CC\u06CC\u200C\u0647\u0627"},pol:{official:"Republika Litewska",common:"Litwa"},por:{official:"Rep\xFAblica da Litu\xE2nia",common:"Litu\xE2nia"},rus:{official:"\u041B\u0438\u0442\u043E\u0432\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041B\u0438\u0442\u0432\u0430"},slk:{official:"Litovsk\xE1 republika",common:"Litva"},spa:{official:"Rep\xFAblica de Lituania",common:"Lituania"},swe:{official:"Republiken Litauen",common:"Litauen"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0644\u062A\u06BE\u0648\u0648\u06CC\u0646\u06CC\u0627",common:"\u0644\u062A\u06BE\u0648\u0648\u06CC\u0646\u06CC\u0627"},zho:{official:"\u7ACB\u9676\u5B9B\u5171\u548C\u56FD",common:"\u7ACB\u9676\u5B9B"}},latlng:[56,24],landlocked:!1,borders:["BLR","LVA","POL","RUS"],area:65300,demonyms:{eng:{f:"Lithuanian",m:"Lithuanian"},fra:{f:"Lituanienne",m:"Lituanien"}},flag:"\u{1F1F1}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/dd1s9rrLjrK2G8yY6",openStreetMaps:"https://www.openstreetmap.org/relation/72596"},population:2794700,gini:{"2018":35.7},fifa:"LTU",car:{signs:["LT"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/lt.png",svg:"https://flagcdn.com/lt.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[54.68,25.32]},postalCode:{format:"LT-#####",regex:"^(?:LT)*(\\d{5})$"}},{name:{common:"Kenya",official:"Republic of Kenya",nativeName:{eng:{official:"Republic of Kenya",common:"Kenya"},swa:{official:"Republic of Kenya",common:"Kenya"}}},tld:[".ke"],cca2:"KE",ccn3:"404",cca3:"KEN",cioc:"KEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KES:{name:"Kenyan shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["54"]},capital:["Nairobi"],altSpellings:["KE","Republic of Kenya","Jamhuri ya Kenya"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",swa:"Swahili"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u064A\u0646\u064A\u0627",common:"\u0643\u064A\u0646\u064A\u0627"},ces:{official:"Ke\u0148sk\xE1 republika",common:"Ke\u0148a"},cym:{official:"Republic of Kenya",common:"Kenya"},deu:{official:"Republik Kenia",common:"Kenia"},est:{official:"Keenia Vabariik",common:"Keenia"},fin:{official:"Kenian tasavalta",common:"Kenia"},fra:{official:"R\xE9publique du Kenya",common:"Kenya"},hrv:{official:"Republika Kenija",common:"Kenija"},hun:{official:"Kenyai K\xF6zt\xE1rsas\xE1g",common:"Kenya"},ita:{official:"Repubblica del Kenya",common:"Kenya"},jpn:{official:"\u30B1\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30B1\u30CB\u30A2"},kor:{official:"\uCF00\uB0D0 \uACF5\uD654\uAD6D",common:"\uCF00\uB0D0"},nld:{official:"Republiek Kenia",common:"Kenia"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0646\u06CC\u0627",common:"\u06A9\u0646\u06CC\u0627"},pol:{official:"Republika Kenii",common:"Kenia"},por:{official:"Rep\xFAblica do Qu\xE9nia",common:"Qu\xE9nia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0435\u043D\u0438\u044F",common:"\u041A\u0435\u043D\u0438\u044F"},slk:{official:"Kensk\xE1 republika",common:"Ke\u0148a"},spa:{official:"Rep\xFAblica de Kenya",common:"Kenia"},swe:{official:"Republiken Kenya",common:"Kenya"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u06CC\u0646\u06CC\u0627",common:"\u06A9\u06CC\u0646\u06CC\u0627"},zho:{official:"\u80AF\u5C3C\u4E9A\u5171\u548C\u56FD",common:"\u80AF\u5C3C\u4E9A"}},latlng:[1,38],landlocked:!1,borders:["ETH","SOM","SSD","TZA","UGA"],area:580367,demonyms:{eng:{f:"Kenyan",m:"Kenyan"},fra:{f:"K\xE9nyane",m:"K\xE9nyan"}},flag:"\u{1F1F0}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/Ni9M7wcCxf8bJHLX8",openStreetMaps:"https://www.openstreetmap.org/relation/192798"},population:53771300,gini:{"2015":40.8},fifa:"KEN",car:{signs:["EAK"],side:"left"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ke.png",svg:"https://flagcdn.com/ke.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ke.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ke.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-1.28,36.82]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Pitcairn Islands",official:"Pitcairn Group of Islands",nativeName:{eng:{official:"Pitcairn Group of Islands",common:"Pitcairn Islands"}}},tld:[".pn"],cca2:"PN",ccn3:"612",cca3:"PCN",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["4"]},capital:["Adamstown"],altSpellings:["PN","Pitcairn","Pitcairn Henderson Ducie and Oeno Islands"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0628\u064A\u062A\u0643\u064A\u0631\u0646",common:"\u062C\u0632\u0631 \u0628\u064A\u062A\u0643\u064A\u0631\u0646"},ces:{official:"Pitcairnovy ostrovy",common:"Pitcairnovy ostrovy"},cym:{official:"Pitcairn Group of Islands",common:"Pitcairn Islands"},deu:{official:"Pitcairninseln",common:"Pitcairninseln"},est:{official:"Pitcairni, Hendersoni, Ducie ja Oeno saar",common:"Pitcairn"},fin:{official:"Pitcairn",common:"Pitcairn"},fra:{official:"Groupe d'\xEEles Pitcairn",common:"\xCEles Pitcairn"},hrv:{official:"Pitcairn skupine otoka",common:"Pitcairnovo oto\u010Dje"},hun:{official:"Pitcairn-szigetek",common:"Pitcairn-szigetek"},ita:{official:"Pitcairn gruppo di isole",common:"Isole Pitcairn"},jpn:{official:"\u5CF6\u306E\u30D4\u30C8\u30B1\u30A2\u30F3\u30B0\u30EB\u30FC\u30D7",common:"\u30D4\u30C8\u30B1\u30A2\u30F3"},kor:{official:"\uD54F\uCF00\uC5B8 \uC81C\uB3C4",common:"\uD54F\uCF00\uC5B8 \uC81C\uB3C4"},nld:{official:"Pitcairn groep eilanden",common:"Pitcairneilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u067E\u06CC\u062A\u200C\u06A9\u0631\u0646",common:"\u062C\u0632\u0627\u06CC\u0631 \u067E\u06CC\u062A\u200C\u06A9\u0631\u0646"},pol:{official:"Wyspy Pitcairn, Henderson, Ducie i Oeno",common:"Pitcairn"},por:{official:"Pitcairn grupo de ilhas",common:"Ilhas Pitcairn"},rus:{official:"\u041F\u0438\u0442\u043A\u044D\u0440\u043D \u0433\u0440\u0443\u043F\u043F\u0430 \u043E\u0441\u0442\u0440\u043E\u0432\u043E\u0432",common:"\u041E\u0441\u0442\u0440\u043E\u0432\u0430 \u041F\u0438\u0442\u043A\u044D\u0440\u043D"},slk:{official:"Pitcairnove ostrovy",common:"Pitcairnove ostrovy"},spa:{official:"Grupo de Islas Pitcairn",common:"Islas Pitcairn"},swe:{official:"Pitcairn\xF6arna",common:"Pitcairn\xF6arna"},urd:{official:"\u067E\u0679\u06A9\u06CC\u0631\u0646 \u062C\u0632\u0627\u0626\u0631",common:"\u062C\u0632\u0627\u0626\u0631 \u067E\u0679\u06A9\u06CC\u0631\u0646"},zho:{official:"\u76AE\u7279\u51EF\u6069\u7FA4\u5C9B",common:"\u76AE\u7279\u51EF\u6069\u7FA4\u5C9B"}},latlng:[-25.06666666,-130.1],landlocked:!1,area:47,demonyms:{eng:{f:"Pitcairn Islander",m:"Pitcairn Islander"},fra:{f:"Pitcairnaise",m:"Pitcairnais"}},flag:"\u{1F1F5}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/XGJMnMAigXjXcxSa7",openStreetMaps:"https://www.openstreetmap.org/relation/2185375"},population:56,car:{signs:["GB"],side:"left"},timezones:["UTC-08:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pn.png",svg:"https://flagcdn.com/pn.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-25.07,-130.08]}},{name:{common:"Sweden",official:"Kingdom of Sweden",nativeName:{swe:{official:"Konungariket Sverige",common:"Sverige"}}},tld:[".se"],cca2:"SE",ccn3:"752",cca3:"SWE",cioc:"SWE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SEK:{name:"Swedish krona",symbol:"kr"}},idd:{root:"+4",suffixes:["6"]},capital:["Stockholm"],altSpellings:["SE","Kingdom of Sweden","Konungariket Sverige"],region:"Europe",subregion:"Northern Europe",languages:{swe:"Swedish"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0633\u0648\u064A\u062F",common:"\u0627\u0644\u0633\u0648\u064A\u062F"},ces:{official:"\u0160v\xE9dsk\xE9 kr\xE1lovstv\xED",common:"\u0160v\xE9dsko"},cym:{official:"Kingdom of Sweden",common:"Sweden"},deu:{official:"K\xF6nigreich Schweden",common:"Schweden"},est:{official:"Rootsi Kuningriik",common:"Rootsi"},fin:{official:"Ruotsin kuningaskunta",common:"Ruotsi"},fra:{official:"Royaume de Su\xE8de",common:"Su\xE8de"},hrv:{official:"Kraljevina \u0160vedska",common:"\u0160vedska"},hun:{official:"Sv\xE9d Kir\xE1lys\xE1g",common:"Sv\xE9dorsz\xE1g"},ita:{official:"Regno di Svezia",common:"Svezia"},jpn:{official:"\u30B9\u30A6\u30A7\u30FC\u30C7\u30F3\u738B\u56FD",common:"\u30B9\u30A6\u30A7\u30FC\u30C7\u30F3"},kor:{official:"\uC2A4\uC6E8\uB374 \uC655\uAD6D",common:"\uC2A4\uC6E8\uB374"},nld:{official:"Koninkrijk Zweden",common:"Zweden"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0633\u0648\u0626\u062F",common:"\u0633\u0648\u0626\u062F"},pol:{official:"Kr\xF3lestwo Szwecji",common:"Szwecja"},por:{official:"Reino da Su\xE9cia",common:"Su\xE9cia"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0428\u0432\u0435\u0446\u0438\u044F",common:"\u0428\u0432\u0435\u0446\u0438\u044F"},slk:{official:"\u0160v\xE9dske kr\xE1\u013Eovstvo",common:"\u0160v\xE9dsko"},spa:{official:"Reino de Suecia",common:"Suecia"},swe:{official:"Konungariket Sverige",common:"Sverige"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0633\u0648\u06CC\u0688\u0646",common:"\u0633\u0648\u06CC\u0688\u0646"},zho:{official:"\u745E\u5178\u738B\u56FD",common:"\u745E\u5178"}},latlng:[62,15],landlocked:!1,borders:["FIN","NOR"],area:450295,demonyms:{eng:{f:"Swedish",m:"Swedish"},fra:{f:"Su\xE9doise",m:"Su\xE9dois"}},flag:"\u{1F1F8}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/iqygE491ADVgnBW39",openStreetMaps:"https://www.openstreetmap.org/relation/52822"},population:10353442,gini:{"2018":30},fifa:"SWE",car:{signs:["S"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/se.png",svg:"https://flagcdn.com/se.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/se.png",svg:"https://mainfacts.com/media/images/coats_of_arms/se.svg"},startOfWeek:"monday",capitalInfo:{latlng:[59.33,18.05]},postalCode:{format:"SE-### ##",regex:"^(?:SE)*(\\d{5})$"}},{name:{common:"Guadeloupe",official:"Guadeloupe",nativeName:{fra:{official:"Guadeloupe",common:"Guadeloupe"}}},tld:[".gp"],cca2:"GP",ccn3:"312",cca3:"GLP",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+5",suffixes:["90"]},capital:["Basse-Terre"],altSpellings:["GP","Gwadloup"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"\u063A\u0648\u0627\u062F\u0644\u0648\u0628",common:"\u063A\u0648\u0627\u062F\u0644\u0648\u0628"},ces:{official:"Guadeloupe",common:"Guadeloupe"},cym:{official:"Guadeloupe",common:"Guadeloupe"},deu:{official:"Guadeloupe",common:"Guadeloupe"},est:{official:"Guadeloupe\u2019i ja s\xF5ltkondade departemang",common:"Guadeloupe"},fin:{official:"Guadeloupen departmentti",common:"Guadeloupe"},fra:{official:"Guadeloupe",common:"Guadeloupe"},hrv:{official:"Gvadalupa",common:"Gvadalupa"},hun:{official:"Guadeloupe",common:"Guadeloupe"},ita:{official:"Guadeloupe",common:"Guadeloupa"},jpn:{official:"\u30B0\u30A2\u30C9\u30EB\u30FC\u30D7\u5CF6",common:"\u30B0\u30A2\u30C9\u30EB\u30FC\u30D7"},kor:{official:"\uACFC\uB4E4\uB8E8\uD504",common:"\uACFC\uB4E4\uB8E8\uD504"},nld:{official:"Guadeloupe",common:"Guadeloupe"},per:{official:"\u06AF\u0648\u0627\u062F\u0644\u0648\u067E",common:"\u06AF\u0648\u0627\u062F\u0644\u0648\u067E"},pol:{official:"Gwadelupa",common:"Gwadelupa"},por:{official:"Guadalupe",common:"Guadalupe"},rus:{official:"\u0413\u0432\u0430\u0434\u0435\u043B\u0443\u043F\u0430",common:"\u0413\u0432\u0430\u0434\u0435\u043B\u0443\u043F\u0430"},slk:{official:"Guadeloupe",common:"Guadeloupe"},spa:{official:"Guadalupe",common:"Guadalupe"},swe:{official:"Guadeloupe",common:"Guadeloupe"},urd:{official:"\u06AF\u0648\u0627\u0688\u06CC\u0644\u0648\u067E",common:"\u06AF\u0648\u0627\u0688\u06CC\u0644\u0648\u067E"},zho:{official:"\u74DC\u5FB7\u7F57\u666E\u5C9B",common:"\u74DC\u5FB7\u7F57\u666E\u5C9B"}},latlng:[16.25,-61.583333],landlocked:!1,area:1628,demonyms:{eng:{f:"Guadeloupian",m:"Guadeloupian"},fra:{f:"Guadeloup\xE9enne",m:"Guadeloup\xE9en"}},flag:"\u{1F1EC}\u{1F1F5}",maps:{googleMaps:"https://goo.gl/maps/Dy9R2EufJtoWm8UN9",openStreetMaps:"https://www.openstreetmap.org/relation/7109289"},population:400132,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gp.png",svg:"https://flagcdn.com/gp.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gp.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gp.svg"},startOfWeek:"monday",capitalInfo:{latlng:[16.03,-61.73]},postalCode:{format:"#####",regex:"^((97|98)\\d{3})$"}},{name:{common:"Gabon",official:"Gabonese Republic",nativeName:{fra:{official:"R\xE9publique gabonaise",common:"Gabon"}}},tld:[".ga"],cca2:"GA",ccn3:"266",cca3:"GAB",cioc:"GAB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["41"]},capital:["Libreville"],altSpellings:["GA","Gabonese Republic","R\xE9publique Gabonaise"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u063A\u0627\u0628\u0648\u0646",common:"\u0627\u0644\u063A\u0627\u0628\u0648\u0646"},ces:{official:"Gabonsk\xE1 republika",common:"Gabon"},cym:{official:"Gabonese Republic",common:"Gabon"},deu:{official:"Gabunische Republik",common:"Gabun"},est:{official:"Gaboni Vabariik",common:"Gabon"},fin:{official:"Gabonin tasavalta",common:"Gabon"},fra:{official:"R\xE9publique gabonaise",common:"Gabon"},hrv:{official:"Gabon Republika",common:"Gabon"},hun:{official:"Gaboni K\xF6zt\xE1rsas\xE1g",common:"Gabon"},ita:{official:"Repubblica gabonese",common:"Gabon"},jpn:{official:"\u30AC\u30DC\u30F3\u5171\u548C\u56FD",common:"\u30AC\u30DC\u30F3"},kor:{official:"\uAC00\uBD09 \uACF5\uD654\uAD6D",common:"\uAC00\uBD09"},nld:{official:"Republiek Gabon",common:"Gabon"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06AF\u0627\u0628\u064F\u0646",common:"\u06AF\u0627\u0628\u0646"},pol:{official:"Republika Gabo\u0144ska",common:"Gabon"},por:{official:"Rep\xFAblica do Gab\xE3o",common:"Gab\xE3o"},rus:{official:"\u0413\u0430\u0431\u043E\u043D\u0430 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0413\u0430\u0431\u043E\u043D"},slk:{official:"Gabonsk\xE1 republika",common:"Gabon"},spa:{official:"Rep\xFAblica de Gab\xF3n",common:"Gab\xF3n"},swe:{official:"Republiken Gabon",common:"Gabon"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u06CC\u0628\u0648\u0646",common:"\u06AF\u06CC\u0628\u0648\u0646"},zho:{official:"\u52A0\u84EC\u5171\u548C\u56FD",common:"\u52A0\u84EC"}},latlng:[-1,11.75],landlocked:!1,borders:["CMR","COG","GNQ"],area:267668,demonyms:{eng:{f:"Gabonese",m:"Gabonese"},fra:{f:"Gabonaise",m:"Gabonais"}},flag:"\u{1F1EC}\u{1F1E6}",maps:{googleMaps:"https://www.openstreetmap.org/relation/192793",openStreetMaps:"https://goo.gl/maps/vyRSkqw1H1fnq4ry6"},population:2225728,gini:{"2017":38},fifa:"GAB",car:{signs:["G"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ga.png",svg:"https://flagcdn.com/ga.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ga.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ga.svg"},startOfWeek:"monday",capitalInfo:{latlng:[.38,9.45]}},{name:{common:"Macau",official:"Macao Special Administrative Region of the People's Republic of China",nativeName:{por:{official:"Regi\xE3o Administrativa Especial de Macau da Rep\xFAblica Popular da China",common:"Macau"},zho:{official:"\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD\u6FB3\u95E8\u7279\u522B\u884C\u653F\u533A",common:"\u6FB3\u95E8"}}},tld:[".mo"],cca2:"MO",ccn3:"446",cca3:"MAC",independent:!1,status:"officially-assigned",unMember:!1,currencies:{MOP:{name:"Macanese pataca",symbol:"P"}},idd:{root:"+8",suffixes:["53"]},altSpellings:["MO","\u6FB3\u95E8","Macao","Macao Special Administrative Region of the People's Republic of China","\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u570B\u6FB3\u9580\u7279\u5225\u884C\u653F\u5340","Regi\xE3o Administrativa Especial de Macau da Rep\xFAblica Popular da China"],region:"Asia",subregion:"Eastern Asia",languages:{por:"Portuguese",zho:"Chinese"},translations:{ara:{official:"\u0645\u0646\u0637\u0642\u0629 \u0645\u0627\u0643\u0627\u0648 \u0627\u0644\u0625\u062F\u0627\u0631\u064A\u0629 \u0627\u0644\u062A\u0627\u0628\u0639\u0629 \u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0635\u064A\u0646 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0645\u0627\u0643\u0627\u0648"},ces:{official:"Zvl\xE1\u0161tn\xED spr\xE1vn\xED oblast \u010C\xEDnsk\xE9 lidov\xE9 republiky Macao",common:"Macao"},cym:{official:"Macao Special Administrative Region of the People's Republic of China",common:"Macau"},deu:{official:"Sonderverwaltungsregion Macau der Volksrepublik China",common:"Macao"},est:{official:"Macau erihalduspiirkond",common:"Macau"},fin:{official:"Macaon Kiinan kansantasavallan erityishallintoalue",common:"Macao"},fra:{official:"R\xE9gion administrative sp\xE9ciale de Macao de la R\xE9publique populaire de Chine",common:"Macao"},hrv:{official:"Makao Posebnog upravnog podru\u010DjaNarodne Republike Kine",common:"Makao"},hun:{official:"Maka\xF3",common:"Maka\xF3"},ita:{official:"Macao Regione amministrativa speciale della Repubblica Popolare Cinese",common:"Macao"},jpn:{official:"\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD\u30DE\u30AB\u30AA\u7279\u5225\u884C\u653F\u533A",common:"\u30DE\u30AB\u30AA"},kor:{official:"\uC911\uD654\uC778\uBBFC\uACF5\uD654\uAD6D \uB9C8\uCE74\uC624 \uD2B9\uBCC4\uD589\uC815\uAD6C",common:"\uB9C8\uCE74\uC624"},nld:{official:"Speciale Administratieve Regio Macau van de Volksrepubliek China",common:"Macao"},per:{official:"\u0645\u0627\u06A9\u0627\u0626\u0648",common:"\u0645\u0627\u06A9\u0627\u0626\u0648"},pol:{official:"Specjalny Region Administracyjny Chi\u0144skiej Republiki Ludowej Makau",common:"Makau"},por:{official:"Macau Regi\xE3o Administrativa Especial da Rep\xFAblica Popular da China",common:"Macau"},rus:{official:"\u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0439 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043D\u044B\u0439 \u0440\u0430\u0439\u043E\u043D \u041C\u0430\u043A\u0430\u043E \u041A\u0438\u0442\u0430\u0439\u0441\u043A\u043E\u0439 \u041D\u0430\u0440\u043E\u0434\u043D\u043E\u0439 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0438 \u041A\u0438\u0442\u0430\u0439",common:"\u041C\u0430\u043A\u0430\u043E"},slk:{official:"Macao, \u0160peci\xE0lna administrat\xEDvna oblas\u0166",common:"Macao"},spa:{official:"Macao, Regi\xF3n Administrativa Especial de la Rep\xFAblica Popular China",common:"Macao"},swe:{official:"Macao",common:"Macao"},urd:{official:"\u0645\u06A9\u0627\u0624 \u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0686\u06CC\u0646 \u06A9\u0627 \u062E\u0635\u0648\u0635\u06CC \u0627\u0646\u062A\u0638\u0627\u0645\u06CC \u0639\u0644\u0627\u0642\u06C1",common:"\u0645\u06A9\u0627\u0624"}},latlng:[22.16666666,113.55],landlocked:!1,borders:["CHN"],area:30,demonyms:{eng:{f:"Macanese",m:"Macanese"},fra:{f:"Macanaise",m:"Macanais"}},flag:"\u{1F1F2}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/whymRdk3dZFfAAs4A",openStreetMaps:"https://www.openstreetmap.org/relation/1867188"},population:649342,fifa:"MAC",car:{signs:["MO"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mo.png",svg:"https://flagcdn.com/mo.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mo.svg"},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Guernsey",official:"Bailiwick of Guernsey",nativeName:{eng:{official:"Bailiwick of Guernsey",common:"Guernsey"},fra:{official:"Bailliage de Guernesey",common:"Guernesey"},nfr:{official:"Dg\xE8rn\xE9siais",common:"Dg\xE8rn\xE9siais"}}},tld:[".gg"],cca2:"GG",ccn3:"831",cca3:"GGY",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"British pound",symbol:"\xA3"},GGP:{name:"Guernsey pound",symbol:"\xA3"}},idd:{root:"+4",suffixes:["4"]},capital:["St. Peter Port"],altSpellings:["GG","Bailiwick of Guernsey","Bailliage de Guernesey"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",fra:"French",nfr:"Guern\xE9siais"},translations:{ara:{official:"\u063A\u064A\u0631\u0646\u0632\u064A",common:"\u063A\u064A\u0631\u0646\u0632\u064A"},ces:{official:"Rycht\xE1\u0159stv\xED Guernsey",common:"Guernsey"},cym:{official:"Bailiwick of Guernsey",common:"Guernsey"},deu:{official:"Vogtei Guernsey",common:"Guernsey"},est:{official:"Guernsey foogtkond",common:"Guernsey"},fin:{official:"Guernsey",common:"Guernsey"},fra:{official:"Bailliage de Guernesey",common:"Guernesey"},hrv:{official:"Struka Guernsey",common:"Guernsey"},hun:{official:"Guernsey",common:"Guernsey"},ita:{official:"Baliato di Guernsey",common:"Guernsey"},jpn:{official:"\u30AC\u30FC\u30F3\u30B8\u30FC\u306E\u5F97\u610F\u5206\u91CE",common:"\u30AC\u30FC\u30F3\u30B8\u30FC"},kor:{official:"\uAC74\uC9C0 \uC12C",common:"\uAC74\uC9C0 \uC12C"},nld:{official:"Baljuwschap Guernsey",common:"Guernsey"},per:{official:"\u06AF\u0631\u0646\u0632\u06CC",common:"\u06AF\u0631\u0646\u0632\u06CC"},pol:{official:"Baliwat Guernsey",common:"Guernsey"},por:{official:"Bailiado de Guernsey",common:"Guernsey"},rus:{official:"\u041A\u043E\u0440\u043E\u043D\u043D\u043E\u0435 \u0432\u043B\u0430\u0434\u0435\u043D\u0438\u0435 \u0413\u0435\u0440\u043D\u0441\u0438",common:"\u0413\u0435\u0440\u043D\u0441\u0438"},slk:{official:"Guernsey",common:"Guernsey"},spa:{official:"Bail\xEDa de Guernsey",common:"Guernsey"},swe:{official:"Guernsey",common:"Guernsey"},urd:{official:"\u06AF\u0631\u0646\u0632\u06CC \u0631\u0648\u062F\u0628\u0627\u0631",common:"\u06AF\u0631\u0646\u0632\u06CC"},zho:{official:"\u6839\u897F\u5C9B",common:"\u6839\u897F\u5C9B"}},latlng:[49.46666666,-2.58333333],landlocked:!1,area:78,demonyms:{eng:{f:"Channel Islander",m:"Channel Islander"},fra:{f:"Guernesiaise",m:"Guernesiais"}},flag:"\u{1F1EC}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/6kXnQU5QvEZMD9VB7",openStreetMaps:"https://www.openstreetmap.org/relation/270009"},population:62999,car:{signs:["GBG"],side:"left"},timezones:["UTC+00:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gg.png",svg:"https://flagcdn.com/gg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[49.45,-2.54]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Rwanda",official:"Republic of Rwanda",nativeName:{eng:{official:"Republic of Rwanda",common:"Rwanda"},fra:{official:"R\xE9publique rwandaise",common:"Rwanda"},kin:{official:"Repubulika y'u Rwanda",common:"Rwanda"}}},tld:[".rw"],cca2:"RW",ccn3:"646",cca3:"RWA",cioc:"RWA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RWF:{name:"Rwandan franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["50"]},capital:["Kigali"],altSpellings:["RW","Republic of Rwanda","Repubulika y'u Rwanda","R\xE9publique du Rwanda"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",fra:"French",kin:"Kinyarwanda"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0631\u0648\u0627\u0646\u062F\u0627",common:"\u0631\u0648\u0627\u0646\u062F\u0627"},ces:{official:"Rwandsk\xE1 republika",common:"Rwanda"},cym:{official:"Republic of Rwanda",common:"Rwanda"},deu:{official:"Republik Ruanda",common:"Ruanda"},est:{official:"Rwanda Vabariik",common:"Rwanda"},fin:{official:"Ruandan tasavalta",common:"Ruanda"},fra:{official:"R\xE9publique rwandaise",common:"Rwanda"},hrv:{official:"Republika Ruandi",common:"Ruanda"},hun:{official:"Ruandai K\xF6zt\xE1rsas\xE1g",common:"Ruanda"},ita:{official:"Repubblica del Ruanda",common:"Ruanda"},jpn:{official:"\u30EB\u30EF\u30F3\u30C0\u5171\u548C\u56FD",common:"\u30EB\u30EF\u30F3\u30C0"},kor:{official:"\uB974\uC644\uB2E4 \uACF5\uD654\uAD6D",common:"\uB974\uC644\uB2E4"},nld:{official:"Republiek Rwanda",common:"Rwanda"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0631\u0648\u0627\u0646\u062F\u0627",common:"\u0631\u0648\u0627\u0646\u062F\u0627"},pol:{official:"Republika Rwandy",common:"Rwanda"},por:{official:"Rep\xFAblica do Ruanda",common:"Ruanda"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0420\u0443\u0430\u043D\u0434\u0430",common:"\u0420\u0443\u0430\u043D\u0434\u0430"},slk:{official:"Rwandsk\xE1 republika",common:"Rwanda"},spa:{official:"Rep\xFAblica de Rwanda",common:"Ruanda"},swe:{official:"Republiken Rwanda",common:"Rwanda"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0631\u0648\u0627\u0646\u0688\u0627",common:"\u0631\u0648\u0627\u0646\u0688\u0627"},zho:{official:"\u5362\u65FA\u8FBE\u5171\u548C\u56FD",common:"\u5362\u65FA\u8FBE"}},latlng:[-2,30],landlocked:!0,borders:["BDI","COD","TZA","UGA"],area:26338,demonyms:{eng:{f:"Rwandan",m:"Rwandan"},fra:{f:"Rwandaise",m:"Rwandais"}},flag:"\u{1F1F7}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/j5xb5r7CLqjYbyP86",openStreetMaps:"https://www.openstreetmap.org/relation/171496"},population:12952209,gini:{"2016":43.7},fifa:"RWA",car:{signs:["RWA"],side:"right"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/rw.png",svg:"https://flagcdn.com/rw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/rw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/rw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-1.95,30.05]}},{name:{common:"Syria",official:"Syrian Arab Republic",nativeName:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0648\u0631\u064A\u0629",common:"\u0633\u0648\u0631\u064A\u0627"}}},tld:[".sy","\u0633\u0648\u0631\u064A\u0627."],cca2:"SY",ccn3:"760",cca3:"SYR",cioc:"SYR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SYP:{name:"Syrian pound",symbol:"\xA3"}},idd:{root:"+9",suffixes:["63"]},capital:["Damascus"],altSpellings:["SY","Syrian Arab Republic","Al-Jumh\u016Br\u012Byah Al-\u02BBArab\u012Byah As-S\u016Br\u012Byah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0648\u0631\u064A\u0629",common:"\u0633\u0648\u0631\u064A\u0627"},ces:{official:"Syrsk\xE1 arabsk\xE1 republika",common:"S\xFDrie"},cym:{official:"Syrian Arab Republic",common:"Syria"},deu:{official:"Arabische Republik Syrien",common:"Syrien"},est:{official:"S\xFC\xFCria Araabia Vabariik",common:"S\xFC\xFCria"},fin:{official:"Syyrian arabitasavalta",common:"Syyria"},fra:{official:"R\xE9publique arabe syrienne",common:"Syrie"},hrv:{official:"Sirijska Arapska Republika",common:"Sirija"},hun:{official:"Sz\xEDriai Arab K\xF6zt\xE1rsas\xE1g",common:"Sz\xEDria"},ita:{official:"Repubblica araba siriana",common:"Siria"},jpn:{official:"\u30B7\u30EA\u30A2\u30A2\u30E9\u30D6\u5171\u548C\u56FD",common:"\u30B7\u30EA\u30A2\u30FB\u30A2\u30E9\u30D6\u5171\u548C\u56FD"},kor:{official:"\uC2DC\uB9AC\uC544 \uC544\uB78D \uACF5\uD654\uAD6D",common:"\uC2DC\uB9AC\uC544"},nld:{official:"Syrische Arabische Republiek",common:"Syri\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0639\u0631\u0628\u06CC \u0633\u0648\u0631\u06CC\u0647",common:"\u0633\u0648\u0631\u06CC\u0647"},pol:{official:"Syryjska Republika Arabska",common:"Syria"},por:{official:"Rep\xFAblica \xC1rabe S\xEDria",common:"S\xEDria"},rus:{official:"\u0421\u0438\u0440\u0438\u0439\u0441\u043A\u0430\u044F \u0410\u0440\u0430\u0431\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0421\u0438\u0440\u0438\u044F"},slk:{official:"S\xFDrska arabsk\xE1 republika",common:"S\xFDria"},spa:{official:"Rep\xFAblica \xC1rabe Siria",common:"Siria"},swe:{official:"Syriska arabiska republiken",common:"Syrien"},urd:{official:"\u0639\u0631\u0628 \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0648\u0631\u06CC\u06C1",common:"\u0633\u0648\u0631\u06CC\u06C1"},zho:{official:"\u53D9\u5229\u4E9A\u963F\u62C9\u4F2F\u5171\u548C\u56FD",common:"\u53D9\u5229\u4E9A"}},latlng:[35,38],landlocked:!1,borders:["IRQ","ISR","JOR","LBN","TUR"],area:185180,demonyms:{eng:{f:"Syrian",m:"Syrian"},fra:{f:"Syrienne",m:"Syrien"}},flag:"\u{1F1F8}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/Xe3VnFbwdb4nv2SM9",openStreetMaps:"https://www.openstreetmap.org/relation/184840"},population:17500657,gini:{"2003":37.5},fifa:"SYR",car:{signs:["SYR"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/sy.png",svg:"https://flagcdn.com/sy.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sy.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sy.svg"},startOfWeek:"monday",capitalInfo:{latlng:[33.5,36.3]}},{name:{common:"Canada",official:"Canada",nativeName:{eng:{official:"Canada",common:"Canada"},fra:{official:"Canada",common:"Canada"}}},tld:[".ca"],cca2:"CA",ccn3:"124",cca3:"CAN",cioc:"CAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CAD:{name:"Canadian dollar",symbol:"$"}},idd:{root:"+1",suffixes:[""]},capital:["Ottawa"],altSpellings:["CA"],region:"Americas",subregion:"North America",languages:{eng:"English",fra:"French"},translations:{ara:{official:"\u0643\u0646\u062F\u0627",common:"\u0643\u0646\u062F\u0627"},ces:{official:"Kanada",common:"Kanada"},cym:{official:"Canada",common:"Canada"},deu:{official:"Kanada",common:"Kanada"},est:{official:"Kanada",common:"Kanada"},fin:{official:"Kanada",common:"Kanada"},fra:{official:"Canada",common:"Canada"},hrv:{official:"Kanada",common:"Kanada"},hun:{official:"Kanada",common:"Kanada"},ita:{official:"Canada",common:"Canada"},jpn:{official:"\u30AB\u30CA\u30C0",common:"\u30AB\u30CA\u30C0"},kor:{official:"\uCE90\uB098\uB2E4",common:"\uCE90\uB098\uB2E4"},nld:{official:"Canada",common:"Canada"},per:{official:"\u06A9\u0627\u0646\u0627\u062F\u0627",common:"\u06A9\u0627\u0646\u0627\u062F\u0627"},pol:{official:"Kanada",common:"Kanada"},por:{official:"Canad\xE1",common:"Canad\xE1"},rus:{official:"\u041A\u0430\u043D\u0430\u0434\u0430",common:"\u041A\u0430\u043D\u0430\u0434\u0430"},slk:{official:"Kanada",common:"Kanada"},spa:{official:"Canad\xE1",common:"Canad\xE1"},swe:{official:"Kanada",common:"Kanada"},urd:{official:"\u06A9\u06CC\u0646\u06CC\u0688\u0627",common:"\u06A9\u06CC\u0646\u06CC\u0688\u0627"},zho:{official:"\u52A0\u62FF\u5927",common:"\u52A0\u62FF\u5927"}},latlng:[60,-95],landlocked:!1,borders:["USA"],area:9984670,demonyms:{eng:{f:"Canadian",m:"Canadian"},fra:{f:"Canadienne",m:"Canadien"}},flag:"\u{1F1E8}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/jmEVLugreeqiZXxbA",openStreetMaps:"https://www.openstreetmap.org/relation/1428125"},population:38005238,gini:{"2017":33.3},fifa:"CAN",car:{signs:["CDN"],side:"right"},timezones:["UTC-08:00","UTC-07:00","UTC-06:00","UTC-05:00","UTC-04:00","UTC-03:30"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ca.png",svg:"https://flagcdn.com/ca.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ca.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ca.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[45.42,-75.7]},postalCode:{format:"@#@ #@#",regex:"^([ABCEGHJKLMNPRSTVXY]\\d[ABCEGHJKLMNPRSTVWXYZ]) ?(\\d[ABCEGHJKLMNPRSTVWXYZ]\\d)$ "}},{name:{common:"Algeria",official:"People's Democratic Republic of Algeria",nativeName:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629 \u0627\u0644\u0634\u0639\u0628\u064A\u0629 \u0627\u0644\u062C\u0632\u0627\u0626\u0631\u064A\u0629",common:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"}}},tld:[".dz","\u0627\u0644\u062C\u0632\u0627\u0626\u0631."],cca2:"DZ",ccn3:"012",cca3:"DZA",cioc:"ALG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DZD:{name:"Algerian dinar",symbol:"\u062F.\u062C"}},idd:{root:"+2",suffixes:["13"]},capital:["Algiers"],altSpellings:["DZ","Dzayer","Alg\xE9rie"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629 \u0627\u0644\u0634\u0639\u0628\u064A\u0629 \u0627\u0644\u062C\u0632\u0627\u0626\u0631\u064A\u0629",common:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},ces:{official:"Al\u017E\xEDrsk\xE1 demokratick\xE1 a lidov\xE1 republika",common:"Al\u017E\xEDrsko"},cym:{official:"Gweriniaeth Ddemocrataidd Pobl Algeria",common:"Algeria"},deu:{official:"Demokratische Volksrepublik Algerien",common:"Algerien"},est:{official:"Al\u017Eeeria Demokraatlik Rahvavabariik",common:"Al\u017Eeeria"},fin:{official:"Algerian demokraattinen kansantasavalta",common:"Algeria"},fra:{official:"R\xE9publique d\xE9mocratique et populaire d'Alg\xE9rie",common:"Alg\xE9rie"},hrv:{official:"Narodna Demokratska Republika Al\u017Eir",common:"Al\u017Eir"},hun:{official:"Alg\xE9riai N\xE9pi Demokratikus K\xF6zt\xE1rsas\xE1g",common:"Alg\xE9ria"},ita:{official:"Repubblica popolare democratica di Algeria",common:"Algeria"},jpn:{official:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2"},kor:{official:"\uC54C\uC81C\uB9AC \uC778\uBBFC \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uC54C\uC81C\uB9AC"},nld:{official:"Democratische Volksrepubliek Algerije",common:"Algerije"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u062E\u0644\u0642 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",common:"\u0627\u0644\u062C\u0632\u0627\u06CC\u0631"},pol:{official:"Algierska Republika Ludowo-Demokratyczna",common:"Algieria"},por:{official:"Rep\xFAblica Argelina Democr\xE1tica e Popular",common:"Arg\xE9lia"},rus:{official:"\u041D\u0430\u0440\u043E\u0434\u043D\u043E-\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0410\u043B\u0436\u0438\u0440",common:"\u0410\u043B\u0436\u0438\u0440"},slk:{official:"Al\u017E\xEDrska demokratick\xE1 \u013Eudov\xE1 republika",common:"Al\u017E\xEDrsko"},spa:{official:"Rep\xFAblica Argelina Democr\xE1tica y Popular",common:"Argelia"},swe:{official:"Demokratiska folkrepubliken Algeriet",common:"Algeriet"},urd:{official:"\u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0644\u062C\u0632\u0627\u0626\u0631",common:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},zho:{official:"\u963F\u5C14\u53CA\u5229\u4E9A\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u963F\u5C14\u53CA\u5229\u4E9A"}},latlng:[28,3],landlocked:!1,borders:["TUN","LBY","NER","ESH","MRT","MLI","MAR"],area:2381741,demonyms:{eng:{f:"Algerian",m:"Algerian"},fra:{f:"Alg\xE9rienne",m:"Alg\xE9rien"}},flag:"\u{1F1E9}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/RsAyAfyaiNVb8DpW8",openStreetMaps:"https://www.openstreetmap.org/relation/192756"},population:447e5,gini:{"2011":27.6},fifa:"ALG",car:{signs:["DZ"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/dz.png",svg:"https://flagcdn.com/dz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dz.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[36.75,3.05]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"British Indian Ocean Territory",official:"British Indian Ocean Territory",nativeName:{eng:{official:"British Indian Ocean Territory",common:"British Indian Ocean Territory"}}},tld:[".io"],cca2:"IO",ccn3:"086",cca3:"IOT",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+2",suffixes:["46"]},capital:["Diego Garcia"],altSpellings:["IO"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English"},translations:{ara:{official:"\u0625\u0642\u0644\u064A\u0645 \u0627\u0644\u0645\u062D\u064A\u0637 \u0627\u0644\u0647\u0646\u062F\u064A \u0627\u0644\u0628\u0631\u064A\u0637\u0627\u0646\u064A",common:"\u0625\u0642\u0644\u064A\u0645 \u0627\u0644\u0645\u062D\u064A\u0637 \u0627\u0644\u0647\u0646\u062F\u064A \u0627\u0644\u0628\u0631\u064A\u0637\u0627\u0646\u064A"},ces:{official:"Britsk\xE9 indickooce\xE1nsk\xE9 \xFAzem\xED",common:"Britsk\xE9 indickooce\xE1nsk\xE9 \xFAzem\xED"},cym:{official:"Tiriogaeth Brydeinig Cefnfor India",common:"Tiriogaeth Brydeinig Cefnfor India"},deu:{official:"Britisches Territorium im Indischen Ozean",common:"Britisches Territorium im Indischen Ozean"},est:{official:"Briti India ookeani ala",common:"Briti India ookeani ala"},fin:{official:"Brittil\xE4inen Intian valtameren alue",common:"Brittil\xE4inen Intian valtameren alue"},fra:{official:"Territoire britannique de l' oc\xE9an Indien",common:"Territoire britannique de l'oc\xE9an Indien"},hrv:{official:"British Indian Ocean Territory",common:"Britanski Indijskooceanski teritorij"},hun:{official:"Brit Indiai-\xF3ce\xE1ni Ter\xFClet",common:"Brit Indiai-\xF3ce\xE1ni Ter\xFClet"},ita:{official:"Territorio britannico dell'Oceano Indiano",common:"Territorio britannico dell'oceano indiano"},jpn:{official:"\u30A4\u30AE\u30EA\u30B9\u9818\u30A4\u30F3\u30C9\u6D0B\u5730\u57DF",common:"\u30A4\u30AE\u30EA\u30B9\u9818\u30A4\u30F3\u30C9\u6D0B\u5730\u57DF"},kor:{official:"\uC778\uB3C4 \uACF5\uD654\uAD6D",common:"\uC778\uB3C4"},nld:{official:"Brits Indische Oceaan Territorium",common:"Britse Gebieden in de Indische Oceaan"},per:{official:"\u0642\u0644\u0645\u0631\u0648 \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627 \u062F\u0631 \u0627\u0642\u06CC\u0627\u0646\u0648\u0633 \u0647\u0646\u062F",common:"\u0642\u0644\u0645\u0631\u0648 \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627 \u062F\u0631 \u0627\u0642\u06CC\u0627\u0646\u0648\u0633 \u0647\u0646\u062F"},pol:{official:"Brytyjskie Terytorium Oceanu Indyjskiego",common:"Brytyjskie Terytorium Oceanu Indyjskiego"},por:{official:"British Indian Ocean Territory",common:"Territ\xF3rio Brit\xE2nico do Oceano \xCDndico"},rus:{official:"\u0411\u0440\u0438\u0442\u0430\u043D\u0441\u043A\u0430\u044F \u0442\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u0418\u043D\u0434\u0438\u0439\u0441\u043A\u043E\u0433\u043E \u043E\u043A\u0435\u0430\u043D\u0430",common:"\u0411\u0440\u0438\u0442\u0430\u043D\u0441\u043A\u0430\u044F \u0442\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u0432 \u0418\u043D\u0434\u0438\u0439\u0441\u043A\u043E\u043C \u043E\u043A\u0435\u0430\u043D\u0435"},slk:{official:"Britsk\xE9 indickooce\xE1nske \xFAzemie",common:"Britsk\xE9 indickooce\xE1nske \xFAzemie"},spa:{official:"Territorio Brit\xE1nico del Oc\xE9ano \xCDndico",common:"Territorio Brit\xE1nico del Oc\xE9ano \xCDndico"},swe:{official:"Brittiska territoriet i Indiska Oceanen",common:"Brittiska territoriet i Indiska Oceanen"},urd:{official:"\u0628\u0631\u0637\u0627\u0646\u0648\u06CC \u0628\u062D\u0631\u06C1\u0646\u062F \u062E\u0637\u06C1",common:"\u0628\u0631\u0637\u0627\u0646\u0648\u06CC \u0628\u062D\u0631\u06C1\u0646\u062F \u062E\u0637\u06C1"},zho:{official:"\u82F1\u5C5E\u5370\u5EA6\u6D0B\u9886\u5730",common:"\u82F1\u5C5E\u5370\u5EA6\u6D0B\u9886\u5730"}},latlng:[-6,71.5],landlocked:!1,area:60,demonyms:{eng:{f:"Indian",m:"Indian"}},flag:"\u{1F1EE}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/bheNucgekVEYozoi6",openStreetMaps:"https://www.openstreetmap.org/relation/1993867"},population:3e3,car:{signs:["GB"],side:"right"},timezones:["UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/io.png",svg:"https://flagcdn.com/io.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-7.3,72.4]}},{name:{common:"Western Sahara",official:"Sahrawi Arab Democratic Republic",nativeName:{ber:{official:"Sahrawi Arab Democratic Republic",common:"Western Sahara"},mey:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0635\u062D\u0631\u0627\u0648\u064A\u0629 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629",common:"\u0627\u0644\u0635\u062D\u0631\u0627\u0621 \u0627\u0644\u063A\u0631\u0628\u064A\u0629"},spa:{official:"Rep\xFAblica \xC1rabe Saharaui Democr\xE1tica",common:"Sahara Occidental"}}},tld:[".eh"],cca2:"EH",ccn3:"732",cca3:"ESH",independent:!1,status:"officially-assigned",unMember:!1,currencies:{DZD:{name:"Algerian dinar",symbol:"\u062F\u062C"},MAD:{name:"Moroccan dirham",symbol:"DH"},MRU:{name:"Mauritanian ouguiya",symbol:"UM"}},idd:{root:"+2",suffixes:["125288","125289"]},capital:["El Aai\xFAn"],altSpellings:["EH","Tane\u1E93roft Tutrimt"],region:"Africa",subregion:"Northern Africa",languages:{ber:"Berber",mey:"Hassaniya",spa:"Spanish"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0635\u062D\u0631\u0627\u0648\u064A\u0629 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629",common:"\u0627\u0644\u0635\u062D\u0631\u0627\u0621 \u0627\u0644\u063A\u0631\u0628\u064A\u0629"},ces:{official:"Z\xE1padn\xED Sahara",common:"Z\xE1padn\xED Sahara"},cym:{official:"Sahrawi Arab Democratic Republic",common:"Western Sahara"},deu:{official:"Demokratische Arabische Republik Sahara",common:"Westsahara"},est:{official:"L\xE4\xE4ne-Sahara",common:"L\xE4\xE4ne-Sahara"},fin:{official:"L\xE4nsi-Sahara",common:"L\xE4nsi-Sahara"},fra:{official:"R\xE9publique arabe sahraouie d\xE9mocratique",common:"Sahara Occidental"},hrv:{official:"Sahrawi Arab Demokratska Republika",common:"Zapadna Sahara"},hun:{official:"Nyugat-Szahara",common:"Nyugat-Szahara"},ita:{official:"Repubblica Araba Saharawi Democratica",common:"Sahara Occidentale"},jpn:{official:"\u30B5\u30CF\u30E9\u30A2\u30E9\u30D6\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u897F\u30B5\u30CF\u30E9"},kor:{official:"\uC0AC\uD558\uB77C \uC544\uB78D \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uC11C\uC0AC\uD558\uB77C"},nld:{official:"Sahrawi Arabische Democratische Republiek",common:"Westelijke Sahara"},per:{official:"\u0635\u062D\u0631\u0627\u06CC \u063A\u0631\u0628\u06CC",common:"\u0635\u062D\u0631\u0627\u06CC \u063A\u0631\u0628\u06CC"},pol:{official:"Saharyjska Arabska Republika Demokratyczna",common:"Sahara Zachodnia"},por:{official:"Rep\xFAblica \xC1rabe Saharaui Democr\xE1tica",common:"Saara Ocidental"},rus:{official:"Sahrawi \u0410\u0440\u0430\u0431\u0441\u043A\u0430\u044F \u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0417\u0430\u043F\u0430\u0434\u043D\u0430\u044F \u0421\u0430\u0445\u0430\u0440\u0430"},slk:{official:"Z\xE1padn\xE1 Sahara",common:"Z\xE1padn\xE1 Sahara"},spa:{official:"Rep\xFAblica \xC1rabe Saharaui Democr\xE1tica",common:"Sahara Occidental"},swe:{official:"V\xE4stsahara",common:"V\xE4stsahara"},urd:{official:"\u0635\u062D\u0631\u0627\u0648\u06CC \u0639\u0631\u0628 \u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1",common:"\u0645\u063A\u0631\u0628\u06CC \u0635\u062D\u0627\u0631\u0627"},zho:{official:"\u963F\u62C9\u4F2F\u6492\u54C8\u62C9\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u897F\u6492\u54C8\u62C9"}},latlng:[24.5,-13],landlocked:!1,borders:["DZA","MRT","MAR"],area:266e3,demonyms:{eng:{f:"Sahrawi",m:"Sahrawi"}},flag:"\u{1F1EA}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/7nU3mB69vP6zQp7A8",openStreetMaps:"https://www.openstreetmap.org/relation/5441968"},population:510713,car:{signs:[""],side:"right"},timezones:["UTC+00:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/eh.png",svg:"https://flagcdn.com/eh.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-13.28,27.14]}},{name:{common:"Isle of Man",official:"Isle of Man",nativeName:{eng:{official:"Isle of Man",common:"Isle of Man"},glv:{official:"Ellan Vannin or Mannin",common:"Mannin"}}},tld:[".im"],cca2:"IM",ccn3:"833",cca3:"IMN",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"British pound",symbol:"\xA3"},IMP:{name:"Manx pound",symbol:"\xA3"}},idd:{root:"+4",suffixes:["4"]},capital:["Douglas"],altSpellings:["IM","Ellan Vannin","Mann","Mannin"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",glv:"Manx"},translations:{ara:{official:"\u062C\u0632\u064A\u0631\u0629 \u0645\u0627\u0646",common:"\u062C\u0632\u064A\u0631\u0629 \u0645\u0627\u0646"},ces:{official:"Ostrov Man",common:"Ostrov Man"},cym:{official:"Isle of Man",common:"Isle of Man"},deu:{official:"Isle of Man",common:"Insel Man"},est:{official:"Mani saar",common:"Mani saar"},fin:{official:"Mansaari",common:"Mansaari"},fra:{official:"Isle of Man",common:"\xCEle de Man"},hrv:{official:"Mana ostrvo",common:"Otok Man"},hun:{official:"Man",common:"Man"},ita:{official:"Isola di Man",common:"Isola di Man"},jpn:{official:"\u30DE\u30F3\u5CF6",common:"\u30DE\u30F3\u5CF6"},kor:{official:"\uB9E8\uC12C",common:"\uB9E8\uC12C"},nld:{official:"Isle of Man",common:"Isle of Man"},per:{official:"\u062C\u0632\u06CC\u0631\u0647\u0654 \u0645\u064E\u0646",common:"\u062C\u0632\u06CC\u0631\u0647\u0654 \u0645\u064E\u0646"},pol:{official:"Wyspa Man",common:"Wyspa Man"},por:{official:"Isle of Man",common:"Ilha de Man"},rus:{official:"\u041E\u0441\u0442\u0440\u043E\u0432 \u041C\u044D\u043D",common:"\u041E\u0441\u0442\u0440\u043E\u0432 \u041C\u044D\u043D"},slk:{official:"Ostrov Man",common:"Man"},spa:{official:"Isla de Man",common:"Isla de Man"},swe:{official:"Isle of Man",common:"Isle of Man"},urd:{official:"\u0622\u0626\u0644 \u0622\u0641 \u0645\u06CC\u0646",common:"\u0622\u0626\u0644 \u0622\u0641 \u0645\u06CC\u0646"},zho:{official:"\u9A6C\u6069\u5C9B",common:"\u9A6C\u6069\u5C9B"}},latlng:[54.25,-4.5],landlocked:!1,area:572,demonyms:{eng:{f:"Manx",m:"Manx"}},flag:"\u{1F1EE}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/4DqVHDgVaFgnh8ZV8",openStreetMaps:"https://www.openstreetmap.org/relation/62269"},population:85032,car:{signs:["GBM"],side:"left"},timezones:["UTC+00:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/im.png",svg:"https://flagcdn.com/im.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/im.png",svg:"https://mainfacts.com/media/images/coats_of_arms/im.svg"},startOfWeek:"monday",capitalInfo:{latlng:[54.15,-4.48]},postalCode:{format:"@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA",regex:"^(([A-Z]\\d{2}[A-Z]{2})|([A-Z]\\d{3}[A-Z]{2})|([A-Z]{2}\\d{2}[A-Z]{2})|([A-Z]{2}\\d{3}[A-Z]{2})|([A-Z]\\d[A-Z]\\d[A-Z]{2})|([A-Z]{2}\\d[A-Z]\\d[A-Z]{2})|(GIR0AA))$"}},{name:{common:"Botswana",official:"Republic of Botswana",nativeName:{eng:{official:"Republic of Botswana",common:"Botswana"},tsn:{official:"Lefatshe la Botswana",common:"Botswana"}}},tld:[".bw"],cca2:"BW",ccn3:"072",cca3:"BWA",cioc:"BOT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BWP:{name:"Botswana pula",symbol:"P"}},idd:{root:"+2",suffixes:["67"]},capital:["Gaborone"],altSpellings:["BW","Republic of Botswana","Lefatshe la Botswana"],region:"Africa",subregion:"Southern Africa",languages:{eng:"English",tsn:"Tswana"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0648\u062A\u0633\u0648\u0627\u0646\u0627",common:"\u0628\u0648\u062A\u0633\u0648\u0627\u0646\u0627"},ces:{official:"Botswansk\xE1 republika",common:"Botswana"},cym:{official:"Republic of Botswana",common:"Botswana"},deu:{official:"Republik Botsuana",common:"Botswana"},est:{official:"Botswana Vabariik",common:"Botswana"},fin:{official:"Botswanan tasavalta",common:"Botswana"},fra:{official:"R\xE9publique du Botswana",common:"Botswana"},hrv:{official:"Republika Bocvana",common:"Bocvana"},hun:{official:"Botswanai K\xF6zt\xE1rsas\xE1g",common:"Botswana"},ita:{official:"Repubblica del Botswana",common:"Botswana"},jpn:{official:"\u30DC\u30C4\u30EF\u30CA\u5171\u548C\u56FD",common:"\u30DC\u30C4\u30EF\u30CA"},kor:{official:"\uBCF4\uCE20\uC640\uB098 \uACF5\uD654\uAD6D",common:"\uBCF4\uCE20\uC640\uB098"},nld:{official:"Republiek Botswana",common:"Botswana"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0648\u062A\u0633\u0648\u0627\u0646\u0627",common:"\u0628\u0648\u062A\u0633\u0648\u0627\u0646\u0627"},pol:{official:"Republika Botswany",common:"Botswana"},por:{official:"Rep\xFAblica do Botswana",common:"Botswana"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u043E\u0442\u0441\u0432\u0430\u043D\u0430",common:"\u0411\u043E\u0442\u0441\u0432\u0430\u043D\u0430"},slk:{official:"Botswansk\xE1 republika",common:"Botswana"},spa:{official:"Rep\xFAblica de Botswana",common:"Botswana"},swe:{official:"Republiken Botswana",common:"Botswana"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u0648\u0679\u0633\u0648\u0627\u0646\u0627",common:"\u0628\u0648\u0679\u0633\u0648\u0627\u0646\u0627"},zho:{official:"\u535A\u8328\u74E6\u7EB3\u5171\u548C\u56FD",common:"\u535A\u8328\u74E6\u7EB3"}},latlng:[-22,24],landlocked:!0,borders:["NAM","ZAF","ZMB","ZWE"],area:582e3,demonyms:{eng:{f:"Motswana",m:"Motswana"},fra:{f:"Botswanaise",m:"Botswanais"}},flag:"\u{1F1E7}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/E364KeLy6N4JwxwQ8",openStreetMaps:"https://www.openstreetmap.org/relation/1889339"},population:2351625,gini:{"2015":53.3},fifa:"BOT",car:{signs:["BW"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bw.png",svg:"https://flagcdn.com/bw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-24.63,25.9]}},{name:{common:"Kazakhstan",official:"Republic of Kazakhstan",nativeName:{kaz:{official:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u044B",common:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D",common:"\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D"}}},tld:[".kz",".\u049B\u0430\u0437"],cca2:"KZ",ccn3:"398",cca3:"KAZ",cioc:"KAZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KZT:{name:"Kazakhstani tenge",symbol:"\u20B8"}},idd:{root:"+7",suffixes:["6","7"]},capital:["Nur-Sultan"],altSpellings:["KZ","Qazaqstan","\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D","Republic of Kazakhstan","\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u044B","Qazaqstan Respubl\xEFkas\u0131","\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D","Respublika Kazakhstan"],region:"Asia",subregion:"Central Asia",languages:{kaz:"Kazakh",rus:"Russian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0627\u0632\u0627\u062E\u0633\u062A\u0627\u0646",common:"\u0643\u0627\u0632\u0627\u062E\u0633\u062A\u0627\u0646"},ces:{official:"Republika Kazachst\xE1n",common:"Kazachst\xE1n"},cym:{official:"Republic of Kazakhstan",common:"Kazakhstan"},deu:{official:"Republik Kasachstan",common:"Kasachstan"},est:{official:"Kasahstani Vabariik",common:"Kasahstan"},fin:{official:"Kazakstanin tasavalta",common:"Kazakstan"},fra:{official:"R\xE9publique du Kazakhstan",common:"Kazakhstan"},hrv:{official:"Republika Kazahstan",common:"Kazahstan"},hun:{official:"Kazah K\xF6zt\xE1rsas\xE1g",common:"Kazahszt\xE1n"},ita:{official:"Repubblica del Kazakhstan",common:"Kazakistan"},jpn:{official:"\u30AB\u30B6\u30D5\u30B9\u30BF\u30F3\u5171\u548C\u56FD",common:"\u30AB\u30B6\u30D5\u30B9\u30BF\u30F3"},kor:{official:"\uCE74\uC790\uD750\uC2A4\uD0C4 \uACF5\uD654\uAD6D",common:"\uCE74\uC790\uD750\uC2A4\uD0C4"},nld:{official:"Republiek Kazachstan",common:"Kazachstan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0642\u0632\u0627\u0642\u0633\u062A\u0627\u0646",common:"\u0642\u0632\u0627\u0642\u0633\u062A\u0627\u0646"},pol:{official:"Republika Kazachstanu",common:"Kazachstan"},por:{official:"Rep\xFAblica do Cazaquist\xE3o",common:"Cazaquist\xE3o"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D",common:"\u041A\u0430\u0437\u0430\u0445\u0441\u0442\u0430\u043D"},slk:{official:"Kaza\u0161sk\xE1 republika",common:"Kazachstan"},spa:{official:"Rep\xFAblica de Kazajst\xE1n",common:"Kazajist\xE1n"},swe:{official:"Republiken Kazakstan",common:"Kazakstan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0642\u0627\u0632\u0642\u0633\u062A\u0627\u0646",common:"\u0642\u0627\u0632\u0642\u0633\u062A\u0627\u0646"},zho:{official:"\u54C8\u8428\u514B\u65AF\u5766\u5171\u548C\u56FD",common:"\u54C8\u8428\u514B\u65AF\u5766"}},latlng:[48,68],landlocked:!0,borders:["CHN","KGZ","RUS","TKM","UZB"],area:2724900,demonyms:{eng:{f:"Kazakhstani",m:"Kazakhstani"},fra:{f:"Kazakhstanaise",m:"Kazakhstanais"}},flag:"\u{1F1F0}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/8VohJGu7ShuzZYyeA",openStreetMaps:"https://www.openstreetmap.org/relation/214665"},population:18754440,gini:{"2018":27.8},fifa:"KAZ",car:{signs:["KZ"],side:"right"},timezones:["UTC+05:00","UTC+06:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kz.png",svg:"https://flagcdn.com/kz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[51.16,71.45]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Venezuela",official:"Bolivarian Republic of Venezuela",nativeName:{spa:{official:"Rep\xFAblica Bolivariana de Venezuela",common:"Venezuela"}}},tld:[".ve"],cca2:"VE",ccn3:"862",cca3:"VEN",cioc:"VEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{VES:{name:"Venezuelan bol\xEDvar soberano",symbol:"Bs.S."}},idd:{root:"+5",suffixes:["8"]},capital:["Caracas"],altSpellings:["VE","Bolivarian Republic of Venezuela","Venezuela, Bolivarian Republic of","Rep\xFAblica Bolivariana de Venezuela"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0641\u0646\u0632\u0648\u064A\u0644\u0627 \u0627\u0644\u0628\u0648\u0644\u064A\u0641\u0627\u0631\u064A\u0629",common:"\u0641\u0646\u0632\u0648\u064A\u0644\u0627"},ces:{official:"Bol\xEDvarsk\xE1 republika Venezuela",common:"Venezuela"},cym:{official:"Bolivarian Republic of Venezuela",common:"Venezuela"},deu:{official:"Bolivarische Republik Venezuela",common:"Venezuela"},est:{official:"Venezuela Bol\xEDvari Vabariik",common:"Venezuela"},fin:{official:"Venezuelan bolivariaainen tasavalta",common:"Venezuela"},fra:{official:"R\xE9publique bolivarienne du Venezuela",common:"Venezuela"},hrv:{official:"BOLIVARIJANSKA Republika Venezuela",common:"Venezuela"},hun:{official:"Venezuelai Boliv\xE1ri K\xF6zt\xE1rsas\xE1g",common:"Venezuela"},ita:{official:"Repubblica Bolivariana del Venezuela",common:"Venezuela"},jpn:{official:"\u30D9\u30CD\u30BA\u30A8\u30E9\xB7\u30DC\u30EA\u30D0\u30EB\u5171\u548C\u56FD",common:"\u30D9\u30CD\u30BA\u30A8\u30E9\u30FB\u30DC\u30EA\u30D0\u30EB\u5171\u548C\u56FD"},kor:{official:"\uBCA0\uB124\uC218\uC5D8\uB77C \uBCFC\uB9AC\uBC14\uB974 \uACF5\uD654\uAD6D",common:"\uBCA0\uB124\uC218\uC5D8\uB77C"},nld:{official:"Bolivariaanse Republiek Venezuela",common:"Venezuela"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0648\u0644\u06CC\u0648\u0627\u0631\u06CC \u0648\u0646\u0632\u0648\u0626\u0644\u0627",common:"\u0648\u0646\u0632\u0648\u0626\u0644\u0627"},pol:{official:"Boliwaria\u0144ska Republika Wenezueli",common:"Wenezuela"},por:{official:"Rep\xFAblica Bolivariana da Venezuela",common:"Venezuela"},rus:{official:"\u0411\u043E\u043B\u0438\u0432\u0430\u0440\u0438\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0412\u0435\u043D\u0435\u0441\u0443\u044D\u043B\u0430",common:"\u0412\u0435\u043D\u0435\u0441\u0443\u044D\u043B\u0430"},slk:{official:"Venezuelsk\xE1 bol\xEDvarovsk\xE1 republika",common:"Venezuela"},spa:{official:"Rep\xFAblica Bolivariana de Venezuela",common:"Venezuela"},swe:{official:"Bolivarianska republiken Venezuela",common:"Venezuela"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0648\u06CC\u0646\u06CC\u0632\u0648\u06CC\u0644\u0627",common:"\u0648\u06CC\u0646\u06CC\u0632\u0648\u06CC\u0644\u0627"},zho:{official:"\u59D4\u5185\u745E\u62C9\u73BB\u5229\u74E6\u5C14\u5171\u548C\u56FD",common:"\u59D4\u5185\u745E\u62C9"}},latlng:[8,-66],landlocked:!1,borders:["BRA","COL","GUY"],area:916445,demonyms:{eng:{f:"Venezuelan",m:"Venezuelan"},fra:{f:"V\xE9n\xE9zu\xE9lienne",m:"V\xE9n\xE9zu\xE9lien"}},flag:"\u{1F1FB}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/KLCwDN8sec7z2kse9",openStreetMaps:"https://www.openstreetmap.org/relation/272644"},population:28435943,gini:{"2006":44.8},fifa:"VEN",car:{signs:["YV"],side:"right"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/ve.png",svg:"https://flagcdn.com/ve.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ve.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ve.svg"},startOfWeek:"monday",capitalInfo:{latlng:[10.48,-66.87]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"French Polynesia",official:"French Polynesia",nativeName:{fra:{official:"Polyn\xE9sie fran\xE7aise",common:"Polyn\xE9sie fran\xE7aise"}}},tld:[".pf"],cca2:"PF",ccn3:"258",cca3:"PYF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XPF:{name:"CFP franc",symbol:"\u20A3"}},idd:{root:"+6",suffixes:["89"]},capital:["Papeet\u0113"],altSpellings:["PF","Polyn\xE9sie fran\xE7aise","French Polynesia","P\u014Dr\u012Bnetia Far\u0101ni"],region:"Oceania",subregion:"Polynesia",languages:{fra:"French"},translations:{ara:{official:"\u0628\u0648\u0644\u064A\u0646\u0632\u064A\u0627 \u0627\u0644\u0641\u0631\u0646\u0633\u064A\u0629",common:"\u0628\u0648\u0644\u064A\u0646\u0632\u064A\u0627 \u0627\u0644\u0641\u0631\u0646\u0633\u064A\u0629"},ces:{official:"Francouzsk\xE1 Polyn\xE9sie",common:"Francouzsk\xE1 Polyn\xE9sie"},cym:{official:"French Polynesia",common:"French Polynesia"},deu:{official:"Franz\xF6sisch-Polynesien",common:"Franz\xF6sisch-Polynesien"},est:{official:"Prantsuse Pol\xFCneesia",common:"Prantsuse Pol\xFCneesia"},fin:{official:"Ranskan Polynesia",common:"Ranskan Polynesia"},fra:{official:"Polyn\xE9sie fran\xE7aise",common:"Polyn\xE9sie fran\xE7aise"},hrv:{official:"Francuska Polinezija",common:"Francuska Polinezija"},hun:{official:"Francia Polin\xE9zia",common:"Francia Polin\xE9zia"},ita:{official:"Polinesia Francese",common:"Polinesia Francese"},jpn:{official:"\u30D5\u30E9\u30F3\u30B9\u9818\u30DD\u30EA\u30CD\u30B7\u30A2",common:"\u30D5\u30E9\u30F3\u30B9\u9818\u30DD\u30EA\u30CD\u30B7\u30A2"},kor:{official:"\uD504\uB791\uC2A4\uB839 \uD3F4\uB9AC\uB124\uC2DC\uC544",common:"\uD504\uB791\uC2A4\uB839 \uD3F4\uB9AC\uB124\uC2DC\uC544"},nld:{official:"Frans-Polynesi\xEB",common:"Frans-Polynesi\xEB"},per:{official:"\u067E\u064F\u0644\u06CC\u200C\u0646\u0650\u0632\u06CC \u0641\u0631\u0627\u0646\u0633\u0647",common:"\u067E\u064F\u0644\u06CC\u200C\u0646\u0650\u0632\u06CC \u0641\u0631\u0627\u0646\u0633\u0647"},pol:{official:"Polinezja Francuska",common:"Polinezja Francuska"},por:{official:"Polin\xE9sia Francesa",common:"Polin\xE9sia Francesa"},rus:{official:"\u0424\u0440\u0430\u043D\u0446\u0443\u0437\u0441\u043A\u0430\u044F \u041F\u043E\u043B\u0438\u043D\u0435\u0437\u0438\u044F",common:"\u0424\u0440\u0430\u043D\u0446\u0443\u0437\u0441\u043A\u0430\u044F \u041F\u043E\u043B\u0438\u043D\u0435\u0437\u0438\u044F"},slk:{official:"Franc\xFAzska Polyn\xE9zia",common:"Franc\xFAzska Polyn\xE9zia"},spa:{official:"Polinesia franc\xE9s",common:"Polinesia Francesa"},swe:{official:"Franska Polynesien",common:"Franska Polynesien"},urd:{official:"\u0641\u0631\u0627\u0646\u0633\u06CC\u0633\u06CC \u067E\u0648\u0644\u06CC\u0646\u06CC\u0634\u06CC\u0627",common:"\u0641\u0631\u0627\u0646\u0633\u06CC\u0633\u06CC \u067E\u0648\u0644\u06CC\u0646\u06CC\u0634\u06CC\u0627"},zho:{official:"\u6CD5\u5C5E\u6CE2\u5229\u5C3C\u897F\u4E9A",common:"\u6CD5\u5C5E\u6CE2\u5229\u5C3C\u897F\u4E9A"}},latlng:[-15,-140],landlocked:!1,area:4167,demonyms:{eng:{f:"French Polynesian",m:"French Polynesian"},fra:{f:"Polyn\xE9sienne",m:"Polyn\xE9sien"}},flag:"\u{1F1F5}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/xgg6BQTRyeQg4e1m6",openStreetMaps:"https://www.openstreetmap.org/relation/3412620"},population:280904,car:{signs:["F"],side:"right"},timezones:["UTC-10:00","UTC-09:30","UTC-09:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pf.png",svg:"https://flagcdn.com/pf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-17.53,-149.56]},postalCode:{format:"#####",regex:"^((97|98)7\\d{2})$"}},{name:{common:"Sudan",official:"Republic of the Sudan",nativeName:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0633\u0648\u062F\u0627\u0646",common:"\u0627\u0644\u0633\u0648\u062F\u0627\u0646"},eng:{official:"Republic of the Sudan",common:"Sudan"}}},tld:[".sd"],cca2:"SD",ccn3:"729",cca3:"SDN",cioc:"SUD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SDG:{name:"Sudanese pound"}},idd:{root:"+2",suffixes:["49"]},capital:["Khartoum"],altSpellings:["SD","Republic of the Sudan","Jumh\u016Br\u012Byat as-S\u016Bd\u0101n"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic",eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0633\u0648\u062F\u0627\u0646",common:"\u0627\u0644\u0633\u0648\u062F\u0627\u0646"},ces:{official:"S\xFAd\xE1nsk\xE1 republika",common:"S\xFAd\xE1n"},cym:{official:"Republic of the Sudan",common:"Sudan"},deu:{official:"Republik Sudan",common:"Sudan"},est:{official:"Sudaani Vabariik",common:"Sudaan"},fin:{official:"Sudanin tasavalta",common:"Sudan"},fra:{official:"R\xE9publique du Soudan",common:"Soudan"},hrv:{official:"Republika Sudan",common:"Sudan"},hun:{official:"Szud\xE1ni K\xF6zt\xE1rsas\xE1g",common:"Szud\xE1n"},ita:{official:"Repubblica del Sudan",common:"Sudan"},jpn:{official:"\u30B9\u30FC\u30C0\u30F3\u5171\u548C\u56FD",common:"\u30B9\u30FC\u30C0\u30F3"},kor:{official:"\uC218\uB2E8 \uACF5\uD654\uAD6D",common:"\uC218\uB2E8"},nld:{official:"Republiek Soedan",common:"Soedan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0648\u062F\u0627\u0646",common:"\u0633\u0648\u062F\u0627\u0646"},pol:{official:"Republika Sudanu",common:"Sudan"},por:{official:"Rep\xFAblica do Sud\xE3o",common:"Sud\xE3o"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0443\u0434\u0430\u043D",common:"\u0421\u0443\u0434\u0430\u043D"},slk:{official:"Sud\xE1nska republika",common:"Sud\xE1n"},spa:{official:"Rep\xFAblica de Sud\xE1n",common:"Sud\xE1n"},swe:{official:"Republiken Sudan",common:"Sudan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0648\u062F\u0627\u0646",common:"\u0633\u0648\u062F\u0627\u0646"},zho:{official:"\u82CF\u4E39\u5171\u548C\u56FD",common:"\u82CF\u4E39"}},latlng:[15,30],landlocked:!1,borders:["CAF","TCD","EGY","ERI","ETH","LBY","SSD"],area:1886068,demonyms:{eng:{f:"Sudanese",m:"Sudanese"},fra:{f:"Soudanaise",m:"Soudanais"}},flag:"\u{1F1F8}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/bNW7YUJCaqR8zcXn7",openStreetMaps:"https://www.openstreetmap.org/relation/192789"},population:43849269,gini:{"2014":34.2},fifa:"SDN",car:{signs:["SUD"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sd.png",svg:"https://flagcdn.com/sd.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sd.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sd.svg"},startOfWeek:"monday",capitalInfo:{latlng:[15.6,32.53]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Wallis and Futuna",official:"Territory of the Wallis and Futuna Islands",nativeName:{fra:{official:"Territoire des \xEEles Wallis et Futuna",common:"Wallis et Futuna"}}},tld:[".wf"],cca2:"WF",ccn3:"876",cca3:"WLF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{XPF:{name:"CFP franc",symbol:"\u20A3"}},idd:{root:"+6",suffixes:["81"]},capital:["Mata-Utu"],altSpellings:["WF","Territory of the Wallis and Futuna Islands","Territoire des \xEEles Wallis et Futuna"],region:"Oceania",subregion:"Polynesia",languages:{fra:"French"},translations:{ara:{official:"\u0625\u0642\u0644\u064A\u0645 \u062C\u0632\u0631 \u0648\u0627\u0644\u064A\u0633 \u0648\u0641\u0648\u062A\u0648\u0646\u0627",common:"\u0648\u0627\u0644\u064A\u0633 \u0648\u0641\u0648\u062A\u0648\u0646\u0627"},ces:{official:"Teritorium ostrov\u016F Wallis a Futuna",common:"Wallis a Futuna"},cym:{official:"Territory of the Wallis and Futuna Islands",common:"Wallis and Futuna"},deu:{official:"Gebiet der Wallis und Futuna",common:"Wallis und Futuna"},est:{official:"Wallise ja Futuna ala",common:"Wallis ja Futuna"},fin:{official:"Wallisin ja Futunan yhteis\xF6",common:"Wallis ja Futuna"},fra:{official:"Territoire des \xEEles Wallis et Futuna",common:"Wallis-et-Futuna"},hrv:{official:"Teritoriju Wallis i Futuna",common:"Wallis i Fortuna"},hun:{official:"Wallis \xE9s Futuna",common:"Wallis \xE9s Futuna"},ita:{official:"Territorio delle Isole Wallis e Futuna",common:"Wallis e Futuna"},jpn:{official:"\u30A6\u30A9\u30EA\u30B9\xB7\u30D5\u30C4\u30CA\u8AF8\u5CF6\u306E\u9818\u571F",common:"\u30A6\u30A9\u30EA\u30B9\u30FB\u30D5\u30C4\u30CA"},kor:{official:"\uC648\uB9AC\uC2A4 \uD4CC\uD280\uB098",common:"\uC648\uB9AC\uC2A4 \uD4CC\uD280\uB098"},nld:{official:"Grondgebied van de Wallis en Futuna",common:"Wallis en Futuna"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u0627\u0644\u06CC\u0633 \u0648 \u0641\u0648\u062A\u0648\u0646\u0627",common:"\u0648\u0627\u0644\u06CC\u0633 \u0648 \u0641\u0648\u062A\u0648\u0646\u0627"},pol:{official:"Terytorium Wysp Wallis i Futuna",common:"Wallis i Futuna"},por:{official:"Territ\xF3rio das Ilhas Wallis e Futuna",common:"Wallis e Futuna"},rus:{official:"\u0422\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u0423\u043E\u043B\u043B\u0438\u0441 \u0438 \u0424\u0443\u0442\u0443\u043D\u0430 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0423\u043E\u043B\u043B\u0438\u0441 \u0438 \u0424\u0443\u0442\u0443\u043D\u0430"},slk:{official:"Terit\xF3rium ostrovov Wallis a Futuna",common:"Wallis a Futuna"},spa:{official:"Territorio de las Islas Wallis y Futuna",common:"Wallis y Futuna"},swe:{official:"Territoriet Wallis- och Futuna\xF6arna",common:"Wallis- och Futuna\xF6arna"},urd:{official:"\u0633\u0631 \u0632\u0645\u06CC\u0646\u0650 \u0648\u0627\u0644\u0633 \u0648 \u0641\u062A\u0648\u0646\u06C1 \u062C\u0632\u0627\u0626\u0631",common:"\u0648\u0627\u0644\u0633 \u0648 \u0641\u062A\u0648\u0646\u06C1"},zho:{official:"\u74E6\u5229\u65AF\u548C\u5BCC\u56FE\u7EB3\u7FA4\u5C9B",common:"\u74E6\u5229\u65AF\u548C\u5BCC\u56FE\u7EB3\u7FA4\u5C9B"}},latlng:[-13.3,-176.2],landlocked:!1,area:142,demonyms:{eng:{f:"Wallis and Futuna Islander",m:"Wallis and Futuna Islander"}},flag:"\u{1F1FC}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/CzVqK74QYtbHv65r5",openStreetMaps:"https://www.openstreetmap.org/relation/3412448"},population:11750,car:{signs:["F"],side:"right"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/wf.png",svg:"https://flagcdn.com/wf.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-13.95,-171.93]},postalCode:{format:"#####",regex:"^(986\\d{2})$"}},{name:{common:"Slovakia",official:"Slovak Republic",nativeName:{slk:{official:"Slovensk\xE1 republika",common:"Slovensko"}}},tld:[".sk"],cca2:"SK",ccn3:"703",cca3:"SVK",cioc:"SVK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+4",suffixes:["21"]},capital:["Bratislava"],altSpellings:["SK","Slovak Republic","Slovensk\xE1 republika"],region:"Europe",subregion:"Central Europe",languages:{slk:"Slovak"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0644\u0648\u0641\u0627\u0643\u064A\u0627",common:"\u0633\u0644\u0648\u0641\u0627\u0643\u064A\u0627"},ces:{official:"Slovensk\xE1 republika",common:"Slovensko"},cym:{official:"Slovak Republic",common:"Slovakia"},deu:{official:"Slowakische Republik",common:"Slowakei"},est:{official:"Slovaki Vabariik",common:"Slovakkia"},fin:{official:"Slovakian tasavalta",common:"Slovakia"},fra:{official:"R\xE9publique slovaque",common:"Slovaquie"},hrv:{official:"slova\u010Dka",common:"Slova\u010Dka"},hun:{official:"Szlov\xE1k K\xF6zt\xE1rsas\xE1g",common:"Szlov\xE1kia"},ita:{official:"Repubblica slovacca",common:"Slovacchia"},jpn:{official:"\u30B9\u30ED\u30D0\u30AD\u30A2\u5171\u548C\u56FD",common:"\u30B9\u30ED\u30D0\u30AD\u30A2"},kor:{official:"\uC2AC\uB85C\uBC14\uD0A4\uC544 \uACF5\uD654\uAD6D",common:"\uC2AC\uB85C\uBC14\uD0A4\uC544"},nld:{official:"Slowaakse Republiek",common:"Slowakije"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0648\u0627\u06A9\u06CC",common:"\u0627\u0650\u0633\u0644\u064F\u0648\u0627\u06A9\u06CC"},pol:{official:"Republika S\u0142owacka",common:"S\u0142owacja"},por:{official:"Rep\xFAblica Eslovaca",common:"Eslov\xE1quia"},rus:{official:"\u0421\u043B\u043E\u0432\u0430\u0446\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0421\u043B\u043E\u0432\u0430\u043A\u0438\u044F"},slk:{official:"Slovensk\xE1 republika",common:"Slovensko"},spa:{official:"Rep\xFAblica Eslovaca",common:"Rep\xFAblica Eslovaca"},swe:{official:"Republiken Slovakien",common:"Slovakien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0644\u0648\u0648\u0627\u06A9\u06CC\u06C1",common:"\u0633\u0644\u0648\u0648\u0627\u06A9\u06CC\u06C1"},zho:{official:"\u65AF\u6D1B\u4F10\u514B\u5171\u548C\u56FD",common:"\u65AF\u6D1B\u4F10\u514B"}},latlng:[48.66666666,19.5],landlocked:!0,borders:["AUT","CZE","HUN","POL","UKR"],area:49037,demonyms:{eng:{f:"Slovak",m:"Slovak"},fra:{f:"Slovaque",m:"Slovaque"}},flag:"\u{1F1F8}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/uNSH2wW4bLoZVYJj7",openStreetMaps:"https://www.openstreetmap.org/relation/14296"},population:5458827,gini:{"2018":25},fifa:"SVK",car:{signs:["SK"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/sk.png",svg:"https://flagcdn.com/sk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.15,17.12]},postalCode:{format:"###  ##",regex:"^(\\d{5})$"}},{name:{common:"Saint Barth\xE9lemy",official:"Collectivity of Saint Barth\xE9lemy",nativeName:{fra:{official:"Collectivit\xE9 de Saint-Barth\xE9lemy",common:"Saint-Barth\xE9lemy"}}},tld:[".bl"],cca2:"BL",ccn3:"652",cca3:"BLM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+5",suffixes:["90"]},capital:["Gustavia"],altSpellings:["BL","St. Barthelemy","Collectivity of Saint Barth\xE9lemy","Collectivit\xE9 de Saint-Barth\xE9lemy"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"\u0627\u0644\u062A\u062C\u0645\u0639 \u0627\u0644\u0625\u0642\u0644\u064A\u0645\u064A \u0644\u0633\u0627\u0646\u062A \u0628\u0627\u0631\u062A\u064A\u0644\u064A\u0645\u064A",common:"\u0633\u0627\u0646 \u0628\u0627\u0631\u062A\u0644\u064A\u0645\u064A"},ces:{official:"Svat\xFD Bartolom\u011Bj",common:"Svat\xFD Bartolom\u011Bj"},cym:{official:"Collectivity of Saint Barth\xE9lemy",common:"Saint Barth\xE9lemy"},deu:{official:"Gebietsk\xF6rperschaft Saint-Barth\xE9lemy",common:"Saint-Barth\xE9lemy"},est:{official:"Saint-Barth\xE9lemy territoriaal\xFChendus",common:"Saint-Barth\xE9lemy"},fin:{official:"Saint-Barth\xE9lemyn yhteis\xF6",common:"Saint-Barth\xE9lemy"},fra:{official:"Collectivit\xE9 de Saint-Barth\xE9lemy",common:"Saint-Barth\xE9lemy"},hrv:{official:"Kolektivnost sv Barth\xE9lemy",common:"Saint Barth\xE9lemy"},hun:{official:"Saint-Barth\xE9lemy",common:"Saint-Barth\xE9lemy"},ita:{official:"Collettivit\xE0 di Saint Barth\xE9lemy",common:"Antille Francesi"},jpn:{official:"\u30B5\u30F3\xB7\u30D0\u30EB\u30C6\u30EB\u30DF\u30FC\u5CF6\u306E\u96C6\u5408\u4F53",common:"\u30B5\u30F3\u30FB\u30D0\u30EB\u30C6\u30EB\u30DF\u30FC"},kor:{official:"\uC0DD\uBC14\uB974\uD154\uB808\uBBF8",common:"\uC0DD\uBC14\uB974\uD154\uB808\uBBF8"},nld:{official:"Gemeenschap Saint Barth\xE9lemy",common:"Saint Barth\xE9lemy"},per:{official:"\u0633\u0646 \u0628\u0627\u0631\u062A\u0644\u0645\u06CC",common:"\u0633\u0646 \u0628\u0627\u0631\u062A\u0644\u0645\u06CC"},pol:{official:"Saint-Barth\xE9lemy",common:"Saint-Barth\xE9lemy"},por:{official:"Coletividade de Saint Barth\xE9lemy",common:"S\xE3o Bartolomeu"},rus:{official:"\u041A\u043E\u043B\u043B\u0435\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C \u0421\u0430\u043D\u043A\u0442 -\u0411\u0430\u0440\u0442\u0435\u043B\u044C\u043C\u0438",common:"\u0421\u0435\u043D-\u0411\u0430\u0440\u0442\u0435\u043B\u0435\u043C\u0438"},slk:{official:"Sv\xE4t\xFD Bartolomej",common:"Sv\xE4t\xFD Bartolomej"},spa:{official:"Colectividad de San Barth\xE9lemy",common:"San Bartolom\xE9"},swe:{official:"Saint-Barth\xE9lemy",common:"Saint-Barth\xE9lemy"},urd:{official:"\u0633\u06CC\u0646\u0679 \u0628\u0627\u0631\u062A\u06BE\u06CC\u0645\u0644\u06D2",common:"\u0633\u06CC\u0646\u0679 \u0628\u0627\u0631\u062A\u06BE\u06CC\u0645\u0644\u06D2"},zho:{official:"\u5723\u5DF4\u6CF0\u52D2\u7C73\u96C6\u4F53",common:"\u5723\u5DF4\u6CF0\u52D2\u7C73"}},latlng:[18.5,-63.41666666],landlocked:!1,area:21,demonyms:{eng:{f:"Saint Barth\xE9lemy Islander",m:"Saint Barth\xE9lemy Islander"},fra:{f:"Barth\xE9lom\xE9enne",m:"Barth\xE9lom\xE9en"}},flag:"\u{1F1E7}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/Mc7GqH466S7AAk297",openStreetMaps:"https://www.openstreetmap.org/relation/7552779"},population:4255,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bl.png",svg:"https://flagcdn.com/bl.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[17.88,-62.85]},postalCode:{format:"### ###"}},{name:{common:"Christmas Island",official:"Territory of Christmas Island",nativeName:{eng:{official:"Territory of Christmas Island",common:"Christmas Island"}}},tld:[".cx"],cca2:"CX",ccn3:"162",cca3:"CXR",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["1"]},capital:["Flying Fish Cove"],altSpellings:["CX","Territory of Christmas Island"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u064A\u0631\u0629 \u0643\u0631\u064A\u0633\u0645\u0627\u0633",common:"\u062C\u0632\u064A\u0631\u0629 \u0643\u0631\u064A\u0633\u0645\u0627\u0633"},ces:{official:"Teritorium V\xE1no\u010Dn\xEDho ostrova",common:"V\xE1no\u010Dn\xED ostrov"},cym:{official:"Tiriogaeth yr Ynys y Nadolig",common:"Ynys y Nadolig"},deu:{official:"Gebiet der Weihnachtsinsel",common:"Weihnachtsinsel"},est:{official:"J\xF5ulusaare ala",common:"J\xF5ulusaar"},fin:{official:"Joulusaaren alue",common:"Joulusaari"},fra:{official:"Territoire de l'\xEEle Christmas",common:"\xCEle Christmas"},hrv:{official:"Teritorij Bo\u017Ei\u0107ni otok",common:"Bo\u017Ei\u0107ni otok"},hun:{official:"Kar\xE1csony-sziget",common:"Kar\xE1csony-sziget"},ita:{official:"Territorio di Christmas Island",common:"Isola di Natale"},jpn:{official:"\u30AF\u30EA\u30B9\u30DE\u30B9\u5CF6\u306E\u9818\u571F",common:"\u30AF\u30EA\u30B9\u30DE\u30B9\u5CF6"},kor:{official:"\uD06C\uB9AC\uC2A4\uB9C8\uC2A4 \uC12C",common:"\uD06C\uB9AC\uC2A4\uB9C8\uC2A4 \uC12C"},nld:{official:"Grondgebied van Christmas Island",common:"Christmaseiland"},per:{official:"\u062C\u0632\u06CC\u0631\u0647\u0654 \u06A9\u0631\u06CC\u0633\u0645\u0633",common:"\u062C\u0632\u06CC\u0631\u0647\u0654 \u06A9\u0631\u06CC\u0633\u0645\u0633"},pol:{official:"Wyspa Bo\u017Cego Narodzenia",common:"Wyspa Bo\u017Cego Narodzenia"},por:{official:"Territ\xF3rio da Ilha Christmas",common:"Ilha do Natal"},rus:{official:"\u0422\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u0420\u043E\u0436\u0434\u0435\u0441\u0442\u0432\u0430",common:"\u041E\u0441\u0442\u0440\u043E\u0432 \u0420\u043E\u0436\u0434\u0435\u0441\u0442\u0432\u0430"},slk:{official:"Terit\xF3rium Viano\u010Dn\xE9ho ostrova",common:"Viano\u010Dn\xFA ostrov"},spa:{official:"Territorio de la Isla de Navidad",common:"Isla de Navidad"},swe:{official:"Jul\xF6n",common:"Jul\xF6n"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u062C\u0632\u06CC\u0631\u06C1 \u06A9\u0631\u0633\u0645\u0633",common:"\u062C\u0632\u06CC\u0631\u06C1 \u06A9\u0631\u0633\u0645\u0633"},zho:{official:"\u5723\u8BDE\u5C9B",common:"\u5723\u8BDE\u5C9B"}},latlng:[-10.5,105.66666666],landlocked:!1,area:135,demonyms:{eng:{f:"Christmas Islander",m:"Christmas Islander"}},flag:"\u{1F1E8}\u{1F1FD}",maps:{googleMaps:"https://goo.gl/maps/ZC17hHsQZpShN5wk9",openStreetMaps:"https://www.openstreetmap.org/relation/6365444"},population:2072,car:{signs:["AUS"],side:"left"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/cx.png",svg:"https://flagcdn.com/cx.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cx.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cx.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-10.42,105.68]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Solomon Islands",official:"Solomon Islands",nativeName:{eng:{official:"Solomon Islands",common:"Solomon Islands"}}},tld:[".sb"],cca2:"SB",ccn3:"090",cca3:"SLB",cioc:"SOL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SBD:{name:"Solomon Islands dollar",symbol:"$"}},idd:{root:"+6",suffixes:["77"]},capital:["Honiara"],altSpellings:["SB"],region:"Oceania",subregion:"Melanesia",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0633\u0644\u064A\u0645\u0627\u0646",common:"\u062C\u0632\u0631 \u0633\u0644\u064A\u0645\u0627\u0646"},ces:{official:"\u0160alamounovy ostrovy",common:"\u0160alamounovy ostrovy"},cym:{official:"Solomon Islands",common:"Solomon Islands"},deu:{official:"Salomonen",common:"Salomonen"},est:{official:"Saalomoni Saared",common:"Saalomoni Saared"},fin:{official:"Salomonsaaret",common:"Salomonsaaret"},fra:{official:"\xCEles Salomon",common:"\xCEles Salomon"},hrv:{official:"Solomonski Otoci",common:"Solomonski Otoci"},hun:{official:"Salamon-szigetek",common:"Salamon-szigetek"},ita:{official:"Isole Salomone",common:"Isole Salomone"},jpn:{official:"\u30BD\u30ED\u30E2\u30F3\u8AF8\u5CF6",common:"\u30BD\u30ED\u30E2\u30F3\u8AF8\u5CF6"},kor:{official:"\uC194\uB85C\uBAAC \uC81C\uB3C4",common:"\uC194\uB85C\uBAAC \uC81C\uB3C4"},nld:{official:"Solomon eilanden",common:"Salomonseilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0633\u0644\u06CC\u0645\u0627\u0646",common:"\u062C\u0632\u0627\u06CC\u0631 \u0633\u0644\u06CC\u0645\u0627\u0646"},pol:{official:"Wyspy Salomona",common:"Wyspy Salomona"},por:{official:"Ilhas Salom\xE3o",common:"Ilhas Salom\xE3o"},rus:{official:"\u0421\u043E\u043B\u043E\u043C\u043E\u043D\u043E\u0432\u044B \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0421\u043E\u043B\u043E\u043C\u043E\u043D\u043E\u0432\u044B \u041E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Salomonove ostrovy",common:"Salomonove ostrovy"},spa:{official:"islas Salom\xF3n",common:"Islas Salom\xF3n"},swe:{official:"Salomon\xF6arna",common:"Salomon\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u0633\u0644\u06CC\u0645\u0627\u0646",common:"\u062C\u0632\u0627\u0626\u0631 \u0633\u0644\u06CC\u0645\u0627\u0646"},zho:{official:"\u6240\u7F57\u95E8\u7FA4\u5C9B",common:"\u6240\u7F57\u95E8\u7FA4\u5C9B"}},latlng:[-8,159],landlocked:!1,area:28896,demonyms:{eng:{f:"Solomon Islander",m:"Solomon Islander"},fra:{f:"Salomonienne",m:"Salomonien"}},flag:"\u{1F1F8}\u{1F1E7}",maps:{googleMaps:"https://goo.gl/maps/JbPkx86Ywjv8C1n8A",openStreetMaps:"https://www.openstreetmap.org/relation/1857436"},population:686878,gini:{"2012":37.1},fifa:"SOL",car:{signs:["SOL"],side:"left"},timezones:["UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/sb.png",svg:"https://flagcdn.com/sb.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sb.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sb.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-9.43,159.95]}},{name:{common:"Latvia",official:"Republic of Latvia",nativeName:{lav:{official:"Latvijas Republikas",common:"Latvija"}}},tld:[".lv"],cca2:"LV",ccn3:"428",cca3:"LVA",cioc:"LAT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["71"]},capital:["Riga"],altSpellings:["LV","Republic of Latvia","Latvijas Republika"],region:"Europe",subregion:"Northern Europe",languages:{lav:"Latvian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0644\u0627\u062A\u0641\u064A\u0627",common:"\u0644\u0627\u062A\u0641\u064A\u0627"},ces:{official:"Loty\u0161sk\xE1 republika",common:"Loty\u0161sko"},cym:{official:"Republic of Latvia",common:"Latvia"},deu:{official:"Republik Lettland",common:"Lettland"},est:{official:"L\xE4ti Vabariik",common:"L\xE4ti"},fin:{official:"Latvian tasavalta",common:"Latvia"},fra:{official:"R\xE9publique de Lettonie",common:"Lettonie"},hrv:{official:"Republika Latvija",common:"Latvija"},hun:{official:"Lett K\xF6zt\xE1rsas\xE1g",common:"Lettorsz\xE1g"},ita:{official:"Repubblica di Lettonia",common:"Lettonia"},jpn:{official:"\u30E9\u30C8\u30D3\u30A2\u5171\u548C\u56FD",common:"\u30E9\u30C8\u30D3\u30A2"},kor:{official:"\uB77C\uD2B8\uBE44\uC544 \uACF5\uD654\uAD6D",common:"\uB77C\uD2B8\uBE44\uC544"},nld:{official:"Republiek Letland",common:"Letland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0644\u062A\u0648\u0646\u06CC",common:"\u0644\u062A\u0648\u0646\u06CC"},pol:{official:"Republika \u0141otewska",common:"\u0141otwa"},por:{official:"Rep\xFAblica da Let\xF3nia",common:"Let\xF3nia"},rus:{official:"\u041B\u0430\u0442\u0432\u0438\u0439\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041B\u0430\u0442\u0432\u0438\u044F"},slk:{official:"Loty\u0161sk\xE1 republika",common:"Loty\u0161sko"},spa:{official:"Rep\xFAblica de Letonia",common:"Letonia"},swe:{official:"Republiken Lettland",common:"Lettland"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0644\u0679\u0648\u06CC\u0627",common:"\u0644\u0679\u0648\u06CC\u0627"},zho:{official:"\u62C9\u8131\u7EF4\u4E9A\u5171\u548C\u56FD",common:"\u62C9\u8131\u7EF4\u4E9A"}},latlng:[57,25],landlocked:!1,borders:["BLR","EST","LTU","RUS"],area:64559,demonyms:{eng:{f:"Latvian",m:"Latvian"},fra:{f:"Lettone",m:"Letton"}},flag:"\u{1F1F1}\u{1F1FB}",maps:{googleMaps:"https://goo.gl/maps/iQpUkH7ghq31ZtXe9",openStreetMaps:"https://www.openstreetmap.org/relation/72594"},population:1901548,gini:{"2018":35.1},fifa:"LVA",car:{signs:["LV"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/lv.png",svg:"https://flagcdn.com/lv.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[56.95,24.1]},postalCode:{format:"LV-####",regex:"^(?:LV)*(\\d{4})$"}},{name:{common:"British Virgin Islands",official:"Virgin Islands",nativeName:{eng:{official:"Virgin Islands",common:"British Virgin Islands"}}},tld:[".vg"],cca2:"VG",ccn3:"092",cca3:"VGB",cioc:"IVB",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["284"]},capital:["Road Town"],altSpellings:["VG","Virgin Islands, British"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0627\u0644\u0639\u0630\u0631\u0627\u0621 \u0627\u0644\u0628\u0631\u064A\u0637\u0627\u0646\u064A\u0629",common:"\u062C\u0632\u0631 \u0627\u0644\u0639\u0630\u0631\u0627\u0621"},ces:{official:"Britsk\xE9 Panensk\xE9 ostrovy",common:"Britsk\xE9 Panensk\xE9 ostrovy"},cym:{official:"Virgin Islands",common:"British Virgin Islands"},deu:{official:"Jungferninseln",common:"Britische Jungferninseln"},est:{official:"Neitsisaared",common:"Briti Neitsisaared"},fin:{official:"Brittil\xE4iset Neitsytsaaret",common:"Neitsytsaaret"},fra:{official:"\xEEles Vierges",common:"\xCEles Vierges britanniques"},hrv:{official:"Djevi\u010Danski Otoci",common:"Britanski Djevi\u010Danski Otoci"},hun:{official:"Brit Virgin-szigetek",common:"Brit Virgin-szigetek"},ita:{official:"Isole Vergini",common:"Isole Vergini Britanniche"},jpn:{official:"\u30D0\u30FC\u30B8\u30F3\u8AF8\u5CF6",common:"\u30A4\u30AE\u30EA\u30B9\u9818\u30F4\u30A1\u30FC\u30B8\u30F3\u8AF8\u5CF6"},kor:{official:"\uC601\uAD6D\uB839 \uBC84\uC9C4\uC544\uC77C\uB79C\uB4DC",common:"\uC601\uAD6D\uB839 \uBC84\uC9C4\uC544\uC77C\uB79C\uB4DC"},nld:{official:"Maagdeneilanden",common:"Britse Maagdeneilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u06CC\u0631\u062C\u06CC\u0646 \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627",common:"\u062C\u0632\u0627\u06CC\u0631 \u0648\u06CC\u0631\u062C\u06CC\u0646 \u0628\u0631\u06CC\u062A\u0627\u0646\u06CC\u0627"},pol:{official:"Brytyjskie Wyspy Dziewicze",common:"Brytyjskie Wyspy Dziewicze"},por:{official:"Ilhas Virgens",common:"Ilhas Virgens"},rus:{official:"\u0412\u0438\u0440\u0433\u0438\u043D\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0411\u0440\u0438\u0442\u0430\u043D\u0441\u043A\u0438\u0435 \u0412\u0438\u0440\u0433\u0438\u043D\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Panensk\xE9 ostrovy",common:"Panensk\xE9 ostrovy"},spa:{official:"Islas V\xEDrgenes",common:"Islas V\xEDrgenes del Reino Unido"},swe:{official:"Brittiska Jungfru\xF6arna",common:"Brittiska Jungfru\xF6arna"},urd:{official:"\u0628\u0631\u0637\u0627\u0646\u0648\u06CC \u062C\u0632\u0627\u0626\u0631 \u0648\u0631\u062C\u0646",common:"\u0628\u0631\u0637\u0627\u0646\u0648\u06CC \u062C\u0632\u0627\u0626\u0631 \u0648\u0631\u062C\u0646"},zho:{official:"\u82F1\u5C5E\u7EF4\u5C14\u4EAC\u7FA4\u5C9B",common:"\u82F1\u5C5E\u7EF4\u5C14\u4EAC\u7FA4\u5C9B"}},latlng:[18.431383,-64.62305],landlocked:!1,area:151,demonyms:{eng:{f:"Virgin Islander",m:"Virgin Islander"}},flag:"\u{1F1FB}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/49C9cSesNVAR9DQk8",openStreetMaps:"https://www.openstreetmap.org/relation/285454"},population:30237,fifa:"VGB",car:{signs:["BVI"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/vg.png",svg:"https://flagcdn.com/vg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.42,-64.62]}},{name:{common:"Jamaica",official:"Jamaica",nativeName:{eng:{official:"Jamaica",common:"Jamaica"},jam:{official:"Jamaica",common:"Jamaica"}}},tld:[".jm"],cca2:"JM",ccn3:"388",cca3:"JAM",cioc:"JAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{JMD:{name:"Jamaican dollar",symbol:"$"}},idd:{root:"+1",suffixes:["876"]},capital:["Kingston"],altSpellings:["JM"],region:"Americas",subregion:"Caribbean",languages:{eng:"English",jam:"Jamaican Patois"},translations:{ara:{official:"\u062C\u0627\u0645\u0627\u064A\u0643\u0627",common:"\u062C\u0627\u0645\u0627\u064A\u0643\u0627"},ces:{official:"Jamajka",common:"Jamajka"},cym:{official:"Jamaica",common:"Jamaica"},deu:{official:"Jamaika",common:"Jamaika"},est:{official:"Jamaica",common:"Jamaica"},fin:{official:"Jamaika",common:"Jamaika"},fra:{official:"Jama\xEFque",common:"Jama\xEFque"},hrv:{official:"Jamajka",common:"Jamajka"},hun:{official:"Jamaica",common:"Jamaica"},ita:{official:"Giamaica",common:"Giamaica"},jpn:{official:"\u30B8\u30E3\u30DE\u30A4\u30AB",common:"\u30B8\u30E3\u30DE\u30A4\u30AB"},kor:{official:"\uC790\uBA54\uC774\uCE74",common:"\uC790\uBA54\uC774\uCE74"},nld:{official:"Jamaica",common:"Jamaica"},per:{official:"\u062C\u0627\u0645\u0627\u0626\u06CC\u06A9\u0627",common:"\u062C\u0627\u0645\u0627\u0626\u06CC\u06A9\u0627"},pol:{official:"Jamajka",common:"Jamajka"},por:{official:"Jamaica",common:"Jamaica"},rus:{official:"\u042F\u043C\u0430\u0439\u043A\u0430",common:"\u042F\u043C\u0430\u0439\u043A\u0430"},slk:{official:"Jamajka",common:"Jamajka"},spa:{official:"Jamaica",common:"Jamaica"},swe:{official:"Jamaica",common:"Jamaica"},urd:{official:"\u062C\u0645\u06CC\u06A9\u0627",common:"\u062C\u0645\u06CC\u06A9\u0627"},zho:{official:"\u7259\u4E70\u52A0",common:"\u7259\u4E70\u52A0"}},latlng:[18.25,-77.5],landlocked:!1,area:10991,demonyms:{eng:{f:"Jamaican",m:"Jamaican"},fra:{f:"Jama\xEFcaine",m:"Jama\xEFcain"}},flag:"\u{1F1EF}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/Z8mQ6jxnRQKFwJy9A",openStreetMaps:"https://www.openstreetmap.org/relation/555017"},population:2961161,gini:{"2004":45.5},fifa:"JAM",car:{signs:["JA"],side:"left"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/jm.png",svg:"https://flagcdn.com/jm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/jm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/jm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.99702,-76.79358]}},{name:{common:"Afghanistan",official:"Islamic Republic of Afghanistan",nativeName:{prs:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0627\u0645\u06CC \u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",common:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},pus:{official:"\u062F \u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646 \u0627\u0633\u0644\u0627\u0645\u064A \u062C\u0645\u0647\u0648\u0631\u06CC\u062A",common:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},tuk:{official:"Owganystan Yslam Respublikasy",common:"Owganystan"}}},tld:[".af"],cca2:"AF",ccn3:"004",cca3:"AFG",cioc:"AFG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AFN:{name:"Afghan afghani",symbol:"\u060B"}},idd:{root:"+9",suffixes:["3"]},capital:["Kabul"],altSpellings:["AF","Af\u0121\u0101nist\u0101n"],region:"Asia",subregion:"Southern Asia",languages:{prs:"Dari",pus:"Pashto",tuk:"Turkmen"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0641\u0641\u0627\u0646\u0633\u062A\u0627\u0646 \u0627\u0644\u0625\u0633\u0644\u0627\u0645\u064A\u0629",common:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},ces:{official:"Afgh\xE1nsk\xE1 isl\xE1msk\xE1 republika",common:"Afgh\xE1nist\xE1n"},cym:{official:"Gweriniaeth Islamaidd Affganistan",common:"Affganistan"},deu:{official:"Islamische Republik Afghanistan",common:"Afghanistan"},est:{official:"Afganistani Islamivabariik",common:"Afganistan"},fin:{official:"Afganistanin islamilainen tasavalta",common:"Afganistan"},fra:{official:"R\xE9publique islamique d'Afghanistan",common:"Afghanistan"},hrv:{official:"Islamska Republika Afganistan",common:"Afganistan"},hun:{official:"Afganiszt\xE1ni Iszl\xE1m K\xF6zt\xE1rsas\xE1g",common:"Afganiszt\xE1n"},ita:{official:"Repubblica islamica dell'Afghanistan",common:"Afghanistan"},jpn:{official:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3\xB7\u30A4\u30B9\u30E9\u30E0\u5171\u548C\u56FD",common:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3"},kor:{official:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4 \uC774\uC2AC\uB78C \uACF5\uD654\uAD6D",common:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4"},nld:{official:"Islamitische Republiek Afghanistan",common:"Afghanistan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0627\u0645\u06CC \u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",common:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},pol:{official:"Islamska Republika Afganistanu",common:"Afganistan"},por:{official:"Rep\xFAblica Isl\xE2mica do Afeganist\xE3o",common:"Afeganist\xE3o"},rus:{official:"\u0418\u0441\u043B\u0430\u043C\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",common:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D"},slk:{official:"Afg\xE1nsky islamsk\xFD \u0161t\xE1t",common:"Afganistan"},spa:{official:"Rep\xFAblica Isl\xE1mica de Afganist\xE1n",common:"Afganist\xE1n"},swe:{official:"Islamiska republiken Afghanistan",common:"Afghanistan"},urd:{official:"\u0627\u0633\u0644\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",common:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},zho:{official:"\u963F\u5BCC\u6C57\u4F0A\u65AF\u5170\u5171\u548C\u56FD",common:"\u963F\u5BCC\u6C57"}},latlng:[33,65],landlocked:!0,borders:["IRN","PAK","TKM","UZB","TJK","CHN"],area:652230,demonyms:{eng:{f:"Afghan",m:"Afghan"},fra:{f:"Afghane",m:"Afghan"}},flag:"\u{1F1E6}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/BXBGw7yUUFknCfva9",openStreetMaps:"https://www.openstreetmap.org/relation/303427"},population:40218234,fifa:"AFG",car:{signs:["AFG"],side:"right"},timezones:["UTC+04:30"],continents:["Asia"],flags:{png:"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Flag_of_the_Taliban.svg/320px-Flag_of_the_Taliban.svg.png",svg:"https://upload.wikimedia.org/wikipedia/commons/5/5c/Flag_of_the_Taliban.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/af.png",svg:"https://mainfacts.com/media/images/coats_of_arms/af.svg"},startOfWeek:"monday",capitalInfo:{latlng:[34.52,69.18]}},{name:{common:"Serbia",official:"Republic of Serbia",nativeName:{srp:{official:"\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0440\u0431\u0438\u0458\u0430",common:"\u0421\u0440\u0431\u0438\u0458\u0430"}}},tld:[".rs",".\u0441\u0440\u0431"],cca2:"RS",ccn3:"688",cca3:"SRB",cioc:"SRB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RSD:{name:"Serbian dinar",symbol:"\u0434\u0438\u043D."}},idd:{root:"+3",suffixes:["81"]},capital:["Belgrade"],altSpellings:["RS","Srbija","Republic of Serbia","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0440\u0431\u0438\u0458\u0430","Republika Srbija"],region:"Europe",subregion:"Southeast Europe",languages:{srp:"Serbian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0635\u064A\u0631\u0628\u064A\u0627",common:"\u0635\u064A\u0631\u0628\u064A\u0627"},ces:{official:"Srbsk\xE1 republika",common:"Srbsko"},cym:{official:"Republic of Serbia",common:"Serbia"},deu:{official:"Republik Serbien",common:"Serbien"},est:{official:"Serbia Vabariik",common:"Serbia"},fin:{official:"Serbian tasavalta",common:"Serbia"},fra:{official:"R\xE9publique de Serbie",common:"Serbie"},hrv:{official:"Republika Srbija",common:"Srbija"},hun:{official:"Szerb K\xF6zt\xE1rsas\xE1g",common:"Szerbia"},ita:{official:"Repubblica di Serbia",common:"Serbia"},jpn:{official:"\u30BB\u30EB\u30D3\u30A2\u5171\u548C\u56FD",common:"\u30BB\u30EB\u30D3\u30A2"},kor:{official:"\uC138\uB974\uBE44\uC544 \uACF5\uD654\uAD6D",common:"\uC138\uB974\uBE44\uC544"},nld:{official:"Republiek Servi\xEB",common:"Servi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0635\u0631\u0628\u0633\u062A\u0627\u0646",common:"\u0635\u0631\u0628\u0633\u062A\u0627\u0646"},pol:{official:"Republika Serbii",common:"Serbia"},por:{official:"Rep\xFAblica da S\xE9rvia",common:"S\xE9rvia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0435\u0440\u0431\u0438\u044F",common:"\u0421\u0435\u0440\u0431\u0438\u044F"},slk:{official:"Srbsk\xE1 republika",common:"Srbsko"},spa:{official:"Rep\xFAblica de Serbia",common:"Serbia"},swe:{official:"Republiken Serbien",common:"Serbien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0631\u0628\u06CC\u0627",common:"\u0633\u0631\u0628\u06CC\u0627"},zho:{official:"\u585E\u5C14\u7EF4\u4E9A\u5171\u548C\u56FD",common:"\u585E\u5C14\u7EF4\u4E9A"}},latlng:[44,21],landlocked:!0,borders:["BIH","BGR","HRV","HUN","UNK","MKD","MNE","ROU"],area:88361,demonyms:{eng:{f:"Serbian",m:"Serbian"},fra:{f:"Serbe",m:"Serbe"}},flag:"\u{1F1F7}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/2Aqof7aV2Naq8YEK8",openStreetMaps:"https://www.openstreetmap.org/relation/1741311"},population:6908224,gini:{"2017":36.2},fifa:"SRB",car:{signs:["SRB"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/rs.png",svg:"https://flagcdn.com/rs.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/rs.png",svg:"https://mainfacts.com/media/images/coats_of_arms/rs.svg"},startOfWeek:"monday",capitalInfo:{latlng:[44.83,20.5]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Tajikistan",official:"Republic of Tajikistan",nativeName:{rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0422\u0430\u0434\u0436\u0438\u043A\u0438\u0441\u0442\u0430\u043D",common:"\u0422\u0430\u0434\u0436\u0438\u043A\u0438\u0441\u0442\u0430\u043D"},tgk:{official:"\u04B6\u0443\u043C\u04B3\u0443\u0440\u0438\u0438 \u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D",common:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"}}},tld:[".tj"],cca2:"TJ",ccn3:"762",cca3:"TJK",cioc:"TJK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TJS:{name:"Tajikistani somoni",symbol:"\u0405\u041C"}},idd:{root:"+9",suffixes:["92"]},capital:["Dushanbe"],altSpellings:["TJ","To\xE7ikiston","Republic of Tajikistan","\u04B6\u0443\u043C\u04B3\u0443\u0440\u0438\u0438 \u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D","\xC7umhuriyi To\xE7ikiston"],region:"Asia",subregion:"Central Asia",languages:{rus:"Russian",tgk:"Tajik"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0637\u0627\u062C\u064A\u0643\u0633\u062A\u0627\u0646",common:"\u0637\u0627\u062C\u064A\u0643\u0633\u062A\u0627\u0646"},ces:{official:"Republika T\xE1d\u017Eikist\xE1n",common:"T\xE1d\u017Eikist\xE1n"},cym:{official:"Republic of Tajikistan",common:"Tajikistan"},deu:{official:"Republik Tadschikistan",common:"Tadschikistan"},est:{official:"Tad\u017Eikistani Vabariik",common:"Tad\u017Eikistan"},fin:{official:"Tad\u017Eikistanin tasavalta",common:"Tad\u017Eikistan"},fra:{official:"R\xE9publique du Tadjikistan",common:"Tadjikistan"},hrv:{official:"Republika Tad\u017Eikistan",common:"Ta\u0111ikistan"},hun:{official:"T\xE1dzsik K\xF6zt\xE1rsas\xE1g",common:"T\xE1dzsikiszt\xE1n"},ita:{official:"Repubblica del Tajikistan",common:"Tagikistan"},jpn:{official:"\u30BF\u30B8\u30AD\u30B9\u30BF\u30F3\u5171\u548C\u56FD",common:"\u30BF\u30B8\u30AD\u30B9\u30BF\u30F3"},kor:{official:"\uD0C0\uC9C0\uD0A4\uC2A4\uD0C4 \uACF5\uD654\uAD6D",common:"\uD0C0\uC9C0\uD0A4\uC2A4\uD0C4"},nld:{official:"Tadzjikistan",common:"Tadzjikistan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062A\u0627\u062C\u06CC\u06A9\u0633\u062A\u0627\u0646",common:"\u062A\u0627\u062C\u06CC\u06A9\u0650\u0633\u062A\u0627\u0646"},pol:{official:"Republika Tad\u017Cykistanu",common:"Tad\u017Cykistan"},por:{official:"Rep\xFAblica do Tajiquist\xE3o",common:"Tajiquist\xE3o"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0422\u0430\u0434\u0436\u0438\u043A\u0438\u0441\u0442\u0430\u043D",common:"\u0422\u0430\u0434\u0436\u0438\u043A\u0438\u0441\u0442\u0430\u043D"},slk:{official:"Ta\u01C6ick\xE1 republika",common:"Ta\u01C6ikistan"},spa:{official:"Rep\xFAblica de Tayikist\xE1n",common:"Tayikist\xE1n"},swe:{official:"Republiken Tadzjikistan",common:"Tadzjikistan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062A\u0627\u062C\u06A9\u0633\u062A\u0627\u0646",common:"\u062A\u0627\u062C\u06A9\u0633\u062A\u0627\u0646"},zho:{official:"\u5854\u5409\u514B\u65AF\u5766\u5171\u548C\u56FD",common:"\u5854\u5409\u514B\u65AF\u5766"}},latlng:[39,71],landlocked:!0,borders:["AFG","CHN","KGZ","UZB"],area:143100,demonyms:{eng:{f:"Tadzhik",m:"Tadzhik"},fra:{f:"Tadjike",m:"Tadjike"}},flag:"\u{1F1F9}\u{1F1EF}",maps:{googleMaps:"https://goo.gl/maps/8rQgW88jEXijhVb58",openStreetMaps:"https://www.openstreetmap.org/relation/214626"},population:9537642,gini:{"2015":34},fifa:"TJK",car:{signs:["TJ"],side:"right"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tj.png",svg:"https://flagcdn.com/tj.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[38.55,68.77]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Tonga",official:"Kingdom of Tonga",nativeName:{eng:{official:"Kingdom of Tonga",common:"Tonga"},ton:{official:"Kingdom of Tonga",common:"Tonga"}}},tld:[".to"],cca2:"TO",ccn3:"776",cca3:"TON",cioc:"TGA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TOP:{name:"Tongan pa\u02BBanga",symbol:"T$"}},idd:{root:"+6",suffixes:["76"]},capital:["Nuku'alofa"],altSpellings:["TO"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",ton:"Tongan"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u062A\u0648\u0646\u063A\u0627",common:"\u062A\u0648\u0646\u063A\u0627"},ces:{official:"Kr\xE1lovstv\xED Tonga",common:"Tonga"},cym:{official:"Kingdom of Tonga",common:"Tonga"},deu:{official:"K\xF6nigreich Tonga",common:"Tonga"},est:{official:"Tonga Kuningriik",common:"Tonga"},fin:{official:"Tongan kuningaskunta",common:"Tonga"},fra:{official:"Royaume des Tonga",common:"Tonga"},hrv:{official:"Kraljevina Tonga",common:"Tonga"},hun:{official:"Tongai Kir\xE1lys\xE1g",common:"Tonga"},ita:{official:"Regno di Tonga",common:"Tonga"},jpn:{official:"\u30C8\u30F3\u30AC\u738B\u56FD",common:"\u30C8\u30F3\u30AC"},kor:{official:"\uD1B5\uAC00 \uC655\uAD6D",common:"\uD1B5\uAC00"},nld:{official:"Koninkrijk Tonga",common:"Tonga"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u062A\u0648\u0646\u06AF\u0627",common:"\u062A\u0648\u0646\u06AF\u0627"},pol:{official:"Kr\xF3lestwo Tonga",common:"Tonga"},por:{official:"Reino de Tonga",common:"Tonga"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0422\u043E\u043D\u0433\u0430",common:"\u0422\u043E\u043D\u0433\u0430"},slk:{official:"Tongsk\xE9 kr\xE1\u013Eovstvo",common:"Tonga"},spa:{official:"Reino de Tonga",common:"Tonga"},swe:{official:"Konungariket Tonga",common:"Tonga"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0679\u0648\u0646\u06AF\u0627",common:"\u0679\u0648\u0646\u06AF\u0627"},zho:{official:"\u6C64\u52A0\u738B\u56FD",common:"\u6C64\u52A0"}},latlng:[-20,-175],landlocked:!1,area:747,demonyms:{eng:{f:"Tongan",m:"Tongan"},fra:{f:"Tonguienne",m:"Tonguien"}},flag:"\u{1F1F9}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/p5YALBY2QdEzswRo7",openStreetMaps:"https://www.openstreetmap.org/relation/2186665"},population:105697,gini:{"2015":37.6},fifa:"TGA",car:{signs:["TO"],side:"left"},timezones:["UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/to.png",svg:"https://flagcdn.com/to.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/to.png",svg:"https://mainfacts.com/media/images/coats_of_arms/to.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-21.13,-175.2]}},{name:{common:"Kiribati",official:"Independent and Sovereign Republic of Kiribati",nativeName:{eng:{official:"Independent and Sovereign Republic of Kiribati",common:"Kiribati"},gil:{official:"Ribaberiki Kiribati",common:"Kiribati"}}},tld:[".ki"],cca2:"KI",ccn3:"296",cca3:"KIR",cioc:"KIR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"},KID:{name:"Kiribati dollar",symbol:"$"}},idd:{root:"+6",suffixes:["86"]},capital:["South Tarawa"],altSpellings:["KI","Republic of Kiribati","Ribaberiki Kiribati"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English",gil:"Gilbertese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u064A\u0631\u064A\u0628\u0627\u062A\u064A",common:"\u0643\u064A\u0631\u064A\u0628\u0627\u062A\u064A"},ces:{official:"Republika Kiribati",common:"Kiribati"},cym:{official:"Independent and Sovereign Republic of Kiribati",common:"Kiribati"},deu:{official:"Republik Kiribati",common:"Kiribati"},est:{official:"Kiribati Vabariik",common:"Kiribati"},fin:{official:"Kiribatin tasavalta",common:"Kiribati"},fra:{official:"R\xE9publique de Kiribati",common:"Kiribati"},hrv:{official:"Samostalne i suverene Republike Kiribati",common:"Kiribati"},hun:{official:"Kiribati K\xF6zt\xE1rsas\xE1g",common:"Kiribati"},ita:{official:"Repubblica indipendente e sovrano di Kiribati",common:"Kiribati"},jpn:{official:"\u30AD\u30EA\u30D0\u30B9\u306E\u72EC\u7ACB\u3068\u4E3B\u6A29\u5171\u548C\u56FD",common:"\u30AD\u30EA\u30D0\u30B9"},kor:{official:"\uD0A4\uB9AC\uBC14\uC2DC \uACF5\uD654\uAD6D",common:"\uD0A4\uB9AC\uBC14\uC2DC"},nld:{official:"Onafhankelijke en soevereine republiek Kiribati",common:"Kiribati"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u06CC\u0631\u06CC\u0628\u0627\u062A\u06CC",common:"\u06A9\u06CC\u0631\u06CC\u0628\u0627\u062A\u06CC"},pol:{official:"Republika Kiribati",common:"Kiribati"},por:{official:"Independente e soberano Rep\xFAblica de Kiribati",common:"Kiribati"},rus:{official:"\u041D\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0439 \u0438 \u0441\u0443\u0432\u0435\u0440\u0435\u043D\u043D\u043E\u0439 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0438 \u041A\u0438\u0440\u0438\u0431\u0430\u0442\u0438",common:"\u041A\u0438\u0440\u0438\u0431\u0430\u0442\u0438"},slk:{official:"Kiribatsk\xE1 republika",common:"Kiribati"},spa:{official:"Rep\xFAblica Independiente y Soberano de Kiribati",common:"Kiribati"},swe:{official:"Republiken Kiribati",common:"Kiribati"},urd:{official:"\u0633\u0644\u0637\u0646\u062A \u0622\u0632\u0627\u062F \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u06CC\u0631\u06CC\u0628\u0627\u062A\u06CC",common:"\u06A9\u06CC\u0631\u06CC\u0628\u0627\u062A\u06CC"},zho:{official:"\u57FA\u91CC\u5DF4\u65AF\u5171\u548C\u56FD",common:"\u57FA\u91CC\u5DF4\u65AF"}},latlng:[1.41666666,173],landlocked:!1,area:811,demonyms:{eng:{f:"I-Kiribati",m:"I-Kiribati"},fra:{f:"Kiribatienne",m:"Kiribatien"}},flag:"\u{1F1F0}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/NBfYvrndW4skAimw9",openStreetMaps:"https://www.openstreetmap.org/relation/571178"},population:119446,gini:{"2006":37},car:{signs:["KIR"],side:"left"},timezones:["UTC+12:00","UTC+13:00","UTC+14:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/ki.png",svg:"https://flagcdn.com/ki.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ki.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ki.svg"},startOfWeek:"monday",capitalInfo:{latlng:[1.33,172.98]}},{name:{common:"Eritrea",official:"State of Eritrea",nativeName:{ara:{official:"\u062F\u0648\u0644\u0629 \u0625\u0631\u062A\u0631\u064A\u0627",common:"\u0625\u0631\u062A\u0631\u064A\u0627\u200E"},eng:{official:"State of Eritrea",common:"Eritrea"},tir:{official:"\u1203\u1308\u1228 \u12A4\u122D\u1275\u122B",common:"\u12A4\u122D\u1275\u122B"}}},tld:[".er"],cca2:"ER",ccn3:"232",cca3:"ERI",cioc:"ERI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ERN:{name:"Eritrean nakfa",symbol:"Nfk"}},idd:{root:"+2",suffixes:["91"]},capital:["Asmara"],altSpellings:["ER","State of Eritrea","\u1203\u1308\u1228 \u12A4\u122D\u1275\u122B","Dawlat Iritriy\xE1","\u02BEErtr\u0101","Iritriy\u0101"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",eng:"English",tir:"Tigrinya"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0625\u0631\u064A\u062A\u0631\u064A\u0627",common:"\u0625\u0631\u064A\u062A\u0631\u064A\u0627"},ces:{official:"St\xE1t Eritrea",common:"Eritrea"},cym:{official:"Gwladwriaeth Eritrea",common:"Eritrea"},deu:{official:"Staat Eritrea",common:"Eritrea"},est:{official:"Eritrea Riik",common:"Eritrea"},fin:{official:"Eritrean valtio",common:"Eritrea"},fra:{official:"\xC9tat d'\xC9rythr\xE9e",common:"\xC9rythr\xE9e"},hrv:{official:"Dr\u017Eava Eritreji",common:"Eritreja"},hun:{official:"Eritrea",common:"Eritrea"},ita:{official:"Stato di Eritrea",common:"Eritrea"},jpn:{official:"\u30A8\u30EA\u30C8\u30EA\u30A2\u56FD",common:"\u30A8\u30EA\u30C8\u30EA\u30A2"},kor:{official:"\uC5D0\uB9AC\uD2B8\uB808\uC544\uAD6D",common:"\uC5D0\uB9AC\uD2B8\uB808\uC544"},nld:{official:"Staat Eritrea",common:"Eritrea"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0631\u06CC\u062A\u0631\u0647",common:"\u0627\u0631\u06CC\u062A\u0631\u0647"},pol:{official:"Pa\u0144stwo Erytrea",common:"Erytrea"},por:{official:"Estado da Eritreia",common:"Eritreia"},rus:{official:"\u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u042D\u0440\u0438\u0442\u0440\u0435\u044F",common:"\u042D\u0440\u0438\u0442\u0440\u0435\u044F"},slk:{official:"Eritrejsk\xFD \u0161t\xE1t",common:"Eritrea"},spa:{official:"Estado de Eritrea",common:"Eritrea"},swe:{official:"Staten Eritrea",common:"Eritrea"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u0627\u0631\u062A\u0631\u06CC\u0627",common:"\u0627\u0631\u062A\u0631\u06CC\u0627"},zho:{official:"\u5384\u7ACB\u7279\u91CC\u4E9A",common:"\u5384\u7ACB\u7279\u91CC\u4E9A"}},latlng:[15,39],landlocked:!1,borders:["DJI","ETH","SDN"],area:117600,demonyms:{eng:{f:"Eritrean",m:"Eritrean"},fra:{f:"\xC9rythr\xE9enne",m:"\xC9rythr\xE9en"}},flag:"\u{1F1EA}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/HRyqUpnPwwG6jY5j6",openStreetMaps:"https://www.openstreetmap.org/relation/296961"},population:5352e3,fifa:"ERI",car:{signs:["ER"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/er.png",svg:"https://flagcdn.com/er.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/er.png",svg:"https://mainfacts.com/media/images/coats_of_arms/er.svg"},startOfWeek:"monday",capitalInfo:{latlng:[15.33,38.93]}},{name:{common:"Mali",official:"Republic of Mali",nativeName:{fra:{official:"R\xE9publique du Mali",common:"Mali"}}},tld:[".ml"],cca2:"ML",ccn3:"466",cca3:"MLI",cioc:"MLI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["23"]},capital:["Bamako"],altSpellings:["ML","Republic of Mali","R\xE9publique du Mali"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0627\u0644\u064A",common:"\u0645\u0627\u0644\u064A"},ces:{official:"Republika Mali",common:"Mali"},cym:{official:"Republic of Mali",common:"Mali"},deu:{official:"Republik Mali",common:"Mali"},est:{official:"Mali Vabariik",common:"Mali"},fin:{official:"Malin tasavalta",common:"Mali"},fra:{official:"R\xE9publique du Mali",common:"Mali"},hrv:{official:"Republika Mali",common:"Mali"},hun:{official:"Mali K\xF6zt\xE1rsas\xE1g",common:"Mali"},ita:{official:"Repubblica del Mali",common:"Mali"},jpn:{official:"\u30DE\u30EA\u5171\u548C\u56FD",common:"\u30DE\u30EA"},kor:{official:"\uB9D0\uB9AC \uACF5\uD654\uAD6D",common:"\uB9D0\uB9AC"},nld:{official:"Republiek Mali",common:"Mali"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0627\u0644\u06CC",common:"\u0645\u0627\u0644\u06CC"},pol:{official:"Republika Mali",common:"Mali"},por:{official:"Rep\xFAblica do Mali",common:"Mali"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u043B\u0438",common:"\u041C\u0430\u043B\u0438"},slk:{official:"Malijsk\xE1 republika",common:"Mali"},spa:{official:"Rep\xFAblica de Mal\xED",common:"Mali"},swe:{official:"Republiken Mali",common:"Mali"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0627\u0644\u06CC",common:"\u0645\u0627\u0644\u06CC"},zho:{official:"\u9A6C\u91CC\u5171\u548C\u56FD",common:"\u9A6C\u91CC"}},latlng:[17,-4],landlocked:!0,borders:["DZA","BFA","GIN","CIV","MRT","NER","SEN"],area:1240192,demonyms:{eng:{f:"Malian",m:"Malian"},fra:{f:"Malienne",m:"Malien"}},flag:"\u{1F1F2}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/u9mYJkCB19wyuzh27",openStreetMaps:"https://www.openstreetmap.org/relation/192785"},population:20250834,gini:{"2009":33},fifa:"MLI",car:{signs:["RMM"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ml.png",svg:"https://flagcdn.com/ml.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ml.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ml.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.65,-8]}},{name:{common:"Haiti",official:"Republic of Haiti",nativeName:{fra:{official:"R\xE9publique d'Ha\xEFti",common:"Ha\xEFti"},hat:{official:"Repiblik Ayiti",common:"Ayiti"}}},tld:[".ht"],cca2:"HT",ccn3:"332",cca3:"HTI",cioc:"HAI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HTG:{name:"Haitian gourde",symbol:"G"}},idd:{root:"+5",suffixes:["09"]},capital:["Port-au-Prince"],altSpellings:["HT","Republic of Haiti","R\xE9publique d'Ha\xEFti","Repiblik Ayiti"],region:"Americas",subregion:"Caribbean",languages:{fra:"French",hat:"Haitian Creole"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0647\u0627\u064A\u062A\u064A",common:"\u0647\u0627\u064A\u062A\u064A"},ces:{official:"Republika Haiti",common:"Haiti"},cym:{official:"Republic of Haiti",common:"Haiti"},deu:{official:"Republik Haiti",common:"Haiti"},est:{official:"Haiti Vabariik",common:"Haiti"},fin:{official:"Haitin tasavalta",common:"Haiti"},fra:{official:"R\xE9publique d'Ha\xEFti",common:"Ha\xEFti"},hrv:{official:"Republika Haiti",common:"Haiti"},hun:{official:"Haiti K\xF6zt\xE1rsas\xE1g",common:"Haiti"},ita:{official:"Repubblica di Haiti",common:"Haiti"},jpn:{official:"\u30CF\u30A4\u30C1\u5171\u548C\u56FD",common:"\u30CF\u30A4\u30C1"},kor:{official:"\uC544\uC774\uD2F0 \uACF5\uD654\uAD6D",common:"\uC544\uC774\uD2F0"},nld:{official:"Republiek Ha\xEFti",common:"Ha\xEFti"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0647\u0627\u0626\u06CC\u062A\u06CC",common:"\u0647\u0627\u0626\u06CC\u062A\u06CC"},pol:{official:"Republika Haiti",common:"Haiti"},por:{official:"Rep\xFAblica do Haiti",common:"Haiti"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0430\u0438\u0442\u0438",common:"\u0413\u0430\u0438\u0442\u0438"},slk:{official:"Haitsk\xE1 republika",common:"Haiti"},spa:{official:"Rep\xFAblica de Hait\xED",common:"Hait\xED"},swe:{official:"Republiken Haiti",common:"Haiti"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06C1\u06CC\u0679\u06CC",common:"\u06C1\u06CC\u0679\u06CC"},zho:{official:"\u6D77\u5730\u5171\u548C\u56FD",common:"\u6D77\u5730"}},latlng:[19,-72.41666666],landlocked:!1,borders:["DOM"],area:27750,demonyms:{eng:{f:"Haitian",m:"Haitian"},fra:{f:"Ha\xEFtienne",m:"Ha\xEFtien"}},flag:"\u{1F1ED}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/9o13xtjuUdqFnHbn9",openStreetMaps:"https://www.openstreetmap.org/relation/307829"},population:11402533,gini:{"2012":41.1},fifa:"HAI",car:{signs:["RH"],side:"right"},timezones:["UTC-05:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ht.png",svg:"https://flagcdn.com/ht.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ht.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ht.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.53,-72.33]},postalCode:{format:"HT####",regex:"^(?:HT)*(\\d{4})$"}},{name:{common:"Vanuatu",official:"Republic of Vanuatu",nativeName:{bis:{official:"Ripablik blong Vanuatu",common:"Vanuatu"},eng:{official:"Republic of Vanuatu",common:"Vanuatu"},fra:{official:"R\xE9publique de Vanuatu",common:"Vanuatu"}}},tld:[".vu"],cca2:"VU",ccn3:"548",cca3:"VUT",cioc:"VAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{VUV:{name:"Vanuatu vatu",symbol:"Vt"}},idd:{root:"+6",suffixes:["78"]},capital:["Port Vila"],altSpellings:["VU","Republic of Vanuatu","Ripablik blong Vanuatu","R\xE9publique de Vanuatu"],region:"Oceania",subregion:"Melanesia",languages:{bis:"Bislama",eng:"English",fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0641\u0627\u0646\u0648\u0627\u062A\u0648",common:"\u0641\u0627\u0646\u0648\u0627\u062A\u0648"},ces:{official:"Republika Vanuatu",common:"Vanuatu"},cym:{official:"Republic of Vanuatu",common:"Vanuatu"},deu:{official:"Vanuatu",common:"Vanuatu"},est:{official:"Vanuatu Vabariik",common:"Vanuatu"},fin:{official:"Vanuatun tasavalta",common:"Vanuatu"},fra:{official:"R\xE9publique de Vanuatu",common:"Vanuatu"},hrv:{official:"Republika Vanuatu",common:"Vanuatu"},hun:{official:"Vanuatui K\xF6zt\xE1rsas\xE1g",common:"Vanuatu"},ita:{official:"Repubblica di Vanuatu",common:"Vanuatu"},jpn:{official:"\u30D0\u30CC\u30A2\u30C4\u5171\u548C\u56FD",common:"\u30D0\u30CC\u30A2\u30C4"},kor:{official:"\uBC14\uB204\uC544\uD22C \uACF5\uD654\uAD6D",common:"\uBC14\uB204\uC544\uD22C"},nld:{official:"Republiek Vanuatu",common:"Vanuatu"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0648\u0627\u0646\u0648\u0627\u062A\u0648",common:"\u0648\u0627\u0646\u0648\u0627\u062A\u0648"},pol:{official:"Republika Vanuatu",common:"Vanuatu"},por:{official:"Rep\xFAblica de Vanuatu",common:"Vanuatu"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0412\u0430\u043D\u0443\u0430\u0442\u0443",common:"\u0412\u0430\u043D\u0443\u0430\u0442\u0443"},slk:{official:"Vanuatsk\xE1 republika",common:"Vanuatu"},spa:{official:"Rep\xFAblica de Vanuatu",common:"Vanuatu"},swe:{official:"Republiken Vanuatu",common:"Vanuatu"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0648\u0627\u0646\u0648\u0627\u062A\u0648",common:"\u0648\u0627\u0646\u0648\u0627\u062A\u0648"},zho:{official:"\u74E6\u52AA\u963F\u56FE\u5171\u548C\u56FD",common:"\u74E6\u52AA\u963F\u56FE"}},latlng:[-16,167],landlocked:!1,area:12189,demonyms:{eng:{f:"Ni-Vanuatu",m:"Ni-Vanuatu"},fra:{f:"Vanuatuane",m:"Vanuatuan"}},flag:"\u{1F1FB}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/hwAjehcT7VfvP5zJ8",openStreetMaps:"https://www.openstreetmap.org/relation/2177246"},population:307150,gini:{"2010":37.6},fifa:"VAN",car:{signs:["VU"],side:"right"},timezones:["UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/vu.png",svg:"https://flagcdn.com/vu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-17.73,168.32]}},{name:{common:"Bosnia and Herzegovina",official:"Bosnia and Herzegovina",nativeName:{bos:{official:"Bosna i Hercegovina",common:"Bosna i Hercegovina"},hrv:{official:"Bosna i Hercegovina",common:"Bosna i Hercegovina"},srp:{official:"\u0411\u043E\u0441\u043Da \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430",common:"\u0411\u043E\u0441\u043Da \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"}}},tld:[".ba"],cca2:"BA",ccn3:"070",cca3:"BIH",cioc:"BIH",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BAM:{name:"Bosnia and Herzegovina convertible mark"}},idd:{root:"+3",suffixes:["87"]},capital:["Sarajevo"],altSpellings:["BA","Bosnia-Herzegovina","\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"],region:"Europe",subregion:"Southeast Europe",languages:{bos:"Bosnian",hrv:"Croatian",srp:"Serbian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0628\u0648\u0633\u0646\u0629 \u0648\u0627\u0644\u0647\u0631\u0633\u0643",common:"\u0627\u0644\u0628\u0648\u0633\u0646\u0629 \u0648\u0627\u0644\u0647\u0631\u0633\u0643"},ces:{official:"Bosna a Hercegovina",common:"Bosna a Hercegovina"},cym:{official:"Bosnia a Hercegovina",common:"Bosnia a Hercegovina"},deu:{official:"Bosnien und Herzegowina",common:"Bosnien und Herzegowina"},est:{official:"Bosnia ja Hertsegoviina",common:"Bosnia ja Hertsegoviina"},fin:{official:"Bosnia ja Hertsegovina",common:"Bosnia ja Hertsegovina"},fra:{official:"Bosnie-et-Herz\xE9govine",common:"Bosnie-Herz\xE9govine"},hrv:{official:"Bosna i Hercegovina",common:"Bosna i Hercegovina"},hun:{official:"Bosznia-Hercegovina",common:"Bosznia-Hercegovina"},ita:{official:"Bosnia-Erzegovina",common:"Bosnia ed Erzegovina"},jpn:{official:"\u30DC\u30B9\u30CB\u30A2\xB7\u30D8\u30EB\u30C4\u30A7\u30B4\u30D3\u30CA",common:"\u30DC\u30B9\u30CB\u30A2\u30FB\u30D8\u30EB\u30C4\u30A7\u30B4\u30D3\u30CA"},kor:{official:"\uBCF4\uC2A4\uB2C8\uC544 \uD5E4\uB974\uCCB4\uACE0\uBE44\uB098",common:"\uBCF4\uC2A4\uB2C8\uC544 \uD5E4\uB974\uCCB4\uACE0\uBE44\uB098"},nld:{official:"Bosni\xEB-Herzegovina",common:"Bosni\xEB en Herzegovina"},per:{official:"\u0628\u0648\u0633\u0646\u06CC \u0648 \u0647\u0631\u0632\u06AF\u0648\u06CC\u0646",common:"\u0628\u0648\u0633\u0646\u06CC \u0648 \u0647\u0631\u0632\u06AF\u0648\u06CC\u0646"},pol:{official:"Bo\u015Bnia i Hercegowina",common:"Bo\u015Bnia i Hercegowina"},por:{official:"B\xF3snia e Herzegovina",common:"B\xF3snia e Herzegovina"},rus:{official:"\u0411\u043E\u0441\u043D\u0438\u044F \u0438 \u0413\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430",common:"\u0411\u043E\u0441\u043D\u0438\u044F \u0438 \u0413\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},slk:{official:"Republika Bosny a Hercegoviny",common:"Bosna a Hercegovina"},spa:{official:"Bosnia y Herzegovina",common:"Bosnia y Herzegovina"},swe:{official:"Bosnien och Hercegovina",common:"Bosnien och Hercegovina"},urd:{official:"\u0628\u0648\u0633\u0646\u06CC\u0627 \u0648 \u06C1\u0631\u0632\u06CC\u06AF\u0648\u0648\u06CC\u0646\u0627",common:"\u0628\u0648\u0633\u0646\u06CC\u0627 \u0648 \u06C1\u0631\u0632\u06CC\u06AF\u0648\u0648\u06CC\u0646\u0627"},zho:{official:"\u6CE2\u65AF\u5C3C\u4E9A\u548C\u9ED1\u585E\u54E5\u7EF4\u90A3",common:"\u6CE2\u65AF\u5C3C\u4E9A\u548C\u9ED1\u585E\u54E5\u7EF4\u90A3"}},latlng:[44,18],landlocked:!1,borders:["HRV","MNE","SRB"],area:51209,demonyms:{eng:{f:"Bosnian, Herzegovinian",m:"Bosnian, Herzegovinian"},fra:{f:"Bosnienne",m:"Bosnien"}},flag:"\u{1F1E7}\u{1F1E6}",maps:{googleMaps:"https://www.google.com/maps/place/Bosnia+and+Herzegovina",openStreetMaps:"https://www.openstreetmap.org/relation/2528142"},population:3280815,gini:{"2011":33},fifa:"BIH",car:{signs:["BIH"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ba.png",svg:"https://flagcdn.com/ba.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ba.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ba.svg"},startOfWeek:"monday",capitalInfo:{latlng:[43.87,18.42]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Vatican City",official:"Vatican City State",nativeName:{ita:{official:"Stato della Citt\xE0 del Vaticano",common:"Vaticano"},lat:{official:"Status Civitatis Vatican\xE6",common:"Vatican\xE6"}}},tld:[".va"],cca2:"VA",ccn3:"336",cca3:"VAT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["906698","79"]},capital:["Vatican City"],altSpellings:["VA","Holy See (Vatican City State)","Vatican City State","Stato della Citt\xE0 del Vaticano"],region:"Europe",subregion:"Southern Europe",languages:{ita:"Italian",lat:"Latin"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0645\u062F\u064A\u0646\u0629 \u0627\u0644\u0641\u0627\u062A\u064A\u0643\u0627\u0646",common:"\u0645\u062F\u064A\u0646\u0629 \u0627\u0644\u0641\u0627\u062A\u064A\u0643\u0627\u0646"},ces:{official:"M\u011Bstsk\xFD st\xE1t Vatik\xE1n",common:"Vatik\xE1n"},cym:{official:"Vatican City State",common:"Vatican City"},deu:{official:"Staat Vatikanstadt",common:"Vatikanstadt"},est:{official:"Vatikani Linnriik",common:"Vatikan"},fin:{official:"Vatikaanin kaupunkivaltio",common:"Vatikaani"},fra:{official:"Cit\xE9 du Vatican",common:"Cit\xE9 du Vatican"},hrv:{official:"Vatikan",common:"Vatikan"},hun:{official:"Vatik\xE1n \xC1llam",common:"Vatik\xE1n"},ita:{official:"Citt\xE0 del Vaticano",common:"Citt\xE0 del Vaticano"},jpn:{official:"\u30D0\u30C1\u30AB\u30F3\u5E02\u56FD\u306E\u72B6\u614B",common:"\u30D0\u30C1\u30AB\u30F3\u5E02\u56FD"},kor:{official:"\uBC14\uD2F0\uCE78 \uC2DC\uAD6D",common:"\uBC14\uD2F0\uCE78"},nld:{official:"Vaticaanstad",common:"Vaticaanstad"},per:{official:"\u062F\u0648\u0644\u062A\u200C\u0634\u0647\u0631 \u0648\u0627\u062A\u06CC\u06A9\u0627\u0646",common:"\u0648\u0627\u062A\u06CC\u06A9\u0627\u0646"},pol:{official:"Pa\u0144stwo Watyka\u0144skie",common:"Watykan"},por:{official:"Cidade do Vaticano",common:"Cidade do Vaticano"},rus:{official:"\u0413\u043E\u0440\u043E\u0434-\u0433\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u0412\u0430\u0442\u0438\u043A\u0430\u043D",common:"\u0412\u0430\u0442\u0438\u043A\u0430\u043D"},slk:{official:"Sv\xE4t\xE1 stolica (Vatik\xE1nsky mestsk\xFD \u0161t\xE1t",common:"Vatik\xE1n"},spa:{official:"Ciudad del Vaticano",common:"Ciudad del Vaticano"},swe:{official:"Vatikanstaten",common:"Vatikanstaten"},urd:{official:"\u0648\u06CC\u0679\u06CC\u06A9\u0646 \u0633\u0679\u06CC",common:"\u0648\u06CC\u0679\u06CC\u06A9\u0646 \u0633\u0679\u06CC"},zho:{official:"\u68B5\u8482\u5188\u57CE\u56FD",common:"\u68B5\u8482\u5188"}},latlng:[41.9,12.45],landlocked:!0,borders:["ITA"],area:.44,demonyms:{eng:{f:"Vatican",m:"Vatican"},fra:{f:"Vaticane",m:"Vatican"}},flag:"\u{1F1FB}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/DTKvw5Bd1QZaDZmE8",openStreetMaps:"https://www.openstreetmap.org/relation/36989"},population:451,car:{signs:["V"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/va.png",svg:"https://flagcdn.com/va.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/va.png",svg:"https://mainfacts.com/media/images/coats_of_arms/va.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.9,12.45]}},{name:{common:"Benin",official:"Republic of Benin",nativeName:{fra:{official:"R\xE9publique du B\xE9nin",common:"B\xE9nin"}}},tld:[".bj"],cca2:"BJ",ccn3:"204",cca3:"BEN",cioc:"BEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["29"]},capital:["Porto-Novo"],altSpellings:["BJ","Republic of Benin","R\xE9publique du B\xE9nin"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0646\u064A\u0646",common:"\u0628\u0646\u064A\u0646"},ces:{official:"Beninsk\xE1 republika",common:"Benin"},cym:{official:"Gweriniaeth Benin",common:"Benin"},deu:{official:"Republik Benin",common:"Benin"},est:{official:"Benini Vabariik",common:"Benin"},fin:{official:"Beninin tasavalta",common:"Benin"},fra:{official:"R\xE9publique du B\xE9nin",common:"B\xE9nin"},hrv:{official:"Republika Benin",common:"Benin"},hun:{official:"Benini K\xF6zt\xE1rsas\xE1g",common:"Benin"},ita:{official:"Repubblica del Benin",common:"Benin"},jpn:{official:"\u30D9\u30CA\u30F3\u5171\u548C\u56FD",common:"\u30D9\u30CA\u30F3"},kor:{official:"\uBCA0\uB0C9 \uACF5\uD654\uAD6D",common:"\uBCA0\uB0C9"},nld:{official:"Republiek Benin",common:"Benin"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0646\u06CC\u0646",common:"\u0628\u0646\u06CC\u0646"},pol:{official:"Benin",common:"Benin"},por:{official:"Rep\xFAblica do Benin",common:"Benin"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0435\u043D\u0438\u043D",common:"\u0411\u0435\u043D\u0438\u043D"},slk:{official:"Beninsk\xE1 republika",common:"Benin"},spa:{official:"Rep\xFAblica de Benin",common:"Ben\xEDn"},swe:{official:"Republiken Benin",common:"Benin"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u06CC\u0646\u0646",common:"\u0628\u06CC\u0646\u0646"},zho:{official:"\u8D1D\u5B81\u5171\u548C\u56FD",common:"\u8D1D\u5B81"}},latlng:[9.5,2.25],landlocked:!1,borders:["BFA","NER","NGA","TGO"],area:112622,demonyms:{eng:{f:"Beninese",m:"Beninese"},fra:{f:"B\xE9ninoise",m:"B\xE9ninois"}},flag:"\u{1F1E7}\u{1F1EF}",maps:{googleMaps:"https://goo.gl/maps/uMw1BsHEXQYgVFFu6",openStreetMaps:"https://www.openstreetmap.org/relation/192784"},population:12123198,gini:{"2015":47.8},fifa:"BEN",car:{signs:["DY"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bj.png",svg:"https://flagcdn.com/bj.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.48,2.62]}},{name:{common:"Svalbard and Jan Mayen",official:"Svalbard og Jan Mayen",nativeName:{nor:{official:"Svalbard og Jan Mayen",common:"Svalbard og Jan Mayen"}}},tld:[".sj"],cca2:"SJ",ccn3:"744",cca3:"SJM",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NOK:{name:"krone",symbol:"kr"}},idd:{root:"+4",suffixes:["779"]},capital:["Longyearbyen"],altSpellings:["SJ","Svalbard and Jan Mayen Islands"],region:"Europe",subregion:"Northern Europe",languages:{nor:"Norwegian"},translations:{ara:{official:"\u0633\u0641\u0627\u0644\u0628\u0627\u0631\u062F \u0648\u064A\u0627\u0646 \u0645\u0627\u064A\u0646",common:"\u0633\u0641\u0627\u0644\u0628\u0627\u0631\u062F \u0648\u064A\u0627\u0646 \u0645\u0627\u064A\u0646"},ces:{official:"\u0160picberky a Jan Mayen",common:"\u0160picberky a Jan Mayen"},cym:{official:"Svalbard og Jan Mayen",common:"Svalbard and Jan Mayen"},deu:{official:"Spitzbergen und Jan Mayen",common:"Spitzbergen und Jan Mayen"},est:{official:"Svalbard",common:"Svalbard"},fin:{official:"Huippuvuoret",common:"Huippuvuoret"},fra:{official:"Jan Mayen Svalbard",common:"Svalbard et Jan Mayen"},hrv:{official:"Svalbard og Jan Mayen",common:"Svalbard i Jan Mayen"},hun:{official:"Svalbard \xE9s Jan Mayen",common:"Svalbard \xE9s Jan Mayen"},ita:{official:"Svalbard og Jan Mayen",common:"Svalbard e Jan Mayen"},jpn:{official:"\u30B9\u30D0\u30FC\u30EB\u30D0\u30EB\u8AF8\u5CF6OG\u30E4\u30F3\u30DE\u30A4\u30A8\u30F3",common:"\u30B9\u30F4\u30A1\u30FC\u30EB\u30D0\u30EB\u8AF8\u5CF6\u304A\u3088\u3073\u30E4\u30F3\u30DE\u30A4\u30A8\u30F3\u5CF6"},kor:{official:"\uC2A4\uBC1C\uBC14\uB974 \uC580\uB9C8\uC60C \uC81C\uB3C4",common:"\uC2A4\uBC1C\uBC14\uB974 \uC580\uB9C8\uC60C \uC81C\uB3C4"},nld:{official:"Svalbard og Jan Mayen",common:"Svalbard en Jan Mayen"},per:{official:"\u0633\u0648\u0627\u0644\u0628\u0627\u0631\u062F \u0648 \u06CC\u0627\u0646 \u0645\u0627\u06CC\u0646",common:"\u0633\u0648\u0627\u0644\u0628\u0627\u0631\u062F \u0648 \u06CC\u0627\u0646 \u0645\u0627\u06CC\u0646"},pol:{official:"Svalbard i Jan Mayen",common:"Svalbard i Jan Mayen"},por:{official:"Svalbard og Jan Mayen",common:"Ilhas Svalbard e Jan Mayen"},rus:{official:"\u0421\u0432\u0430\u043B\u044C\u0431\u0430\u0440\u0434\u0430 \u043E\u0433 \u042F\u043D-\u041C\u0430\u0439\u0435\u043D",common:"\u0428\u043F\u0438\u0446\u0431\u0435\u0440\u0433\u0435\u043D \u0438 \u042F\u043D-\u041C\u0430\u0439\u0435\u043D"},slk:{official:"Svalbard a Jan Mayen",common:"Svalbard a Jan Mayen"},spa:{official:"Svalbard og Jan Mayen",common:"Islas Svalbard y Jan Mayen"},swe:{official:"Svalbard och Jan Mayen",common:"Svalbard och Jan Mayen"},urd:{official:"\u0633\u0648\u0627\u0644\u0628\u0627\u0631\u0688 \u0627\u0648\u0631 \u062C\u0627\u0646 \u0645\u06CC\u0626\u0646",common:"\u0633\u0648\u0627\u0644\u0628\u0627\u0631\u0688 \u0627\u0648\u0631 \u062C\u0627\u0646 \u0645\u06CC\u0626\u0646"},zho:{official:"\u65AF\u74E6\u5C14\u5DF4\u7279",common:"\u65AF\u74E6\u5C14\u5DF4\u7279"}},latlng:[78,20],landlocked:!1,area:-1,demonyms:{eng:{f:"Norwegian",m:"Norwegian"}},flag:"\u{1F1F8}\u{1F1EF}",maps:{googleMaps:"https://goo.gl/maps/L2wyyn3cQ16PzQ5J8",openStreetMaps:"https://www.openstreetmap.org/relation/1337397"},population:2562,car:{signs:["N"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/sj.png",svg:"https://flagcdn.com/sj.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[78.22,15.63]}},{name:{common:"Samoa",official:"Independent State of Samoa",nativeName:{eng:{official:"Independent State of Samoa",common:"Samoa"},smo:{official:"Malo Sa\u02BBoloto Tuto\u02BBatasi o S\u0101moa",common:"S\u0101moa"}}},tld:[".ws"],cca2:"WS",ccn3:"882",cca3:"WSM",cioc:"SAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{WST:{name:"Samoan t\u0101l\u0101",symbol:"T"}},idd:{root:"+6",suffixes:["85"]},capital:["Apia"],altSpellings:["WS","Independent State of Samoa","Malo Sa\u02BBoloto Tuto\u02BBatasi o S\u0101moa"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",smo:"Samoan"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0645\u0633\u062A\u0642\u0644\u0629",common:"\u0633\u0627\u0645\u0648\u0627"},ces:{official:"Nez\xE1visl\xFD st\xE1t Samoa",common:"Samoa"},cym:{official:"Independent State of Samoa",common:"Samoa"},deu:{official:"Unabh\xE4ngige Staat Samoa",common:"Samoa"},est:{official:"Samoa Iseseisvusriik",common:"Samoa"},fin:{official:"Samoan itsen\xE4inen valtio",common:"Samoa"},fra:{official:"Samoa",common:"Samoa"},hrv:{official:"Nezavisna Dr\u017Eava Samoa",common:"Samoa"},hun:{official:"Szamoai F\xFCggetlen \xC1llam",common:"Szamoa"},ita:{official:"Stato indipendente di Samoa",common:"Samoa"},jpn:{official:"\u30B5\u30E2\u30A2\u72EC\u7ACB\u56FD",common:"\u30B5\u30E2\u30A2"},kor:{official:"\uC0AC\uBAA8\uC544 \uB3C5\uB9BD\uAD6D",common:"\uC0AC\uBAA8\uC544"},nld:{official:"Onafhankelijke Staat Samoa",common:"Samoa"},per:{official:"\u0627\u06CC\u0627\u0644\u062A \u0645\u0633\u062A\u0642\u0644 \u0633\u0627\u0645\u0648\u0622",common:"\u0633\u0627\u0645\u0648\u0622"},pol:{official:"Niezale\u017Cne Pa\u0144stwo Samoa",common:"Samoa"},por:{official:"Estado Independente de Samoa",common:"Samoa"},rus:{official:"\u041D\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0435 \u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u0421\u0430\u043C\u043E\u0430",common:"\u0421\u0430\u043C\u043E\u0430"},slk:{official:"Nez\xE1visl\xFD \u0161t\xE1tSamoa",common:"Samoa"},spa:{official:"Estado Independiente de Samoa",common:"Samoa"},swe:{official:"Sj\xE4lvst\xE4ndiga staten Samoa",common:"Samoa"},urd:{official:"\u0622\u0632\u0627\u062F \u0633\u0644\u0637\u0646\u062A\u0650 \u0633\u0627\u0645\u0648\u0627",common:"\u0633\u0627\u0645\u0648\u0648\u0627"},zho:{official:"\u8428\u6469\u4E9A\u72EC\u7ACB\u56FD",common:"\u8428\u6469\u4E9A"}},latlng:[-13.58333333,-172.33333333],landlocked:!1,area:2842,demonyms:{eng:{f:"Samoan",m:"Samoan"},fra:{f:"Samoane",m:"Samoan"}},flag:"\u{1F1FC}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/CFC9fEFP9cfkYUBF9",openStreetMaps:"https://www.openstreetmap.org/relation/1872673"},population:198410,gini:{"2013":38.7},fifa:"SAM",car:{signs:["WS"],side:"left"},timezones:["UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/ws.png",svg:"https://flagcdn.com/ws.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ws.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ws.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-13.82,-171.77]}},{name:{common:"Bolivia",official:"Plurinational State of Bolivia",nativeName:{aym:{official:"Wuliwya Suyu",common:"Wuliwya"},grn:{official:"Tet\xE3 Vol\xEDvia",common:"Vol\xEDvia"},que:{official:"Buliwya Mamallaqta",common:"Buliwya"},spa:{official:"Estado Plurinacional de Bolivia",common:"Bolivia"}}},tld:[".bo"],cca2:"BO",ccn3:"068",cca3:"BOL",cioc:"BOL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BOB:{name:"Bolivian boliviano",symbol:"Bs."}},idd:{root:"+5",suffixes:["91"]},capital:["Sucre"],altSpellings:["BO","Buliwya","Wuliwya","Bolivia, Plurinational State of","Plurinational State of Bolivia","Estado Plurinacional de Bolivia","Buliwya Mamallaqta","Wuliwya Suyu","Tet\xE3 Vol\xEDvia"],region:"Americas",subregion:"South America",languages:{aym:"Aymara",grn:"Guaran\xED",que:"Quechua",spa:"Spanish"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0628\u0648\u0644\u064A\u0641\u064A\u0627 \u0627\u0644\u0645\u062A\u0639\u062F\u062F\u0629 \u0627\u0644\u0642\u0648\u0645\u064A\u0627\u062A",common:"\u0628\u0648\u0644\u064A\u0641\u064A\u0627"},ces:{official:"Mnohon\xE1rodnostn\xED st\xE1t Bol\xEDvie",common:"Bol\xEDvie"},cym:{official:"Gweriniaeth Bolifia",common:"Bolifia"},deu:{official:"Plurinationaler Staat Bolivien",common:"Bolivien"},est:{official:"Boliivia Paljurahvuseline Riik",common:"Boliivia"},fin:{official:"Bolivian monikansainen valtio",common:"Bolivia"},fra:{official:"\xC9tat plurinational de Bolivie",common:"Bolivie"},hrv:{official:"Plurinational State of Bolivia",common:"Bolivija"},hun:{official:"Bol\xEDviai T\xF6bbnemzetis\xE9g\u0171 \xC1llam",common:"Bol\xEDvia"},ita:{official:"Stato Plurinazionale della Bolivia",common:"Bolivia"},jpn:{official:"\u30DC\u30EA\u30D3\u30A2\u306E\u591A\u6C11\u65CF\u56FD",common:"\u30DC\u30EA\u30D3\u30A2\u591A\u6C11\u65CF\u56FD"},kor:{official:"\uBCFC\uB9AC\uBE44\uC544 \uB2E4\uBBFC\uC871\uAD6D",common:"\uBCFC\uB9AC\uBE44\uC544"},nld:{official:"Plurinationale Staat van Bolivia",common:"Bolivia"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0648\u0644\u06CC\u0648\u06CC",common:"\u0628\u0648\u0644\u06CC\u0648\u06CC"},pol:{official:"Wielonarodowe Pa\u0144stwo Boliwia",common:"Boliwia"},por:{official:"Estado Plurinacional da Bol\xEDvia",common:"Bol\xEDvia"},rus:{official:"\u041C\u043D\u043E\u0433\u043E\u043D\u0430\u0446\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u043E\u0435 \u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u0411\u043E\u043B\u0438\u0432\u0438\u044F",common:"\u0411\u043E\u043B\u0438\u0432\u0438\u044F"},slk:{official:"Bol\xEDvijsk\xE1 republika",common:"Bol\xEDvia"},spa:{official:"Estado Plurinacional de Bolivia",common:"Bolivia"},swe:{official:"M\xE5ngnationella staten Bolivia",common:"Bolivia"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u0648\u0644\u06CC\u0648\u06CC\u0627",common:"\u0628\u0648\u0644\u06CC\u0648\u06CC\u0627"},zho:{official:"\u591A\u6C11\u65CF\u73BB\u5229\u7EF4\u4E9A\u56FD",common:"\u73BB\u5229\u7EF4\u4E9A"}},latlng:[-17,-65],landlocked:!0,borders:["ARG","BRA","CHL","PRY","PER"],area:1098581,demonyms:{eng:{f:"Bolivian",m:"Bolivian"},fra:{f:"Bolivienne",m:"Bolivien"}},flag:"\u{1F1E7}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/9DfnyfbxNM2g5U9b9",openStreetMaps:"https://www.openstreetmap.org/relation/252645"},population:11673029,gini:{"2019":41.6},fifa:"BOL",car:{signs:["BOL"],side:"right"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/bo.png",svg:"https://flagcdn.com/bo.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bo.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-19.02,-65.26]}},{name:{common:"Madagascar",official:"Republic of Madagascar",nativeName:{fra:{official:"R\xE9publique de Madagascar",common:"Madagascar"},mlg:{official:"Repoblikan'i Madagasikara",common:"Madagasikara"}}},tld:[".mg"],cca2:"MG",ccn3:"450",cca3:"MDG",cioc:"MAD",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MGA:{name:"Malagasy ariary",symbol:"Ar"}},idd:{root:"+2",suffixes:["61"]},capital:["Antananarivo"],altSpellings:["MG","Republic of Madagascar","Repoblikan'i Madagasikara","R\xE9publique de Madagascar"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French",mlg:"Malagasy"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u062F\u063A\u0634\u0642\u0631",common:"\u0645\u062F\u063A\u0634\u0642\u0631"},ces:{official:"Madagaskarsk\xE1 republika",common:"Madagaskar"},cym:{official:"Republic of Madagascar",common:"Madagascar"},deu:{official:"Republik Madagaskar",common:"Madagaskar"},est:{official:"Madagaskari Vabariik",common:"Madagaskar"},fin:{official:"Madagaskarin tasavalta",common:"Madagaskar"},fra:{official:"R\xE9publique de Madagascar",common:"Madagascar"},hrv:{official:"Republika Madagaskar",common:"Madagaskar"},hun:{official:"Madagaszk\xE1ri K\xF6zt\xE1rsas\xE1g",common:"Madagaszk\xE1r"},ita:{official:"Repubblica del Madagascar",common:"Madagascar"},jpn:{official:"\u30DE\u30C0\u30AC\u30B9\u30AB\u30EB\u5171\u548C\u56FD",common:"\u30DE\u30C0\u30AC\u30B9\u30AB\u30EB"},kor:{official:"\uB9C8\uB2E4\uAC00\uC2A4\uCE74\uB974 \uACF5\uD654\uAD6D",common:"\uB9C8\uB2E4\uAC00\uC2A4\uCE74\uB974"},nld:{official:"Republiek Madagaskar",common:"Madagaskar"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0627\u062F\u0627\u06AF\u0627\u0633\u06A9\u0627\u0631",common:"\u0645\u0627\u062F\u0627\u06AF\u0627\u0633\u06A9\u0627\u0631"},pol:{official:"Republika Madagaskaru",common:"Madagaskar"},por:{official:"Rep\xFAblica de Madag\xE1scar",common:"Madag\xE1scar"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u0434\u0430\u0433\u0430\u0441\u043A\u0430\u0440",common:"\u041C\u0430\u0434\u0430\u0433\u0430\u0441\u043A\u0430\u0440"},slk:{official:"Madagaskarsk\xE1 republika",common:"Madagaskar"},spa:{official:"Rep\xFAblica de Madagascar",common:"Madagascar"},swe:{official:"Republiken Madagaskar",common:"Madagaskar"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0688\u063A\u0627\u0633\u06A9\u0631",common:"\u0645\u0688\u063A\u0627\u0633\u06A9\u0631"},zho:{official:"\u9A6C\u8FBE\u52A0\u65AF\u52A0\u5171\u548C\u56FD",common:"\u9A6C\u8FBE\u52A0\u65AF\u52A0"}},latlng:[-20,47],landlocked:!1,area:587041,demonyms:{eng:{f:"Malagasy",m:"Malagasy"},fra:{f:"Malgache",m:"Malgache"}},flag:"\u{1F1F2}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/AHQh2ABBaFW6Ngj26",openStreetMaps:"https://www.openstreetmap.org/relation/447325"},population:27691019,gini:{"2012":42.6},fifa:"MAD",car:{signs:["RM"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mg.png",svg:"https://flagcdn.com/mg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-18.92,47.52]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"S\xE3o Tom\xE9 and Pr\xEDncipe",official:"Democratic Republic of S\xE3o Tom\xE9 and Pr\xEDncipe",nativeName:{por:{official:"Rep\xFAblica Democr\xE1tica do S\xE3o Tom\xE9 e Pr\xEDncipe",common:"S\xE3o Tom\xE9 e Pr\xEDncipe"}}},tld:[".st"],cca2:"ST",ccn3:"678",cca3:"STP",cioc:"STP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{STN:{name:"S\xE3o Tom\xE9 and Pr\xEDncipe dobra",symbol:"Db"}},idd:{root:"+2",suffixes:["39"]},capital:["S\xE3o Tom\xE9"],altSpellings:["ST","Democratic Republic of S\xE3o Tom\xE9 and Pr\xEDncipe","Sao Tome and Principe","Rep\xFAblica Democr\xE1tica de S\xE3o Tom\xE9 e Pr\xEDncipe"],region:"Africa",subregion:"Middle Africa",languages:{por:"Portuguese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0627\u0648 \u062A\u0648\u0645\u064A \u0648\u0628\u0631\u064A\u0646\u0633\u064A\u0628 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629",common:"\u0633\u0627\u0648 \u062A\u0648\u0645\u064A \u0648\u0628\u0631\u064A\u0646\u0633\u064A\u0628"},ces:{official:"Demokratick\xE1 republika Svat\xFD Tom\xE1\u0161 a Princ\u016Fv ostrov",common:"Svat\xFD Tom\xE1\u0161 a Princ\u016Fv ostrov"},cym:{official:"Democratic Republic of S\xE3o Tom\xE9 and Pr\xEDncipe",common:"S\xE3o Tom\xE9 and Pr\xEDncipe"},deu:{official:"Demokratische Republik S\xE3o Tom\xE9 und Pr\xEDncipe",common:"S\xE3o Tom\xE9 und Pr\xEDncipe"},est:{official:"S\xE3o Tom\xE9 ja Pr\xEDncipe Demokraatlik Vabariik",common:"S\xE3o Tom\xE9 ja Pr\xEDncipe"},fin:{official:"S\xE3o Tom\xE9 ja Pr\xEDncipen demokraattinen tasavalta",common:"S\xE3o T\xE9me ja Pr\xEDncipe"},fra:{official:"R\xE9publique d\xE9mocratique de S\xE3o Tom\xE9 et Pr\xEDncipe",common:"S\xE3o Tom\xE9 et Pr\xEDncipe"},hrv:{official:"Demokratska Republika S\xE3o Tome i Principe",common:"Sveti Toma i Princip"},hun:{official:"S\xE3o Tom\xE9 \xE9s Pr\xEDncipe Demokratikus K\xF6zt\xE1rsas\xE1g",common:"S\xE3o Tom\xE9 \xE9s Pr\xEDncipe"},ita:{official:"Repubblica democratica di S\xE3o Tom\xE9 e Pr\xEDncipe",common:"S\xE3o Tom\xE9 e Pr\xEDncipe"},jpn:{official:"\u30B5\u30F3\u30C8\u30E1\xB7\u30D7\u30EA\u30F3\u30B7\u30DA\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u30B5\u30F3\u30C8\u30E1\u30FB\u30D7\u30EA\u30F3\u30B7\u30DA"},kor:{official:"\uC0C1\uD22C\uBA54 \uD504\uB9B0\uC2DC\uD398 \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uC0C1\uD22C\uBA54 \uD504\uB9B0\uC2DC\uD398"},nld:{official:"Democratische Republiek Sao Tom\xE9 en Principe",common:"Sao Tom\xE9 en Principe"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u0633\u0627\u0626\u0648\u062A\u0648\u0645\u0647 \u0648 \u067E\u0631\u0646\u0633\u06CC\u067E",common:"\u0633\u0627\u0626\u0648\u062A\u0648\u0645\u0647 \u0648 \u067E\u0631\u0646\u0633\u06CC\u067E"},pol:{official:"Demokratyczna Republika Wysp \u015Awi\u0119tego Tomasza i Ksi\u0105\u017C\u0119cej",common:"Wyspy \u015Awi\u0119tego Tomasza i Ksi\u0105\u017C\u0119ca"},por:{official:"Rep\xFAblica Democr\xE1tica de S\xE3o Tom\xE9 e Pr\xEDncipe",common:"S\xE3o Tom\xE9 e Pr\xEDncipe"},rus:{official:"\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0430\u043D-\u0422\u043E\u043C\u0435 \u0438 \u041F\u0440\u0438\u043D\u0441\u0438\u043F\u0438",common:"\u0421\u0430\u043D-\u0422\u043E\u043C\u0435 \u0438 \u041F\u0440\u0438\u043D\u0441\u0438\u043F\u0438"},slk:{official:"Demokratick\xE1 republika Sv\xE4t\xE9ho Tom\xE1\u0161a A princovho ostrova",common:"Sv\xE4t\xFD Tom\xE1\u0161 a Princov ostrov"},spa:{official:"Rep\xFAblica Democr\xE1tica de Santo Tom\xE9 y Pr\xEDncipe",common:"Santo Tom\xE9 y Pr\xEDncipe"},swe:{official:"Demokratiska republiken S\xE3o Tom\xE9 och Pr\xEDncipe",common:"S\xE3o Tom\xE9 och Pr\xEDncipe"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0627\u0624 \u0679\u0648\u0645\u06D2 \u0648 \u067E\u0631\u0646\u0633\u067E\u06D2",common:"\u0633\u0627\u0624 \u0679\u0648\u0645\u06D2 \u0648 \u067E\u0631\u0646\u0633\u067E\u06D2"},zho:{official:"\u5723\u591A\u7F8E\u548C\u666E\u6797\u897F\u6BD4\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u5723\u591A\u7F8E\u548C\u666E\u6797\u897F\u6BD4"}},latlng:[1,7],landlocked:!1,area:964,demonyms:{eng:{f:"Sao Tomean",m:"Sao Tomean"},fra:{f:"Santom\xE9enne",m:"Santom\xE9en"}},flag:"\u{1F1F8}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/9EUppm13RtPX9oF46",openStreetMaps:"https://www.openstreetmap.org/relation/535880"},population:219161,gini:{"2017":56.3},fifa:"STP",car:{signs:["STP"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/st.png",svg:"https://flagcdn.com/st.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/st.png",svg:"https://mainfacts.com/media/images/coats_of_arms/st.svg"},startOfWeek:"monday",capitalInfo:{latlng:[.34,6.73]}},{name:{common:"Bahrain",official:"Kingdom of Bahrain",nativeName:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0628\u062D\u0631\u064A\u0646",common:"\u200F\u0627\u0644\u0628\u062D\u0631\u064A\u0646"}}},tld:[".bh"],cca2:"BH",ccn3:"048",cca3:"BHR",cioc:"BRN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BHD:{name:"Bahraini dinar",symbol:".\u062F.\u0628"}},idd:{root:"+9",suffixes:["73"]},capital:["Manama"],altSpellings:["BH","Kingdom of Bahrain","Mamlakat al-Ba\u1E25rayn"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0628\u062D\u0631\u064A\u0646",common:"\u200F\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},ces:{official:"Kr\xE1lovstv\xED Bahrajn",common:"Bahrajn"},cym:{official:"Teyrnas Bahrein",common:"Bahrain"},deu:{official:"K\xF6nigreich Bahrain",common:"Bahrain"},est:{official:"Bahreini Kuningriik",common:"Bahrein"},fin:{official:"Bahrainin kuningaskunta",common:"Bahrain"},fra:{official:"Royaume de Bahre\xEFn",common:"Bahre\xEFn"},hrv:{official:"Kraljevina Bahrein",common:"Bahrein"},hun:{official:"Bahreini Kir\xE1lys\xE1g",common:"Bahrein"},ita:{official:"Regno del Bahrain",common:"Bahrein"},jpn:{official:"\u30D0\u30FC\u30EC\u30FC\u30F3\u738B\u56FD",common:"\u30D0\u30FC\u30EC\u30FC\u30F3"},kor:{official:"\uBC14\uB808\uC778 \uC655\uAD6D",common:"\uBC14\uB808\uC778"},nld:{official:"Koninkrijk Bahrein",common:"Bahrein"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0628\u062D\u0631\u06CC\u0646",common:"\u0628\u062D\u0631\u06CC\u0646"},pol:{official:"Kr\xF3lestwo Bahrajnu",common:"Bahrajn"},por:{official:"Reino do Bahrein",common:"Bahrein"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0411\u0430\u0445\u0440\u0435\u0439\u043D",common:"\u0411\u0430\u0445\u0440\u0435\u0439\u043D"},slk:{official:"Bahrajnsk\xE9 kr\xE1\u013Eovstvo",common:"Bahrajn"},spa:{official:"Reino de Bahrein",common:"Bahrein"},swe:{official:"Konungariket Bahrain",common:"Bahrain"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0628\u062D\u0631\u06CC\u0646",common:"\u0628\u062D\u0631\u06CC\u0646"},zho:{official:"\u5DF4\u6797\u738B\u56FD",common:"\u5DF4\u6797"}},latlng:[26,50.55],landlocked:!1,area:765,demonyms:{eng:{f:"Bahraini",m:"Bahraini"},fra:{f:"Bahre\xEFnienne",m:"Bahre\xEFnien"}},flag:"\u{1F1E7}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/5Zue99Zc6vFBHxzJ7",openStreetMaps:"https://www.openstreetmap.org/relation/378734"},population:1701583,fifa:"BHR",car:{signs:["BRN"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bh.png",svg:"https://flagcdn.com/bh.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[26.23,50.57]},postalCode:{format:"####|###",regex:"^(\\d{3}\\d?)$"}},{name:{common:"Greece",official:"Hellenic Republic",nativeName:{ell:{official:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AE \u0394\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4\u03AF\u03B1",common:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"}}},tld:[".gr"],cca2:"GR",ccn3:"300",cca3:"GRC",cioc:"GRE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["0"]},capital:["Athens"],altSpellings:["GR","Ell\xE1da","Hellenic Republic","\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AE \u0394\u03B7\u03BC\u03BF\u03BA\u03C1\u03B1\u03C4\u03AF\u03B1"],region:"Europe",subregion:"Southern Europe",languages:{ell:"Greek"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0647\u064A\u0644\u064A\u0646\u064A\u0629",common:"\u0627\u0644\u064A\u0648\u0646\u0627\u0646"},ces:{official:"\u0158eck\xE1 republika",common:"\u0158ecko"},cym:{official:"Hellenic Republic",common:"Greece"},deu:{official:"Hellenische Republik",common:"Griechenland"},est:{official:"Kreeka Vabariik",common:"Kreeka"},fin:{official:"Helleenien tasavalta",common:"Kreikka"},fra:{official:"R\xE9publique hell\xE9nique",common:"Gr\xE8ce"},hrv:{official:"Helenska Republika",common:"Gr\u010Dka"},hun:{official:"G\xF6r\xF6g K\xF6zt\xE1rsas\xE1g",common:"G\xF6r\xF6gorsz\xE1g"},ita:{official:"Repubblica ellenica",common:"Grecia"},jpn:{official:"\u30AE\u30EA\u30B7\u30E3\u5171\u548C\u56FD",common:"\u30AE\u30EA\u30B7\u30E3"},kor:{official:"\uADF8\uB9AC\uC2A4 \uACF5\uD654\uAD6D",common:"\uADF8\uB9AC\uC2A4"},nld:{official:"Helleense Republiek",common:"Griekenland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06CC\u0648\u0646\u0627\u0646",common:"\u06CC\u0648\u0646\u0627\u0646"},pol:{official:"Republika Grecka",common:"Grecja"},por:{official:"Rep\xFAblica Hel\xE9nica",common:"Gr\xE9cia"},rus:{official:"\u0413\u0440\u0435\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0413\u0440\u0435\u0446\u0438\u044F"},slk:{official:"Gr\xE9cka republika",common:"Gre\xE9cko"},spa:{official:"Rep\xFAblica Hel\xE9nica",common:"Grecia"},swe:{official:"Republiken Grekland",common:"Grekland"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06C1\u06CC\u0644\u06CC\u0646\u06CC\u06C1",common:"\u06CC\u0648\u0646\u0627\u0646"},zho:{official:"\u5E0C\u814A\u5171\u548C\u56FD",common:"\u5E0C\u814A"}},latlng:[39,22],landlocked:!1,borders:["ALB","BGR","TUR","MKD"],area:131990,demonyms:{eng:{f:"Greek",m:"Greek"},fra:{f:"Grecque",m:"Grec"}},flag:"\u{1F1EC}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/LHGcAvuRyD2iKECC6",openStreetMaps:"https://www.openstreetmap.org/relation/192307"},population:10715549,gini:{"2018":32.9},fifa:"GRE",car:{signs:["GR"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/gr.png",svg:"https://flagcdn.com/gr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[37.98,23.73]},postalCode:{format:"### ##",regex:"^(\\d{5})$"}},{name:{common:"Peru",official:"Republic of Peru",nativeName:{aym:{official:"Piruw Suyu",common:"Piruw"},que:{official:"Piruw Ripuwlika",common:"Piruw"},spa:{official:"Rep\xFAblica del Per\xFA",common:"Per\xFA"}}},tld:[".pe"],cca2:"PE",ccn3:"604",cca3:"PER",cioc:"PER",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PEN:{name:"Peruvian sol",symbol:"S/ "}},idd:{root:"+5",suffixes:["1"]},capital:["Lima"],altSpellings:["PE","Republic of Peru","Rep\xFAblica del Per\xFA"],region:"Americas",subregion:"South America",languages:{aym:"Aymara",que:"Quechua",spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u064A\u0631\u0648",common:"\u0628\u064A\u0631\u0648"},ces:{official:"Peru\xE1nsk\xE1 republika",common:"Peru"},cym:{official:"Republic of Peru",common:"Peru"},deu:{official:"Republik Peru",common:"Peru"},est:{official:"Peruu Vabariik",common:"Peruu"},fin:{official:"Perun tasavalta",common:"Peru"},fra:{official:"R\xE9publique du P\xE9rou",common:"P\xE9rou"},hrv:{official:"Republika Peru",common:"Peru"},hun:{official:"Perui K\xF6zt\xE1rsas\xE1g",common:"Peru"},ita:{official:"Repubblica del Per\xF9",common:"Per\xF9"},jpn:{official:"\u30DA\u30EB\u30FC\u5171\u548C\u56FD",common:"\u30DA\u30EB\u30FC"},kor:{official:"\uD398\uB8E8 \uACF5\uD654\uAD6D",common:"\uD398\uB8E8"},nld:{official:"Republiek Peru",common:"Peru"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u067E\u0631\u0648",common:"\u067E\u0631\u0648"},pol:{official:"Republika Peru",common:"Peru"},por:{official:"Rep\xFAblica do Peru",common:"Per\xFA"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041F\u0435\u0440\u0443",common:"\u041F\u0435\u0440\u0443"},slk:{official:"Peru\xE1nska republika",common:"Peru"},spa:{official:"Rep\xFAblica de Per\xFA",common:"Per\xFA"},swe:{official:"Republiken Peru",common:"Peru"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u06CC\u0631\u0648",common:"\u067E\u06CC\u0631\u0648"},zho:{official:"\u79D8\u9C81\u5171\u548C\u56FD",common:"\u79D8\u9C81"}},latlng:[-10,-76],landlocked:!1,borders:["BOL","BRA","CHL","COL","ECU"],area:1285216,demonyms:{eng:{f:"Peruvian",m:"Peruvian"},fra:{f:"P\xE9ruvienne",m:"P\xE9ruvien"}},flag:"\u{1F1F5}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/uDWEUaXNcZTng1fP6",openStreetMaps:"https://www.openstreetmap.org/relation/288247"},population:32971846,gini:{"2019":41.5},fifa:"PER",car:{signs:["PE"],side:"right"},timezones:["UTC-05:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/pe.png",svg:"https://flagcdn.com/pe.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pe.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pe.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-12.05,-77.05]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Suriname",official:"Republic of Suriname",nativeName:{nld:{official:"Republiek Suriname",common:"Suriname"}}},tld:[".sr"],cca2:"SR",ccn3:"740",cca3:"SUR",cioc:"SUR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SRD:{name:"Surinamese dollar",symbol:"$"}},idd:{root:"+5",suffixes:["97"]},capital:["Paramaribo"],altSpellings:["SR","Sarnam","Sranangron","Republic of Suriname","Republiek Suriname"],region:"Americas",subregion:"South America",languages:{nld:"Dutch"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0648\u0631\u064A\u0646\u0627\u0645",common:"\u0633\u0648\u0631\u064A\u0646\u0627\u0645"},ces:{official:"Republika Surinam",common:"Surinam"},cym:{official:"Republic of Suriname",common:"Suriname"},deu:{official:"Republik Suriname",common:"Suriname"},est:{official:"Suriname Vabariik",common:"Suriname"},fin:{official:"Surinamen tasavalta",common:"Suriname"},fra:{official:"R\xE9publique du Suriname",common:"Surinam"},hrv:{official:"Republika Surinam",common:"Surinam"},hun:{official:"Suriname K\xF6zt\xE1rsas\xE1g",common:"Suriname"},ita:{official:"Repubblica del Suriname",common:"Suriname"},jpn:{official:"\u30B9\u30EA\u30CA\u30E0\u5171\u548C\u56FD",common:"\u30B9\u30EA\u30CA\u30E0"},kor:{official:"\uC218\uB9AC\uB0A8 \uACF5\uD654\uAD6D",common:"\uC218\uB9AC\uB0A8"},nld:{official:"Republiek Suriname",common:"Suriname"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0648\u0631\u06CC\u0646\u0627\u0645",common:"\u0633\u0648\u0631\u06CC\u0646\u0627\u0645"},pol:{official:"Republika Surinamu",common:"Surinam"},por:{official:"Rep\xFAblica do Suriname",common:"Suriname"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0443\u0440\u0438\u043D\u0430\u043C",common:"\u0421\u0443\u0440\u0438\u043D\u0430\u043C"},slk:{official:"Surinamsk\xE1 republika",common:"Surinam"},spa:{official:"Rep\xFAblica de Suriname",common:"Surinam"},swe:{official:"Republiken Surinam",common:"Surinam"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0631\u06CC\u0646\u0627\u0645",common:"\u0633\u0631\u06CC\u0646\u0627\u0645"},zho:{official:"\u82CF\u91CC\u5357\u5171\u548C\u56FD",common:"\u82CF\u91CC\u5357"}},latlng:[4,-56],landlocked:!1,borders:["BRA","GUF","GUY"],area:163820,demonyms:{eng:{f:"Surinamer",m:"Surinamer"},fra:{f:"Surinamaise",m:"Surinamais"}},flag:"\u{1F1F8}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/iy7TuQLSi4qgoBoG7",openStreetMaps:"https://www.openstreetmap.org/relation/287082"},population:586634,gini:{"1999":57.9},fifa:"SUR",car:{signs:["SME"],side:"left"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/sr.png",svg:"https://flagcdn.com/sr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[5.83,-55.17]}},{name:{common:"American Samoa",official:"American Samoa",nativeName:{eng:{official:"American Samoa",common:"American Samoa"},smo:{official:"S\u0101moa Amelika",common:"S\u0101moa Amelika"}}},tld:[".as"],cca2:"AS",ccn3:"016",cca3:"ASM",cioc:"ASA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["684"]},capital:["Pago Pago"],altSpellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",smo:"Samoan"},translations:{ara:{official:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",common:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629"},ces:{official:"Americk\xE1 Samoa",common:"Americk\xE1 Samoa"},cym:{official:"American Samoa",common:"American Samoa"},deu:{official:"Amerikanisch-Samoa",common:"Amerikanisch-Samoa"},est:{official:"Ameerika Samoa",common:"Ameerika Samoa"},fin:{official:"Amerikan Samoa",common:"Amerikan Samoa"},fra:{official:"Samoa am\xE9ricaines",common:"Samoa am\xE9ricaines"},hrv:{official:"ameri\u010Dka Samoa",common:"Ameri\u010Dka Samoa"},hun:{official:"Szamoa",common:"Szamoa"},ita:{official:"Samoa americane",common:"Samoa Americane"},jpn:{official:"\u7C73\u30B5\u30E2\u30A2",common:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2"},kor:{official:"\uC544\uBA54\uB9AC\uCE78\uC0AC\uBAA8\uC544",common:"\uC544\uBA54\uB9AC\uCE78\uC0AC\uBAA8\uC544"},nld:{official:"Amerikaans Samoa",common:"Amerikaans Samoa"},per:{official:"\u0633\u0627\u0645\u0648\u0622\u06CC \u0622\u0645\u0631\u06CC\u06A9\u0627",common:"\u0633\u0627\u0645\u0648\u0622\u06CC \u0622\u0645\u0631\u06CC\u06A9\u0627"},pol:{official:"Samoa Ameryka\u0144skie",common:"Samoa Ameryka\u0144skie"},por:{official:"Samoa americana",common:"Samoa Americana"},rus:{official:"\u0430\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u043E\u0435 \u0421\u0430\u043C\u043E\u0430",common:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u043E\u0435 \u0421\u0430\u043C\u043E\u0430"},slk:{official:"Americk\xE1 Samoa",common:"Americk\xE1 Samoa"},spa:{official:"Samoa Americana",common:"Samoa Americana"},swe:{official:"Amerikanska Samoa",common:"Amerikanska Samoa"},urd:{official:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0648\u0627",common:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0648\u0627"},zho:{official:"\u7F8E\u5C5E\u8428\u6469\u4E9A",common:"\u7F8E\u5C5E\u8428\u6469\u4E9A"}},latlng:[-14.33333333,-170],landlocked:!1,area:199,demonyms:{eng:{f:"American Samoan",m:"American Samoan"},fra:{f:"Samoane",m:"Samoan"}},flag:"\u{1F1E6}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/Re9ePMjwP1sFCBFA6",openStreetMaps:"https://www.openstreetmap.org/relation/2177187"},population:55197,fifa:"ASA",car:{signs:["USA"],side:"right"},timezones:["UTC-11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/as.png",svg:"https://flagcdn.com/as.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-14.27,-170.7]}},{name:{common:"Niger",official:"Republic of Niger",nativeName:{fra:{official:"R\xE9publique du Niger",common:"Niger"}}},tld:[".ne"],cca2:"NE",ccn3:"562",cca3:"NER",cioc:"NIG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["27"]},capital:["Niamey"],altSpellings:["NE","Nijar"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0646\u064A\u062C\u0631",common:"\u0627\u0644\u0646\u064A\u062C\u0631"},ces:{official:"Nigersk\xE1 republika",common:"Niger"},cym:{official:"Republic of Niger",common:"Niger"},deu:{official:"Republik Niger",common:"Niger"},est:{official:"Nigeri Vabariik",common:"Niger"},fin:{official:"Nigerin tasavalta",common:"Niger"},fra:{official:"R\xE9publique du Niger",common:"Niger"},hrv:{official:"Republika Niger",common:"Niger"},hun:{official:"Nigeri K\xF6zt\xE1rsas\xE1g",common:"Niger"},ita:{official:"Repubblica del Niger",common:"Niger"},jpn:{official:"\u30CB\u30B8\u30A7\u30FC\u30EB\u5171\u548C\u56FD",common:"\u30CB\u30B8\u30A7\u30FC\u30EB"},kor:{official:"\uB2C8\uC81C\uB974 \uACF5\uD654\uAD6D",common:"\uB2C8\uC81C\uB974"},nld:{official:"Republiek Niger",common:"Niger"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0646\u06CC\u062C\u0631",common:"\u0646\u06CC\u062C\u0631"},pol:{official:"Republika Nigru",common:"Niger"},por:{official:"Rep\xFAblica do N\xEDger",common:"N\xEDger"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041D\u0438\u0433\u0435\u0440",common:"\u041D\u0438\u0433\u0435\u0440"},slk:{official:"Nig\xE9rsk\xE1 republika",common:"Niger"},spa:{official:"Rep\xFAblica de N\xEDger",common:"N\xEDger"},swe:{official:"Republiken Niger",common:"Niger"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0646\u0627\u0626\u062C\u0631",common:"\u0646\u0627\u0626\u062C\u0631"},zho:{official:"\u5C3C\u65E5\u5C14\u5171\u548C\u56FD",common:"\u5C3C\u65E5\u5C14"}},latlng:[16,8],landlocked:!0,borders:["DZA","BEN","BFA","TCD","LBY","MLI","NGA"],area:1267e3,demonyms:{eng:{f:"Nigerien",m:"Nigerien"},fra:{f:"Nig\xE9rienne",m:"Nig\xE9rien"}},flag:"\u{1F1F3}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/VKNU2TLsZcgxM49c8",openStreetMaps:"https://www.openstreetmap.org/relation/192786"},population:24206636,gini:{"2014":34.3},fifa:"NIG",car:{signs:["RN"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ne.png",svg:"https://flagcdn.com/ne.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ne.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ne.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.52,2.12]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Thailand",official:"Kingdom of Thailand",nativeName:{tha:{official:"\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E44\u0E17\u0E22",common:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"}}},tld:[".th",".\u0E44\u0E17\u0E22"],cca2:"TH",ccn3:"764",cca3:"THA",cioc:"THA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{THB:{name:"Thai baht",symbol:"\u0E3F"}},idd:{root:"+6",suffixes:["6"]},capital:["Bangkok"],altSpellings:["TH","Prathet","Thai","Kingdom of Thailand","\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E44\u0E17\u0E22","Ratcha Anachak Thai"],region:"Asia",subregion:"South-Eastern Asia",languages:{tha:"Thai"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u062A\u0627\u064A\u0644\u0646\u062F",common:"\u062A\u0627\u064A\u0644\u0646\u062F"},ces:{official:"Thajsk\xE9 kr\xE1lovstv\xED",common:"Thajsko"},cym:{official:"Kingdom of Thailand",common:"Thailand"},deu:{official:"K\xF6nigreich Thailand",common:"Thailand"},est:{official:"Tai Kuningriik",common:"Tai"},fin:{official:"Thaimaan kuningaskunta",common:"Thaimaa"},fra:{official:"Royaume de Tha\xEFlande",common:"Tha\xEFlande"},hrv:{official:"Kraljevina Tajland",common:"Tajland"},hun:{official:"Thaif\xF6ldi Kir\xE1lys\xE1g",common:"Thaif\xF6ld"},ita:{official:"Regno di Thailandia",common:"Tailandia"},jpn:{official:"\u30BF\u30A4\u738B\u56FD",common:"\u30BF\u30A4"},kor:{official:"\uD0C0\uC774 \uC655\uAD6D",common:"\uD0DC\uAD6D"},nld:{official:"Koninkrijk Thailand",common:"Thailand"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u062A\u0627\u06CC\u0644\u0646\u062F",common:"\u062A\u0627\u06CC\u0644\u0646\u062F"},pol:{official:"Kr\xF3lestwo Tajlandii",common:"Tajlandia"},por:{official:"Reino da Tail\xE2ndia",common:"Tail\xE2ndia"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0422\u0430\u0438\u043B\u0430\u043D\u0434",common:"\u0422\u0430\u0438\u043B\u0430\u043D\u0434"},slk:{official:"Thajsk\xE9 kr\xE1\u013Eovstvo",common:"Thajsko"},spa:{official:"Reino de Tailandia",common:"Tailandia"},swe:{official:"Konungariket Thailand",common:"Thailand"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u062A\u06BE\u0627\u0626\u06CC \u0644\u06CC\u0646\u0688",common:"\u062A\u06BE\u0627\u0626\u06CC \u0644\u06CC\u0646\u0688"},zho:{official:"\u6CF0\u738B\u56FD",common:"\u6CF0\u56FD"}},latlng:[15,100],landlocked:!1,borders:["MMR","KHM","LAO","MYS"],area:513120,demonyms:{eng:{f:"Thai",m:"Thai"},fra:{f:"Tha\xEFlandaise",m:"Tha\xEFlandais"}},flag:"\u{1F1F9}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/qeU6uqsfW4nCCwzw9",openStreetMaps:"https://www.openstreetmap.org/relation/2067731"},population:69799978,gini:{"2019":34.9},fifa:"THA",car:{signs:["T"],side:"left"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/th.png",svg:"https://flagcdn.com/th.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/th.png",svg:"https://mainfacts.com/media/images/coats_of_arms/th.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.75,100.52]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Tuvalu",official:"Tuvalu",nativeName:{eng:{official:"Tuvalu",common:"Tuvalu"},tvl:{official:"Tuvalu",common:"Tuvalu"}}},tld:[".tv"],cca2:"TV",ccn3:"798",cca3:"TUV",cioc:"TUV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"},TVD:{name:"Tuvaluan dollar",symbol:"$"}},idd:{root:"+6",suffixes:["88"]},capital:["Funafuti"],altSpellings:["TV"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",tvl:"Tuvaluan"},translations:{ara:{official:"\u062A\u0648\u0641\u0627\u0644\u0648",common:"\u062A\u0648\u0641\u0627\u0644\u0648"},ces:{official:"Tuvalu",common:"Tuvalu"},cym:{official:"Tuvalu",common:"Tuvalu"},deu:{official:"Tuvalu",common:"Tuvalu"},est:{official:"Tuvalu",common:"Tuvalu"},fin:{official:"Tuvalu",common:"Tuvalu"},fra:{official:"Tuvalu",common:"Tuvalu"},hrv:{official:"Tuvalu",common:"Tuvalu"},hun:{official:"Tuvalu",common:"Tuvalu"},ita:{official:"Tuvalu",common:"Tuvalu"},jpn:{official:"\u30C4\u30D0\u30EB",common:"\u30C4\u30D0\u30EB"},kor:{official:"\uD22C\uBC1C\uB8E8",common:"\uD22C\uBC1C\uB8E8"},nld:{official:"Tuvalu",common:"Tuvalu"},per:{official:"\u062A\u0648\u0648\u0627\u0644\u0648",common:"\u062A\u0648\u0648\u0627\u0644\u0648"},pol:{official:"Tuvalu",common:"Tuvalu"},por:{official:"Tuvalu",common:"Tuvalu"},rus:{official:"\u0422\u0443\u0432\u0430\u043B\u0443",common:"\u0422\u0443\u0432\u0430\u043B\u0443"},slk:{official:"Tuvalu",common:"Tuvalu"},spa:{official:"Tuvalu",common:"Tuvalu"},swe:{official:"Tuvalu",common:"Tuvalu"},urd:{official:"\u062A\u0648\u0648\u0627\u0644\u0648",common:"\u062A\u0648\u0648\u0627\u0644\u0648"},zho:{official:"\u56FE\u74E6\u5362",common:"\u56FE\u74E6\u5362"}},latlng:[-8,178],landlocked:!1,area:26,demonyms:{eng:{f:"Tuvaluan",m:"Tuvaluan"},fra:{f:"Tuvaluane",m:"Tuvaluan"}},flag:"\u{1F1F9}\u{1F1FB}",maps:{googleMaps:"https://goo.gl/maps/LbuUxtkgm1dfN1Pn6",openStreetMaps:"https://www.openstreetmap.org/relation/2177266"},population:11792,gini:{"2010":39.1},car:{signs:["TUV"],side:"left"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/tv.png",svg:"https://flagcdn.com/tv.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-8.52,179.22]}},{name:{common:"North Korea",official:"Democratic People's Republic of Korea",nativeName:{kor:{official:"\uC870\uC120\uBBFC\uC8FC\uC8FC\uC758\uC778\uBBFC\uACF5\uD654\uAD6D",common:"\uC870\uC120"}}},tld:[".kp"],cca2:"KP",ccn3:"408",cca3:"PRK",cioc:"PRK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KPW:{name:"North Korean won",symbol:"\u20A9"}},idd:{root:"+8",suffixes:["50"]},capital:["Pyongyang"],altSpellings:["KP","Democratic People's Republic of Korea","DPRK","\uC870\uC120\uBBFC\uC8FC\uC8FC\uC758\uC778\uBBFC\uACF5\uD654\uAD6D","Chos\u014Fn Minjuju\u016Di Inmin Konghwaguk","Korea, Democratic People's Republic of","\uBD81\uD55C","\uBD81\uC870\uC120"],region:"Asia",subregion:"Eastern Asia",languages:{kor:"Korean"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0648\u0631\u064A\u0627 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0643\u0648\u0631\u064A\u0627 \u0627\u0644\u0634\u0645\u0627\u0644\u064A\u0629"},ces:{official:"Korejsk\xE1 lidov\u011B demokratick\xE1 republika",common:"Severn\xED Korea"},cym:{official:"Democratic People's Republic of Korea",common:"North Korea"},deu:{official:"Demokratische Volksrepublik Korea",common:"Nordkorea"},est:{official:"Korea Rahvademokraatlik Vabariik",common:"P\xF5hja-Korea"},fin:{official:"Korean demokraattinen kansantasavalta",common:"Pohjois-Korea"},fra:{official:"R\xE9publique populaire d\xE9mocratique de Cor\xE9e",common:"Cor\xE9e du Nord"},hrv:{official:"Demokratska Narodna Republika Koreja",common:"Sjeverna Koreja"},hun:{official:"Koreai N\xE9pi Demokratikus K\xF6zt\xE1rsas\xE1g",common:"\xC9szak-Korea"},ita:{official:"Repubblica democratica popolare di Corea",common:"Corea del Nord"},jpn:{official:"\u671D\u9BAE\u6C11\u4E3B\u4E3B\u7FA9\u4EBA\u6C11\u5171\u548C\u56FD",common:"\u671D\u9BAE\u6C11\u4E3B\u4E3B\u7FA9\u4EBA\u6C11\u5171\u548C\u56FD"},kor:{official:"\uC870\uC120\uBBFC\uC8FC\uC8FC\uC758\uC778\uBBFC\uACF5\uD654\uAD6D",common:"\uC870\uC120"},nld:{official:"Democratische Volksrepubliek Korea",common:"Noord-Korea"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u062E\u0644\u0642 \u06A9\u0631\u0647",common:"\u06A9\u064F\u0631\u0647 \u0634\u0645\u0627\u0644\u06CC"},pol:{official:"Korea\u0144ska Republika Ludowo-Demokratyczna",common:"Korea P\xF3\u0142nocna"},por:{official:"Rep\xFAblica Popular Democr\xE1tica da Coreia",common:"Coreia do Norte"},rus:{official:"\u041A\u043E\u0440\u0435\u0439\u0441\u043A\u0430\u044F \u041D\u0430\u0440\u043E\u0434\u043D\u043E-\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0440\u0435\u044F",common:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u041A\u043E\u0440\u0435\u044F"},slk:{official:"K\xF3rejsk\xE1 \u013Eudovodemokratick\xE1 republika",common:"K\xF3rejsk\xE1 \u013Eudovodemokratick\xE1 republika (K\u013DR, Severn\xE1 K\xF3rea)"},spa:{official:"Rep\xFAblica Popular Democr\xE1tica de Corea",common:"Corea del Norte"},swe:{official:"Demokratiska Folkrepubliken Korea",common:"Nordkorea"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC \u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0648\u0631\u06CC\u0627",common:"\u0634\u0645\u0627\u0644\u06CC \u06A9\u0648\u0631\u06CC\u0627"},zho:{official:"\u671D\u9C9C\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u671D\u9C9C"}},latlng:[40,127],landlocked:!1,borders:["CHN","KOR","RUS"],area:120538,demonyms:{eng:{f:"North Korean",m:"North Korean"},fra:{f:"Nord-cor\xE9enne",m:"Nord-cor\xE9en"}},flag:"\u{1F1F0}\u{1F1F5}",maps:{googleMaps:"https://goo.gl/maps/9q5T2DMeH5JL7Tky6",openStreetMaps:"https://www.openstreetmap.org/relation/192734"},population:25778815,fifa:"PRK",car:{signs:[""],side:"right"},timezones:["UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kp.png",svg:"https://flagcdn.com/kp.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kp.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kp.svg"},startOfWeek:"monday",capitalInfo:{latlng:[39.02,125.75]},postalCode:{format:"###-###",regex:"^(\\d{6})$"}},{name:{common:"Ivory Coast",official:"Republic of C\xF4te d'Ivoire",nativeName:{fra:{official:"R\xE9publique de C\xF4te d'Ivoire",common:"C\xF4te d'Ivoire"}}},tld:[".ci"],cca2:"CI",ccn3:"384",cca3:"CIV",cioc:"CIV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["25"]},capital:["Yamoussoukro"],altSpellings:["CI","C\xF4te d'Ivoire","Ivory Coast","Republic of C\xF4te d'Ivoire","R\xE9publique de C\xF4te d'Ivoire"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0627\u062D\u0644 \u0627\u0644\u0639\u0627\u062C",common:"\u0633\u0627\u062D\u0644 \u0627\u0644\u0639\u0627\u062C"},ces:{official:"Republika Pob\u0159e\u017E\xED slonoviny",common:"Pob\u0159e\u017E\xED slonoviny"},cym:{official:"Republic of C\xF4te d'Ivoire",common:"Ivory Coast"},deu:{official:"Republik C\xF4te d'Ivoire",common:"Elfenbeink\xFCste"},est:{official:"C\xF4te d\u2019Ivoire\u2019i Vabariik",common:"Elevandiluurannik"},fin:{official:"Norsunluurannikon tasavalta",common:"Norsunluurannikko"},fra:{official:"R\xE9publique de C\xF4te d' Ivoire",common:"C\xF4te d'Ivoire"},hrv:{official:"Republika C\xF4te d'Ivoire",common:"Obala Bjelokosti"},hun:{official:"Elef\xE1ntcsontparti K\xF6zt\xE1rsas\xE1g",common:"Elef\xE1ntcsontpart"},ita:{official:"Repubblica della Costa d'Avorio",common:"Costa d'Avorio"},jpn:{official:"\u30B3\u30FC\u30C8\u30B8\u30DC\u30EF\u30FC\u30EB\u5171\u548C\u56FD",common:"\u30B3\u30FC\u30C8\u30B8\u30DC\u30EF\u30FC\u30EB"},kor:{official:"\uCF54\uD2B8\uB514\uBD80\uC544\uB974 \uACF5\uD654\uAD6D",common:"\uCF54\uD2B8\uB514\uBD80\uC544\uB974"},nld:{official:"Republiek Ivoorkust",common:"Ivoorkust"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0627\u062D\u0644 \u0639\u0627\u062C",common:"\u0633\u0627\u062D\u0644 \u0639\u0627\u062C"},pol:{official:"Republika Wybrze\u017Ba Ko\u015Bci S\u0142oniowej",common:"Wybrze\u017Be Ko\u015Bci S\u0142oniowej"},por:{official:"Rep\xFAblica da C\xF4te d'Ivoire",common:"Costa do Marfim"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0442-\u0434'\u0418\u0432\u0443\u0430\u0440\u0435",common:"\u041A\u043E\u0442-\u0434\u2019\u0418\u0432\u0443\u0430\u0440"},slk:{official:"Republika Pobre\u017Eie Slonoviny",common:"Pobr\u017Eie Slonoviny"},spa:{official:"Rep\xFAblica de C\xF4te d'Ivoire",common:"Costa de Marfil"},swe:{official:"Republiken Elfenbenskusten",common:"Elfenbenskusten"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0648\u062A \u062F\u06CC\u0648\u0627\u063A",common:"\u0622\u0626\u06CC\u0648\u0631\u06CC \u06A9\u0648\u0633\u0679"},zho:{official:"\u79D1\u7279\u8FEA\u74E6\u5171\u548C\u56FD",common:"\u79D1\u7279\u8FEA\u74E6"}},latlng:[8,-5],landlocked:!1,borders:["BFA","GHA","GIN","LBR","MLI"],area:322463,demonyms:{eng:{f:"Ivorian",m:"Ivorian"},fra:{f:"Ivoirienne",m:"Ivoirien"}},flag:"\u{1F1E8}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/wKsmN7f5qAeNtGjP6",openStreetMaps:"https://www.openstreetmap.org/relation/192779"},population:26378275,gini:{"2015":41.5},fifa:"CIV",car:{signs:["CI"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ci.png",svg:"https://flagcdn.com/ci.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ci.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ci.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.82,-5.27]}},{name:{common:"Yemen",official:"Republic of Yemen",nativeName:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u064A\u0645\u0646\u064A\u0629",common:"\u0627\u0644\u064A\u064E\u0645\u064E\u0646"}}},tld:[".ye"],cca2:"YE",ccn3:"887",cca3:"YEM",cioc:"YEM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{YER:{name:"Yemeni rial",symbol:"\uFDFC"}},idd:{root:"+9",suffixes:["67"]},capital:["Sana'a"],altSpellings:["YE","Yemeni Republic","al-Jumh\u016Briyyah al-Yamaniyyah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u064A\u0645\u0646\u064A\u0629",common:"\u0627\u0644\u064A\u0645\u0646"},ces:{official:"Jemensk\xE1 republika",common:"Jemen"},cym:{official:"Republic of Yemen",common:"Yemen"},deu:{official:"Republik Jemen",common:"Jemen"},est:{official:"Jeemeni Vabariik",common:"Jeemen"},fin:{official:"Jemenin tasavalta",common:"Jemen"},fra:{official:"R\xE9publique du Y\xE9men",common:"Y\xE9men"},hrv:{official:"Republika Jemen",common:"Jemen"},hun:{official:"Jemeni K\xF6zt\xE1rsas\xE1g",common:"Jemen"},ita:{official:"Repubblica dello Yemen",common:"Yemen"},jpn:{official:"\u30A4\u30A8\u30E1\u30F3\u5171\u548C\u56FD",common:"\u30A4\u30A8\u30E1\u30F3"},kor:{official:"\uC608\uBA58 \uACF5\uD654\uAD6D",common:"\uC608\uBA58"},nld:{official:"Republiek Jemen",common:"Jemen"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06CC\u0645\u0646",common:"\u06CC\u0645\u0646"},pol:{official:"Republika Jeme\u0144ska",common:"Jemen"},por:{official:"Rep\xFAblica do I\xEAmen",common:"I\xE9men"},rus:{official:"\u0419\u0435\u043C\u0435\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0419\u0435\u043C\u0435\u043D"},slk:{official:"Jemensk\xE1 republika",common:"Jemen"},spa:{official:"Rep\xFAblica de Yemen",common:"Yemen"},swe:{official:"Republiken Jemen",common:"Jemen"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06CC\u0645\u0646",common:"\u06CC\u0645\u0646"},zho:{official:"\u4E5F\u95E8\u5171\u548C\u56FD",common:"\u4E5F\u95E8"}},latlng:[15,48],landlocked:!1,borders:["OMN","SAU"],area:527968,demonyms:{eng:{f:"Yemeni",m:"Yemeni"},fra:{f:"Y\xE9m\xE9nite",m:"Y\xE9m\xE9nite"}},flag:"\u{1F1FE}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/WCmE76HKcLideQQw7",openStreetMaps:"https://www.openstreetmap.org/relation/305092"},population:29825968,gini:{"2014":36.7},fifa:"YEM",car:{signs:["YAR"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ye.png",svg:"https://flagcdn.com/ye.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ye.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ye.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[15.37,44.19]}},{name:{common:"New Zealand",official:"New Zealand",nativeName:{eng:{official:"New Zealand",common:"New Zealand"},mri:{official:"Aotearoa",common:"Aotearoa"},nzs:{official:"New Zealand",common:"New Zealand"}}},tld:[".nz"],cca2:"NZ",ccn3:"554",cca3:"NZL",cioc:"NZL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["4"]},capital:["Wellington"],altSpellings:["NZ","Aotearoa"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English",mri:"M\u0101ori",nzs:"New Zealand Sign Language"},translations:{ara:{official:"\u0646\u064A\u0648\u0632\u064A\u0644\u0646\u062F\u0627",common:"\u0646\u064A\u0648\u0632\u064A\u0644\u0646\u062F\u0627"},ces:{official:"Nov\xFD Z\xE9land",common:"Nov\xFD Z\xE9land"},cym:{official:"New Zealand",common:"New Zealand"},deu:{official:"Neuseeland",common:"Neuseeland"},est:{official:"Uus-Meremaa",common:"Uus-Meremaa"},fin:{official:"Uusi-Seelanti",common:"Uusi-Seelanti"},fra:{official:"Nouvelle-Z\xE9lande",common:"Nouvelle-Z\xE9lande"},hrv:{official:"Novi Zeland",common:"Novi Zeland"},hun:{official:"\xDAj-Z\xE9land",common:"\xDAj-Z\xE9land"},ita:{official:"Nuova Zelanda",common:"Nuova Zelanda"},jpn:{official:"\u30CB\u30E5\u30FC\u30B8\u30FC\u30E9\u30F3\u30C9",common:"\u30CB\u30E5\u30FC\u30B8\u30FC\u30E9\u30F3\u30C9"},kor:{official:"\uB274\uC9C8\uB79C\uB4DC",common:"\uB274\uC9C8\uB79C\uB4DC"},nld:{official:"Nieuw Zeeland",common:"Nieuw-Zeeland"},per:{official:"\u0646\u06CC\u0648\u0632\u06CC\u0644\u0646\u062F",common:"\u0646\u06CC\u0648\u0632\u06CC\u0644\u0646\u062F"},pol:{official:"Nowa Zelandia",common:"Nowa Zelandia"},por:{official:"nova Zel\xE2ndia",common:"Nova Zel\xE2ndia"},rus:{official:"\u041D\u043E\u0432\u0430\u044F \u0417\u0435\u043B\u0430\u043D\u0434\u0438\u044F",common:"\u041D\u043E\u0432\u0430\u044F \u0417\u0435\u043B\u0430\u043D\u0434\u0438\u044F"},slk:{official:"Nov\xFD Z\xE9land",common:"Nov\xFD Z\xE9land"},spa:{official:"nueva Zelanda",common:"Nueva Zelanda"},swe:{official:"Nya Zeeland",common:"Nya Zeeland"},urd:{official:"\u0646\u06CC\u0648\u0632\u06CC \u0644\u06CC\u0646\u0688",common:"\u0646\u06CC\u0648\u0632\u06CC \u0644\u06CC\u0646\u0688"},zho:{official:"\u65B0\u897F\u5170",common:"\u65B0\u897F\u5170"}},latlng:[-41,174],landlocked:!1,area:270467,demonyms:{eng:{f:"New Zealander",m:"New Zealander"},fra:{f:"Neo-Z\xE9landaise",m:"Neo-Z\xE9landais"}},flag:"\u{1F1F3}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/xXiDQo65dwdpw9iu8",openStreetMaps:"https://www.openstreetmap.org/relation/556706#map=5/-46.710/172.046"},population:5084300,fifa:"NZL",car:{signs:["NZ"],side:"left"},timezones:["UTC-11:00","UTC-10:00","UTC+12:00","UTC+12:45","UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nz.png",svg:"https://flagcdn.com/nz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/nz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/nz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-41.3,174.78]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Armenia",official:"Republic of Armenia",nativeName:{hye:{official:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576\u056B \u0540\u0561\u0576\u0580\u0561\u057A\u0565\u057F\u0578\u0582\u0569\u0575\u0578\u0582\u0576",common:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"}}},tld:[".am"],cca2:"AM",ccn3:"051",cca3:"ARM",cioc:"ARM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AMD:{name:"Armenian dram",symbol:"\u058F"}},idd:{root:"+3",suffixes:["74"]},capital:["Yerevan"],altSpellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576\u056B \u0540\u0561\u0576\u0580\u0561\u057A\u0565\u057F\u0578\u0582\u0569\u0575\u0578\u0582\u0576"],region:"Asia",subregion:"Western Asia",languages:{hye:"Armenian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0631\u0645\u064A\u0646\u064A\u0627",common:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627"},ces:{official:"Arm\xE9nsk\xE1 republika",common:"Arm\xE9nie"},cym:{official:"Gweriniaeth Armenia",common:"Armenia"},deu:{official:"Republik Armenien",common:"Armenien"},est:{official:"Armeenia Vabariik",common:"Armeenia"},fin:{official:"Armenian tasavalta",common:"Armenia"},fra:{official:"R\xE9publique d'Arm\xE9nie",common:"Arm\xE9nie"},hrv:{official:"Republika Armenija",common:"Armenija"},hun:{official:"\xD6rm\xE9nyorsz\xE1g",common:"\xD6rm\xE9nyorsz\xE1g"},ita:{official:"Repubblica di Armenia",common:"Armenia"},jpn:{official:"\u30A2\u30EB\u30E1\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30A2\u30EB\u30E1\u30CB\u30A2"},kor:{official:"\uC544\uB974\uBA54\uB2C8\uC544 \uACF5\uD654\uAD6D",common:"\uC544\uB974\uBA54\uB2C8\uC544"},nld:{official:"Republiek Armeni\xEB",common:"Armeni\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",common:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646"},pol:{official:"Republika Armenii",common:"Armenia"},por:{official:"Rep\xFAblica da Arm\xE9nia",common:"Arm\xE9nia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0410\u0440\u043C\u0435\u043D\u0438\u044F",common:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F"},slk:{official:"Arm\xE9nska republika",common:"Arm\xE9nsko"},spa:{official:"Rep\xFAblica de Armenia",common:"Armenia"},swe:{official:"Republiken Armenien",common:"Armenien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",common:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627"},zho:{official:"\u4E9A\u7F8E\u5C3C\u4E9A\u5171\u548C\u56FD",common:"\u4E9A\u7F8E\u5C3C\u4E9A"}},latlng:[40,45],landlocked:!0,borders:["AZE","GEO","IRN","TUR"],area:29743,demonyms:{eng:{f:"Armenian",m:"Armenian"},fra:{f:"Arm\xE9nienne",m:"Arm\xE9nien"}},flag:"\u{1F1E6}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/azWUtK9bUQYEyccbA",openStreetMaps:"https://www.openstreetmap.org/relation/364066"},population:2963234,gini:{"2019":29.9},fifa:"ARM",car:{signs:["AM"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/am.png",svg:"https://flagcdn.com/am.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/am.png",svg:"https://mainfacts.com/media/images/coats_of_arms/am.svg"},startOfWeek:"monday",capitalInfo:{latlng:[40.17,44.5]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Pakistan",official:"Islamic Republic of Pakistan",nativeName:{eng:{official:"Islamic Republic of Pakistan",common:"Pakistan"},urd:{official:"\u0627\u0633\u0644\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C2 \u067E\u0627\u0643\u0633\u062A\u0627\u0646",common:"\u067E\u0627\u0643\u0633\u062A\u0627\u0646"}}},tld:[".pk"],cca2:"PK",ccn3:"586",cca3:"PAK",cioc:"PAK",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PKR:{name:"Pakistani rupee",symbol:"\u20A8"}},idd:{root:"+9",suffixes:["2"]},capital:["Islamabad"],altSpellings:["PK","P\u0101kist\u0101n","Islamic Republic of Pakistan","Isl\u0101m\u012B Jumh\u016Briya'eh P\u0101kist\u0101n"],region:"Asia",subregion:"Southern Asia",languages:{eng:"English",urd:"Urdu"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0627\u0643\u0633\u062A\u0627\u0646 \u0627\u0644\u0625\u0633\u0644\u0627\u0645\u064A\u0629",common:"\u0628\u0627\u0643\u0633\u062A\u0627\u0646"},ces:{official:"P\xE1kist\xE1nsk\xE1 isl\xE1msk\xE1 republika",common:"P\xE1kist\xE1n"},cym:{official:"Islamic Republic of Pakistan",common:"Pakistan"},deu:{official:"Islamische Republik Pakistan",common:"Pakistan"},est:{official:"Pakistani Islamivabariik",common:"Pakistan"},fin:{official:"Pakistanin islamilainen tasavalta",common:"Pakistan"},fra:{official:"R\xE9publique islamique du Pakistan",common:"Pakistan"},hrv:{official:"Islamska Republika Pakistan",common:"Pakistan"},hun:{official:"Pakiszt\xE1n",common:"Pakiszt\xE1n"},ita:{official:"Repubblica islamica del Pakistan",common:"Pakistan"},jpn:{official:"\u30D1\u30AD\u30B9\u30BF\u30F3",common:"\u30D1\u30AD\u30B9\u30BF\u30F3"},kor:{official:"\uD30C\uD0A4\uC2A4\uD0C4 \uC774\uC2AC\uB78C \uACF5\uD654\uAD6D",common:"\uD30C\uD0A4\uC2A4\uD0C4"},nld:{official:"Islamitische Republiek Pakistan",common:"Pakistan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0627\u0645\u06CC \u067E\u0627\u06A9\u0633\u062A\u0627\u0646",common:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},pol:{official:"Islamska Republika Pakistanu",common:"Pakistan"},por:{official:"Rep\xFAblica Isl\xE2mica do Paquist\xE3o",common:"Paquist\xE3o"},rus:{official:"\u0418\u0441\u043B\u0430\u043C\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041F\u0430\u043A\u0438\u0441\u0442\u0430\u043D",common:"\u041F\u0430\u043A\u0438\u0441\u0442\u0430\u043D"},slk:{official:"Pakistansk\xE1 islamsk\xE1 republika",common:"Pakistan"},spa:{official:"Rep\xFAblica Isl\xE1mica de Pakist\xE1n",common:"Pakist\xE1n"},swe:{official:"Islamiska republiken Pakistan",common:"Pakistan"},urd:{official:"\u0627\u0633\u0644\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u0627\u06A9\u0633\u062A\u0627\u0646",common:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},zho:{official:"\u5DF4\u57FA\u65AF\u5766\u4F0A\u65AF\u5170\u5171\u548C\u56FD",common:"\u5DF4\u57FA\u65AF\u5766"}},latlng:[30,70],landlocked:!1,borders:["AFG","CHN","IND","IRN"],area:881912,demonyms:{eng:{f:"Pakistani",m:"Pakistani"},fra:{f:"Pakistanaise",m:"Pakistanais"}},flag:"\u{1F1F5}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/5LYujdfR5yLUXoERA",openStreetMaps:"https://www.openstreetmap.org/relation/307573"},population:220892331,gini:{"2018":31.6},fifa:"PAK",car:{signs:["PK"],side:"left"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/pk.png",svg:"https://flagcdn.com/pk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[33.68,73.05]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Tokelau",official:"Tokelau",nativeName:{eng:{official:"Tokelau",common:"Tokelau"},smo:{official:"Tokelau",common:"Tokelau"},tkl:{official:"Tokelau",common:"Tokelau"}}},tld:[".tk"],cca2:"TK",ccn3:"772",cca3:"TKL",independent:!1,status:"officially-assigned",unMember:!1,currencies:{NZD:{name:"New Zealand dollar",symbol:"$"}},idd:{root:"+6",suffixes:["90"]},capital:["Fakaofo"],altSpellings:["TK"],region:"Oceania",subregion:"Polynesia",languages:{eng:"English",smo:"Samoan",tkl:"Tokelauan"},translations:{ara:{official:"\u062A\u0648\u0643\u064A\u0644\u0627\u0648",common:"\u062A\u0648\u0643\u064A\u0644\u0627\u0648"},ces:{official:"Tokelau",common:"Tokelau"},cym:{official:"Tokelau",common:"Tokelau"},deu:{official:"Tokelau",common:"Tokelau"},est:{official:"Tokelau",common:"Tokelau"},fin:{official:"Tokelau",common:"Tokelau"},fra:{official:"\xCEles Tokelau",common:"Tokelau"},hrv:{official:"Tokelau",common:"Tokelau"},hun:{official:"Tokelau-szigetek",common:"Tokelau-szigetek"},ita:{official:"Tokelau",common:"Isole Tokelau"},jpn:{official:"\u30C8\u30B1\u30E9\u30A6\u8AF8\u5CF6",common:"\u30C8\u30B1\u30E9\u30A6"},kor:{official:"\uD1A0\uCF08\uB77C\uC6B0",common:"\uD1A0\uCF08\uB77C\uC6B0"},nld:{official:"Tokelau",common:"Tokelau"},per:{official:"\u062A\u0648\u06A9\u0644\u0627\u0626\u0648",common:"\u062A\u0648\u06A9\u0644\u0627\u0626\u0648"},pol:{official:"Tokelau",common:"Tokelau"},por:{official:"Tokelau",common:"Tokelau"},rus:{official:"\u0422\u043E\u043A\u0435\u043B\u0430\u0443",common:"\u0422\u043E\u043A\u0435\u043B\u0430\u0443"},slk:{official:"Tokelausk\xE9 ostrovy",common:"Tokelau"},spa:{official:"Tokelau",common:"Islas Tokelau"},swe:{official:"Tokelau\xF6arna",common:"Tokelau\xF6arna"},urd:{official:"\u0679\u0648\u06A9\u06CC\u0644\u0627\u0624",common:"\u0679\u0648\u06A9\u06CC\u0644\u0627\u0624"},zho:{official:"\u6258\u514B\u52B3",common:"\u6258\u514B\u52B3"}},latlng:[-9,-172],landlocked:!1,area:12,demonyms:{eng:{f:"Tokelauan",m:"Tokelauan"}},flag:"\u{1F1F9}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/Ap5qN8qien6pT9UN6",openStreetMaps:"https://www.openstreetmap.org/relation/2186600"},population:1411,car:{signs:[""],side:"left"},timezones:["UTC+13:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/tk.png",svg:"https://flagcdn.com/tk.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-9.38,-171.22]}},{name:{common:"Malawi",official:"Republic of Malawi",nativeName:{eng:{official:"Republic of Malawi",common:"Malawi"},nya:{official:"Chalo cha Malawi, Dziko la Mala\u0175i",common:"Mala\u0175i"}}},tld:[".mw"],cca2:"MW",ccn3:"454",cca3:"MWI",cioc:"MAW",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MWK:{name:"Malawian kwacha",symbol:"MK"}},idd:{root:"+2",suffixes:["65"]},capital:["Lilongwe"],altSpellings:["MW","Republic of Malawi"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",nya:"Chewa"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0627\u0644\u0627\u0648\u064A",common:"\u0645\u0627\u0644\u0627\u0648\u064A"},ces:{official:"Malawisk\xE1 republika",common:"Malawi"},cym:{official:"Republic of Malawi",common:"Malawi"},deu:{official:"Republik Malawi",common:"Malawi"},est:{official:"Malawi Vabariik",common:"Malawi"},fin:{official:"Malawin tasavalta",common:"Malawi"},fra:{official:"R\xE9publique du Malawi",common:"Malawi"},hrv:{official:"Republika Malavi",common:"Malavi"},hun:{official:"Malawi K\xF6zt\xE1rsas\xE1g",common:"Malawi"},ita:{official:"Repubblica del Malawi",common:"Malawi"},jpn:{official:"\u30DE\u30E9\u30A6\u30A4\u5171\u548C\u56FD",common:"\u30DE\u30E9\u30A6\u30A4"},kor:{official:"\uB9D0\uB77C\uC704 \uACF5\uD654\uAD6D",common:"\uB9D0\uB77C\uC704"},nld:{official:"Republiek Malawi",common:"Malawi"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0627\u0644\u0627\u0648\u06CC",common:"\u0645\u0627\u0644\u0627\u0648\u06CC"},pol:{official:"Republika Malawi",common:"Malawi"},por:{official:"Rep\xFAblica do Malawi",common:"Malawi"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u043B\u0430\u0432\u0438",common:"\u041C\u0430\u043B\u0430\u0432\u0438"},slk:{official:"Malawijsk\xE1 republika",common:"Malawi"},spa:{official:"Rep\xFAblica de Malawi",common:"Malawi"},swe:{official:"Republiken Malawi",common:"Malawi"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0644\u0627\u0648\u06CC",common:"\u0645\u0644\u0627\u0648\u06CC"},zho:{official:"\u9A6C\u62C9\u7EF4\u5171\u548C\u56FD",common:"\u9A6C\u62C9\u7EF4"}},latlng:[-13.5,34],landlocked:!0,borders:["MOZ","TZA","ZMB"],area:118484,demonyms:{eng:{f:"Malawian",m:"Malawian"},fra:{f:"Malawienne",m:"Malawien"}},flag:"\u{1F1F2}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/mc6z83pW9m98X2Ef6",openStreetMaps:"https://www.openstreetmap.org/relation/195290"},population:19129955,gini:{"2016":44.7},fifa:"MWI",car:{signs:["MW"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mw.png",svg:"https://flagcdn.com/mw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-13.97,33.78]}},{name:{common:"Ireland",official:"Republic of Ireland",nativeName:{eng:{official:"Republic of Ireland",common:"Ireland"},gle:{official:"Poblacht na h\xC9ireann",common:"\xC9ire"}}},tld:[".ie"],cca2:"IE",ccn3:"372",cca3:"IRL",cioc:"IRL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["53"]},capital:["Dublin"],altSpellings:["IE","\xC9ire","Republic of Ireland","Poblacht na h\xC9ireann"],region:"Europe",subregion:"Northern Europe",languages:{eng:"English",gle:"Irish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u064A\u0631\u0644\u0646\u062F\u0627",common:"\u0623\u064A\u0631\u0644\u0646\u062F\u0627"},ces:{official:"Irsko",common:"Irsko"},cym:{official:"Republic of Ireland",common:"Ireland"},deu:{official:"Republik Irland",common:"Irland"},est:{official:"Iirimaa",common:"Iirimaa"},fin:{official:"Irlannin tasavalta",common:"Irlanti"},fra:{official:"R\xE9publique d'Irlande",common:"Irlande"},hrv:{official:"Republika Irska",common:"Irska"},hun:{official:"\xCDr K\xF6zt\xE1rsas\xE1g",common:"\xCDrorsz\xE1g"},ita:{official:"Repubblica d'Irlanda",common:"Irlanda"},jpn:{official:"\u30A2\u30A4\u30EB\u30E9\u30F3\u30C9\u5171\u548C\u56FD",common:"\u30A2\u30A4\u30EB\u30E9\u30F3\u30C9"},kor:{official:"\uC544\uC77C\uB79C\uB4DC \uACF5\uD654\uAD6D",common:"\uC544\uC77C\uB79C\uB4DC"},nld:{official:"Republic of Ireland",common:"Ierland"},per:{official:"\u0627\u06CC\u0631\u0644\u0646\u062F",common:"\u0627\u06CC\u0631\u0644\u0646\u062F"},pol:{official:"Republika Irlandii",common:"Irlandia"},por:{official:"Rep\xFAblica da Irlanda",common:"Irlanda"},rus:{official:"\u0418\u0440\u043B\u0430\u043D\u0434\u0438\u044F",common:"\u0418\u0440\u043B\u0430\u043D\u0434\u0438\u044F"},slk:{official:"\xCDrska republika",common:"\xCDrsko"},spa:{official:"Rep\xFAblica de Irlanda",common:"Irlanda"},swe:{official:"Irland",common:"Irland"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062C\u0632\u06CC\u0631\u06C1 \u0622\u0626\u0631\u0644\u06CC\u0646\u0688",common:"\u062C\u0632\u06CC\u0631\u06C1 \u0622\u0626\u0631\u0644\u06CC\u0646\u0688"},zho:{official:"\u7231\u5C14\u5170\u5171\u548C\u56FD",common:"\u7231\u5C14\u5170"}},latlng:[53,-8],landlocked:!1,borders:["GBR"],area:70273,demonyms:{eng:{f:"Irish",m:"Irish"},fra:{f:"Irlandaise",m:"Irlandais"}},flag:"\u{1F1EE}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/hxd1BKxgpchStzQC6",openStreetMaps:"https://www.openstreetmap.org/relation/62273"},population:4994724,gini:{"2017":31.4},fifa:"IRL",car:{signs:["IRL"],side:"left"},timezones:["UTC"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ie.png",svg:"https://flagcdn.com/ie.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ie.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ie.svg"},startOfWeek:"monday",capitalInfo:{latlng:[53.32,-6.23]}},{name:{common:"Philippines",official:"Republic of the Philippines",nativeName:{eng:{official:"Republic of the Philippines",common:"Philippines"},fil:{official:"Republic of the Philippines",common:"Pilipinas"}}},tld:[".ph"],cca2:"PH",ccn3:"608",cca3:"PHL",cioc:"PHI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PHP:{name:"Philippine peso",symbol:"\u20B1"}},idd:{root:"+6",suffixes:["3"]},capital:["Manila"],altSpellings:["PH","Republic of the Philippines","Rep\xFAblika ng Pilipinas"],region:"Asia",subregion:"South-Eastern Asia",languages:{eng:"English",fil:"Filipino"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0641\u0644\u0628\u064A\u0646",common:"\u0627\u0644\u0641\u0644\u0628\u064A\u0646"},ces:{official:"Filip\xEDnsk\xE1 republika",common:"Filip\xEDny"},cym:{official:"Republic of the Philippines",common:"Philippines"},deu:{official:"Republik der Philippinen",common:"Philippinen"},est:{official:"Filipiini Vabariik",common:"Filipiinid"},fin:{official:"Filippiinien tasavalta",common:"Filippiinit"},fra:{official:"R\xE9publique des Philippines",common:"Philippines"},hrv:{official:"Republika Filipini",common:"Filipini"},hun:{official:"F\xFCl\xF6p-szigeteki K\xF6zt\xE1rsas\xE1g",common:"F\xFCl\xF6p-szigetek"},ita:{official:"Repubblica delle Filippine",common:"Filippine"},jpn:{official:"\u30D5\u30A3\u30EA\u30D4\u30F3\u5171\u548C\u56FD",common:"\u30D5\u30A3\u30EA\u30D4\u30F3"},kor:{official:"\uD544\uB9AC\uD540 \uACF5\uD654\uAD6D",common:"\uD544\uB9AC\uD540"},nld:{official:"Republiek der Filipijnen",common:"Filipijnen"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u06CC\u0644\u06CC\u067E\u06CC\u0646",common:"\u0641\u06CC\u0644\u06CC\u067E\u06CC\u0646"},pol:{official:"Republika Filipin",common:"Filipiny"},por:{official:"Rep\xFAblica das Filipinas",common:"Filipinas"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0424\u0438\u043B\u0438\u043F\u043F\u0438\u043D\u044B",common:"\u0424\u0438\u043B\u0438\u043F\u043F\u0438\u043D\u044B"},slk:{official:"Filip\xEDnska republika",common:"Filip\xEDny"},spa:{official:"Rep\xFAblica de las Filipinas",common:"Filipinas"},swe:{official:"Republiken Filippinerna",common:"Filippinerna"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0641\u0644\u067E\u0627\u0626\u0646",common:"\u0641\u0644\u067E\u0627\u0626\u0646"},zho:{official:"\u83F2\u5F8B\u5BBE\u5171\u548C\u56FD",common:"\u83F2\u5F8B\u5BBE"}},latlng:[13,122],landlocked:!1,area:342353,demonyms:{eng:{f:"Filipino",m:"Filipino"},fra:{f:"Philippine",m:"Philippin"}},flag:"\u{1F1F5}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/k8T2fb5VMUfsWFX6A",openStreetMaps:"https://www.openstreetmap.org/relation/443174"},population:109581085,gini:{"2018":42.3},fifa:"PHI",car:{signs:["RP"],side:"right"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ph.png",svg:"https://flagcdn.com/ph.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ph.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ph.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.6,120.97]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Czechia",official:"Czech Republic",nativeName:{ces:{official:"\u010Cesk\xE1 republika",common:"\u010Cesko"},slk:{official:"\u010Cesk\xE1 republika",common:"\u010Cesko"}}},tld:[".cz"],cca2:"CZ",ccn3:"203",cca3:"CZE",cioc:"CZE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CZK:{name:"Czech koruna",symbol:"K\u010D"}},idd:{root:"+4",suffixes:["20"]},capital:["Prague"],altSpellings:["CZ","\u010Cesk\xE1 republika","\u010Cesko"],region:"Europe",subregion:"Central Europe",languages:{ces:"Czech",slk:"Slovak"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062A\u0634\u064A\u0643",common:"\u0627\u0644\u062A\u0634\u064A\u0643"},ces:{official:"\u010Cesk\xE1 republika",common:"\u010Cesko"},cym:{official:"Y Weriniaeth Tsiec",common:"Y Weriniaeth Tsiec"},deu:{official:"Tschechische Republik",common:"Tschechien"},est:{official:"T\u0161ehhi Vabariik",common:"T\u0161ehhi"},fin:{official:"T\u0161ekin tasavalta",common:"T\u0161ekki"},fra:{official:"R\xE9publique tch\xE8que",common:"Tch\xE9quie"},hrv:{official:"\u010Ce\u0161ka",common:"\u010Ce\u0161ka"},hun:{official:"Cseh K\xF6zt\xE1rsas\xE1g",common:"Csehorsz\xE1g"},ita:{official:"Repubblica Ceca",common:"Cechia"},jpn:{official:"\u30C1\u30A7\u30B3\u5171\u548C\u56FD",common:"\u30C1\u30A7\u30B3"},kor:{official:"\uCCB4\uCF54",common:"\uCCB4\uCF54"},nld:{official:"Tsjechische Republiek",common:"Tsjechi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0686\u06A9",common:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0686\u06A9"},pol:{official:"Republika Czeska",common:"Czechy"},por:{official:"Rep\xFAblica Checa",common:"Ch\xE9quia"},rus:{official:"\u0427\u0435\u0448\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0427\u0435\u0445\u0438\u044F"},slk:{official:"\u010Cesk\xE1 republika",common:"\u010Cesko"},spa:{official:"Rep\xFAblica Checa",common:"Chequia"},swe:{official:"Republiken Tjeckien",common:"Tjeckien"},urd:{official:"\u0686\u064A\u06A9 \u062C\u0645\u06C1\u0648\u0631\u064A\u06C1",common:"\u0686\u064A\u06A9"},zho:{official:"\u6377\u514B\u5171\u548C\u56FD",common:"\u6377\u514B"}},latlng:[49.75,15.5],landlocked:!0,borders:["AUT","DEU","POL","SVK"],area:78865,demonyms:{eng:{f:"Czech",m:"Czech"},fra:{f:"Tch\xE8que",m:"Tch\xE8que"}},flag:"\u{1F1E8}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/47dmgeXMZyhDHyQW8",openStreetMaps:"https://www.openstreetmap.org/relation/51684"},population:10698896,gini:{"2018":25},fifa:"CZE",car:{signs:["CZ"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/cz.png",svg:"https://flagcdn.com/cz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[50.08,14.47]},postalCode:{format:"### ##",regex:"^(\\d{5})$"}},{name:{common:"Myanmar",official:"Republic of the Union of Myanmar",nativeName:{mya:{official:"\u1015\u103C\u100A\u103A\u1011\u1031\u102C\u1004\u103A\u1005\u102F \u101E\u1019\u1039\u1019\u1010 \u1019\u103C\u1014\u103A\u1019\u102C\u1014\u102D\u102F\u1004\u103A\u1004\u1036\u1010\u1031\u102C\u103A",common:"\u1019\u103C\u1014\u103A\u1019\u102C"}}},tld:[".mm"],cca2:"MM",ccn3:"104",cca3:"MMR",cioc:"MYA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MMK:{name:"Burmese kyat",symbol:"Ks"}},idd:{root:"+9",suffixes:["5"]},capital:["Naypyidaw"],altSpellings:["MM","Burma","Republic of the Union of Myanmar","Pyidaunzu Thanm\u0103da My\u0103ma Nainngandaw"],region:"Asia",subregion:"South-Eastern Asia",languages:{mya:"Burmese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u062A\u062D\u0627\u062F \u0645\u064A\u0627\u0646\u0645\u0627\u0631",common:"\u0645\u064A\u0627\u0646\u0645\u0627\u0631"},ces:{official:"Republika Myanmarsk\xFD svaz",common:"Myanmar"},cym:{official:"Republic of the Union of Myanmar",common:"Myanmar"},deu:{official:"Republik der Union Myanmar",common:"Myanmar"},est:{official:"Myanmari Liidu Vabariik",common:"Myanmar"},fin:{official:"Myanmarin liiton tasavalta",common:"Myanmar"},fra:{official:"R\xE9publique de l'Union du Myanmar",common:"Birmanie"},hrv:{official:"Republika Unije Mijanmar",common:"Mijanmar"},hun:{official:"Mianmari \xC1llamsz\xF6vets\xE9g K\xF6zt\xE1rsas\xE1ga",common:"Mianmar"},ita:{official:"Repubblica dell'Unione di Myanmar",common:"Birmania"},jpn:{official:"\u30DF\u30E3\u30F3\u30DE\u30FC\u9023\u90A6\u5171\u548C\u56FD",common:"\u30DF\u30E3\u30F3\u30DE\u30FC"},kor:{official:"\uBBF8\uC580\uB9C8 \uC5F0\uBC29 \uACF5\uD654\uAD6D",common:"\uBBF8\uC580\uB9C8"},nld:{official:"Republiek van de Unie van Myanmar",common:"Myanmar"},per:{official:"\u0627\u062A\u062D\u0627\u062F\u06CC\u0647 \u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u06CC\u0627\u0646\u0645\u0627\u0631",common:"\u0645\u06CC\u0627\u0646\u0645\u0627\u0631"},pol:{official:"Republika Zwi\u0105zku Mjanmy",common:"Mjanma"},por:{official:"Rep\xFAblica da Uni\xE3o de Myanmar",common:"Myanmar"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u043E\u044E\u0437\u0430 \u041C\u044C\u044F\u043D\u043C\u0430",common:"\u041C\u044C\u044F\u043D\u043C\u0430"},slk:{official:"Mjanmarsk\xE1 zv\xE4zov\xE1 republika",common:"Mjanmarsko"},spa:{official:"Rep\xFAblica de la Uni\xF3n de Myanmar",common:"Myanmar"},swe:{official:"Republiken Unionen Myanmar",common:"Myanmar"},urd:{official:"\u0645\u062A\u062D\u062F\u06C1 \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u06CC\u0627\u0646\u0645\u0627\u0631",common:"\u0645\u06CC\u0627\u0646\u0645\u0627\u0631"},zho:{official:"\u7F05\u7538\u8054\u90A6\u5171\u548C\u56FD",common:"\u7F05\u7538"}},latlng:[22,98],landlocked:!1,borders:["BGD","CHN","IND","LAO","THA"],area:676578,demonyms:{eng:{f:"Burmese",m:"Burmese"},fra:{f:"Birmane",m:"Birman"}},flag:"\u{1F1F2}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/4jrZyJkDERUfHyp26",openStreetMaps:"https://www.openstreetmap.org/relation/50371"},population:54409794,gini:{"2017":30.7},fifa:"MYA",car:{signs:["BUR"],side:"right"},timezones:["UTC+06:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mm.png",svg:"https://flagcdn.com/mm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[19.76,96.07]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Cocos (Keeling) Islands",official:"Territory of the Cocos (Keeling) Islands",nativeName:{eng:{official:"Territory of the Cocos (Keeling) Islands",common:"Cocos (Keeling) Islands"}}},tld:[".cc"],cca2:"CC",ccn3:"166",cca3:"CCK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["1"]},capital:["West Island"],altSpellings:["CC","Keeling Islands","Cocos Islands"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English"},translations:{ara:{official:"\u0625\u0642\u0644\u064A\u0645 \u062C\u0632\u0631 \u0643\u0648\u0643\u0648\u0633",common:"\u062C\u0632\u0631 \u0643\u0648\u0643\u0648\u0633"},ces:{official:"Kokosov\xE9 ostrovy",common:"Kokosov\xE9 ostrovy"},cym:{official:"Tiriogaeth yr Ynysoedd Cocos (Keeling)",common:"Ynysoedd Cocos"},deu:{official:"Gebiet der Kokos- (Keeling-) Inseln",common:"Kokosinseln"},est:{official:"Kookossaarte ala",common:"Kookossaared"},fin:{official:"Kookossaaret",common:"Kookossaaret"},fra:{official:"Territoire des \xEEles Cocos (Keeling)",common:"\xCEles Cocos"},hrv:{official:"Teritoriju Kokosovi (Keeling) Islands",common:"Kokosovi Otoci"},hun:{official:"K\xF3kusz-szigetek",common:"K\xF3kusz-szigetek"},ita:{official:"Territorio della (Keeling) Isole Cocos",common:"Isole Cocos e Keeling"},jpn:{official:"\u30B3\u30B3\u30B9\u8AF8\u5CF6\u306E\u9818\u571F",common:"\u30B3\u30B3\u30B9\uFF08\u30AD\u30FC\u30EA\u30F3\u30B0\uFF09\u8AF8\u5CF6"},kor:{official:"\uCF54\uCF54\uC2A4 \uC81C\uB3C4",common:"\uCF54\uCF54\uC2A4 \uC81C\uB3C4"},nld:{official:"Grondgebied van de Eilanden Cocos (Keeling )",common:"Cocoseilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u06A9\u0648\u0633",common:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u06A9\u0648\u0633"},pol:{official:"Wyspy Kokosowe",common:"Wyspy Kokosowe"},por:{official:"Territ\xF3rio dos Cocos (Keeling)",common:"Ilhas Cocos (Keeling)"},rus:{official:"\u0422\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u041A\u043E\u043A\u043E\u0441\u043E\u0432\u044B\u0435 (\u041A\u0438\u043B\u0438\u043D\u0433) \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u041A\u043E\u043A\u043E\u0441\u043E\u0432\u044B\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Kokosov\xE9 ostrovy",common:"Kokosov\xE9 ostrovy"},spa:{official:"Territorio de los (Keeling) Islas Cocos",common:"Islas Cocos o Islas Keeling"},swe:{official:"Kokos\xF6arna",common:"Kokos\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 (\u06A9\u06CC\u0644\u0646\u06AF) \u06A9\u0648\u06A9\u0648\u0633",common:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u0648\u06A9\u0648\u0633"},zho:{official:"\u79D1\u79D1\u65AF",common:"\u79D1\u79D1\u65AF"}},latlng:[-12.5,96.83333333],landlocked:!1,area:14,demonyms:{eng:{f:"Cocos Islander",m:"Cocos Islander"}},flag:"\u{1F1E8}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/3eCdKVpVfMcZyKcK6",openStreetMaps:"https://www.openstreetmap.org/relation/82636"},population:544,car:{signs:["AUS"],side:"left"},timezones:["UTC+06:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/cc.png",svg:"https://flagcdn.com/cc.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-12.17,96.83]}},{name:{common:"Romania",official:"Romania",nativeName:{ron:{official:"Rom\xE2nia",common:"Rom\xE2nia"}}},tld:[".ro"],cca2:"RO",ccn3:"642",cca3:"ROU",cioc:"ROU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{RON:{name:"Romanian leu",symbol:"lei"}},idd:{root:"+4",suffixes:["0"]},capital:["Bucharest"],altSpellings:["RO","Rumania","Roumania","Rom\xE2nia"],region:"Europe",subregion:"Southeast Europe",languages:{ron:"Romanian"},translations:{ara:{official:"\u0631\u0648\u0645\u0627\u0646\u064A\u0627",common:"\u0631\u0648\u0645\u0627\u0646\u064A\u0627"},ces:{official:"Rumunsko",common:"Rumunsko"},cym:{official:"Romania",common:"Romania"},deu:{official:"Rum\xE4nien",common:"Rum\xE4nien"},est:{official:"Rumeenia",common:"Rumeenia"},fin:{official:"Romania",common:"Romania"},fra:{official:"Roumanie",common:"Roumanie"},hrv:{official:"Rumunija",common:"Rumunjska"},hun:{official:"Rom\xE1nia",common:"Rom\xE1nia"},ita:{official:"Romania",common:"Romania"},jpn:{official:"\u30EB\u30FC\u30DE\u30CB\u30A2",common:"\u30EB\u30FC\u30DE\u30CB\u30A2"},kor:{official:"\uB8E8\uB9C8\uB2C8\uC544",common:"\uB8E8\uB9C8\uB2C8\uC544"},nld:{official:"Roemeni\xEB",common:"Roemeni\xEB"},per:{official:"\u0631\u0648\u0645\u0627\u0646\u06CC",common:"\u0631\u0648\u0645\u0627\u0646\u06CC"},pol:{official:"Rumunia",common:"Rumunia"},por:{official:"Rom\xEAnia",common:"Rom\xE9nia"},rus:{official:"\u0420\u0443\u043C\u044B\u043D\u0438\u044F",common:"\u0420\u0443\u043C\u044B\u043D\u0438\u044F"},slk:{official:"Rumunsko",common:"Rumunsko"},spa:{official:"Rumania",common:"Rumania"},swe:{official:"Rum\xE4nien",common:"Rum\xE4nien"},urd:{official:"\u0631\u0648\u0645\u0627\u0646\u06CC\u06C1",common:"\u0631\u0648\u0645\u0627\u0646\u06CC\u06C1"},zho:{official:"\u7F57\u9A6C\u5C3C\u4E9A",common:"\u7F57\u9A6C\u5C3C\u4E9A"}},latlng:[46,25],landlocked:!1,borders:["BGR","HUN","MDA","SRB","UKR"],area:238391,demonyms:{eng:{f:"Romanian",m:"Romanian"},fra:{f:"Roumaine",m:"Roumain"}},flag:"\u{1F1F7}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/845hAgCf1mDkN3vr7",openStreetMaps:"https://www.openstreetmap.org/relation/90689"},population:19286123,gini:{"2018":35.8},fifa:"ROU",car:{signs:["RO"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ro.png",svg:"https://flagcdn.com/ro.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ro.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ro.svg"},startOfWeek:"monday",capitalInfo:{latlng:[44.43,26.1]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Dominican Republic",official:"Dominican Republic",nativeName:{spa:{official:"Rep\xFAblica Dominicana",common:"Rep\xFAblica Dominicana"}}},tld:[".do"],cca2:"DO",ccn3:"214",cca3:"DOM",cioc:"DOM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DOP:{name:"Dominican peso",symbol:"$"}},idd:{root:"+1",suffixes:["809","829","849"]},capital:["Santo Domingo"],altSpellings:["DO"],region:"Americas",subregion:"Caribbean",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062F\u0648\u0645\u064A\u0646\u064A\u0643\u0627\u0646",common:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062F\u0648\u0645\u064A\u0646\u064A\u0643\u0627\u0646"},ces:{official:"Dominik\xE1nsk\xE1 republika",common:"Dominik\xE1nsk\xE1 republika"},cym:{official:"Gweriniaeth Dominica",common:"Gweriniaeth Dominica"},deu:{official:"Dominikanische Republik",common:"Dominikanische Republik"},est:{official:"Dominikaani Vabariik",common:"Dominikaani Vabariik"},fin:{official:"Dominikaaninen tasavalta",common:"Dominikaaninen tasavalta"},fra:{official:"R\xE9publique Dominicaine",common:"R\xE9publique dominicaine"},hrv:{official:"Dominikanska Republika",common:"Dominikanska Republika"},hun:{official:"Dominikai K\xF6zt\xE1rsas\xE1g",common:"Dominikai K\xF6zt\xE1rsas\xE1g"},ita:{official:"Repubblica Dominicana",common:"Repubblica Dominicana"},jpn:{official:"\u30C9\u30DF\u30CB\u30AB\u5171\u548C\u56FD",common:"\u30C9\u30DF\u30CB\u30AB\u5171\u548C\u56FD"},kor:{official:"\uB3C4\uBBF8\uB2C8\uCE74 \uACF5\uD654\uAD6D",common:"\uB3C4\uBBF8\uB2C8\uCE74 \uACF5\uD654\uAD6D"},nld:{official:"Dominicaanse Republiek",common:"Dominicaanse Republiek"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0646",common:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0646"},pol:{official:"Republika Dominika\u0144ska",common:"Dominikana"},por:{official:"Rep\xFAblica Dominicana",common:"Rep\xFAblica Dominicana"},rus:{official:"\u0414\u043E\u043C\u0438\u043D\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0414\u043E\u043C\u0438\u043D\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430"},slk:{official:"Dominik\xE1nska republika",common:"Dominik\xE1nska republika"},spa:{official:"Rep\xFAblica Dominicana",common:"Rep\xFAblica Dominicana"},swe:{official:"Dominikanska republiken",common:"Dominikanska republiken"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0688\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0646",common:"\u0688\u0648\u0645\u06CC\u0646\u06CC\u06A9\u0646"},zho:{official:"\u591A\u660E\u5C3C\u52A0\u5171\u548C\u56FD",common:"\u591A\u660E\u5C3C\u52A0"}},latlng:[19,-70.66666666],landlocked:!1,borders:["HTI"],area:48671,demonyms:{eng:{f:"Dominican",m:"Dominican"},fra:{f:"Dominicaine",m:"Dominicain"}},flag:"\u{1F1E9}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/soxooTHxEeiAbn3UA",openStreetMaps:"https://www.openstreetmap.org/relation/307828"},population:10847904,gini:{"2019":41.9},fifa:"DOM",car:{signs:["DOM"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/do.png",svg:"https://flagcdn.com/do.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/do.png",svg:"https://mainfacts.com/media/images/coats_of_arms/do.svg"},startOfWeek:"monday",capitalInfo:{latlng:[18.47,-69.9]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Equatorial Guinea",official:"Republic of Equatorial Guinea",nativeName:{fra:{official:"R\xE9publique de la Guin\xE9e \xC9quatoriale",common:"Guin\xE9e \xE9quatoriale"},por:{official:"Rep\xFAblica da Guin\xE9 Equatorial",common:"Guin\xE9 Equatorial"},spa:{official:"Rep\xFAblica de Guinea Ecuatorial",common:"Guinea Ecuatorial"}}},tld:[".gq"],cca2:"GQ",ccn3:"226",cca3:"GNQ",cioc:"GEQ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["40"]},capital:["Malabo"],altSpellings:["GQ","Republic of Equatorial Guinea","Rep\xFAblica de Guinea Ecuatorial","R\xE9publique de Guin\xE9e \xE9quatoriale","Rep\xFAblica da Guin\xE9 Equatorial"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",por:"Portuguese",spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u064A\u0646\u064A\u0627 \u0627\u0644\u0627\u0633\u062A\u0648\u0627\u0626\u064A\u0629",common:"\u063A\u064A\u0646\u064A\u0627 \u0627\u0644\u0627\u0633\u062A\u0648\u0627\u0626\u064A\u0629"},ces:{official:"Republika Rovn\xEDkov\xE1 Guinea",common:"Rovn\xEDkov\xE1 Guinea"},cym:{official:"Gweriniaeth Gini Gyhydeddol",common:"Gini Gyhydeddol"},deu:{official:"Republik \xC4quatorialguinea",common:"\xC4quatorialguinea"},est:{official:"Ekvatoriaal-Guinea Vabariik",common:"Ekvatoriaal-Guinea"},fin:{official:"P\xE4iv\xE4ntasaajan Guinean tasavalta",common:"P\xE4iv\xE4ntasaajan Guinea"},fra:{official:"R\xE9publique de Guin\xE9e \xE9quatoriale",common:"Guin\xE9e \xE9quatoriale"},hrv:{official:"Republika Ekvatorska Gvineja",common:"Ekvatorijalna Gvineja"},hun:{official:"Egyenl\xEDt\u0151i-Guinea-i K\xF6zt\xE1rsas\xE1g",common:"Egyenl\xEDt\u0151i-Guinea"},ita:{official:"Repubblica della Guinea Equatoriale",common:"Guinea Equatoriale"},jpn:{official:"\u8D64\u9053\u30AE\u30CB\u30A2\u5171\u548C\u56FD",common:"\u8D64\u9053\u30AE\u30CB\u30A2"},kor:{official:"\uC801\uB3C4 \uAE30\uB2C8 \uACF5\uD654\uAD6D",common:"\uC801\uB3C4 \uAE30\uB2C8"},nld:{official:"Republiek Equatoriaal-Guinea",common:"Equatoriaal-Guinea"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06AF\u06CC\u0646\u0647 \u0627\u0633\u062A\u0648\u0627\u06CC\u06CC",common:"\u06AF\u06CC\u0646\u0647 \u0627\u0633\u062A\u0648\u0627\u06CC\u06CC"},pol:{official:"Republika Gwinei R\xF3wnikowej",common:"Gwinea R\xF3wnikowa"},por:{official:"Rep\xFAblica da Guin\xE9 Equatorial",common:"Guin\xE9 Equatorial"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u042D\u043A\u0432\u0430\u0442\u043E\u0440\u0438\u0430\u043B\u044C\u043D\u0430\u044F \u0413\u0432\u0438\u043D\u0435\u044F",common:"\u042D\u043A\u0432\u0430\u0442\u043E\u0440\u0438\u0430\u043B\u044C\u043D\u0430\u044F \u0413\u0432\u0438\u043D\u0435\u044F"},slk:{official:"Republika rovn\xEDkovej Guiney",common:"Rovn\xEDkov\xE1 Guinea"},spa:{official:"Rep\xFAblica de Guinea Ecuatorial",common:"Guinea Ecuatorial"},swe:{official:"Republiken Ekvatorialguinea",common:"Ekvatorialguinea"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0633\u062A\u0648\u0627\u0626\u06CC \u06AF\u0646\u06CC",common:"\u0627\u0633\u062A\u0648\u0627\u0626\u06CC \u06AF\u0646\u06CC"},zho:{official:"\u8D64\u9053\u51E0\u5185\u4E9A\u5171\u548C\u56FD",common:"\u8D64\u9053\u51E0\u5185\u4E9A"}},latlng:[2,10],landlocked:!1,borders:["CMR","GAB"],area:28051,demonyms:{eng:{f:"Equatorial Guinean",m:"Equatorial Guinean"},fra:{f:"\xC9quato-guin\xE9enne",m:"\xC9quato-guin\xE9en"}},flag:"\u{1F1EC}\u{1F1F6}",maps:{googleMaps:"https://goo.gl/maps/ucWfFd8aW1FbGMva9",openStreetMaps:"https://www.openstreetmap.org/relation/192791"},population:1402985,fifa:"EQG",car:{signs:["GQ"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gq.png",svg:"https://flagcdn.com/gq.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gq.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gq.svg"},startOfWeek:"monday",capitalInfo:{latlng:[3.75,8.78]}},{name:{common:"Ghana",official:"Republic of Ghana",nativeName:{eng:{official:"Republic of Ghana",common:"Ghana"}}},tld:[".gh"],cca2:"GH",ccn3:"288",cca3:"GHA",cioc:"GHA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GHS:{name:"Ghanaian cedi",symbol:"\u20B5"}},idd:{root:"+2",suffixes:["33"]},capital:["Accra"],altSpellings:["GH"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u0627\u0646\u0627",common:"\u063A\u0627\u0646\u0627"},ces:{official:"Ghansk\xE1 republika",common:"Ghana"},cym:{official:"Republic of Ghana",common:"Ghana"},deu:{official:"Republik Ghana",common:"Ghana"},est:{official:"Ghana Vabariik",common:"Ghana"},fin:{official:"Ghanan tasavalta",common:"Ghana"},fra:{official:"R\xE9publique du Ghana",common:"Ghana"},hrv:{official:"Republika Gana",common:"Gana"},hun:{official:"Gh\xE1nai K\xF6zt\xE1rsas\xE1g",common:"Gh\xE1na"},ita:{official:"Repubblica del Ghana",common:"Ghana"},jpn:{official:"\u30AC\u30FC\u30CA\u5171\u548C\u56FD",common:"\u30AC\u30FC\u30CA"},kor:{official:"\uAC00\uB098 \uACF5\uD654\uAD6D",common:"\uAC00\uB098"},nld:{official:"Republiek Ghana",common:"Ghana"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u063A\u0646\u0627",common:"\u063A\u0646\u0627"},pol:{official:"Republika Ghany",common:"Ghana"},por:{official:"Rep\xFAblica do Gana",common:"Gana"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0430\u043D\u0430",common:"\u0413\u0430\u043D\u0430"},slk:{official:"Ghansk\xE1 republika",common:"Ghana"},spa:{official:"Rep\xFAblica de Ghana",common:"Ghana"},swe:{official:"Republiken Ghana",common:"Ghana"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u06BE\u0627\u0646\u0627",common:"\u06AF\u06BE\u0627\u0646\u0627"},zho:{official:"\u52A0\u7EB3\u5171\u548C\u56FD",common:"\u52A0\u7EB3"}},latlng:[8,-2],landlocked:!1,borders:["BFA","CIV","TGO"],area:238533,demonyms:{eng:{f:"Ghanaian",m:"Ghanaian"},fra:{f:"Ghan\xE9enne",m:"Ghan\xE9en"}},flag:"\u{1F1EC}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/Avy5RSmdsXFBaiXq8",openStreetMaps:"https://www.openstreetmap.org/relation/192781"},population:31072945,gini:{"2016":43.5},fifa:"GHA",car:{signs:["GH"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gh.png",svg:"https://flagcdn.com/gh.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gh.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gh.svg"},startOfWeek:"monday",capitalInfo:{latlng:[5.55,-.22]}},{name:{common:"Malta",official:"Republic of Malta",nativeName:{eng:{official:"Republic of Malta",common:"Malta"},mlt:{official:"Repubblika ta ' Malta",common:"Malta"}}},tld:[".mt"],cca2:"MT",ccn3:"470",cca3:"MLT",cioc:"MLT",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["56"]},capital:["Valletta"],altSpellings:["MT","Republic of Malta","Repubblika ta' Malta"],region:"Europe",subregion:"Southern Europe",languages:{eng:"English",mlt:"Maltese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0627\u0644\u0637\u0627",common:"\u0645\u0627\u0644\u0637\u0627"},ces:{official:"Maltsk\xE1 republika",common:"Malta"},cym:{official:"Republic of Malta",common:"Malta"},deu:{official:"Republik Malta",common:"Malta"},est:{official:"Malta Vabariik",common:"Malta"},fin:{official:"Maltan tasavalta",common:"Malta"},fra:{official:"R\xE9publique de Malte",common:"Malte"},hrv:{official:"Republika Malta",common:"Malta"},hun:{official:"M\xE1ltai K\xF6zt\xE1rsas\xE1g",common:"M\xE1lta"},ita:{official:"Repubblica di Malta",common:"Malta"},jpn:{official:"\u30DE\u30EB\u30BF\u5171\u548C\u56FD",common:"\u30DE\u30EB\u30BF"},kor:{official:"\uBAB0\uD0C0 \uACF5\uD654\uAD6D",common:"\uBAB0\uD0C0"},nld:{official:"Republiek Malta",common:"Malta"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0627\u0644\u062A",common:"\u0645\u0627\u0644\u062A"},pol:{official:"Republika Malty",common:"Malta"},por:{official:"Rep\xFAblica de Malta",common:"Malta"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u043B\u044C\u0442\u0430",common:"\u041C\u0430\u043B\u044C\u0442\u0430"},slk:{official:"Maltsk\xE1 republika",common:"Malta"},spa:{official:"Rep\xFAblica de Malta",common:"Malta"},swe:{official:"Republiken Malta",common:"Malta"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0627\u0644\u0679\u0627",common:"\u0645\u0627\u0644\u0679\u0627"},zho:{official:"\u9A6C\u8033\u4ED6\u5171\u548C\u56FD",common:"\u9A6C\u8033\u4ED6"}},latlng:[35.83333333,14.58333333],landlocked:!1,area:316,demonyms:{eng:{f:"Maltese",m:"Maltese"},fra:{f:"Maltaise",m:"Maltais"}},flag:"\u{1F1F2}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/skXCqguxDxxEKVk47",openStreetMaps:"https://www.openstreetmap.org/relation/365307"},population:525285,gini:{"2018":28.7},fifa:"MLT",car:{signs:["M"],side:"left"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/mt.png",svg:"https://flagcdn.com/mt.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[35.88,14.5]},postalCode:{format:"@@@ ###|@@@ ##",regex:"^([A-Z]{3}\\d{2}\\d?)$"}},{name:{common:"Turkey",official:"Republic of Turkey",nativeName:{tur:{official:"T\xFCrkiye Cumhuriyeti",common:"T\xFCrkiye"}}},tld:[".tr"],cca2:"TR",ccn3:"792",cca3:"TUR",cioc:"TUR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TRY:{name:"Turkish lira",symbol:"\u20BA"}},idd:{root:"+9",suffixes:["0"]},capital:["Ankara"],altSpellings:["TR","Turkiye","Republic of Turkey","T\xFCrkiye Cumhuriyeti"],region:"Asia",subregion:"Western Asia",languages:{tur:"Turkish"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062A\u0631\u0643\u064A\u0629",common:"\u062A\u0631\u0643\u064A\u0627"},ces:{official:"Tureck\xE1 republika",common:"Turecko"},cym:{official:"Republic of Turkey",common:"Turkey"},deu:{official:"Republik T\xFCrkei",common:"T\xFCrkei"},est:{official:"T\xFCrgi Vabariik",common:"T\xFCrgi"},fin:{official:"Turkin tasavalta",common:"Turkki"},fra:{official:"R\xE9publique de Turquie",common:"Turquie"},hrv:{official:"Republika Turska",common:"Turska"},hun:{official:"T\xF6r\xF6k K\xF6zt\xE1rsas\xE1g",common:"T\xF6r\xF6korsz\xE1g"},ita:{official:"Repubblica di Turchia",common:"Turchia"},jpn:{official:"\u30C8\u30EB\u30B3\u5171\u548C\u56FD",common:"\u30C8\u30EB\u30B3"},kor:{official:"\uD130\uD0A4 \uACF5\uD654\uAD6D",common:"\uD130\uD0A4"},nld:{official:"Republiek Turkije",common:"Turkije"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062A\u0631\u06A9\u06CC\u0647",common:"\u062A\u0631\u06A9\u06CC\u0647"},pol:{official:"Republika Turcji",common:"Turcja"},por:{official:"Rep\xFAblica da Turquia",common:"Turquia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0422\u0443\u0440\u0446\u0438\u0438",common:"\u0422\u0443\u0440\u0446\u0438\u044F"},slk:{official:"Tureck\xE1 republika",common:"Turecko"},spa:{official:"Rep\xFAblica de Turqu\xEDa",common:"Turqu\xEDa"},swe:{official:"Republiken Turkiet",common:"Turkiet"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062A\u0631\u06A9\u06CC",common:"\u062A\u0631\u06A9\u06CC"},zho:{official:"\u571F\u8033\u5176\u5171\u548C\u56FD",common:"\u571F\u8033\u5176"}},latlng:[39,35],landlocked:!1,borders:["ARM","AZE","BGR","GEO","GRC","IRN","IRQ","SYR"],area:783562,demonyms:{eng:{f:"Turkish",m:"Turkish"},fra:{f:"Turque",m:"Turc"}},flag:"\u{1F1F9}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/dXFFraiUDfcB6Quk6",openStreetMaps:"https://www.openstreetmap.org/relation/174737"},population:84339067,gini:{"2019":41.9},fifa:"TUR",car:{signs:["TR"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tr.png",svg:"https://flagcdn.com/tr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[39.93,32.87]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Egypt",official:"Arab Republic of Egypt",nativeName:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0635\u0631 \u0627\u0644\u0639\u0631\u0628\u064A\u0629",common:"\u0645\u0635\u0631"}}},tld:[".eg",".\u0645\u0635\u0631"],cca2:"EG",ccn3:"818",cca3:"EGY",cioc:"EGY",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EGP:{name:"Egyptian pound",symbol:"\xA3"}},idd:{root:"+2",suffixes:["0"]},capital:["Cairo"],altSpellings:["EG","Arab Republic of Egypt"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0635\u0631 \u0627\u0644\u0639\u0631\u0628\u064A\u0629",common:"\u0645\u0635\u0631"},ces:{official:"Egyptsk\xE1 arabsk\xE1 republika",common:"Egypt"},cym:{official:"Gweriniaeth Arabaidd yr Aifft",common:"Yr Aifft"},deu:{official:"Arabische Republik \xC4gypten",common:"\xC4gypten"},est:{official:"Egiptuse Araabia Vabariik",common:"Egiptus"},fin:{official:"Egyptin arabitasavalta",common:"Egypti"},fra:{official:"R\xE9publique arabe d'\xC9gypte",common:"\xC9gypte"},hrv:{official:"Arapska Republika Egipat",common:"Egipat"},hun:{official:"Egyiptomi Arab K\xF6zt\xE1rsas\xE1g",common:"Egyiptom"},ita:{official:"Repubblica araba d'Egitto",common:"Egitto"},jpn:{official:"\u30A8\u30B8\u30D7\u30C8\xB7\u30A2\u30E9\u30D6\u5171\u548C\u56FD",common:"\u30A8\u30B8\u30D7\u30C8"},kor:{official:"\uC774\uC9D1\uD2B8 \uC544\uB78D \uACF5\uD654\uAD6D",common:"\uC774\uC9D1\uD2B8"},nld:{official:"Arabische Republiek Egypte",common:"Egypte"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0639\u0631\u0628\u06CC \u0645\u0635\u0631",common:"\u0645\u0635\u0631"},pol:{official:"Arabska Republika Egiptu",common:"Egipt"},por:{official:"Rep\xFAblica \xC1rabe do Egipto",common:"Egito"},rus:{official:"\u0410\u0440\u0430\u0431\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0415\u0433\u0438\u043F\u0435\u0442",common:"\u0415\u0433\u0438\u043F\u0435\u0442"},slk:{official:"Egyptsk\xE1 arabsk\xE1 republika",common:"Egypt"},spa:{official:"Rep\xFAblica \xC1rabe de Egipto",common:"Egipto"},swe:{official:"Arabrepubliken Egypten",common:"Egypten"},urd:{official:"\u0645\u0635\u0631\u06CC \u0639\u0631\u0628 \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1",common:"\u0645\u0635\u0631"},zho:{official:"\u963F\u62C9\u4F2F\u57C3\u53CA\u5171\u548C\u56FD",common:"\u57C3\u53CA"}},latlng:[27,30],landlocked:!1,borders:["ISR","LBY","PSE","SDN"],area:1002450,demonyms:{eng:{f:"Egyptian",m:"Egyptian"},fra:{f:"\xC9gyptienne",m:"\xC9gyptien"}},flag:"\u{1F1EA}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/uoDRhXbsqjG6L7VG7",openStreetMaps:"https://www.openstreetmap.org/relation/1473947"},population:102334403,gini:{"2017":31.5},fifa:"EGY",car:{signs:["ET"],side:"right"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/eg.png",svg:"https://flagcdn.com/eg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/eg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/eg.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[30.05,31.25]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Mozambique",official:"Republic of Mozambique",nativeName:{por:{official:"Rep\xFAblica de Mo\xE7ambique",common:"Mo\xE7ambique"}}},tld:[".mz"],cca2:"MZ",ccn3:"508",cca3:"MOZ",cioc:"MOZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MZN:{name:"Mozambican metical",symbol:"MT"}},idd:{root:"+2",suffixes:["58"]},capital:["Maputo"],altSpellings:["MZ","Republic of Mozambique","Rep\xFAblica de Mo\xE7ambique"],region:"Africa",subregion:"Eastern Africa",languages:{por:"Portuguese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0648\u0632\u0645\u0628\u064A\u0642",common:"\u0645\u0648\u0632\u0645\u0628\u064A\u0642"},ces:{official:"Mosambick\xE1 republika",common:"Mosambik"},cym:{official:"Republic of Mozambique",common:"Mozambique"},deu:{official:"Republik Mosambik",common:"Mosambik"},est:{official:"Mosambiigi Vabariik",common:"Mosambiik"},fin:{official:"Mosambikin tasavalta",common:"Mosambik"},fra:{official:"R\xE9publique du Mozambique",common:"Mozambique"},hrv:{official:"Republika Mozambiku",common:"Mozambik"},hun:{official:"Mozambiki K\xF6zt\xE1rsas\xE1g",common:"Mozambik"},ita:{official:"Repubblica del Mozambico",common:"Mozambico"},jpn:{official:"\u30E2\u30B6\u30F3\u30D3\u30FC\u30AF\u5171\u548C\u56FD",common:"\u30E2\u30B6\u30F3\u30D3\u30FC\u30AF"},kor:{official:"\uBAA8\uC7A0\uBE44\uD06C \uACF5\uD654\uAD6D",common:"\uBAA8\uC7A0\uBE44\uD06C"},nld:{official:"Republiek Mozambique",common:"Mozambique"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0648\u0632\u0627\u0645\u0628\u06CC\u06A9",common:"\u0645\u0648\u0632\u0627\u0645\u0628\u06CC\u06A9"},pol:{official:"Republika Mozambiku",common:"Mozambik"},por:{official:"Rep\xFAblica de Mo\xE7ambique",common:"Mo\xE7ambique"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u043E\u0437\u0430\u043C\u0431\u0438\u043A",common:"\u041C\u043E\u0437\u0430\u043C\u0431\u0438\u043A"},slk:{official:"Mozambick\xE1 republika",common:"Mozambik"},spa:{official:"Rep\xFAblica de Mozambique",common:"Mozambique"},swe:{official:"Republiken Mo\xE7ambique",common:"Mo\xE7ambique"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0648\u0632\u0645\u0628\u06CC\u0642",common:"\u0645\u0648\u0632\u0645\u0628\u06CC\u0642"},zho:{official:"\u83AB\u6851\u6BD4\u514B\u5171\u548C\u56FD",common:"\u83AB\u6851\u6BD4\u514B"}},latlng:[-18.25,35],landlocked:!1,borders:["MWI","ZAF","SWZ","TZA","ZMB","ZWE"],area:801590,demonyms:{eng:{f:"Mozambican",m:"Mozambican"},fra:{f:"Mozambicaine",m:"Mozambicain"}},flag:"\u{1F1F2}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/xCLcY9fzU6x4Pueu5",openStreetMaps:"https://www.openstreetmap.org/relation/195273"},population:31255435,gini:{"2014":54},fifa:"MOZ",car:{signs:["MOC"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/mz.png",svg:"https://flagcdn.com/mz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-25.95,32.58]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Mayotte",official:"Department of Mayotte",nativeName:{fra:{official:"D\xE9partement de Mayotte",common:"Mayotte"}}},tld:[".yt"],cca2:"YT",ccn3:"175",cca3:"MYT",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+2",suffixes:["62"]},capital:["Mamoudzou"],altSpellings:["YT","Department of Mayotte","D\xE9partement de Mayotte"],region:"Africa",subregion:"Eastern Africa",languages:{fra:"French"},translations:{ara:{official:"\u0645\u0627\u064A\u0648\u062A",common:"\u0645\u0627\u064A\u0648\u062A"},ces:{official:"Mayotte",common:"Mayotte"},cym:{official:"Department of Mayotte",common:"Mayotte"},deu:{official:"\xDCbersee-D\xE9partement Mayotte",common:"Mayotte"},est:{official:"Mayotte",common:"Mayotte"},fin:{official:"Mayotte",common:"Mayotte"},fra:{official:"D\xE9partement de Mayotte",common:"Mayotte"},hrv:{official:"Odjel Mayotte",common:"Mayotte"},hun:{official:"Mayotte",common:"Mayotte"},ita:{official:"Dipartimento di Mayotte",common:"Mayotte"},jpn:{official:"\u30DE\u30E8\u30C3\u30C8\u79D1",common:"\u30DE\u30E8\u30C3\u30C8"},kor:{official:"\uB9C8\uC694\uD2B8",common:"\uB9C8\uC694\uD2B8"},nld:{official:"Afdeling Mayotte",common:"Mayotte"},per:{official:"\u0645\u062C\u0645\u0648\u0639\u0647 \u0634\u0647\u0631\u0633\u062A\u0627\u0646\u06CC \u0645\u0627\u06CC\u0648\u062A",common:"\u0645\u0627\u06CC\u0648\u062A"},pol:{official:"Majotta",common:"Majotta"},por:{official:"Departamento de Mayotte",common:"Mayotte"},rus:{official:"\u0414\u0435\u043F\u0430\u0440\u0442\u0430\u043C\u0435\u043D\u0442 \u041C\u0430\u0439\u043E\u0442\u0442\u0430",common:"\u041C\u0430\u0439\u043E\u0442\u0442\u0430"},slk:{official:"Department Mayotte",common:"Mayotte"},spa:{official:"Departamento de Mayotte",common:"Mayotte"},swe:{official:"Departementsomr\xE5det Mayotte",common:"Mayotte"},urd:{official:"\u0645\u0627\u06CC\u0648\u0679",common:"\u0645\u0627\u06CC\u0648\u0679"},zho:{official:"\u9A6C\u7EA6\u7279",common:"\u9A6C\u7EA6\u7279"}},latlng:[-12.83333333,45.16666666],landlocked:!1,area:374,demonyms:{eng:{f:"Mahoran",m:"Mahoran"},fra:{f:"Mahoraise",m:"Mahorais"}},flag:"\u{1F1FE}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/1e7MXmfBwQv3TQGF7",openStreetMaps:"https://www.openstreetmap.org/relation/1259885"},population:226915,car:{signs:["F"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/yt.png",svg:"https://flagcdn.com/yt.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-12.78,45.22]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Belgium",official:"Kingdom of Belgium",nativeName:{deu:{official:"K\xF6nigreich Belgien",common:"Belgien"},fra:{official:"Royaume de Belgique",common:"Belgique"},nld:{official:"Koninkrijk Belgi\xEB",common:"Belgi\xEB"}}},tld:[".be"],cca2:"BE",ccn3:"056",cca3:"BEL",cioc:"BEL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["2"]},capital:["Brussels"],altSpellings:["BE","Belgi\xEB","Belgie","Belgien","Belgique","Kingdom of Belgium","Koninkrijk Belgi\xEB","Royaume de Belgique","K\xF6nigreich Belgien"],region:"Europe",subregion:"Western Europe",languages:{deu:"German",fra:"French",nld:"Dutch"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0628\u0644\u062C\u064A\u0643\u0627",common:"\u0628\u0644\u062C\u064A\u0643\u0627"},ces:{official:"Belgick\xE9 kr\xE1lovstv\xED",common:"Belgie"},cym:{official:"Teyrnas Gwlad Belg",common:"Gwlad Belg"},deu:{official:"K\xF6nigreich Belgien",common:"Belgien"},est:{official:"Belgia Kuningriik",common:"Belgia"},fin:{official:"Belgian kuningaskunta",common:"Belgia"},fra:{official:"Royaume de Belgique",common:"Belgique"},hrv:{official:"Kraljevina Belgija",common:"Belgija"},hun:{official:"Belga Kir\xE1lys\xE1g",common:"Belgium"},ita:{official:"Regno del Belgio",common:"Belgio"},jpn:{official:"\u30D9\u30EB\u30AE\u30FC\u738B\u56FD",common:"\u30D9\u30EB\u30AE\u30FC"},kor:{official:"\uBCA8\uAE30\uC5D0 \uC655\uAD6D",common:"\uBCA8\uAE30\uC5D0"},nld:{official:"Koninkrijk Belgi\xEB",common:"Belgi\xEB"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0628\u0644\u0698\u06CC\u06A9",common:"\u0628\u0644\u0698\u06CC\u06A9"},pol:{official:"Kr\xF3lestwo Belgii",common:"Belgia"},por:{official:"Reino da B\xE9lgica",common:"B\xE9lgica"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0411\u0435\u043B\u044C\u0433\u0438\u044F",common:"\u0411\u0435\u043B\u044C\u0433\u0438\u044F"},slk:{official:"Belgick\xE9 kr\xE1\u013Eovstvo",common:"Belgicko"},spa:{official:"Reino de B\xE9lgica",common:"B\xE9lgica"},swe:{official:"Konungariket Belgien",common:"Belgien"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0628\u0644\u062C\u0626\u06CC\u0645",common:"\u0628\u0644\u062C\u0626\u06CC\u0645"},zho:{official:"\u6BD4\u5229\u65F6\u738B\u56FD",common:"\u6BD4\u5229\u65F6"}},latlng:[50.83333333,4],landlocked:!1,borders:["FRA","DEU","LUX","NLD"],area:30528,demonyms:{eng:{f:"Belgian",m:"Belgian"},fra:{f:"Belge",m:"Belge"}},flag:"\u{1F1E7}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/UQQzat85TCtPRXAL8",openStreetMaps:"https://www.openstreetmap.org/relation/52411"},population:11555997,gini:{"2018":27.2},fifa:"BEL",car:{signs:["B"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/be.png",svg:"https://flagcdn.com/be.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/be.png",svg:"https://mainfacts.com/media/images/coats_of_arms/be.svg"},startOfWeek:"monday",capitalInfo:{latlng:[50.83,4.33]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Slovenia",official:"Republic of Slovenia",nativeName:{slv:{official:"Republika Slovenija",common:"Slovenija"}}},tld:[".si"],cca2:"SI",ccn3:"705",cca3:"SVN",cioc:"SLO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["86"]},capital:["Ljubljana"],altSpellings:["SI","Republic of Slovenia","Republika Slovenija"],region:"Europe",subregion:"Central Europe",languages:{slv:"Slovene"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0644\u0648\u0641\u064A\u0646\u064A\u0627",common:"\u0633\u0644\u0648\u0641\u064A\u0646\u064A\u0627"},ces:{official:"Slovinsk\xE1 republika",common:"Slovinsko"},cym:{official:"Republic of Slovenia",common:"Slovenia"},deu:{official:"Republik Slowenien",common:"Slowenien"},est:{official:"Sloveenia Vabariik",common:"Sloveenia"},fin:{official:"Slovenian tasavalta",common:"Slovenia"},fra:{official:"R\xE9publique de Slov\xE9nie",common:"Slov\xE9nie"},hrv:{official:"Republika Slovenija",common:"Slovenija"},hun:{official:"Szlov\xE9n K\xF6zt\xE1rsas\xE1g",common:"Szlov\xE9nia"},ita:{official:"Repubblica di Slovenia",common:"Slovenia"},jpn:{official:"\u30B9\u30ED\u30D9\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30B9\u30ED\u30D9\u30CB\u30A2"},kor:{official:"\uC2AC\uB85C\uBCA0\uB2C8\uC544 \uACF5\uD654\uAD6D",common:"\uC2AC\uB85C\uBCA0\uB2C8\uC544"},nld:{official:"Republiek Sloveni\xEB",common:"Sloveni\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u0644\u0648\u0648\u0646\u06CC",common:"\u0627\u0633\u0644\u0648\u0648\u0646\u06CC"},pol:{official:"Republika S\u0142owenii",common:"S\u0142owenia"},por:{official:"Rep\xFAblica da Eslov\xE9nia",common:"Eslov\xE9nia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u043B\u043E\u0432\u0435\u043D\u0438\u044F",common:"\u0421\u043B\u043E\u0432\u0435\u043D\u0438\u044F"},slk:{official:"Slovinsk\xE1 republika",common:"Slovinsko"},spa:{official:"Rep\xFAblica de Eslovenia",common:"Eslovenia"},swe:{official:"Republiken Slovenien",common:"Slovenien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0644\u0648\u0648\u06CC\u0646\u06CC\u0627",common:"\u0633\u0644\u0648\u0648\u06CC\u0646\u06CC\u0627"},zho:{official:"\u65AF\u6D1B\u6587\u5C3C\u4E9A\u5171\u548C\u56FD",common:"\u65AF\u6D1B\u6587\u5C3C\u4E9A"}},latlng:[46.11666666,14.81666666],landlocked:!1,borders:["AUT","HRV","ITA","HUN"],area:20273,demonyms:{eng:{f:"Slovene",m:"Slovene"},fra:{f:"Slov\xE8ne",m:"Slov\xE8ne"}},flag:"\u{1F1F8}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/7zgFmswcCJh5L5D49",openStreetMaps:"https://www.openstreetmap.org/relation/218657"},population:2100126,gini:{"2018":24.6},fifa:"SVN",car:{signs:["SLO"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/si.png",svg:"https://flagcdn.com/si.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/si.png",svg:"https://mainfacts.com/media/images/coats_of_arms/si.svg"},startOfWeek:"monday",capitalInfo:{latlng:[46.05,14.52]},postalCode:{format:"SI- ####",regex:"^(?:SI)*(\\d{4})$"}},{name:{common:"Hungary",official:"Hungary",nativeName:{hun:{official:"Magyarorsz\xE1g",common:"Magyarorsz\xE1g"}}},tld:[".hu"],cca2:"HU",ccn3:"348",cca3:"HUN",cioc:"HUN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{HUF:{name:"Hungarian forint",symbol:"Ft"}},idd:{root:"+3",suffixes:["6"]},capital:["Budapest"],altSpellings:["HU"],region:"Europe",subregion:"Central Europe",languages:{hun:"Hungarian"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0645\u062C\u0631\u064A\u0629",common:"\u0627\u0644\u0645\u062C\u0631"},ces:{official:"Ma\u010Farsko",common:"Ma\u010Farsko"},cym:{official:"Hungary",common:"Hungary"},deu:{official:"Ungarn",common:"Ungarn"},est:{official:"Ungari",common:"Ungari"},fin:{official:"Unkari",common:"Unkari"},fra:{official:"Hongrie",common:"Hongrie"},hrv:{official:"Mad\u017Earska",common:"Ma\u0111arska"},hun:{official:"Magyarorsz\xE1g",common:"Magyarorsz\xE1g"},ita:{official:"Ungheria",common:"Ungheria"},jpn:{official:"\u30CF\u30F3\u30AC\u30EA\u30FC",common:"\u30CF\u30F3\u30AC\u30EA\u30FC"},kor:{official:"\uD5DD\uAC00\uB9AC",common:"\uD5DD\uAC00\uB9AC"},nld:{official:"Hongarije",common:"Hongarije"},per:{official:"\u0645\u062C\u0627\u0631\u0633\u062A\u0627\u0646",common:"\u0645\u062C\u0627\u0631\u0633\u062A\u0627\u0646"},pol:{official:"W\u0119gry",common:"W\u0119gry"},por:{official:"Hungria",common:"Hungria"},rus:{official:"\u0412\u0435\u043D\u0433\u0440\u0438\u044F",common:"\u0412\u0435\u043D\u0433\u0440\u0438\u044F"},slk:{official:"Ma\u010Farsko",common:"Ma\u010Farsko"},spa:{official:"Hungr\xEDa",common:"Hungr\xEDa"},swe:{official:"Ungern",common:"Ungern"},urd:{official:"\u0645\u062C\u0627\u0631\u0633\u062A\u0627\u0646",common:"\u0645\u062C\u0627\u0631\u0633\u062A\u0627\u0646"},zho:{official:"\u5308\u7259\u5229",common:"\u5308\u7259\u5229"}},latlng:[47,20],landlocked:!0,borders:["AUT","HRV","ROU","SRB","SVK","SVN","UKR"],area:93028,demonyms:{eng:{f:"Hungarian",m:"Hungarian"},fra:{f:"Hongroise",m:"Hongrois"}},flag:"\u{1F1ED}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/9gfPupm5bffixiFJ6",openStreetMaps:"https://www.openstreetmap.org/relation/21335"},population:9749763,gini:{"2018":29.6},fifa:"HUN",car:{signs:["H"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/hu.png",svg:"https://flagcdn.com/hu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.5,19.08]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"United Arab Emirates",official:"United Arab Emirates",nativeName:{ara:{official:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629",common:"\u062F\u0648\u0644\u0629 \u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"}}},tld:[".ae","\u0627\u0645\u0627\u0631\u0627\u062A."],cca2:"AE",ccn3:"784",cca3:"ARE",cioc:"UAE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AED:{name:"United Arab Emirates dirham",symbol:"\u062F.\u0625"}},idd:{root:"+9",suffixes:["71"]},capital:["Abu Dhabi"],altSpellings:["AE","UAE","Emirates"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629",common:"\u062F\u0648\u0644\u0629 \u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},ces:{official:"Spojen\xE9 arabsk\xE9 emir\xE1ty",common:"Spojen\xE9 arabsk\xE9 emir\xE1ty"},cym:{official:"United Arab Emirates",common:"United Arab Emirates"},deu:{official:"Vereinigte Arabische Emirate",common:"Vereinigte Arabische Emirate"},est:{official:"Araabia \xDChendemiraadid",common:"Araabia \xDChendemiraadid"},fin:{official:"Yhdistyneet arabiemiirikunnat",common:"Arabiemiraatit"},fra:{official:"\xC9mirats arabes unis",common:"\xC9mirats arabes unis"},hrv:{official:"Ujedinjeni Arapski Emirati",common:"Ujedinjeni Arapski Emirati"},hun:{official:"Egyes\xFClt Arab Em\xEDrs\xE9gek",common:"Egyes\xFClt Arab Em\xEDrs\xE9gek"},ita:{official:"Emirati Arabi Uniti",common:"Emirati Arabi Uniti"},jpn:{official:"\u30A2\u30E9\u30D6\u9996\u9577\u56FD\u9023\u90A6",common:"\u30A2\u30E9\u30D6\u9996\u9577\u56FD\u9023\u90A6"},kor:{official:"\uC544\uB78D \uD1A0\uD6C4\uAD6D \uC5F0\uBC29",common:"\uC544\uB78D\uC5D0\uBBF8\uB9AC\uD2B8"},nld:{official:"Verenigde Arabische Emiraten",common:"Verenigde Arabische Emiraten"},per:{official:"\u0627\u0645\u0627\u0631\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0639\u0631\u0628\u06CC",common:"\u0627\u0645\u0627\u0631\u0627\u062A"},pol:{official:"Zjednoczone Emiraty Arabskie",common:"Zjednoczone Emiraty Arabskie"},por:{official:"Emirados \xC1rabes Unidos",common:"Emirados \xC1rabes Unidos"},rus:{official:"\u041E\u0431\u044A\u0435\u0434\u0438\u043D\u0435\u043D\u043D\u044B\u0435 \u0410\u0440\u0430\u0431\u0441\u043A\u0438\u0435 \u042D\u043C\u0438\u0440\u0430\u0442\u044B",common:"\u041E\u0431\u044A\u0435\u0434\u0438\u043D\u0451\u043D\u043D\u044B\u0435 \u0410\u0440\u0430\u0431\u0441\u043A\u0438\u0435 \u042D\u043C\u0438\u0440\u0430\u0442\u044B"},slk:{official:"Spojen\xE9 arabsk\xE9 emir\xE1ty",common:"Spojen\xE9 arabsk\xE9 emir\xE1ty"},spa:{official:"Emiratos \xC1rabes Unidos",common:"Emiratos \xC1rabes Unidos"},swe:{official:"F\xF6renade Arabemiraten",common:"F\xF6renade Arabemiraten"},urd:{official:"\u0645\u062A\u062D\u062F\u06C1 \u0639\u0631\u0628 \u0627\u0645\u0627\u0631\u0627\u062A",common:"\u0645\u062A\u062D\u062F\u06C1 \u0639\u0631\u0628 \u0627\u0645\u0627\u0631\u0627\u062A"},zho:{official:"\u963F\u62C9\u4F2F\u8054\u5408\u914B\u957F\u56FD",common:"\u963F\u62C9\u4F2F\u8054\u5408\u914B\u957F\u56FD"}},latlng:[24,54],landlocked:!1,borders:["OMN","SAU"],area:83600,demonyms:{eng:{f:"Emirati",m:"Emirati"},fra:{f:"Emirienne",m:"Emirien"}},flag:"\u{1F1E6}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/AZZTDA6GzVAnKMVd8",openStreetMaps:"https://www.openstreetmap.org/relation/307763"},population:9890400,gini:{"2018":26},fifa:"UAE",car:{signs:["UAE"],side:"right"},timezones:["UTC+04:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ae.png",svg:"https://flagcdn.com/ae.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ae.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ae.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[24.47,54.37]}},{name:{common:"Albania",official:"Republic of Albania",nativeName:{sqi:{official:"Republika e Shqip\xEBris\xEB",common:"Shqip\xEBria"}}},tld:[".al"],cca2:"AL",ccn3:"008",cca3:"ALB",cioc:"ALB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ALL:{name:"Albanian lek",symbol:"L"}},idd:{root:"+3",suffixes:["55"]},capital:["Tirana"],altSpellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],region:"Europe",subregion:"Southeast Europe",languages:{sqi:"Albanian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0644\u0628\u0627\u0646\u064A\u0627",common:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627"},ces:{official:"Alb\xE1nsk\xE1 republika",common:"Alb\xE1nie"},cym:{official:"Gweriniaeth Albania",common:"Albania"},deu:{official:"Republik Albanien",common:"Albanien"},est:{official:"Albaania Vabariik",common:"Albaania"},fin:{official:"Albanian tasavalta",common:"Albania"},fra:{official:"R\xE9publique d'Albanie",common:"Albanie"},hrv:{official:"Republika Albanija",common:"Albanija"},hun:{official:"Alb\xE1n K\xF6zt\xE1rsas\xE1g",common:"Alb\xE1nia"},ita:{official:"Repubblica d'Albania",common:"Albania"},jpn:{official:"\u30A2\u30EB\u30D0\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30A2\u30EB\u30D0\u30CB\u30A2"},kor:{official:"\uC54C\uBC14\uB2C8\uC544 \uACF5\uD654\uAD6D",common:"\uC54C\uBC14\uB2C8\uC544"},nld:{official:"Republiek Albani\xEB",common:"Albani\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0644\u0628\u0627\u0646\u06CC",common:"\u0622\u0644\u0628\u0627\u0646\u06CC"},pol:{official:"Republika Albanii",common:"Albania"},por:{official:"Rep\xFAblica da Alb\xE2nia",common:"Alb\xE2nia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0410\u043B\u0431\u0430\u043D\u0438\u044F",common:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F"},slk:{official:"Alb\xE1nska republika",common:"Alb\xE1nsko"},spa:{official:"Rep\xFAblica de Albania",common:"Albania"},swe:{official:"Republiken Albanien",common:"Albanien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0644\u0628\u0627\u0646\u06CC\u0627",common:"\u0627\u0644\u0628\u0627\u0646\u06CC\u0627"},zho:{official:"\u963F\u5C14\u5DF4\u5C3C\u4E9A\u5171\u548C\u56FD",common:"\u963F\u5C14\u5DF4\u5C3C\u4E9A"}},latlng:[41,20],landlocked:!1,borders:["MNE","GRC","MKD","UNK"],area:28748,demonyms:{eng:{f:"Albanian",m:"Albanian"},fra:{f:"Albanaise",m:"Albanais"}},flag:"\u{1F1E6}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/BzN9cTuj68ZA8SyZ8",openStreetMaps:"https://www.openstreetmap.org/relation/53292"},population:2837743,gini:{"2017":33.2},fifa:"ALB",car:{signs:["AL"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/al.png",svg:"https://flagcdn.com/al.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/al.png",svg:"https://mainfacts.com/media/images/coats_of_arms/al.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.32,19.82]}},{name:{common:"Heard Island and McDonald Islands",official:"Heard Island and McDonald Islands",nativeName:{eng:{official:"Heard Island and McDonald Islands",common:"Heard Island and McDonald Islands"}}},tld:[".hm",".aq"],cca2:"HM",ccn3:"334",cca3:"HMD",independent:!1,status:"officially-assigned",unMember:!1,idd:{},altSpellings:["HM","Heard Island and McDonald Islands"],region:"Antarctic",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u064A\u0631\u0629 \u0647\u064A\u0631\u062F \u0648\u062C\u0632\u0631 \u0645\u0627\u0643\u062F\u0648\u0646\u0627\u0644\u062F",common:"\u062C\u0632\u064A\u0631\u0629 \u0647\u064A\u0631\u062F \u0648\u062C\u0632\u0631 \u0645\u0627\u0643\u062F\u0648\u0646\u0627\u0644\u062F"},ces:{official:"Heard\u016Fv ostrov a McDonaldovy ostrovy",common:"Heard\u016Fv ostrov a McDonaldovy ostrovy"},cym:{official:"Heard Island and McDonald Islands",common:"Heard Island and McDonald Islands"},deu:{official:"Heard und McDonaldinseln",common:"Heard und die McDonaldinseln"},est:{official:"Heardi ja McDonaldi saarte ala",common:"Heard ja McDonald"},fin:{official:"Heard ja McDonaldinsaaret",common:"Heard ja McDonaldinsaaret"},fra:{official:"Des \xEEles Heard et McDonald",common:"\xCEles Heard-et-MacDonald"},hrv:{official:"Otok Heard i oto\u010Dje McDonald",common:"Otok Heard i oto\u010Dje McDonald"},hun:{official:"Heard-sziget \xE9s McDonald-szigetek",common:"Heard-sziget \xE9s McDonald-szigetek"},ita:{official:"Isole Heard e McDonald",common:"Isole Heard e McDonald"},jpn:{official:"\u30CF\u30FC\u30C9\u5CF6\u3068\u30DE\u30AF\u30C9\u30CA\u30EB\u30C9\u8AF8\u5CF6",common:"\u30CF\u30FC\u30C9\u5CF6\u3068\u30DE\u30AF\u30C9\u30CA\u30EB\u30C9\u8AF8\u5CF6"},kor:{official:"\uD5C8\uB4DC \uB9E5\uB3C4\uB110\uB4DC \uC81C\uB3C4",common:"\uD5C8\uB4DC \uB9E5\uB3C4\uB110\uB4DC \uC81C\uB3C4"},nld:{official:"Heard en McDonaldeilanden",common:"Heard-en McDonaldeilanden"},per:{official:"\u062C\u0632\u06CC\u0631\u0647 \u0647\u0631\u062F \u0648 \u062C\u0632\u0627\u06CC\u0631 \u0645\u06A9\u200C\u062F\u0648\u0646\u0627\u0644\u062F",common:"\u062C\u0632\u06CC\u0631\u0647 \u0647\u0631\u062F \u0648 \u062C\u0632\u0627\u06CC\u0631 \u0645\u06A9\u200C\u062F\u0648\u0646\u0627\u0644\u062F"},pol:{official:"Terytorium Wysp Heard i McDonalda",common:"Wyspy Heard i McDonalda"},por:{official:"Ilha Heard e Ilhas McDonald",common:"Ilha Heard e Ilhas McDonald"},rus:{official:"\u041E\u0441\u0442\u0440\u043E\u0432 \u0425\u0435\u0440\u0434 \u0438 \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u041C\u0430\u043A\u0434\u043E\u043D\u0430\u043B\u044C\u0434",common:"\u041E\u0441\u0442\u0440\u043E\u0432 \u0425\u0435\u0440\u0434 \u0438 \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u041C\u0430\u043A\u0434\u043E\u043D\u0430\u043B\u044C\u0434"},slk:{official:"Terit\xF3rium Heardovho ostrova a Macdonaldov\xFDch ostrovov",common:"Heardov ostrov"},spa:{official:"Islas Heard y McDonald",common:"Islas Heard y McDonald"},swe:{official:"Heard- och McDonald\xF6arna",common:"Heard- och McDonald\xF6arna"},urd:{official:"\u062C\u0632\u06CC\u0631\u06C1 \u06C1\u0631\u0688 \u0648 \u062C\u0632\u0627\u0626\u0631 \u0645\u06A9\u0688\u0648\u0646\u0644\u0688",common:"\u062C\u0632\u06CC\u0631\u06C1 \u06C1\u0631\u0688 \u0648 \u062C\u0632\u0627\u0626\u0631 \u0645\u06A9\u0688\u0648\u0646\u0644\u0688"},zho:{official:"\u8D6B\u5FB7\u5C9B\u548C\u9EA6\u5F53\u52B3\u7FA4\u5C9B",common:"\u8D6B\u5FB7\u5C9B\u548C\u9EA6\u5F53\u52B3\u7FA4\u5C9B"}},latlng:[-53.1,72.51666666],landlocked:!1,area:412,demonyms:{eng:{f:"Heard and McDonald Islander",m:"Heard and McDonald Islander"}},flag:"\u{1F1ED}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/k5FBAiVaVyozuYeA7",openStreetMaps:"https://www.openstreetmap.org/relation/2177227"},population:0,car:{signs:[""],side:"right"},timezones:["UTC+05:00"],continents:["Antarctica"],flags:{png:"https://flagcdn.com/w320/hm.png",svg:"https://flagcdn.com/hm.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Fiji",official:"Republic of Fiji",nativeName:{eng:{official:"Republic of Fiji",common:"Fiji"},fij:{official:"Matanitu Tugalala o Viti",common:"Viti"},hif:{official:"\u0930\u093F\u092A\u092C\u094D\u0932\u093F\u0915 \u0911\u092B \u092B\u0940\u091C\u0940",common:"\u092B\u093F\u091C\u0940"}}},tld:[".fj"],cca2:"FJ",ccn3:"242",cca3:"FJI",cioc:"FIJ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{FJD:{name:"Fijian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["79"]},capital:["Suva"],altSpellings:["FJ","Viti","Republic of Fiji","Matanitu ko Viti","Fij\u012B Ga\u1E47ar\u0101jya"],region:"Oceania",subregion:"Melanesia",languages:{eng:"English",fij:"Fijian",hif:"Fiji Hindi"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062C\u0632\u0631 \u0641\u064A\u062C\u064A",common:"\u0641\u064A\u062C\u064A"},ces:{official:"Republika Fid\u017Eijsk\xFDch ostrov\u016F",common:"Fid\u017Ei"},cym:{official:"Republic of Fiji",common:"Fiji"},deu:{official:"Republik Fidschi",common:"Fidschi"},est:{official:"Fid\u017Ei Vabariik",common:"Fid\u017Ei"},fin:{official:"Fid\u017Ein tasavalta",common:"Fid\u017Ei"},fra:{official:"R\xE9publique des Fidji",common:"Fidji"},hrv:{official:"Republika Fid\u017Ei",common:"Fi\u0111i"},hun:{official:"Fidzsi-szigeteki K\xF6zt\xE1rsas\xE1g",common:"Fidzsi-szigetek"},ita:{official:"Repubblica di Figi",common:"Figi"},jpn:{official:"\u30D5\u30A3\u30B8\u30FC\u5171\u548C\u56FD",common:"\u30D5\u30A3\u30B8\u30FC"},kor:{official:"\uD53C\uC9C0 \uACF5\uD654\uAD6D",common:"\uD53C\uC9C0"},nld:{official:"Republiek Fiji",common:"Fiji"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062C\u0632\u0627\u06CC\u0631 \u0641\u06CC\u062C\u06CC",common:"\u0641\u06CC\u062C\u06CC"},pol:{official:"Republika Fid\u017Ci",common:"Fid\u017Ci"},por:{official:"Rep\xFAblica de Fiji",common:"Fiji"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0424\u0438\u0434\u0436\u0438",common:"\u0424\u0438\u0434\u0436\u0438"},slk:{official:"Fi\u01C6ijsk\xE1 republika",common:"Fi\u01C6i"},spa:{official:"Rep\xFAblica de Fiji",common:"Fiyi"},swe:{official:"Republiken Fiji",common:"Fiji"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0641\u062C\u06CC",common:"\u0641\u062C\u06CC"},zho:{official:"\u6590\u6D4E\u5171\u548C\u56FD",common:"\u6590\u6D4E"}},latlng:[-18,175],landlocked:!1,area:18272,demonyms:{eng:{f:"Fijian",m:"Fijian"},fra:{f:"Fidjienne",m:"Fidjien"}},flag:"\u{1F1EB}\u{1F1EF}",maps:{googleMaps:"https://goo.gl/maps/r9fhDqoLZdg1zmE99",openStreetMaps:"https://www.openstreetmap.org/relation/571747"},population:896444,gini:{"2013":36.7},fifa:"FIJ",car:{signs:["FJI"],side:"left"},timezones:["UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/fj.png",svg:"https://flagcdn.com/fj.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fj.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fj.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-18.13,178.42]}},{name:{common:"San Marino",official:"Republic of San Marino",nativeName:{ita:{official:"Repubblica di San Marino",common:"San Marino"}}},tld:[".sm"],cca2:"SM",ccn3:"674",cca3:"SMR",cioc:"SMR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["78"]},capital:["City of San Marino"],altSpellings:["SM","Republic of San Marino","Repubblica di San Marino"],region:"Europe",subregion:"Southern Europe",languages:{ita:"Italian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0627\u0646 \u0645\u0627\u0631\u064A\u0646\u0648",common:"\u0633\u0627\u0646 \u0645\u0627\u0631\u064A\u0646\u0648"},ces:{official:"Republika San Marino",common:"San Marino"},cym:{official:"Republic of San Marino",common:"San Marino"},deu:{official:"Republik San Marino",common:"San Marino"},est:{official:"San Marino Vabariik",common:"San Marino"},fin:{official:"San Marinon seesteinen tasavalta",common:"San Marino"},fra:{official:"R\xE9publique de Saint-Marin",common:"Saint-Marin"},hrv:{official:"Ve\u0107ina Serene Republika San Marino",common:"San Marino"},hun:{official:"San Marino K\xF6zt\xE1rsas\xE1g",common:"San Marino"},ita:{official:"Serenissima Repubblica di San Marino",common:"San Marino"},jpn:{official:"\u30B5\u30F3\u30DE\u30EA\u30CE\u306E\u307B\u3068\u3093\u3069\u30BB\u30EA\u30FC\u30CC\u5171\u548C\u56FD",common:"\u30B5\u30F3\u30DE\u30EA\u30CE"},kor:{official:"\uC0B0\uB9C8\uB9AC\uB178 \uACF5\uD654\uAD6D",common:"\uC0B0\uB9C8\uB9AC\uB178"},nld:{official:"Meest Serene Republiek San Marino",common:"San Marino"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0627\u0646 \u0645\u0627\u0631\u06CC\u0646\u0648",common:"\u0633\u0627\u0646 \u0645\u0627\u0631\u06CC\u0646\u0648"},pol:{official:"Republika San Marino",common:"San Marino"},por:{official:"Seren\xEDssima Rep\xFAblica de San Marino",common:"San Marino"},rus:{official:"\u0411\u043E\u043B\u044C\u0448\u0438\u043D\u0441\u0442\u0432\u043E Serene \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0430\u043D-\u041C\u0430\u0440\u0438\u043D\u043E",common:"\u0421\u0430\u043D-\u041C\u0430\u0440\u0438\u043D\u043E"},slk:{official:"Sanmar\xEDnska republika",common:"San Mar\xEDno"},spa:{official:"Seren\xEDsima Rep\xFAblica de San Marino",common:"San Marino"},swe:{official:"Republiken San Marino",common:"San Marino"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0627\u0646 \u0645\u0627\u0631\u06CC\u0646\u0648",common:"\u0633\u0627\u0646 \u0645\u0627\u0631\u06CC\u0646\u0648"},zho:{official:"\u5723\u9A6C\u529B\u8BFA\u5171\u548C\u56FD",common:"\u5723\u9A6C\u529B\u8BFA"}},latlng:[43.76666666,12.41666666],landlocked:!0,borders:["ITA"],area:61,demonyms:{eng:{f:"Sammarinese",m:"Sammarinese"},fra:{f:"Saint-Marinaise",m:"Saint-Marinais"}},flag:"\u{1F1F8}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/rxCVJjm8dVY93RPY8",openStreetMaps:"https://www.openstreetmap.org/relation/54624"},population:33938,fifa:"SMR",car:{signs:["RSM"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/sm.png",svg:"https://flagcdn.com/sm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[43.94,12.45]},postalCode:{format:"4789#",regex:"^(4789\\d)$"}},{name:{common:"Moldova",official:"Republic of Moldova",nativeName:{ron:{official:"Republica Moldova",common:"Moldova"}}},tld:[".md"],cca2:"MD",ccn3:"498",cca3:"MDA",cioc:"MDA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MDL:{name:"Moldovan leu",symbol:"L"}},idd:{root:"+3",suffixes:["73"]},capital:["Chi\u0219in\u0103u"],altSpellings:["MD","Moldova, Republic of","Republic of Moldova","Republica Moldova"],region:"Europe",subregion:"Eastern Europe",languages:{ron:"Moldavian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0645\u0648\u0644\u062F\u0648\u06A4\u0627",common:"\u0645\u0648\u0644\u062F\u0648\u06A4\u0627"},ces:{official:"Moldavsk\xE1 republika",common:"Moldavsko"},cym:{official:"Republic of Moldova",common:"Moldova"},deu:{official:"Republik Moldau",common:"Moldawien"},est:{official:"Moldova Vabariik",common:"Moldova"},fin:{official:"Moldovan tasavalta",common:"Moldova"},fra:{official:"R\xE9publique de Moldavie",common:"Moldavie"},hrv:{official:"Moldavija",common:"Moldova"},hun:{official:"Moldovai K\xF6zt\xE1rsas\xE1g",common:"Moldova"},ita:{official:"Repubblica di Moldova",common:"Moldavia"},jpn:{official:"\u30E2\u30EB\u30C9\u30D0\u5171\u548C\u56FD",common:"\u30E2\u30EB\u30C9\u30D0\u5171\u548C\u56FD"},kor:{official:"\uBAB0\uB3C4\uBC14 \uACF5\uD654\uAD6D",common:"\uBAB0\uB3C4\uBC14"},nld:{official:"Republiek Moldavi\xEB",common:"Moldavi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0648\u0644\u062F\u0627\u0648\u06CC",common:"\u0645\u0648\u0644\u062F\u0627\u0648\u06CC"},pol:{official:"Republika Mo\u0142dawii",common:"Mo\u0142dawia"},por:{official:"Rep\xFAblica da Mold\xE1via",common:"Mold\xE1via"},rus:{official:"\u041C\u043E\u043B\u0434\u043E\u0432\u0430",common:"\u041C\u043E\u043B\u0434\u0430\u0432\u0438\u044F"},slk:{official:"Moldavsk\xE1 republika",common:"Moldavsko"},spa:{official:"Rep\xFAblica de Moldova",common:"Moldavia"},swe:{official:"Republiken Moldavien",common:"Moldavien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0627\u0644\u062F\u0648\u0648\u0627",common:"\u0645\u0627\u0644\u062F\u0648\u0648\u0627"},zho:{official:"\u6469\u5C14\u591A\u74E6\u5171\u548C\u56FD",common:"\u6469\u5C14\u591A\u74E6"}},latlng:[47,29],landlocked:!0,borders:["ROU","UKR"],area:33846,demonyms:{eng:{f:"Moldovan",m:"Moldovan"},fra:{f:"Moldave",m:"Moldave"}},flag:"\u{1F1F2}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/JjmyUuULujnDeFPf7",openStreetMaps:"https://www.openstreetmap.org/relation/58974"},population:2617820,gini:{"2018":25.7},fifa:"MDA",car:{signs:["MD"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/md.png",svg:"https://flagcdn.com/md.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/md.png",svg:"https://mainfacts.com/media/images/coats_of_arms/md.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.01,28.9]},postalCode:{format:"MD-####",regex:"^(?:MD)*(\\d{4})$"}},{name:{common:"Estonia",official:"Republic of Estonia",nativeName:{est:{official:"Eesti Vabariik",common:"Eesti"}}},tld:[".ee"],cca2:"EE",ccn3:"233",cca3:"EST",cioc:"EST",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["72"]},capital:["Tallinn"],altSpellings:["EE","Eesti","Republic of Estonia","Eesti Vabariik"],region:"Europe",subregion:"Northern Europe",languages:{est:"Estonian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0625\u0633\u062A\u0648\u0646\u064A\u0627",common:"\u0625\u0633\u062A\u0648\u0646\u064A\u0627"},ces:{official:"Estonsk\xE1 republika",common:"Estonsko"},cym:{official:"Gweriniaeth Estonia",common:"Estonia"},deu:{official:"Republik Estland",common:"Estland"},est:{official:"Eesti Vabariik",common:"Eesti"},fin:{official:"Viron tasavalta",common:"Viro"},fra:{official:"R\xE9publique d'Estonie",common:"Estonie"},hrv:{official:"Republika Estonija",common:"Estonija"},hun:{official:"\xC9szt K\xF6zt\xE1rsas\xE1g",common:"\xC9sztorsz\xE1g"},ita:{official:"Repubblica di Estonia",common:"Estonia"},jpn:{official:"\u30A8\u30B9\u30C8\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30A8\u30B9\u30C8\u30CB\u30A2"},kor:{official:"\uC5D0\uC2A4\uD1A0\uB2C8\uC544 \uACF5\uD654\uAD6D",common:"\uC5D0\uC2A4\uD1A0\uB2C8\uC544"},nld:{official:"Republiek Estland",common:"Estland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0633\u062A\u0648\u0646\u06CC",common:"\u0627\u0650\u0633\u062A\u0648\u0646\u06CC"},pol:{official:"Republika Esto\u0144ska",common:"Estonia"},por:{official:"Rep\xFAblica da Est\xF3nia",common:"Est\xF3nia"},rus:{official:"\u042D\u0441\u0442\u043E\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u042D\u0441\u0442\u043E\u043D\u0438\u044F"},slk:{official:"Est\xF3nska republika",common:"Est\xF3nsko"},spa:{official:"Rep\xFAblica de Estonia",common:"Estonia"},swe:{official:"Republiken Estland",common:"Estland"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0633\u0679\u0648\u0646\u06CC\u0627",common:"\u0627\u0633\u0679\u0648\u0646\u06CC\u0627"},zho:{official:"\u7231\u6C99\u5C3C\u4E9A\u5171\u548C\u56FD",common:"\u7231\u6C99\u5C3C\u4E9A"}},latlng:[59,26],landlocked:!1,borders:["LVA","RUS"],area:45227,demonyms:{eng:{f:"Estonian",m:"Estonian"},fra:{f:"Estonienne",m:"Estonien"}},flag:"\u{1F1EA}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/6SsynwGUodL1sDvq8",openStreetMaps:"https://www.openstreetmap.org/relation/79510"},population:1331057,gini:{"2018":30.3},fifa:"EST",car:{signs:["EST"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ee.png",svg:"https://flagcdn.com/ee.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ee.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ee.svg"},startOfWeek:"monday",capitalInfo:{latlng:[59.43,24.72]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Saint Vincent and the Grenadines",official:"Saint Vincent and the Grenadines",nativeName:{eng:{official:"Saint Vincent and the Grenadines",common:"Saint Vincent and the Grenadines"}}},tld:[".vc"],cca2:"VC",ccn3:"670",cca3:"VCT",cioc:"VIN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["784"]},capital:["Kingstown"],altSpellings:["VC"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0633\u0627\u0646\u062A \u0641\u064A\u0646\u0633\u0646\u062A \u0648\u0627\u0644\u063A\u0631\u064A\u0646\u0627\u062F\u064A\u0646",common:"\u0633\u0627\u0646\u062A \u0641\u064A\u0646\u0633\u0646\u062A \u0648\u0627\u0644\u063A\u0631\u064A\u0646\u0627\u062F\u064A\u0646"},ces:{official:"Svat\xFD Vincenc a Grenadiny",common:"Svat\xFD Vincenc a Grenadiny"},cym:{official:"Saint Vincent and the Grenadines",common:"Saint Vincent and the Grenadines"},deu:{official:"St. Vincent und die Grenadinen",common:"St. Vincent und die Grenadinen"},est:{official:"Saint Vincent ja Grenadiinid",common:"Saint Vincent"},fin:{official:"Saint Vincent ja Grenadiinit",common:"Saint Vincent ja Grenadiinit"},fra:{official:"Saint-Vincent-et-les Grenadines",common:"Saint-Vincent-et-les-Grenadines"},hrv:{official:"Sveti Vincent i Grenadini",common:"Sveti Vincent i Grenadini"},hun:{official:"Saint Vincent \xE9s a Grenadine-szigetek",common:"Saint Vincent \xE9s a Grenadine-szigetek"},ita:{official:"Saint Vincent e Grenadine",common:"Saint Vincent e Grenadine"},jpn:{official:"\u30BB\u30F3\u30C8\u30D3\u30F3\u30BB\u30F3\u30C8\u304A\u3088\u3073\u30B0\u30EC\u30CA\u30C7\u30A3\u30FC\u30F3\u8AF8\u5CF6",common:"\u30BB\u30F3\u30C8\u30D3\u30F3\u30BB\u30F3\u30C8\u304A\u3088\u3073\u30B0\u30EC\u30CA\u30C7\u30A3\u30FC\u30F3\u8AF8\u5CF6"},kor:{official:"\uC138\uC778\uD2B8\uBE48\uC13C\uD2B8 \uADF8\uB808\uB098\uB518",common:"\uC138\uC778\uD2B8\uBE48\uC13C\uD2B8 \uADF8\uB808\uB098\uB518"},nld:{official:"Saint Vincent en de Grenadines",common:"Saint Vincent en de Grenadines"},per:{official:"\u0633\u0646\u062A \u0648\u06CC\u0646\u0633\u0646\u062A \u0648 \u06AF\u0631\u0646\u0627\u062F\u06CC\u0646\u200C\u0647\u0627",common:"\u0633\u0646\u062A \u0648\u06CC\u0646\u0633\u0646\u062A \u0648 \u06AF\u0631\u0646\u0627\u062F\u06CC\u0646\u200C\u0647\u0627"},pol:{official:"Saint Vincent i Grenadyny",common:"Saint Vincent i Grenadyny"},por:{official:"S\xE3o Vicente e Granadinas",common:"S\xE3o Vincente e Granadinas"},rus:{official:"\u0421\u0435\u043D\u0442-\u0412\u0438\u043D\u0441\u0435\u043D\u0442 \u0438 \u0413\u0440\u0435\u043D\u0430\u0434\u0438\u043D\u044B",common:"\u0421\u0435\u043D\u0442-\u0412\u0438\u043D\u0441\u0435\u043D\u0442 \u0438 \u0413\u0440\u0435\u043D\u0430\u0434\u0438\u043D\u044B"},slk:{official:"Sv\xE4t\xFD Vincent a Grenad\xEDny",common:"Sv\xE4t\xFD Vincent a Grenad\xEDny"},spa:{official:"San Vicente y las Granadinas",common:"San Vicente y Granadinas"},swe:{official:"Saint Vincent och Grenadinerna",common:"Saint Vincent och Grenadinerna"},urd:{official:"\u0633\u06CC\u0646\u0679 \u0648\u06CC\u0646\u0633\u06CC\u0646\u0679 \u0648 \u06AF\u0631\u06CC\u0646\u0627\u0688\u0627\u0626\u0646\u0632",common:"\u0633\u06CC\u0646\u0679 \u0648\u06CC\u0646\u0633\u06CC\u0646\u0679 \u0648 \u06AF\u0631\u06CC\u0646\u0627\u0688\u0627\u0626\u0646\u0632"},zho:{official:"\u5723\u6587\u68EE\u7279\u548C\u683C\u6797\u7EB3\u4E01\u65AF",common:"\u5723\u6587\u68EE\u7279\u548C\u683C\u6797\u7EB3\u4E01\u65AF"}},latlng:[13.25,-61.2],landlocked:!1,area:389,demonyms:{eng:{f:"Saint Vincentian",m:"Saint Vincentian"},fra:{f:"Vincentaise",m:"Vincentais"}},flag:"\u{1F1FB}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/wMbnMqjG37FMnrwf7",openStreetMaps:"https://www.openstreetmap.org/relation/550725"},population:110947,fifa:"VIN",car:{signs:["WV"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/vc.png",svg:"https://flagcdn.com/vc.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.13,-61.22]}},{name:{common:"United States Minor Outlying Islands",official:"United States Minor Outlying Islands",nativeName:{eng:{official:"United States Minor Outlying Islands",common:"United States Minor Outlying Islands"}}},tld:[".us"],cca2:"UM",ccn3:"581",cca3:"UMI",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+2",suffixes:["68"]},capital:["Washington DC"],altSpellings:["UM"],region:"Americas",subregion:"North America",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0627\u0644\u0648\u0644\u0627\u064A\u0627\u062A \u0627\u0644\u0645\u062A\u062D\u062F\u0629 \u0627\u0644\u0635\u063A\u064A\u0631\u0629 \u0627\u0644\u0646\u0627\u0626\u064A\u0629",common:"\u062C\u0632\u0631 \u0627\u0644\u0648\u0644\u0627\u064A\u0627\u062A \u0627\u0644\u0645\u062A\u062D\u062F\u0629 \u0627\u0644\u0635\u063A\u064A\u0631\u0629 \u0627\u0644\u0646\u0627\u0626\u064A\u0629"},ces:{official:"Men\u0161\xED odlehl\xE9 ostrovy Spojen\xFDch st\xE1t\u016F americk\xFDch",common:"Men\u0161\xED odlehl\xE9 ostrovy USA"},cym:{official:"United States Minor Outlying Islands",common:"United States Minor Outlying Islands"},deu:{official:"USA, kleinere ausgelagerte Inseln",common:"Kleinere Inselbesitzungen der Vereinigten Staaten"},est:{official:"\xDChendriikide v\xE4ikesed hajasaared",common:"\xDChendriikide hajasaared"},fin:{official:"Yhdysvaltain asumattomat saaret",common:"Yhdysvaltain asumattomat saaret"},fra:{official:"\xCEles mineures \xE9loign\xE9es des \xC9tats-Unis",common:"\xCEles mineures \xE9loign\xE9es des \xC9tats-Unis"},hrv:{official:"Mali udaljeni otoci SAD-a",common:"Mali udaljeni otoci SAD-a"},hun:{official:"Az Amerikai Egyes\xFClt \xC1llamok lakatlan k\xFClbirtokai",common:"Az Amerikai Egyes\xFClt \xC1llamok lakatlan k\xFClbirtokai"},ita:{official:"Stati Uniti Isole Minori",common:"Isole minori esterne degli Stati Uniti d'America"},jpn:{official:"\u30A2\u30E1\u30EA\u30AB\u5408\u8846\u56FD\u5916\u8AF8\u5CF6",common:"\u5408\u8846\u56FD\u9818\u6709\u5C0F\u96E2\u5CF6"},kor:{official:"\uBBF8\uAD6D\uB839 \uAD70\uC18C \uC81C\uB3C4",common:"\uBBF8\uAD6D\uB839 \uAD70\uC18C \uC81C\uB3C4"},nld:{official:"Kleine afgelegen eilanden van de Verenigde Staten",common:"Kleine afgelegen eilanden van de Verenigde Staten"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u0686\u06A9 \u062D\u0627\u0634\u06CC\u0647\u200C\u0627\u06CC \u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627",common:"\u062C\u0632\u0627\u06CC\u0631 \u06A9\u0648\u0686\u06A9 \u062D\u0627\u0634\u06CC\u0647\u200C\u0627\u06CC \u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F\u0647 \u0622\u0645\u0631\u06CC\u06A9\u0627"},pol:{official:"Dalekie Wyspy Mniejsze Stan\xF3w Zjednoczonych",common:"Dalekie Wyspy Mniejsze Stan\xF3w Zjednoczonych"},por:{official:"Estados Unidos Ilhas Menores Distantes",common:"Ilhas Menores Distantes dos Estados Unidos"},rus:{official:"\u0412\u043D\u0435\u0448\u043D\u0438\u0435 \u043C\u0430\u043B\u044B\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u0421\u0428\u0410",common:"\u0412\u043D\u0435\u0448\u043D\u0438\u0435 \u043C\u0430\u043B\u044B\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u0421\u0428\u0410"},slk:{official:"Men\u0161ie od\u013Eahl\xE9 ostrovy Spjoen\xFDch \u0161t\xE1tov",common:"Men\u0161ie od\u013Eahl\xE9 ostrovy USA"},spa:{official:"Estados Unidos Islas menores alejadas de",common:"Islas Ultramarinas Menores de Estados Unidos"},swe:{official:"F\xF6renta staternas mindre \xF6ar i Oceanien och V\xE4stindien",common:"F\xF6renta staternas mindre \xF6ar i Oceanien och V\xE4stindien"},urd:{official:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0686\u06BE\u0648\u0679\u06D2 \u0628\u06CC\u0631\u0648\u0646\u06CC \u062C\u0632\u0627\u0626\u0631",common:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0686\u06BE\u0648\u0679\u06D2 \u0628\u06CC\u0631\u0648\u0646\u06CC \u062C\u0632\u0627\u0626\u0631"},zho:{official:"\u7F8E\u56FD\u672C\u571F\u5916\u5C0F\u5C9B\u5C7F",common:"\u7F8E\u56FD\u672C\u571F\u5916\u5C0F\u5C9B\u5C7F"}},latlng:[19.3,166.633333],landlocked:!1,area:34.2,demonyms:{eng:{f:"American Islander",m:"American Islander"}},flag:"\u{1F1FA}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/hZKnrzgeK69dDyPF8",openStreetMaps:"https://www.openstreetmap.org/relation/6430384"},population:300,car:{signs:[""],side:"right"},timezones:["UTC-11:00","UTC-10:00","UTC+12:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/um.png",svg:"https://flagcdn.com/um.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{}},{name:{common:"Belarus",official:"Republic of Belarus",nativeName:{bel:{official:"\u0420\u044D\u0441\u043F\u0443\u0431\u043B\u0456\u043A\u0430 \u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C",common:"\u0411\u0435\u043B\u0430\u0440\u0443\u0301\u0441\u044C"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C",common:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"}}},tld:[".by"],cca2:"BY",ccn3:"112",cca3:"BLR",cioc:"BLR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BYN:{name:"Belarusian ruble",symbol:"Br"}},idd:{root:"+3",suffixes:["75"]},capital:["Minsk"],altSpellings:["BY","Bielaru\u015B","Republic of Belarus","\u0411\u0435\u043B\u043E\u0440\u0443\u0441\u0441\u0438\u044F","\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0435\u043B\u043E\u0440\u0443\u0441\u0441\u0438\u044F"],region:"Europe",subregion:"Eastern Europe",languages:{bel:"Belarusian",rus:"Russian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u064A\u0644\u0627\u0631\u0648\u0633\u064A\u0627",common:"\u0628\u064A\u0644\u0627\u0631\u0648\u0633\u064A\u0627"},ces:{official:"B\u011Blorusk\xE1 republika",common:"B\u011Blorusko"},cym:{official:"Gweriniaeth Belarws",common:"Belarws"},deu:{official:"Republik Belarus",common:"Wei\xDFrussland"},est:{official:"Valgevene Vabariik",common:"Valgevene"},fin:{official:"Valko-Ven\xE4j\xE4n tasavalta",common:"Valko-Ven\xE4j\xE4"},fra:{official:"R\xE9publique de Bi\xE9lorussie",common:"Bi\xE9lorussie"},hrv:{official:"Republika Bjelorusija",common:"Bjelorusija"},hun:{official:"Feh\xE9rorosz K\xF6zt\xE1rsas\xE1g",common:"Feh\xE9roroszorsz\xE1g"},ita:{official:"Repubblica di Belarus",common:"Bielorussia"},jpn:{official:"\u30D9\u30E9\u30EB\u30FC\u30B7\u5171\u548C\u56FD",common:"\u30D9\u30E9\u30EB\u30FC\u30B7"},kor:{official:"\uBCA8\uB77C\uB8E8\uC2A4 \uACF5\uD654\uAD6D",common:"\uBCA8\uB77C\uB8E8\uC2A4"},nld:{official:"Republiek Belarus",common:"Wit-Rusland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0644\u0627\u0631\u0648\u0633",common:"\u0628\u0644\u0627\u0631\u0648\u0633"},pol:{official:"Republika Bia\u0142orusi",common:"Bia\u0142oru\u015B"},por:{official:"Rep\xFAblica da Bielorr\xFAssia",common:"Bielor\xFAssia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C",common:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},slk:{official:"Bielorusk\xE1 republika",common:"Bielorusko"},spa:{official:"Rep\xFAblica de Belar\xFAs",common:"Bielorrusia"},swe:{official:"Republiken Vitryssland",common:"Belarus"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u06CC\u0644\u0627\u0631\u0648\u0633",common:"\u0628\u06CC\u0644\u0627\u0631\u0648\u0633"},zho:{official:"\u767D\u4FC4\u7F57\u65AF\u5171\u548C\u56FD",common:"\u767D\u4FC4\u7F57\u65AF"}},latlng:[53,28],landlocked:!0,borders:["LVA","LTU","POL","RUS","UKR"],area:207600,demonyms:{eng:{f:"Belarusian",m:"Belarusian"},fra:{f:"Bi\xE9lorusse",m:"Bi\xE9lorusse"}},flag:"\u{1F1E7}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/PJUDU3EBPSszCQcu6",openStreetMaps:"https://www.openstreetmap.org/relation/59065"},population:9398861,gini:{"2019":25.3},fifa:"BLR",car:{signs:["BY"],side:"right"},timezones:["UTC+03:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/by.png",svg:"https://flagcdn.com/by.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/by.png",svg:"https://mainfacts.com/media/images/coats_of_arms/by.svg"},startOfWeek:"monday",capitalInfo:{latlng:[53.9,27.57]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Sri Lanka",official:"Democratic Socialist Republic of Sri Lanka",nativeName:{sin:{official:"\u0DC1\u0DCA\u200D\u0DBB\u0DD3 \u0DBD\u0D82\u0D9A\u0DCF \u0DB4\u0DCA\u200D\u0DBB\u0DA2\u0DCF\u0DAD\u0DCF\u0DB1\u0DCA\u0DAD\u0DCA\u200D\u0DBB\u0DD2\u0D9A \u0DC3\u0DB8\u0DCF\u0DA2\u0DC0\u0DCF\u0DAF\u0DD3 \u0DA2\u0DB1\u0DBB\u0DA2\u0DBA",common:"\u0DC1\u0DCA\u200D\u0DBB\u0DD3 \u0DBD\u0D82\u0D9A\u0DCF\u0DC0"},tam:{official:"\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8 \u0B9A\u0BA9\u0BA8\u0BBE\u0BAF\u0B95 \u0B9A\u0BCB\u0B9A\u0BB2\u0BBF\u0B9A\u0B95\u0BCD \u0B95\u0BC1\u0B9F\u0BBF\u0BAF\u0BB0\u0B9A\u0BC1",common:"\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8"}}},tld:[".lk",".\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8",".\u0DBD\u0D82\u0D9A\u0DCF"],cca2:"LK",ccn3:"144",cca3:"LKA",cioc:"SRI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LKR:{name:"Sri Lankan rupee",symbol:"Rs  \u0DBB\u0DD4"}},idd:{root:"+9",suffixes:["4"]},capital:["Sri Jayawardenepura Kotte"],altSpellings:["LK","ila\u1E45kai","Democratic Socialist Republic of Sri Lanka"],region:"Asia",subregion:"Southern Asia",languages:{sin:"Sinhala",tam:"Tamil"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0631\u064A\u0644\u0627\u0646\u0643\u0627 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0633\u0631\u064A\u0644\u0627\u0646\u0643\u0627"},ces:{official:"Sr\xEDlansk\xE1 demokratick\xE1 socialistick\xE1 republika",common:"Sr\xED Lanka"},cym:{official:"Democratic Socialist Republic of Sri Lanka",common:"Sri Lanka"},deu:{official:"Demokratische Sozialistische Republik Sri Lanka",common:"Sri Lanka"},est:{official:"Sri Lanka Demokraatlik Sotsialistlik Vabariik",common:"Sri Lanka"},fin:{official:"Sri Lankan demokraattinen sosialistinen tasavalta",common:"Sri Lanka"},fra:{official:"R\xE9publique d\xE9mocratique socialiste du Sri Lanka",common:"Sri Lanka"},hrv:{official:"Demokratska Socijalisti\u010Dke Republike \u0160ri Lanke",common:"\u0160ri Lanka"},hun:{official:"Sr\xED Lanka-i Demokratikus Szocialista K\xF6zt\xE1rsas\xE1g",common:"Sr\xED Lanka"},ita:{official:"Repubblica democratica socialista dello Sri Lanka",common:"Sri Lanka"},jpn:{official:"\u30B9\u30EA\u30E9\u30F3\u30AB\u6C11\u4E3B\u793E\u4F1A\u4E3B\u7FA9\u5171\u548C\u56FD",common:"\u30B9\u30EA\u30E9\u30F3\u30AB"},kor:{official:"\uC2A4\uB9AC\uB791\uCE74 \uBBFC\uC8FC \uC0AC\uD68C\uC8FC\uC758 \uACF5\uD654\uAD6D",common:"\uC2A4\uB9AC\uB791\uCE74"},nld:{official:"Democratische Socialistische Republiek Sri Lanka",common:"Sri Lanka"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u0633\u0648\u0633\u06CC\u0627\u0644\u06CC\u0633\u062A\u06CC \u0633\u0631\u06CC\u200C\u0644\u0627\u0646\u06A9\u0627",common:"\u0633\u0631\u06CC\u200C\u0644\u0627\u0646\u06A9\u0627"},pol:{official:"Demokratyczno-Socjalistyczna Republika Sri Lanki",common:"Sri Lanka"},por:{official:"Rep\xFAblica Democr\xE1tica Socialista do Sri Lanka",common:"Sri Lanka"},rus:{official:"\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0421\u043E\u0446\u0438\u0430\u043B\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0428\u0440\u0438-\u041B\u0430\u043D\u043A\u0430",common:"\u0428\u0440\u0438-\u041B\u0430\u043D\u043A\u0430"},slk:{official:"Sr\xEDlansk\xE1 demokratick\xE1 socialistick\xE1 republika",common:"Sr\xED Lanka"},spa:{official:"Rep\xFAblica Democr\xE1tica Socialista de Sri Lanka",common:"Sri Lanka"},swe:{official:"Demokratiska socialistiska republiken Sri Lanka",common:"Sri Lanka"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC \u0648 \u0627\u0634\u062A\u0631\u0627\u06A9\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0631\u06CC \u0644\u0646\u06A9\u0627",common:"\u0633\u0631\u06CC \u0644\u0646\u06A9\u0627"},zho:{official:"\u65AF\u91CC\u5170\u5361\u6C11\u4E3B\u793E\u4F1A\u4E3B\u4E49\u5171\u548C\u56FD",common:"\u65AF\u91CC\u5170\u5361"}},latlng:[7,81],landlocked:!1,borders:["IND"],area:65610,demonyms:{eng:{f:"Sri Lankan",m:"Sri Lankan"},fra:{f:"Sri-lankaise",m:"Sri-lankais"}},flag:"\u{1F1F1}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/VkPHoeFSfgzRQCDv8",openStreetMaps:"https://www.openstreetmap.org/relation/536807"},population:21919e3,gini:{"2016":39.3},fifa:"SRI",car:{signs:["CL"],side:"left"},timezones:["UTC+05:30"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/lk.png",svg:"https://flagcdn.com/lk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.89,79.9]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"El Salvador",official:"Republic of El Salvador",nativeName:{spa:{official:"Rep\xFAblica de El Salvador",common:"El Salvador"}}},tld:[".sv"],cca2:"SV",ccn3:"222",cca3:"SLV",cioc:"ESA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+5",suffixes:["03"]},capital:["San Salvador"],altSpellings:["SV","Republic of El Salvador","Rep\xFAblica de El Salvador"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0633\u0644\u0641\u0627\u062F\u0648\u0631",common:"\u0627\u0644\u0633\u0644\u0641\u0627\u062F\u0648\u0631"},ces:{official:"Salvadorsk\xE1 republika",common:"Salvador"},cym:{official:"Gweriniaeth El Salfador",common:"El Salfador"},deu:{official:"Republik El Salvador",common:"El Salvador"},est:{official:"El Salvadori Vabariik",common:"El Salvador"},fin:{official:"El Salvadorin tasavalta",common:"El Salvador"},fra:{official:"R\xE9publique du Salvador",common:"Salvador"},hrv:{official:"Republika El Salvador",common:"Salvador"},hun:{official:"Salvadori K\xF6zt\xE1rsas\xE1g",common:"Salvador"},ita:{official:"Repubblica di El Salvador",common:"El Salvador"},jpn:{official:"\u30A8\u30EB\u30B5\u30EB\u30D0\u30C9\u30EB\u5171\u548C\u56FD",common:"\u30A8\u30EB\u30B5\u30EB\u30D0\u30C9\u30EB"},kor:{official:"\uC5D8\uC0B4\uBC14\uB3C4\uB974 \uACF5\uD654\uAD6D",common:"\uC5D8\uC0B4\uBC14\uB3C4\uB974"},nld:{official:"Republiek El Salvador",common:"El Salvador"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0644\u0633\u0627\u0644\u0648\u0627\u062F\u0648\u0631",common:"\u0627\u0644\u0633\u0627\u0644\u0648\u0627\u062F\u0648\u0631"},pol:{official:"Republika Salwadoru",common:"Salwador"},por:{official:"Rep\xFAblica de El Salvador",common:"El Salvador"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u042D\u043B\u044C-\u0421\u0430\u043B\u044C\u0432\u0430\u0434\u043E\u0440",common:"\u0421\u0430\u043B\u044C\u0432\u0430\u0434\u043E\u0440"},slk:{official:"Salv\xE1dorsk\xE1 republika",common:"Salv\xE1dor"},spa:{official:"Rep\xFAblica de El Salvador",common:"El Salvador"},swe:{official:"Republiken El Salvador",common:"El Salvador"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u06CC\u0644 \u0633\u06CC\u0644\u0648\u0627\u0688\u0648\u0631",common:"\u0627\u06CC\u0644 \u0633\u06CC\u0644\u0648\u0627\u0688\u0648\u0631"},zho:{official:"\u8428\u5C14\u74E6\u591A\u5171\u548C\u56FD",common:"\u8428\u5C14\u74E6\u591A"}},latlng:[13.83333333,-88.91666666],landlocked:!1,borders:["GTM","HND"],area:21041,demonyms:{eng:{f:"Salvadoran",m:"Salvadoran"},fra:{f:"Salvadorienne",m:"Salvadorien"}},flag:"\u{1F1F8}\u{1F1FB}",maps:{googleMaps:"https://goo.gl/maps/cZnCEi5sEMQtKKcB7",openStreetMaps:"https://www.openstreetmap.org/relation/1520612"},population:6486201,gini:{"2019":38.8},fifa:"SLV",car:{signs:["ES"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/sv.png",svg:"https://flagcdn.com/sv.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[13.7,-89.2]},postalCode:{format:"CP ####",regex:"^(?:CP)*(\\d{4})$"}},{name:{common:"Australia",official:"Commonwealth of Australia",nativeName:{eng:{official:"Commonwealth of Australia",common:"Australia"}}},tld:[".au"],cca2:"AU",ccn3:"036",cca3:"AUS",cioc:"AUS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["1"]},capital:["Canberra"],altSpellings:["AU"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English"},translations:{ara:{official:"\u0643\u0648\u0645\u0648\u0646\u0648\u0644\u062B \u0623\u0633\u062A\u0631\u0627\u0644\u064A\u0627",common:"\u0623\u0633\u062A\u0631\u0627\u0644\u064A\u0627"},ces:{official:"Australsk\xE9 spole\u010Denstv\xED",common:"Austr\xE1lie"},cym:{official:"Cymanwlad Awstralia",common:"Awstralia"},deu:{official:"Commonwealth Australien",common:"Australien"},est:{official:"Austraalia \xDChendus",common:"Austraalia"},fin:{official:"Australian liittovaltio",common:"Australia"},fra:{official:"Australie",common:"Australie"},hrv:{official:"Commonwealth of Australia",common:"Australija"},hun:{official:"Ausztr\xE1l \xC1llamsz\xF6vets\xE9g",common:"Ausztr\xE1lia"},ita:{official:"Commonwealth dell'Australia",common:"Australia"},jpn:{official:"\u30AA\u30FC\u30B9\u30C8\u30E9\u30EA\u30A2\u9023\u90A6",common:"\u30AA\u30FC\u30B9\u30C8\u30E9\u30EA\u30A2"},kor:{official:"\uC624\uC2A4\uD2B8\uB808\uC77C\uB9AC\uC544 \uC5F0\uBC29",common:"\uD638\uC8FC"},nld:{official:"Gemenebest van Australi\xEB",common:"Australi\xEB"},per:{official:"\u0642\u0644\u0645\u0631\u0648 \u0647\u0645\u0633\u0648\u062F \u0627\u0633\u062A\u0631\u0627\u0644\u06CC\u0627",common:"\u0627\u0633\u062A\u0631\u0627\u0644\u06CC\u0627"},pol:{official:"Zwi\u0105zek Australijski",common:"Australia"},por:{official:"Comunidade da Austr\xE1lia",common:"Austr\xE1lia"},rus:{official:"\u0421\u043E\u0434\u0440\u0443\u0436\u0435\u0441\u0442\u0432\u043E \u0410\u0432\u0441\u0442\u0440\u0430\u043B\u0438\u0438",common:"\u0410\u0432\u0441\u0442\u0440\u0430\u043B\u0438\u044F"},slk:{official:"Austr\xE1lsky zv\xE4z",common:"Austr\xE1lia"},spa:{official:"Mancomunidad de Australia",common:"Australia"},swe:{official:"Australiska statsf\xF6rbundet",common:"Australien"},urd:{official:"\u062F\u0648\u0644\u062A\u0650 \u0645\u0634\u062A\u0631\u06A9\u06C1 \u0622\u0633\u0679\u0631\u06CC\u0644\u06CC\u0627",common:"\u0622\u0633\u0679\u0631\u06CC\u0644\u06CC\u0627"},zho:{official:"\u6FB3\u5927\u5229\u4E9A\u8054\u90A6",common:"\u6FB3\u5927\u5229\u4E9A"}},latlng:[-27,133],landlocked:!1,area:7692024,demonyms:{eng:{f:"Australian",m:"Australian"},fra:{f:"Australienne",m:"Australien"}},flag:"\u{1F1E6}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/DcjaDa7UbhnZTndH6",openStreetMaps:"https://www.openstreetmap.org/relation/80500"},population:25687041,gini:{"2014":34.4},fifa:"AUS",car:{signs:["AUS"],side:"left"},timezones:["UTC+05:00","UTC+06:30","UTC+07:00","UTC+08:00","UTC+09:30","UTC+10:00","UTC+10:30","UTC+11:30"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/au.png",svg:"https://flagcdn.com/au.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/au.png",svg:"https://mainfacts.com/media/images/coats_of_arms/au.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-35.27,149.13]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Bermuda",official:"Bermuda",nativeName:{eng:{official:"Bermuda",common:"Bermuda"}}},tld:[".bm"],cca2:"BM",ccn3:"060",cca3:"BMU",cioc:"BER",independent:!1,status:"officially-assigned",unMember:!1,currencies:{BMD:{name:"Bermudian dollar",symbol:"$"}},idd:{root:"+1",suffixes:["441"]},capital:["Hamilton"],altSpellings:["BM","The Islands of Bermuda","The Bermudas","Somers Isles"],region:"Americas",subregion:"North America",languages:{eng:"English"},translations:{ara:{official:"\u0628\u0631\u0645\u0648\u062F\u0627",common:"\u0628\u0631\u0645\u0648\u062F\u0627"},ces:{official:"Bermudsk\xE9 ostrovy",common:"Bermudy"},cym:{official:"Bermiwda",common:"Bermiwda"},deu:{official:"Bermuda",common:"Bermuda"},est:{official:"Bermuda",common:"Bermuda"},fin:{official:"Bermuda",common:"Bermuda"},fra:{official:"Bermudes",common:"Bermudes"},hrv:{official:"Bermuda",common:"Bermudi"},hun:{official:"Bermuda",common:"Bermuda"},ita:{official:"Bermuda",common:"Bermuda"},jpn:{official:"\u30D0\u30DF\u30E5\u30FC\u30C0",common:"\u30D0\u30DF\u30E5\u30FC\u30C0"},kor:{official:"\uBC84\uBBA4\uB2E4",common:"\uBC84\uBBA4\uB2E4"},nld:{official:"Bermuda",common:"Bermuda"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0628\u0631\u0645\u0648\u062F\u0627",common:"\u0628\u0631\u0645\u0648\u062F\u0627"},pol:{official:"Bermudy",common:"Bermudy"},por:{official:"Bermudas",common:"Bermudas"},rus:{official:"\u0411\u0435\u0440\u043C\u0443\u0434\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0411\u0435\u0440\u043C\u0443\u0434\u0441\u043A\u0438\u0435 \u041E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Bermudy",common:"Bermudy"},spa:{official:"Bermuda",common:"Bermudas"},swe:{official:"Bermuda",common:"Bermuda"},urd:{official:"\u0628\u0631\u0645\u0648\u062F\u0627",common:"\u0628\u0631\u0645\u0648\u062F\u0627"},zho:{official:"\u767E\u6155\u5927",common:"\u767E\u6155\u5927"}},latlng:[32.33333333,-64.75],landlocked:!1,area:54,demonyms:{eng:{f:"Bermudian",m:"Bermudian"},fra:{f:"Bermudienne",m:"Bermudien"}},flag:"\u{1F1E7}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/NLsRGNjTzDghTtAJA",openStreetMaps:"https://www.openstreetmap.org/relation/1993208"},population:63903,fifa:"BER",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/bm.png",svg:"https://flagcdn.com/bm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[32.28,-64.78]},postalCode:{format:"@@ ##",regex:"^([A-Z]{2}\\d{2})$"}},{name:{common:"Nicaragua",official:"Republic of Nicaragua",nativeName:{spa:{official:"Rep\xFAblica de Nicaragua",common:"Nicaragua"}}},tld:[".ni"],cca2:"NI",ccn3:"558",cca3:"NIC",cioc:"NCA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{NIO:{name:"Nicaraguan c\xF3rdoba",symbol:"C$"}},idd:{root:"+5",suffixes:["05"]},capital:["Managua"],altSpellings:["NI","Republic of Nicaragua","Rep\xFAblica de Nicaragua"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0646\u064A\u0643\u0627\u0631\u0627\u063A\u0648\u0627",common:"\u0646\u064A\u0643\u0627\u0631\u0627\u063A\u0648\u0627"},ces:{official:"Republika Nikaragua",common:"Nikaragua"},cym:{official:"Republic of Nicaragua",common:"Nicaragua"},deu:{official:"Republik Nicaragua",common:"Nicaragua"},est:{official:"Nicaragua Vabariik",common:"Nicaragua"},fin:{official:"Nicaraguan tasavalta",common:"Nicaragua"},fra:{official:"R\xE9publique du Nicaragua",common:"Nicaragua"},hrv:{official:"Republika Nikaragva",common:"Nikaragva"},hun:{official:"Nicaraguai K\xF6zt\xE1rsas\xE1g",common:"Nicaragua"},ita:{official:"Repubblica del Nicaragua",common:"Nicaragua"},jpn:{official:"\u30CB\u30AB\u30E9\u30B0\u30A2\u5171\u548C\u56FD",common:"\u30CB\u30AB\u30E9\u30B0\u30A2"},kor:{official:"\uB2C8\uCE74\uB77C\uACFC \uACF5\uD654\uAD6D",common:"\uB2C8\uCE74\uB77C\uACFC"},nld:{official:"Republiek Nicaragua",common:"Nicaragua"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0646\u06CC\u06A9\u0627\u0631\u0627\u06AF\u0648\u0626\u0647",common:"\u0646\u06CC\u06A9\u0627\u0631\u0627\u06AF\u0648\u0626\u0647"},pol:{official:"Republika Nikaragui",common:"Nikaragua"},por:{official:"Rep\xFAblica da Nicar\xE1gua",common:"Nicar\xE1gua"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041D\u0438\u043A\u0430\u0440\u0430\u0433\u0443\u0430",common:"\u041D\u0438\u043A\u0430\u0440\u0430\u0433\u0443\u0430"},slk:{official:"Nikaragujsk\xE1 republika",common:"Nikaragua"},spa:{official:"Rep\xFAblica de Nicaragua",common:"Nicaragua"},swe:{official:"Republiken Nicaragua",common:"Nicaragua"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0646\u06A9\u0627\u0631\u0627\u06AF\u0648\u0627",common:"\u0646\u06A9\u0627\u0631\u0627\u06AF\u0648\u0627"},zho:{official:"\u5C3C\u52A0\u62C9\u74DC\u5171\u548C\u56FD",common:"\u5C3C\u52A0\u62C9\u74DC"}},latlng:[13,-85],landlocked:!1,borders:["CRI","HND"],area:130373,demonyms:{eng:{f:"Nicaraguan",m:"Nicaraguan"},fra:{f:"Nicaraguayenne",m:"Nicaraguayen"}},flag:"\u{1F1F3}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/P77LaEVkKJKXneRC6",openStreetMaps:"https://www.openstreetmap.org/relation/287666"},population:6624554,gini:{"2014":46.2},fifa:"NCA",car:{signs:["NIC"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/ni.png",svg:"https://flagcdn.com/ni.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ni.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ni.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.13,-86.25]},postalCode:{format:"###-###-#",regex:"^(\\d{7})$"}},{name:{common:"Somalia",official:"Federal Republic of Somalia",nativeName:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0635\u0648\u0645\u0627\u0644\u200E\u200E",common:"\u0627\u0644\u0635\u0648\u0645\u0627\u0644\u200E\u200E"},som:{official:"Jamhuuriyadda Federaalka Soomaaliya",common:"Soomaaliya"}}},tld:[".so"],cca2:"SO",ccn3:"706",cca3:"SOM",cioc:"SOM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SOS:{name:"Somali shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["52"]},capital:["Mogadishu"],altSpellings:["SO","a\u1E63-\u1E62\u016Bm\u0101l","Federal Republic of Somalia","Jamhuuriyadda Federaalka Soomaaliya","Jumh\u016Briyyat a\u1E63-\u1E62\u016Bm\u0101l al-Fider\u0101liyya"],region:"Africa",subregion:"Eastern Africa",languages:{ara:"Arabic",som:"Somali"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0635\u0648\u0645\u0627\u0644 \u0627\u0644\u0641\u064A\u062F\u0631\u0627\u0644\u064A\u0629",common:"\u0627\u0644\u0635\u0648\u0645\u0627\u0644"},ces:{official:"Som\xE1lsk\xE1 demokratick\xE1 republika",common:"Som\xE1lsko"},cym:{official:"Federal Republic of Somalia",common:"Somalia"},deu:{official:"Bundesrepublik Somalia",common:"Somalia"},est:{official:"Somaalia Liitvabariik",common:"Somaalia"},fin:{official:"Somalian liittotasavalta",common:"Somalia"},fra:{official:"R\xE9publique f\xE9d\xE9rale de Somalie",common:"Somalie"},hrv:{official:"Savezna Republika Somaliji",common:"Somalija"},hun:{official:"Szom\xE1li Sz\xF6vets\xE9gi K\xF6zt\xE1rsas\xE1g",common:"Szom\xE1lia"},ita:{official:"Repubblica federale di Somalia",common:"Somalia"},jpn:{official:"\u30BD\u30DE\u30EA\u30A2\u9023\u90A6\u5171\u548C\u56FD",common:"\u30BD\u30DE\u30EA\u30A2"},kor:{official:" \uC18C\uB9D0\uB9AC\uC544 \uC5F0\uBC29 \uACF5\uD654\uAD6D",common:"\uC18C\uB9D0\uB9AC\uC544"},nld:{official:"Federale Republiek Somali\xEB",common:"Somali\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u062F\u0631\u0627\u0644 \u0633\u0648\u0645\u0627\u0644\u06CC",common:"\u0633\u0648\u0645\u0627\u0644\u06CC"},pol:{official:"Federalna Republika Somalii",common:"Somalia"},por:{official:"Rep\xFAblica Federal da Som\xE1lia",common:"Som\xE1lia"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u043E\u043C\u0430\u043B\u0438",common:"\u0421\u043E\u043C\u0430\u043B\u0438"},slk:{official:"Som\xE1lska federat\xEDvna republika",common:"Som\xE1lsko"},spa:{official:"Rep\xFAblica Federal de Somalia",common:"Somalia"},swe:{official:"F\xF6rbundsrepubliken Somalia",common:"Somalia"},urd:{official:"\u0648\u0641\u0627\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0635\u0648\u0645\u0627\u0644\u06CC\u06C1",common:"\u0635\u0648\u0645\u0627\u0644\u06CC\u06C1"},zho:{official:"\u7D22\u9A6C\u91CC\u5171\u548C\u56FD",common:"\u7D22\u9A6C\u91CC"}},latlng:[10,49],landlocked:!1,borders:["DJI","ETH","KEN"],area:637657,demonyms:{eng:{f:"Somali",m:"Somali"},fra:{f:"Somalienne",m:"Somalien"}},flag:"\u{1F1F8}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/8of8q7D1a8p7R6Fc9",openStreetMaps:"https://www.openstreetmap.org/relation/192799"},population:15893219,gini:{"2017":36.8},fifa:"SOM",car:{signs:["SO"],side:"right"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/so.png",svg:"https://flagcdn.com/so.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/so.png",svg:"https://mainfacts.com/media/images/coats_of_arms/so.svg"},startOfWeek:"monday",capitalInfo:{latlng:[2.07,45.33]},postalCode:{format:"@@  #####",regex:"^([A-Z]{2}\\d{5})$"}},{name:{common:"Turks and Caicos Islands",official:"Turks and Caicos Islands",nativeName:{eng:{official:"Turks and Caicos Islands",common:"Turks and Caicos Islands"}}},tld:[".tc"],cca2:"TC",ccn3:"796",cca3:"TCA",independent:!1,status:"officially-assigned",unMember:!1,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+1",suffixes:["649"]},capital:["Cockburn Town"],altSpellings:["TC"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u062A\u0648\u0631\u0643\u0633 \u0648\u0643\u0627\u064A\u0643\u0648\u0633",common:"\u062C\u0632\u0631 \u062A\u0648\u0631\u0643\u0633 \u0648\u0643\u0627\u064A\u0643\u0648\u0633"},ces:{official:"Turks a Caicos",common:"Turks a Caicos"},cym:{official:"Turks and Caicos Islands",common:"Turks and Caicos Islands"},deu:{official:"Turks und Caicos Inseln",common:"Turks-und Caicosinseln"},est:{official:"Turksi ja Caicose saared",common:"Turks ja Caicos"},fin:{official:"Turks-ja Caicossaaret",common:"Turks-ja Caicossaaret"},fra:{official:"\xCEles Turques et Ca\xEFques",common:"\xCEles Turques-et-Ca\xEFques"},hrv:{official:"Otoci Turks i Caicos",common:"Otoci Turks i Caicos"},hun:{official:"Turks- \xE9s Caicos-szigetek",common:"Turks- \xE9s Caicos-szigetek"},ita:{official:"Turks e Caicos",common:"Isole Turks e Caicos"},jpn:{official:"\u30BF\u30FC\u30AF\u30B9\xB7\u30AB\u30A4\u30B3\u30B9\u8AF8\u5CF6",common:"\u30BF\u30FC\u30AF\u30B9\u30FB\u30AB\u30A4\u30B3\u30B9\u8AF8\u5CF6"},kor:{official:"\uD130\uD06C\uC2A4 \uCF00\uC774\uCEE4\uC2A4 \uC81C\uB3C4",common:"\uD130\uD06C\uC2A4 \uCF00\uC774\uCEE4\uC2A4 \uC81C\uB3C4"},nld:{official:"Turks-en Caicoseilanden",common:"Turks-en Caicoseilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u062A\u0648\u0631\u06A9\u0633 \u0648 \u06A9\u0627\u06CC\u06A9\u0648\u0633",common:"\u062C\u0632\u0627\u06CC\u0631 \u062A\u0648\u0631\u06A9\u0633 \u0648 \u06A9\u0627\u06CC\u06A9\u0648\u0633"},pol:{official:"Turks i Caicos",common:"Turks i Caicos"},por:{official:"Ilhas Turks e Caicos",common:"Ilhas Turks e Caicos"},rus:{official:"\u0422\u0435\u0440\u043A\u0441 \u0438 \u041A\u0430\u0439\u043A\u043E\u0441 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0422\u0435\u0440\u043A\u0441 \u0438 \u041A\u0430\u0439\u043A\u043E\u0441"},slk:{official:"Ostrovy Turks a Caicos",common:"Turks a Caicos"},spa:{official:"Islas Turcas y Caicos",common:"Islas Turks y Caicos"},swe:{official:"Turks- och Caicos\xF6arna",common:"Turks- och Caicos\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u06CC\u06A9\u0633 \u0648 \u062A\u0631\u06A9\u06CC\u06C1",common:"\u062C\u0632\u0627\u0626\u0631 \u06A9\u06CC\u06A9\u0633 \u0648 \u062A\u0631\u06A9\u06CC\u06C1"},zho:{official:"\u7279\u514B\u65AF\u548C\u51EF\u79D1\u65AF\u7FA4\u5C9B",common:"\u7279\u514B\u65AF\u548C\u51EF\u79D1\u65AF\u7FA4\u5C9B"}},latlng:[21.75,-71.58333333],landlocked:!1,area:948,demonyms:{eng:{f:"Turks and Caicos Islander",m:"Turks and Caicos Islander"}},flag:"\u{1F1F9}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/R8VUDQfwZiFtvmyn8",openStreetMaps:"https://www.openstreetmap.org/relation/547479"},population:38718,fifa:"TCA",car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/tc.png",svg:"https://flagcdn.com/tc.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[21.46,-71.14]},postalCode:{format:"TKCA 1ZZ",regex:"^(TKCA 1ZZ)$"}},{name:{common:"Micronesia",official:"Federated States of Micronesia",nativeName:{eng:{official:"Federated States of Micronesia",common:"Micronesia"}}},tld:[".fm"],cca2:"FM",ccn3:"583",cca3:"FSM",cioc:"FSM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{USD:{name:"United States dollar",symbol:"$"}},idd:{root:"+6",suffixes:["91"]},capital:["Palikir"],altSpellings:["FM","Federated States of Micronesia","Micronesia, Federated States of"],region:"Oceania",subregion:"Micronesia",languages:{eng:"English"},translations:{ara:{official:"\u0648\u0644\u0627\u064A\u0627\u062A \u0645\u064A\u0643\u0631\u0648\u0646\u064A\u0633\u064A\u0627 \u0627\u0644\u0645\u062A\u062D\u062F\u0629",common:"\u0645\u064A\u0643\u0631\u0648\u0646\u064A\u0633\u064A\u0627"},ces:{official:"Federativn\xED st\xE1ty Mikron\xE9sie",common:"Mikron\xE9sie"},cym:{official:"Federated States of Micronesia",common:"Micronesia"},deu:{official:"F\xF6derierte Staaten von Mikronesien",common:"Mikronesien"},est:{official:"Mikroneesia Liiduriigid",common:"Mikroneesia"},fin:{official:"Mikronesian liittovaltio",common:"Mikronesia"},fra:{official:"\xC9tats f\xE9d\xE9r\xE9s de Micron\xE9sie",common:"Micron\xE9sie"},hrv:{official:"Savezne Dr\u017Eave Mikronezije",common:"Mikronezija"},hun:{official:"Mikron\xE9ziai Sz\xF6vets\xE9gi \xC1llamok",common:"Mikron\xE9ziai Sz\xF6vets\xE9gi \xC1llamok"},ita:{official:"Stati federati di Micronesia",common:"Micronesia"},jpn:{official:"\u30DF\u30AF\u30ED\u30CD\u30B7\u30A2\u9023\u90A6",common:"\u30DF\u30AF\u30ED\u30CD\u30B7\u30A2\u9023\u90A6"},kor:{official:"\uBBF8\uD06C\uB85C\uB124\uC2DC\uC544 \uC5F0\uBC29",common:"\uBBF8\uD06C\uB85C\uB124\uC2DC\uC544"},nld:{official:"Federale Staten van Micronesia",common:"Micronesi\xEB"},per:{official:"\u0627\u06CC\u0627\u0644\u0627\u062A \u0641\u062F\u0631\u0627\u0644 \u0645\u06CC\u06A9\u0631\u0648\u0646\u0632\u06CC",common:"\u0645\u06CC\u06A9\u0631\u0648\u0646\u0632\u06CC"},pol:{official:"Sfederowane Stany Mikronezji",common:"Mikronezja"},por:{official:"Estados Federados da Micron\xE9sia",common:"Micron\xE9sia"},rus:{official:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u044B\u0435 \u0428\u0442\u0430\u0442\u044B \u041C\u0438\u043A\u0440\u043E\u043D\u0435\u0437\u0438\u0438",common:"\u0424\u0435\u0434\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u044B\u0435 \u0428\u0442\u0430\u0442\u044B \u041C\u0438\u043A\u0440\u043E\u043D\u0435\u0437\u0438\u0438"},slk:{official:"Mikron\xE9zske federat\xEDvne \u0161t\xE1ty",common:"Mikron\xE9zia"},spa:{official:"Estados Federados de Micronesia",common:"Micronesia"},swe:{official:"Mikronesiska federationen",common:"Mikronesiska federationen"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u06C1\u0627\u0626\u06D2 \u0648\u0641\u0627\u0642\u06CC\u06C1 \u0645\u0627\u0626\u06A9\u0631\u0648\u0646\u06CC\u0634\u06CC\u0627",common:"\u0645\u0627\u0626\u06A9\u0631\u0648\u0646\u06CC\u0634\u06CC\u0627"},zho:{official:"\u5BC6\u514B\u7F57\u5C3C\u897F\u4E9A\u8054\u90A6",common:"\u5BC6\u514B\u7F57\u5C3C\u897F\u4E9A"}},latlng:[6.91666666,158.25],landlocked:!1,area:702,demonyms:{eng:{f:"Micronesian",m:"Micronesian"},fra:{f:"Micron\xE9sienne",m:"Micron\xE9sien"}},flag:"\u{1F1EB}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/LLcnofC5LxZsJXTo8",openStreetMaps:"https://www.openstreetmap.org/relation/571802"},population:115021,gini:{"2013":40.1},car:{signs:["FSM"],side:"right"},timezones:["UTC+10:00","UTC+11:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/fm.png",svg:"https://flagcdn.com/fm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[6.92,158.15]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Palestine",official:"State of Palestine",nativeName:{ara:{official:"\u062F\u0648\u0644\u0629 \u0641\u0644\u0633\u0637\u064A\u0646",common:"\u0641\u0644\u0633\u0637\u064A\u0646"}}},tld:[".ps","\u0641\u0644\u0633\u0637\u064A\u0646."],cca2:"PS",ccn3:"275",cca3:"PSE",cioc:"PLE",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EGP:{name:"Egyptian pound",symbol:"E\xA3"},ILS:{name:"Israeli new shekel",symbol:"\u20AA"},JOD:{name:"Jordanian dinar",symbol:"JD"}},idd:{root:"+9",suffixes:["70"]},capital:["Ramallah"],altSpellings:["PS","Palestine, State of","State of Palestine","Dawlat Filas\u1E6Din"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0641\u0644\u0633\u0637\u064A\u0646",common:"\u0641\u0644\u0633\u0637\u064A\u0646"},ces:{official:"St\xE1t Palestina",common:"Palestina"},cym:{official:"State of Palestine",common:"Palestine"},deu:{official:"Staat Pal\xE4stina",common:"Pal\xE4stina"},est:{official:"Palestiina Riik",common:"Palestiina"},fin:{official:"Palestiinan valtio",common:"Palestiina"},fra:{official:"\xC9tat de Palestine",common:"Palestine"},hrv:{official:"State of Palestine",common:"Palestina"},hun:{official:"Palesztin Auton\xF3mia",common:"Palesztina"},ita:{official:"Stato di Palestina",common:"Palestina"},jpn:{official:"\u30D1\u30EC\u30B9\u30C1\u30CA\u81EA\u6CBB\u653F\u5E9C",common:"\u30D1\u30EC\u30B9\u30C1\u30CA"},kor:{official:"\uD314\uB808\uC2A4\uD0C0\uC778\uAD6D",common:"\uD314\uB808\uC2A4\uD0C0\uC778"},nld:{official:"Staat Palestina",common:"Palestijnse gebieden"},per:{official:"\u062F\u0648\u0644\u062A \u0641\u0644\u0633\u0637\u06CC\u0646",common:"\u0641\u0644\u0633\u0637\u06CC\u0646"},pol:{official:"Pa\u0144stwo Palestyna",common:"Palestyna"},por:{official:"Estado da Palestina",common:"Palestina"},rus:{official:"\u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u041F\u0430\u043B\u0435\u0441\u0442\u0438\u043D\u0430",common:"\u041F\u0430\u043B\u0435\u0441\u0442\u0438\u043D\u0430"},slk:{official:"Palest\xEDnsky \u0161t\xE1t",common:"Palest\xEDna"},spa:{official:"Estado de Palestina",common:"Palestina"},swe:{official:"Palestina",common:"Palestina"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u0641\u0644\u0633\u0637\u06CC\u0646",common:"\u0641\u0644\u0633\u0637\u06CC\u0646"},zho:{official:"\u5DF4\u52D2\u65AF\u5766\u56FD",common:"\u5DF4\u52D2\u65AF\u5766"}},latlng:[31.9,35.2],landlocked:!1,borders:["ISR","EGY","JOR"],area:6220,demonyms:{eng:{f:"Palestinian",m:"Palestinian"},fra:{f:"Palestinienne",m:"Palestinien"}},flag:"\u{1F1F5}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/QvTbkRdmdWEoYAmt5",openStreetMaps:"https://www.openstreetmap.org/relation/1703814"},population:4803269,gini:{"2016":33.7},fifa:"PLE",car:{signs:["PS"],side:"right"},timezones:["UTC+02:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/ps.png",svg:"https://flagcdn.com/ps.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ps.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ps.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[31.9,35.2]}},{name:{common:"Turkmenistan",official:"Turkmenistan",nativeName:{rus:{official:"\u0422\u0443\u0440\u043A\u043C\u0435\u043D\u0438\u0441\u0442\u0430\u043D",common:"\u0422\u0443\u0440\u043A\u043C\u0435\u043D\u0438\u044F"},tuk:{official:"T\xFCrkmenistan",common:"T\xFCrkmenistan"}}},tld:[".tm"],cca2:"TM",ccn3:"795",cca3:"TKM",cioc:"TKM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TMT:{name:"Turkmenistan manat",symbol:"m"}},idd:{root:"+9",suffixes:["93"]},capital:["Ashgabat"],altSpellings:["TM"],region:"Asia",subregion:"Central Asia",languages:{rus:"Russian",tuk:"Turkmen"},translations:{ara:{official:"\u062A\u0631\u0643\u0645\u0627\u0646\u0633\u062A\u0627\u0646",common:"\u062A\u0631\u0643\u0645\u0627\u0646\u0633\u062A\u0627\u0646"},ces:{official:"Turkmenist\xE1n",common:"Turkmenist\xE1n"},cym:{official:"Turkmenistan",common:"Turkmenistan"},deu:{official:"Turkmenistan",common:"Turkmenistan"},est:{official:"T\xFCrkmenistan",common:"T\xFCrkmenistan"},fin:{official:"Turkmenistan",common:"Turkmenistan"},fra:{official:"Turkm\xE9nistan",common:"Turkm\xE9nistan"},hrv:{official:"Turkmenistan",common:"Turkmenistan"},hun:{official:"T\xFCrkm\xE9n K\xF6zt\xE1rsas\xE1g",common:"T\xFCrkmeniszt\xE1n"},ita:{official:"Turkmenistan",common:"Turkmenistan"},jpn:{official:"\u30C8\u30EB\u30AF\u30E1\u30CB\u30B9\u30BF\u30F3",common:"\u30C8\u30EB\u30AF\u30E1\u30CB\u30B9\u30BF\u30F3"},kor:{official:"\uD22C\uB974\uD06C\uBA54\uB2C8\uC2A4\uD0C4",common:"\uD22C\uB974\uD06C\uBA54\uB2C8\uC2A4\uD0C4"},nld:{official:"Turkmenistan",common:"Turkmenistan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062E\u0644\u0642 \u062A\u0631\u06A9\u0645\u0646\u0633\u062A\u0627\u0646",common:"\u062A\u0631\u06A9\u0645\u0646\u0633\u062A\u0627\u0646"},pol:{official:"Republika Turkmenistanu",common:"Turkmenistan"},por:{official:"Turcomenist\xE3o",common:"Turquemenist\xE3o"},rus:{official:"\u0422\u0443\u0440\u043A\u043C\u0435\u043D\u0438\u0441\u0442\u0430\u043D",common:"\u0422\u0443\u0440\u043A\u043C\u0435\u043D\u0438\u044F"},slk:{official:"Turkm\xE9nsko",common:"Turkm\xE9nsko"},spa:{official:"Turkmenist\xE1n",common:"Turkmenist\xE1n"},swe:{official:"Turkmenistan",common:"Turkmenistan"},urd:{official:"\u062A\u0631\u06A9\u0645\u0627\u0646\u0633\u062A\u0627\u0646",common:"\u062A\u0631\u06A9\u0645\u0627\u0646\u0633\u062A\u0627\u0646"},zho:{official:"\u571F\u5E93\u66FC\u65AF\u5766",common:"\u571F\u5E93\u66FC\u65AF\u5766"}},latlng:[40,60],landlocked:!0,borders:["AFG","IRN","KAZ","UZB"],area:488100,demonyms:{eng:{f:"Turkmen",m:"Turkmen"},fra:{f:"Turkm\xE8ne",m:"Turkm\xE8ne"}},flag:"\u{1F1F9}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/cgfUcaQHSWKuqeKk9",openStreetMaps:"https://www.openstreetmap.org/relation/223026"},population:6031187,gini:{"1998":40.8},fifa:"TKM",car:{signs:["TM"],side:"right"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/tm.png",svg:"https://flagcdn.com/tm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[37.95,58.38]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Burkina Faso",official:"Burkina Faso",nativeName:{fra:{official:"R\xE9publique du Burkina",common:"Burkina Faso"}}},tld:[".bf"],cca2:"BF",ccn3:"854",cca3:"BFA",cioc:"BUR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["26"]},capital:["Ouagadougou"],altSpellings:["BF"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u0628\u0648\u0631\u0643\u064A\u0646\u0627 \u0641\u0627\u0633\u0648",common:"\u0628\u0648\u0631\u0643\u064A\u0646\u0627 \u0641\u0627\u0633\u0648"},ces:{official:"Burkina Faso",common:"Burkina Faso"},cym:{official:"Bwrcina Ffaso",common:"Bwrcina Ffaso"},deu:{official:"Burkina Faso",common:"Burkina Faso"},est:{official:"Burkina Faso",common:"Burkina Faso"},fin:{official:"Burkina Faso",common:"Burkina Faso"},fra:{official:"R\xE9publique du Burkina",common:"Burkina Faso"},hrv:{official:"Burkina Faso",common:"Burkina Faso"},hun:{official:"Burkina Faso",common:"Burkina"},ita:{official:"Burkina Faso",common:"Burkina Faso"},jpn:{official:"\u30D6\u30EB\u30AD\u30CA\u30D5\u30A1\u30BD",common:"\u30D6\u30EB\u30AD\u30CA\u30D5\u30A1\u30BD"},kor:{official:"\uBD80\uB974\uD0A4\uB098\uD30C\uC18C",common:"\uBD80\uB974\uD0A4\uB098\uD30C\uC18C"},nld:{official:"Burkina Faso",common:"Burkina Faso"},per:{official:"\u0628\u0648\u0631\u06A9\u06CC\u0646\u0627\u0641\u0627\u0633\u0648",common:"\u0628\u0648\u0631\u06A9\u06CC\u0646\u0627\u0641\u0627\u0633\u0648"},pol:{official:"Burkina Faso",common:"Burkina Faso"},por:{official:"Burkina Faso",common:"Burkina Faso"},rus:{official:"\u0411\u0443\u0440\u043A\u0438\u043D\u0430 -\u0424\u0430\u0441\u043E",common:"\u0411\u0443\u0440\u043A\u0438\u043D\u0430-\u0424\u0430\u0441\u043E"},slk:{official:"Burkina Faso",common:"Burkina Faso"},spa:{official:"Burkina Faso",common:"Burkina Faso"},swe:{official:"Burkina Faso",common:"Burkina Faso"},urd:{official:"\u0628\u0631\u06A9\u06CC\u0646\u0627 \u0641\u0627\u0633\u0648",common:"\u0628\u0631\u06A9\u06CC\u0646\u0627 \u0641\u0627\u0633\u0648"},zho:{official:"\u5E03\u57FA\u7EB3\u6CD5\u7D22",common:"\u5E03\u57FA\u7EB3\u6CD5\u7D22"}},latlng:[13,-2],landlocked:!0,borders:["BEN","CIV","GHA","MLI","NER","TGO"],area:272967,demonyms:{eng:{f:"Burkinabe",m:"Burkinabe"},fra:{f:"Burkinab\xE9e",m:"Burkinab\xE9"}},flag:"\u{1F1E7}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/rKRmpcMbFher2ozb7",openStreetMaps:"https://www.openstreetmap.org/relation/192783"},population:20903278,gini:{"2014":35.3},fifa:"BFA",car:{signs:["BF"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/bf.png",svg:"https://flagcdn.com/bf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.37,-1.52]}},{name:{common:"Costa Rica",official:"Republic of Costa Rica",nativeName:{spa:{official:"Rep\xFAblica de Costa Rica",common:"Costa Rica"}}},tld:[".cr"],cca2:"CR",ccn3:"188",cca3:"CRI",cioc:"CRC",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CRC:{name:"Costa Rican col\xF3n",symbol:"\u20A1"}},idd:{root:"+5",suffixes:["06"]},capital:["San Jos\xE9"],altSpellings:["CR","Republic of Costa Rica","Rep\xFAblica de Costa Rica"],region:"Americas",subregion:"Central America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0648\u0633\u062A\u0627\u0631\u064A\u0643\u0627",common:"\u0643\u0648\u0633\u062A\u0627\u0631\u064A\u0643\u0627"},ces:{official:"Kostarick\xE1 republika",common:"Kostarika"},cym:{official:"Gweriniaeth Costa Rica",common:"Costa Rica"},deu:{official:"Republik Costa Rica",common:"Costa Rica"},est:{official:"Costa Rica Vabariik",common:"Costa Rica"},fin:{official:"Costa Rican tasavalta",common:"Costa Rica"},fra:{official:"R\xE9publique du Costa Rica",common:"Costa Rica"},hrv:{official:"Republika Kostarika",common:"Kostarika"},hun:{official:"Costa Rica-i K\xF6zt\xE1rsas\xE1g",common:"Costa Rica"},ita:{official:"Repubblica di Costa Rica",common:"Costa Rica"},jpn:{official:"\u30B3\u30B9\u30BF\u30EA\u30AB\u5171\u548C\u56FD",common:"\u30B3\u30B9\u30BF\u30EA\u30AB"},kor:{official:"\uCF54\uC2A4\uD0C0\uB9AC\uCE74 \uACF5\uD654\uAD6D",common:"\uCF54\uC2A4\uD0C0\uB9AC\uCE74"},nld:{official:"Republiek Costa Rica",common:"Costa Rica"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0627\u0633\u062A\u0627\u0631\u06CC\u06A9\u0627",common:"\u06A9\u0627\u0633\u062A\u0627\u0631\u06CC\u06A9\u0627"},pol:{official:"Republika Kostaryki",common:"Kostaryka"},por:{official:"Rep\xFAblica da Costa Rica",common:"Costa Rica"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0441\u0442\u0430-\u0420\u0438\u043A\u0430",common:"\u041A\u043E\u0441\u0442\u0430-\u0420\u0438\u043A\u0430"},slk:{official:"Kostarick\xE1 republika",common:"Kostarika"},spa:{official:"Rep\xFAblica de Costa Rica",common:"Costa Rica"},swe:{official:"Republiken Costa Rica",common:"Costa Rica"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0648\u0633\u0679\u0627\u0631\u06CC\u06A9\u0627",common:"\u06A9\u0648\u0633\u0679\u0627\u0631\u06CC\u06A9\u0627"},zho:{official:"\u54E5\u65AF\u8FBE\u9ECE\u52A0\u5171\u548C\u56FD",common:"\u54E5\u65AF\u8FBE\u9ECE\u52A0"}},latlng:[10,-84],landlocked:!1,borders:["NIC","PAN"],area:51100,demonyms:{eng:{f:"Costa Rican",m:"Costa Rican"},fra:{f:"Costaricaine",m:"Costaricain"}},flag:"\u{1F1E8}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/RFiwytjvNrpfKN7k6",openStreetMaps:"https://www.openstreetmap.org/relation/287667"},population:5094114,gini:{"2019":48.2},fifa:"CRC",car:{signs:["CR"],side:"right"},timezones:["UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/cr.png",svg:"https://flagcdn.com/cr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.93,-84.09]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Vietnam",official:"Socialist Republic of Vietnam",nativeName:{vie:{official:"C\u1ED9ng h\xF2a x\xE3 h\u1ED9i ch\u1EE7 ngh\u0129a Vi\u1EC7t Nam",common:"Vi\u1EC7t Nam"}}},tld:[".vn"],cca2:"VN",ccn3:"704",cca3:"VNM",cioc:"VIE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{VND:{name:"Vietnamese \u0111\u1ED3ng",symbol:"\u20AB"}},idd:{root:"+8",suffixes:["4"]},capital:["Hanoi"],altSpellings:["VN","Socialist Republic of Vietnam","C\u1ED9ng h\xF2a X\xE3 h\u1ED9i ch\u1EE7 ngh\u0129a Vi\u1EC7t Nam","Viet Nam"],region:"Asia",subregion:"South-Eastern Asia",languages:{vie:"Vietnamese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0641\u064A\u062A\u0646\u0627\u0645 \u0627\u0644\u0627\u0634\u062A\u0631\u0627\u0643\u064A\u0629",common:"\u0641\u064A\u062A\u0646\u0627\u0645"},ces:{official:"Vietnamsk\xE1 socialistick\xE1 republika",common:"Vietnam"},cym:{official:"Socialist Republic of Vietnam",common:"Vietnam"},deu:{official:"Sozialistische Republik Vietnam",common:"Vietnam"},est:{official:"Vietnami Sotsialistlik Vabariik",common:"Vietnam"},fin:{official:"Vietnamin sosialistinen tasavalta",common:"Vietnam"},fra:{official:"R\xE9publique socialiste du Vi\xEAt Nam",common:"Vi\xEAt Nam"},hrv:{official:"Socijalisti\u010Dka Republika Vijetnam",common:"Vijetnam"},hun:{official:"Vietn\xE1mi Szocialista K\xF6zt\xE1rsas\xE1g",common:"Vietn\xE1m"},ita:{official:"Repubblica socialista del Vietnam",common:"Vietnam"},jpn:{official:"\u30D9\u30C8\u30CA\u30E0\u793E\u4F1A\u4E3B\u7FA9\u5171\u548C\u56FD",common:"\u30D9\u30C8\u30CA\u30E0"},kor:{official:"\uBCA0\uD2B8\uB0A8 \uC0AC\uD68C\uC8FC\uC758 \uACF5\uD654\uAD6D",common:"\uBCA0\uD2B8\uB0A8"},nld:{official:"Socialistische Republiek Vietnam",common:"Vietnam"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0648\u0633\u06CC\u0627\u0644\u06CC\u0633\u062A\u06CC \u0648\u06CC\u062A\u0646\u0627\u0645",common:"\u0648\u06CC\u062A\u0646\u0627\u0645"},pol:{official:"Socjalistyczna Republika Wietnamu",common:"Wietnam"},por:{official:"Rep\xFAblica Socialista do Vietname",common:"Vietname"},rus:{official:"\u0421\u043E\u0446\u0438\u0430\u043B\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0412\u044C\u0435\u0442\u043D\u0430\u043C",common:"\u0412\u044C\u0435\u0442\u043D\u0430\u043C"},slk:{official:"Vietnamsk\xE1 socialistick\xE1 republika",common:"Vietnam"},spa:{official:"Rep\xFAblica Socialista de Vietnam",common:"Vietnam"},swe:{official:"Socialistiska republiken Vietnam",common:"Vietnam"},urd:{official:"\u0627\u0634\u062A\u0631\u0627\u06A9\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0648\u06CC\u062A\u0646\u0627\u0645",common:"\u0648\u06CC\u062A\u0646\u0627\u0645"},zho:{official:"\u8D8A\u5357\u793E\u4F1A\u4E3B\u4E49\u5171\u548C\u56FD",common:"\u8D8A\u5357"}},latlng:[16.16666666,107.83333333],landlocked:!1,borders:["KHM","CHN","LAO"],area:331212,demonyms:{eng:{f:"Vietnamese",m:"Vietnamese"},fra:{f:"Vietnamienne",m:"Vietnamien"}},flag:"\u{1F1FB}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/PCpVt9WzdJ9A9nEZ9",openStreetMaps:"https://www.openstreetmap.org/relation/49915"},population:97338583,gini:{"2018":35.7},fifa:"VIE",car:{signs:["VN"],side:"right"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/vn.png",svg:"https://flagcdn.com/vn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/vn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/vn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[21.03,105.85]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Cameroon",official:"Republic of Cameroon",nativeName:{eng:{official:"Republic of Cameroon",common:"Cameroon"},fra:{official:"R\xE9publique du Cameroun",common:"Cameroun"}}},tld:[".cm"],cca2:"CM",ccn3:"120",cca3:"CMR",cioc:"CMR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["37"]},capital:["Yaound\xE9"],altSpellings:["CM","Republic of Cameroon","R\xE9publique du Cameroun"],region:"Africa",subregion:"Middle Africa",languages:{eng:"English",fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0643\u0627\u0645\u064A\u0631\u0648\u0646",common:"\u0627\u0644\u0643\u0627\u0645\u064A\u0631\u0648\u0646"},ces:{official:"Kamerunsk\xE1 republika",common:"Kamerun"},cym:{official:"Gweriniaeth Camer\u0175n",common:"Camer\u0175n"},deu:{official:"Republik Kamerun",common:"Kamerun"},est:{official:"Kameruni Vabariik",common:"Kamerun"},fin:{official:"Kamerunin tasavalta",common:"Kamerun"},fra:{official:"R\xE9publique du Cameroun",common:"Cameroun"},hrv:{official:"Republika Kamerun",common:"Kamerun"},hun:{official:"Kameruni K\xF6zt\xE1rsas\xE1g",common:"Kamerun"},ita:{official:"Repubblica del Camerun",common:"Camerun"},jpn:{official:"\u30AB\u30E1\u30EB\u30FC\u30F3\u5171\u548C\u56FD",common:"\u30AB\u30E1\u30EB\u30FC\u30F3"},kor:{official:"\uCE74\uBA54\uB8EC \uACF5\uD654\uAD6D",common:"\uCE74\uBA54\uB8EC"},nld:{official:"Republiek Kameroen",common:"Kameroen"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0627\u0645\u0650\u0631\u0648\u0646",common:"\u06A9\u0627\u0645\u0650\u0631\u0648\u0646"},pol:{official:"Republika Kamerunu",common:"Kamerun"},por:{official:"Rep\xFAblica dos Camar\xF5es",common:"Camar\xF5es"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0430\u043C\u0435\u0440\u0443\u043D",common:"\u041A\u0430\u043C\u0435\u0440\u0443\u043D"},slk:{official:"Kamerunsk\xE1 republika",common:"Kamerun"},spa:{official:"Rep\xFAblica de Camer\xFAn",common:"Camer\xFAn"},swe:{official:"Republiken Kamerun",common:"Kamerun"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u06CC\u0645\u0631\u0648\u0646",common:"\u06A9\u06CC\u0645\u0631\u0648\u0646"},zho:{official:"\u5580\u9EA6\u9686\u5171\u548C\u56FD",common:"\u5580\u9EA6\u9686"}},latlng:[6,12],landlocked:!1,borders:["CAF","TCD","COG","GNQ","GAB","NGA"],area:475442,demonyms:{eng:{f:"Cameroonian",m:"Cameroonian"},fra:{f:"Camerounaise",m:"Camerounais"}},flag:"\u{1F1E8}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/JqiipHgFboG3rBJh9",openStreetMaps:"https://www.openstreetmap.org/relation/192830"},population:26545864,gini:{"2014":46.6},fifa:"CMR",car:{signs:["CAM"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cm.png",svg:"https://flagcdn.com/cm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[3.85,11.5]}},{name:{common:"French Guiana",official:"Guiana",nativeName:{fra:{official:"Guyane",common:"Guyane fran\xE7aise"}}},tld:[".gf"],cca2:"GF",ccn3:"254",cca3:"GUF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+5",suffixes:["94"]},capital:["Cayenne"],altSpellings:["GF","Guiana","Guyane"],region:"Americas",subregion:"South America",languages:{fra:"French"},translations:{ara:{official:"\u063A\u0648\u064A\u0627\u0646\u0627 \u0627\u0644\u0641\u0631\u0646\u0633\u064A\u0629",common:"\u063A\u0648\u064A\u0627\u0646\u0627"},ces:{official:"Francouzsk\xE1 Guyana",common:"Francouzsk\xE1 Guyana"},cym:{official:"Guiana",common:"French Guiana"},deu:{official:"Franz\xF6sisch-Guayana",common:"Franz\xF6sisch-Guayana"},est:{official:"Guajaana departemang",common:"Prantsuse Guajaana"},fin:{official:"Ranskan Guayana",common:"Ranskan Guayana"},fra:{official:"Guyane",common:"Guyane"},hrv:{official:"Gijana",common:"Francuska Gvajana"},hun:{official:"Francia Guyana",common:"Francia Guyana"},ita:{official:"Guiana",common:"Guyana francese"},jpn:{official:"\u30AE\u30A2\u30CA",common:"\u30D5\u30E9\u30F3\u30B9\u9818\u30AE\u30A2\u30CA"},kor:{official:"\uD504\uB791\uC2A4\uB839 \uAE30\uC544\uB098",common:"\uD504\uB791\uC2A4\uB839 \uAE30\uC544\uB098"},nld:{official:"Guyana",common:"Frans-Guyana"},per:{official:"\u06AF\u0648\u06CC\u0627\u0646 \u0641\u0631\u0627\u0646\u0633\u0647",common:"\u06AF\u0648\u06CC\u0627\u0646 \u0641\u0631\u0627\u0646\u0633\u0647"},pol:{official:"Gujana Francuska",common:"Gujana Francuska"},por:{official:"Guiana",common:"Guiana Francesa"},rus:{official:"\u0413\u0432\u0438\u0430\u043D\u0430",common:"\u0424\u0440\u0430\u043D\u0446\u0443\u0437\u0441\u043A\u0430\u044F \u0413\u0432\u0438\u0430\u043D\u0430"},slk:{official:"Franc\xFAzska Guyana",common:"Guyana"},spa:{official:"Guayana",common:"Guayana Francesa"},swe:{official:"Franska Guyana",common:"Franska Guyana"},urd:{official:"\u06AF\u06CC\u0627\u0646\u0627",common:"\u0641\u0631\u0627\u0646\u0633\u06CC\u0633\u06CC \u06AF\u06CC\u0627\u0646\u0627"},zho:{official:"\u6CD5\u5C5E\u572D\u4E9A\u90A3",common:"\u6CD5\u5C5E\u572D\u4E9A\u90A3"}},latlng:[4,-53],landlocked:!1,borders:["BRA","SUR"],area:83534,demonyms:{eng:{f:"Guianan",m:"Guianan"},fra:{f:"Guyanaise",m:"Guyanais"}},flag:"\u{1F1EC}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/NJawFwMzG7YtCrVP7",openStreetMaps:"https://www.openstreetmap.org/relation/2502058"},population:254541,car:{signs:["F"],side:"right"},timezones:["UTC-03:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/gf.png",svg:"https://flagcdn.com/gf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.94,-52.33]},postalCode:{format:"#####",regex:"^((97|98)3\\d{2})$"}},{name:{common:"Eswatini",official:"Kingdom of Eswatini",nativeName:{eng:{official:"Kingdom of Eswatini",common:"Eswatini"},ssw:{official:"Umbuso weSwatini",common:"eSwatini"}}},tld:[".sz"],cca2:"SZ",ccn3:"748",cca3:"SWZ",cioc:"SWZ",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SZL:{name:"Swazi lilangeni",symbol:"L"},ZAR:{name:"South African rand",symbol:"R"}},idd:{root:"+2",suffixes:["68"]},capital:["Mbabane"],altSpellings:["SZ","Swaziland","weSwatini","Swatini","Ngwane","Kingdom of Eswatini","Umbuso weSwatini"],region:"Africa",subregion:"Southern Africa",languages:{eng:"English",ssw:"Swazi"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0625\u0633\u0648\u0627\u062A\u064A\u0646\u064A",common:"\u0625\u0633\u0648\u0627\u062A\u064A\u0646\u064A"},ces:{official:"Svazijsk\xE9 kr\xE1lovstv\xED",common:"Svazijsko"},cym:{official:"Kingdom of Eswatini",common:"Eswatini"},deu:{official:"K\xF6nigreich Eswatini",common:"Swasiland"},est:{official:"eSwatini Kuningriik",common:"Svaasimaa"},fin:{official:"Swazimaan kuningaskunta",common:"Swazimaa"},fra:{official:"Royaume d\u2019Eswatini",common:"Swaziland"},hrv:{official:"Kraljevina eSwatini",common:"Svazi"},hun:{official:"Szv\xE1zif\xF6ldi Kir\xE1lys\xE1g",common:"Szv\xE1zif\xF6ld"},ita:{official:"Regno di eSwatini",common:"Swaziland"},jpn:{official:"\u30B9\u30EF\u30B8\u30E9\u30F3\u30C9\u738B\u56FD",common:"\u30B9\u30EF\u30B8\u30E9\u30F3\u30C9"},kor:{official:"\uC5D0\uC2A4\uC640\uD2F0\uB2C8 \uC655\uAD6D",common:"\uC5D0\uC2A4\uC640\uD2F0\uB2C8"},nld:{official:"Koninkrijk eSwatini",common:"Swaziland"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0633\u0648\u0627\u0632\u06CC\u0644\u0646\u062F",common:"\u0627\u0633\u0648\u0627\u062A\u06CC\u0646\u06CC"},pol:{official:"Kr\xF3lestwo Suazi",common:"Suazi"},por:{official:"Reino de eSwatini",common:"Suazil\xE2ndia"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0421\u0432\u0430\u0437\u0438\u043B\u0435\u043D\u0434",common:"\u0421\u0432\u0430\u0437\u0438\u043B\u0435\u043D\u0434"},slk:{official:"Svazijsk\xE9 kr\xE1\u013Eovstvo",common:"Svazijsko"},spa:{official:"Reino de eSwatini",common:"Suazilandia"},swe:{official:"Konungariket Eswatini",common:"Swaziland"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0633\u0648\u0627\u0632\u06CC \u0644\u06CC\u0646\u0688",common:"\u0633\u0648\u0627\u0632\u06CC \u0644\u06CC\u0646\u0688"},zho:{official:"\u65AF\u5A01\u58EB\u5170\u738B\u56FD",common:"\u65AF\u5A01\u58EB\u5170"}},latlng:[-26.5,31.5],landlocked:!0,borders:["MOZ","ZAF"],area:17364,demonyms:{eng:{f:"Swazi",m:"Swazi"},fra:{f:"Swazie",m:"Swazie"}},flag:"\u{1F1F8}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/cUY79eqQihFSE8hV6",openStreetMaps:"https://www.openstreetmap.org/relation/88210"},population:1160164,gini:{"2016":54.6},fifa:"SWZ",car:{signs:["SD"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sz.png",svg:"https://flagcdn.com/sz.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-26.32,31.13]},postalCode:{format:"@###",regex:"^([A-Z]\\d{3})$"}},{name:{common:"Zambia",official:"Republic of Zambia",nativeName:{eng:{official:"Republic of Zambia",common:"Zambia"}}},tld:[".zm"],cca2:"ZM",ccn3:"894",cca3:"ZMB",cioc:"ZAM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ZMW:{name:"Zambian kwacha",symbol:"ZK"}},idd:{root:"+2",suffixes:["60"]},capital:["Lusaka"],altSpellings:["ZM","Republic of Zambia"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0632\u0627\u0645\u0628\u064A\u0627",common:"\u0632\u0627\u0645\u0628\u064A\u0627"},ces:{official:"Zambijsk\xE1 republika",common:"Zambie"},cym:{official:"Republic of Zambia",common:"Zambia"},deu:{official:"Republik Sambia",common:"Sambia"},est:{official:"Sambia Vabariik",common:"Sambia"},fin:{official:"Sambian tasavalta",common:"Sambia"},fra:{official:"R\xE9publique de Zambie",common:"Zambie"},hrv:{official:"Republika Zambija",common:"Zambija"},hun:{official:"Zambiai K\xF6zt\xE1rsas\xE1g",common:"Zambia"},ita:{official:"Repubblica di Zambia",common:"Zambia"},jpn:{official:"\u30B6\u30F3\u30D3\u30A2\u5171\u548C\u56FD",common:"\u30B6\u30F3\u30D3\u30A2"},kor:{official:"\uC7A0\uBE44\uC544 \uACF5\uD654\uAD6D",common:"\uC7A0\uBE44\uC544"},nld:{official:"Republiek Zambia",common:"Zambia"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0632\u0627\u0645\u0628\u06CC\u0627",common:"\u0632\u0627\u0645\u0628\u06CC\u0627"},pol:{official:"Republika Zambii",common:"Zambia"},por:{official:"Rep\xFAblica da Z\xE2mbia",common:"Z\xE2mbia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0417\u0430\u043C\u0431\u0438\u044F",common:"\u0417\u0430\u043C\u0431\u0438\u044F"},slk:{official:"Zambijsk\xE1 republika",common:"Zambia"},spa:{official:"Rep\xFAblica de Zambia",common:"Zambia"},swe:{official:"Republiken Zambia",common:"Zambia"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0632\u06CC\u0645\u0628\u06CC\u0627",common:"\u0632\u06CC\u0645\u0628\u06CC\u0627"},zho:{official:"\u8D5E\u6BD4\u4E9A\u5171\u548C\u56FD",common:"\u8D5E\u6BD4\u4E9A"}},latlng:[-15,30],landlocked:!0,borders:["AGO","BWA","COD","MWI","MOZ","NAM","TZA","ZWE"],area:752612,demonyms:{eng:{f:"Zambian",m:"Zambian"},fra:{f:"Zambienne",m:"Zambien"}},flag:"\u{1F1FF}\u{1F1F2}",maps:{googleMaps:"https://goo.gl/maps/mweBcqvW8TppZW6q9",openStreetMaps:"https://www.openstreetmap.org/relation/195271"},population:18383956,gini:{"2015":57.1},fifa:"ZAM",car:{signs:["RNR"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/zm.png",svg:"https://flagcdn.com/zm.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/zm.png",svg:"https://mainfacts.com/media/images/coats_of_arms/zm.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-15.42,28.28]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Liechtenstein",official:"Principality of Liechtenstein",nativeName:{deu:{official:"F\xFCrstentum Liechtenstein",common:"Liechtenstein"}}},tld:[".li"],cca2:"LI",ccn3:"438",cca3:"LIE",cioc:"LIE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CHF:{name:"Swiss franc",symbol:"Fr"}},idd:{root:"+4",suffixes:["23"]},capital:["Vaduz"],altSpellings:["LI","Principality of Liechtenstein","F\xFCrstentum Liechtenstein"],region:"Europe",subregion:"Western Europe",languages:{deu:"German"},translations:{ara:{official:"\u0625\u0645\u0627\u0631\u0629 \u0644\u064A\u062E\u062A\u0646\u0634\u062A\u0627\u064A\u0646",common:"\u0644\u064A\u062E\u062A\u0646\u0634\u062A\u0627\u064A\u0646"},ces:{official:"Kn\xED\u017Eectv\xED Lichten\u0161tejnsk\xE9",common:"Lichten\u0161tejnsko"},cym:{official:"Principality of Liechtenstein",common:"Liechtenstein"},deu:{official:"F\xFCrstentum Liechtenstein",common:"Liechtenstein"},est:{official:"Liechtensteini V\xFCrstiriik",common:"Liechtenstein"},fin:{official:"Liechensteinin ruhtinaskunta",common:"Liechenstein"},fra:{official:"Principaut\xE9 du Liechtenstein",common:"Liechtenstein"},hrv:{official:"Kne\u017Eevina Lihten\u0161tajn",common:"Lihten\u0161tajn"},hun:{official:"Liechtensteini Hercegs\xE9g",common:"Liechtenstein"},ita:{official:"Principato del Liechtenstein",common:"Liechtenstein"},jpn:{official:"\u30EA\u30D2\u30C6\u30F3\u30B7\u30E5\u30BF\u30A4\u30F3\u516C\u56FD",common:"\u30EA\u30D2\u30C6\u30F3\u30B7\u30E5\u30BF\u30A4\u30F3"},kor:{official:"\uB9AC\uD788\uD150\uC288\uD0C0\uC778 \uACF5\uAD6D",common:"\uB9AC\uD788\uD150\uC288\uD0C0\uC778"},nld:{official:"Vorstendom Liechtenstein",common:"Liechtenstein"},per:{official:"\u0634\u0627\u0647\u0632\u0627\u062F\u0647\u200C\u0646\u0634\u06CC\u0646 \u0644\u06CC\u062E\u062A\u0646\u200C\u0627\u0634\u062A\u0627\u06CC\u0646",common:"\u0644\u06CC\u062E\u062A\u0646\u200C\u0627\u0634\u062A\u0627\u06CC\u0646"},pol:{official:"Ksi\u0119stwo Liechtensteinu",common:"Liechtenstein"},por:{official:"Principado de Liechtenstein",common:"Liechtenstein"},rus:{official:"\u041A\u043D\u044F\u0436\u0435\u0441\u0442\u0432\u043E \u041B\u0438\u0445\u0442\u0435\u043D\u0448\u0442\u0435\u0439\u043D",common:"\u041B\u0438\u0445\u0442\u0435\u043D\u0448\u0442\u0435\u0439\u043D"},slk:{official:"Lichten\u0161tajnsk\xE9 knie\u017Eatstvo",common:"Lichten\u0161tajnsko"},spa:{official:"Principado de Liechtenstein",common:"Liechtenstein"},swe:{official:"Furstend\xF6met Liechtenstein",common:"Liechtenstein"},urd:{official:"\u0627\u0645\u0627\u0631\u0627\u062A \u0644\u06CC\u062E\u062A\u06CC\u0646\u0633\u062A\u0627\u0626\u0646",common:"\u0644\u06CC\u062E\u062A\u06CC\u0646\u0633\u062A\u0627\u0626\u0646"},zho:{official:"\u5217\u652F\u6566\u58EB\u767B\u516C\u56FD",common:"\u5217\u652F\u6566\u58EB\u767B"}},latlng:[47.26666666,9.53333333],landlocked:!0,borders:["AUT","CHE"],area:160,demonyms:{eng:{f:"Liechtensteiner",m:"Liechtensteiner"},fra:{f:"Liechtensteinoise",m:"Liechtensteinois"}},flag:"\u{1F1F1}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/KNuHeiJzAPodwM7y6",openStreetMaps:"https://www.openstreetmap.org/relation/1155955"},population:38137,fifa:"LIE",car:{signs:["FL"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/li.png",svg:"https://flagcdn.com/li.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/li.png",svg:"https://mainfacts.com/media/images/coats_of_arms/li.svg"},startOfWeek:"monday",capitalInfo:{latlng:[47.13,9.52]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Montenegro",official:"Montenegro",nativeName:{cnr:{official:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430",common:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"}}},tld:[".me"],cca2:"ME",ccn3:"499",cca3:"MNE",cioc:"MNE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["82"]},capital:["Podgorica"],altSpellings:["ME","Crna Gora"],region:"Europe",subregion:"Southeast Europe",languages:{cnr:"Montenegrin"},translations:{ara:{official:"\u0627\u0644\u062C\u0628\u0644 \u0627\u0644\u0627\u0633\u0648\u062F",common:"\u0627\u0644\u062C\u0628\u0644 \u0627\u0644\u0627\u0633\u0648\u062F"},ces:{official:"\u010Cern\xE1 Hora",common:"\u010Cern\xE1 Hora"},cym:{official:"Montenegro",common:"Montenegro"},deu:{official:"Montenegro",common:"Montenegro"},est:{official:"Montenegro",common:"Montenegro"},fin:{official:"Montenegro",common:"Montenegro"},fra:{official:"Mont\xE9n\xE9gro",common:"Mont\xE9n\xE9gro"},hrv:{official:"Crna Gora",common:"Crna Gora"},hun:{official:"Montenegr\xF3",common:"Montenegr\xF3"},ita:{official:"Montenegro",common:"Montenegro"},jpn:{official:"\u30E2\u30F3\u30C6\u30CD\u30B0\u30ED",common:"\u30E2\u30F3\u30C6\u30CD\u30B0\u30ED"},kor:{official:"\uBAAC\uD14C\uB124\uADF8\uB85C",common:"\uBAAC\uD14C\uB124\uADF8\uB85C"},nld:{official:"Montenegro",common:"Montenegro"},per:{official:"\u0645\u0648\u0646\u062A\u0647\u200C\u0646\u06AF\u0631\u0648",common:"\u0645\u0648\u0646\u062A\u0647\u200C\u0646\u06AF\u0631\u0648"},pol:{official:"Czarnog\xF3ra",common:"Czarnog\xF3ra"},por:{official:"Montenegro",common:"Montenegro"},rus:{official:"\u0427\u0435\u0440\u043D\u043E\u0433\u043E\u0440\u0438\u044F",common:"\u0427\u0435\u0440\u043D\u043E\u0433\u043E\u0440\u0438\u044F"},slk:{official:"\u010Cierna Hora",common:"\u010Cierna Hora"},spa:{official:"Montenegro",common:"Montenegro"},swe:{official:"Montenegro",common:"Montenegro"},urd:{official:"\u0645\u0648\u0646\u0679\u06CC\u0646\u06CC\u06AF\u0631\u0648",common:"\u0645\u0648\u0646\u0679\u06CC\u0646\u06CC\u06AF\u0631\u0648"},zho:{official:"\u9ED1\u5C71",common:"\u9ED1\u5C71"}},latlng:[42.5,19.3],landlocked:!1,borders:["ALB","BIH","HRV","UNK","SRB"],area:13812,demonyms:{eng:{f:"Montenegrin",m:"Montenegrin"},fra:{f:"Mont\xE9n\xE9grine",m:"Mont\xE9n\xE9grin"}},flag:"\u{1F1F2}\u{1F1EA}",maps:{googleMaps:"https://goo.gl/maps/4THX1fM7WqANuPbB8",openStreetMaps:"https://www.openstreetmap.org/relation/53296"},population:621718,gini:{"2016":38.5},fifa:"MNE",car:{signs:["SCG"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/me.png",svg:"https://flagcdn.com/me.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/me.png",svg:"https://mainfacts.com/media/images/coats_of_arms/me.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.43,19.27]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Saint Lucia",official:"Saint Lucia",nativeName:{eng:{official:"Saint Lucia",common:"Saint Lucia"}}},tld:[".lc"],cca2:"LC",ccn3:"662",cca3:"LCA",cioc:"LCA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XCD:{name:"Eastern Caribbean dollar",symbol:"$"}},idd:{root:"+1",suffixes:["758"]},capital:["Castries"],altSpellings:["LC"],region:"Americas",subregion:"Caribbean",languages:{eng:"English"},translations:{ara:{official:"\u0633\u0627\u0646\u062A \u0644\u0648\u0633\u064A\u0627",common:"\u0633\u0627\u0646\u062A \u0644\u0648\u0633\u064A\u0627"},ces:{official:"Svat\xE1 Lucie",common:"Svat\xE1 Lucie"},cym:{official:"Saint Lucia",common:"Saint Lucia"},deu:{official:"St. Lucia",common:"St. Lucia"},est:{official:"Saint Lucia",common:"Saint Lucia"},fin:{official:"Saint Lucia",common:"Saint Lucia"},fra:{official:"Sainte-Lucie",common:"Sainte-Lucie"},hrv:{official:"Sveta Lucija",common:"Sveta Lucija"},hun:{official:"Saint Lucia",common:"Saint Lucia"},ita:{official:"Santa Lucia",common:"Santa Lucia"},jpn:{official:"\u30BB\u30F3\u30C8\u30EB\u30B7\u30A2",common:"\u30BB\u30F3\u30C8\u30EB\u30B7\u30A2"},kor:{official:"\uC138\uC778\uD2B8\uB8E8\uC2DC\uC544",common:"\uC138\uC778\uD2B8\uB8E8\uC2DC\uC544"},nld:{official:"Saint Lucia",common:"Saint Lucia"},per:{official:"\u0633\u0646\u062A \u0644\u0648\u0633\u06CC\u0627",common:"\u0633\u0646\u062A \u0644\u0648\u0633\u06CC\u0627"},pol:{official:"Saint Lucia",common:"Saint Lucia"},por:{official:"Santa L\xFAcia",common:"Santa L\xFAcia"},rus:{official:"\u0421\u0435\u043D\u0442-\u041B\u044E\u0441\u0438\u044F",common:"\u0421\u0435\u043D\u0442-\u041B\u044E\u0441\u0438\u044F"},slk:{official:"Sv\xE4t\xE1 Lucia",common:"Sv\xE4t\xE1 Lucia"},spa:{official:"Santa Luc\xEDa",common:"Santa Luc\xEDa"},swe:{official:"Saint Lucia",common:"Saint Lucia"},urd:{official:"\u0633\u06CC\u0646\u0679 \u0644\u0648\u0633\u06CC\u0627",common:"\u0633\u06CC\u0646\u0679 \u0644\u0648\u0633\u06CC\u0627"},zho:{official:"\u5723\u5362\u897F\u4E9A",common:"\u5723\u5362\u897F\u4E9A"}},latlng:[13.88333333,-60.96666666],landlocked:!1,area:616,demonyms:{eng:{f:"Saint Lucian",m:"Saint Lucian"},fra:{f:"Saint-Lucienne",m:"Saint-Lucien"}},flag:"\u{1F1F1}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/4HhJ2jkPdSL9BPRcA",openStreetMaps:"https://www.openstreetmap.org/relation/550728"},population:183629,gini:{"2016":51.2},fifa:"LCA",car:{signs:["WL"],side:"left"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/lc.png",svg:"https://flagcdn.com/lc.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14,-61]}},{name:{common:"Uzbekistan",official:"Republic of Uzbekistan",nativeName:{rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0423\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u0430\u043D",common:"\u0423\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u0430\u043D"},uzb:{official:"O'zbekiston Respublikasi",common:"O\u2018zbekiston"}}},tld:[".uz"],cca2:"UZ",ccn3:"860",cca3:"UZB",cioc:"UZB",independent:!0,status:"officially-assigned",unMember:!0,currencies:{UZS:{name:"Uzbekistani so\u02BBm",symbol:"so'm"}},idd:{root:"+9",suffixes:["98"]},capital:["Tashkent"],altSpellings:["UZ","Republic of Uzbekistan","O\u2018zbekiston Respublikasi","\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430\u0441\u0438"],region:"Asia",subregion:"Central Asia",languages:{rus:"Russian",uzb:"Uzbek"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0648\u0632\u0628\u0627\u0643\u0633\u062A\u0627\u0646",common:"\u0623\u0648\u0632\u0628\u0627\u0643\u0633\u062A\u0627\u0646"},ces:{official:"Republika Uzbekist\xE1n",common:"Uzbekist\xE1n"},cym:{official:"Republic of Uzbekistan",common:"Uzbekistan"},deu:{official:"Republik Usbekistan",common:"Usbekistan"},est:{official:"Usbekistani Vabariik",common:"Usbekistan"},fin:{official:"Uzbekistanin tasavalta",common:"Uzbekistan"},fra:{official:"R\xE9publique d'Ouzb\xE9kistan",common:"Ouzb\xE9kistan"},hrv:{official:"Republika Uzbekistan",common:"Uzbekistan"},hun:{official:"\xDCzb\xE9g K\xF6zt\xE1rsas\xE1g",common:"\xDCzbegiszt\xE1n"},ita:{official:"Repubblica di Uzbekistan",common:"Uzbekistan"},jpn:{official:"\u30A6\u30BA\u30D9\u30AD\u30B9\u30BF\u30F3\u5171\u548C\u56FD",common:"\u30A6\u30BA\u30D9\u30AD\u30B9\u30BF\u30F3"},kor:{official:"\uC6B0\uC988\uBCA0\uD0A4\uC2A4\uD0C4 \uACF5\uD654\uAD6D",common:"\uC6B0\uC988\uBCA0\uD0A4\uC2A4\uD0C4"},nld:{official:"Republiek Oezbekistan",common:"Oezbekistan"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0632\u0628\u06A9\u0633\u062A\u0627\u0646",common:"\u0627\u0632\u0628\u06A9\u0633\u062A\u0627\u0646"},pol:{official:"Republika Uzbekistanu",common:"Uzbekistan"},por:{official:"Rep\xFAblica do Usbequist\xE3o",common:"Uzbequist\xE3o"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0423\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u0430\u043D",common:"\u0423\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u0430\u043D"},slk:{official:"Uzbeck\xE1 republika",common:"Uzbekistan"},spa:{official:"Rep\xFAblica de Uzbekist\xE1n",common:"Uzbekist\xE1n"},swe:{official:"Republiken Uzbekistan",common:"Uzbekistan"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0632\u0628\u06A9\u0633\u062A\u0627\u0646",common:"\u0627\u0632\u0628\u06A9\u0633\u062A\u0627\u0646"},zho:{official:"\u4E4C\u5179\u522B\u514B\u65AF\u5766\u5171\u548C\u56FD",common:"\u4E4C\u5179\u522B\u514B\u65AF\u5766"}},latlng:[41,64],landlocked:!0,borders:["AFG","KAZ","KGZ","TJK","TKM"],area:447400,demonyms:{eng:{f:"Uzbekistani",m:"Uzbekistani"},fra:{f:"Ouzb\xE8ke",m:"Ouzb\xE8ke"}},flag:"\u{1F1FA}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/AJpo6MjMx23qSWCz8",openStreetMaps:"https://www.openstreetmap.org/relation/196240"},population:34232050,gini:{"2003":35.3},fifa:"UZB",car:{signs:["UZ"],side:"right"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/uz.png",svg:"https://flagcdn.com/uz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/uz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/uz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[41.32,69.25]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Chad",official:"Republic of Chad",nativeName:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u0634\u0627\u062F",common:"\u062A\u0634\u0627\u062F\u200E"},fra:{official:"R\xE9publique du Tchad",common:"Tchad"}}},tld:[".td"],cca2:"TD",ccn3:"148",cca3:"TCD",cioc:"CHA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["35"]},capital:["N'Djamena"],altSpellings:["TD","Tchad","Republic of Chad","R\xE9publique du Tchad"],region:"Africa",subregion:"Middle Africa",languages:{ara:"Arabic",fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u0634\u0627\u062F",common:"\u062A\u0634\u0627\u062F"},ces:{official:"\u010Cadsk\xE1 republika",common:"\u010Cad"},cym:{official:"Gweriniaeth Tsiad",common:"Tsiad"},deu:{official:"Republik Tschad",common:"Tschad"},est:{official:"T\u0161aadi Vabariik",common:"T\u0161aad"},fin:{official:"T\u0161adin tasavalta",common:"T\u0161ad"},fra:{official:"R\xE9publique du Tchad",common:"Tchad"},hrv:{official:"\u010Cadu",common:"\u010Cad"},hun:{official:"Cs\xE1d K\xF6zt\xE1rsas\xE1g",common:"Cs\xE1d"},ita:{official:"Repubblica del Ciad",common:"Ciad"},jpn:{official:"\u30C1\u30E3\u30C9\u5171\u548C\u56FD",common:"\u30C1\u30E3\u30C9"},kor:{official:"\uCC28\uB4DC \uACF5\uD654\uAD6D",common:"\uCC28\uB4DC"},nld:{official:"Republiek Tsjaad",common:"Tsjaad"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0686\u0627\u062F",common:"\u0686\u0627\u062F"},pol:{official:"Republika Czadu",common:"Czad"},por:{official:"Rep\xFAblica do Chade",common:"Chade"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0427\u0430\u0434",common:"\u0427\u0430\u0434"},slk:{official:"\u010Cadsk\xE1 republika",common:"\u010Cad"},spa:{official:"Rep\xFAblica de Chad",common:"Chad"},swe:{official:"Republiken Tchad",common:"Tchad"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0686\u0627\u0688",common:"\u0686\u0627\u0688"},zho:{official:"\u4E4D\u5F97\u5171\u548C\u56FD",common:"\u4E4D\u5F97"}},latlng:[15,19],landlocked:!0,borders:["CMR","CAF","LBY","NER","NGA","SDN"],area:1284e3,demonyms:{eng:{f:"Chadian",m:"Chadian"},fra:{f:"Tchadienne",m:"Tchadien"}},flag:"\u{1F1F9}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/ziUdAZ8skuNfx5Hx7",openStreetMaps:"https://www.openstreetmap.org/relation/2361304"},population:16425859,gini:{"2011":43.3},fifa:"CHA",car:{signs:["TCH","TD"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/td.png",svg:"https://flagcdn.com/td.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/td.png",svg:"https://mainfacts.com/media/images/coats_of_arms/td.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.1,15.03]}},{name:{common:"Aruba",official:"Aruba",nativeName:{nld:{official:"Aruba",common:"Aruba"},pap:{official:"Aruba",common:"Aruba"}}},tld:[".aw"],cca2:"AW",ccn3:"533",cca3:"ABW",cioc:"ARU",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AWG:{name:"Aruban florin",symbol:"\u0192"}},idd:{root:"+2",suffixes:["97"]},capital:["Oranjestad"],altSpellings:["AW"],region:"Americas",subregion:"Caribbean",languages:{nld:"Dutch",pap:"Papiamento"},translations:{ara:{official:"\u0623\u0631\u0648\u0628\u0627",common:"\u0623\u0631\u0648\u0628\u0627"},ces:{official:"Aruba",common:"Aruba"},cym:{official:"Aruba",common:"Aruba"},deu:{official:"Aruba",common:"Aruba"},est:{official:"Aruba",common:"Aruba"},fin:{official:"Aruba",common:"Aruba"},fra:{official:"Aruba",common:"Aruba"},hrv:{official:"Aruba",common:"Aruba"},hun:{official:"Aruba",common:"Aruba"},ita:{official:"Aruba",common:"Aruba"},jpn:{official:"\u30A2\u30EB\u30D0",common:"\u30A2\u30EB\u30D0"},kor:{official:"\uC544\uB8E8\uBC14",common:"\uC544\uB8E8\uBC14"},nld:{official:"Aruba",common:"Aruba"},per:{official:"\u0622\u0631\u0648\u0628\u0627",common:"\u0622\u0631\u0648\u0628\u0627"},pol:{official:"Aruba",common:"Aruba"},por:{official:"Aruba",common:"Aruba"},rus:{official:"\u0410\u0440\u0443\u0431\u0430",common:"\u0410\u0440\u0443\u0431\u0430"},slk:{official:"Aruba",common:"Aruba"},spa:{official:"Aruba",common:"Aruba"},swe:{official:"Aruba",common:"Aruba"},urd:{official:"\u0627\u0631\u0648\u0628\u0627",common:"\u0627\u0631\u0648\u0628\u0627"},zho:{official:"\u963F\u9C81\u5DF4",common:"\u963F\u9C81\u5DF4"}},latlng:[12.5,-69.96666666],landlocked:!1,area:180,demonyms:{eng:{f:"Aruban",m:"Aruban"},fra:{f:"Arubaise",m:"Arubais"}},flag:"\u{1F1E6}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/8hopbQqifHAgyZyg8",openStreetMaps:"https://www.openstreetmap.org/relation/1231749"},population:106766,fifa:"ARU",car:{side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/aw.png",svg:"https://flagcdn.com/aw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/aw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/aw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[12.52,-70.03]}},{name:{common:"Denmark",official:"Kingdom of Denmark",nativeName:{dan:{official:"Kongeriget Danmark",common:"Danmark"}}},tld:[".dk"],cca2:"DK",ccn3:"208",cca3:"DNK",cioc:"DEN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{DKK:{name:"Danish krone",symbol:"kr"}},idd:{root:"+4",suffixes:["5"]},capital:["Copenhagen"],altSpellings:["DK","Danmark","Kingdom of Denmark","Kongeriget Danmark"],region:"Europe",subregion:"Northern Europe",languages:{dan:"Danish"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u062F\u0646\u0645\u0627\u0631\u0643",common:"\u0627\u0644\u062F\u0646\u0645\u0627\u0631\u0643"},ces:{official:"D\xE1nsk\xE9 kr\xE1lovstv\xED",common:"D\xE1nsko"},cym:{official:"Teyrnas Denmarc",common:"Denmarc"},deu:{official:"K\xF6nigreich D\xE4nemark",common:"D\xE4nemark"},est:{official:"Taani Kuningriik",common:"Taani"},fin:{official:"Tanskan kuningaskunta",common:"Tanska"},fra:{official:"Royaume du Danemark",common:"Danemark"},hrv:{official:"Kraljevina Danska",common:"Danska"},hun:{official:"D\xE1n Kir\xE1lys\xE1g",common:"D\xE1nia"},ita:{official:"Regno di Danimarca",common:"Danimarca"},jpn:{official:"\u30C7\u30F3\u30DE\u30FC\u30AF\u738B\u56FD",common:"\u30C7\u30F3\u30DE\u30FC\u30AF"},kor:{official:"\uB374\uB9C8\uD06C \uC655\uAD6D",common:"\uB374\uB9C8\uD06C"},nld:{official:"Koninkrijk Denemarken",common:"Denemarken"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u062F\u0627\u0646\u0645\u0627\u0631\u06A9",common:"\u062F\u0627\u0646\u0645\u0627\u0631\u06A9"},pol:{official:"Kr\xF3lestwo Danii",common:"Dania"},por:{official:"Reino da Dinamarca",common:"Dinamarca"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0414\u0430\u043D\u0438\u044F",common:"\u0414\u0430\u043D\u0438\u044F"},slk:{official:"D\xE1nske kr\xE1\u013Eovstvo",common:"D\xE1nsko"},spa:{official:"Reino de Dinamarca",common:"Dinamarca"},swe:{official:"Konungariket Danmark",common:"Danmark"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u0688\u0646\u0645\u0627\u0631\u06A9",common:"\u0688\u0646\u0645\u0627\u0631\u06A9"},zho:{official:"\u4E39\u9EA6\u738B\u56FD",common:"\u4E39\u9EA6"}},latlng:[56,10],landlocked:!1,borders:["DEU"],area:43094,demonyms:{eng:{f:"Danish",m:"Danish"},fra:{f:"Danoise",m:"Danois"}},flag:"\u{1F1E9}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/UddGPN7hAyrtpFiT6",openStreetMaps:"https://www.openstreetmap.org/relation/50046"},population:5831404,gini:{"2018":28.2},fifa:"DEN",car:{signs:["DK"],side:"right"},timezones:["UTC-04:00","UTC-03:00","UTC-01:00","UTC","UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/dk.png",svg:"https://flagcdn.com/dk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/dk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/dk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[55.67,12.58]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Japan",official:"Japan",nativeName:{jpn:{official:"\u65E5\u672C",common:"\u65E5\u672C"}}},tld:[".jp",".\u307F\u3093\u306A"],cca2:"JP",ccn3:"392",cca3:"JPN",cioc:"JPN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{JPY:{name:"Japanese yen",symbol:"\xA5"}},idd:{root:"+8",suffixes:["1"]},capital:["Tokyo"],altSpellings:["JP","Nippon","Nihon"],region:"Asia",subregion:"Eastern Asia",languages:{jpn:"Japanese"},translations:{ara:{official:"\u0627\u0644\u064A\u0627\u0628\u0627\u0646",common:"\u0627\u0644\u064A\u0627\u0628\u0627\u0646"},ces:{official:"Japonsko",common:"Japonsko"},cym:{official:"Japan",common:"Japan"},deu:{official:"Japan",common:"Japan"},est:{official:"Jaapan",common:"Jaapan"},fin:{official:"Japani",common:"Japani"},fra:{official:"Japon",common:"Japon"},hrv:{official:"Japan",common:"Japan"},hun:{official:"Jap\xE1n",common:"Jap\xE1n"},ita:{official:"Giappone",common:"Giappone"},jpn:{official:"\u65E5\u672C",common:"\u65E5\u672C"},kor:{official:"\uC77C\uBCF8\uAD6D",common:"\uC77C\uBCF8"},nld:{official:"Japan",common:"Japan"},per:{official:"\u0698\u0627\u067E\u0646",common:"\u0698\u0627\u067E\u0646"},pol:{official:"Japonia",common:"Japonia"},por:{official:"Jap\xE3o",common:"Jap\xE3o"},rus:{official:"\u042F\u043F\u043E\u043D\u0438\u044F",common:"\u042F\u043F\u043E\u043D\u0438\u044F"},slk:{official:"Japonsko",common:"Japonsko"},spa:{official:"Jap\xF3n",common:"Jap\xF3n"},swe:{official:"Japan",common:"Japan"},urd:{official:"\u062C\u0627\u067E\u0627\u0646",common:"\u062C\u0627\u067E\u0627\u0646"},zho:{official:"\u65E5\u672C\u56FD",common:"\u65E5\u672C"}},latlng:[36,138],landlocked:!1,area:377930,demonyms:{eng:{f:"Japanese",m:"Japanese"},fra:{f:"Japonaise",m:"Japonais"}},flag:"\u{1F1EF}\u{1F1F5}",maps:{googleMaps:"https://goo.gl/maps/NGTLSCSrA8bMrvnX9",openStreetMaps:"https://www.openstreetmap.org/relation/382313"},population:125836021,gini:{"2013":32.9},fifa:"JPN",car:{signs:["J"],side:"left"},timezones:["UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/jp.png",svg:"https://flagcdn.com/jp.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/jp.png",svg:"https://mainfacts.com/media/images/coats_of_arms/jp.svg"},startOfWeek:"monday",capitalInfo:{latlng:[35.68,139.75]},postalCode:{format:"###-####",regex:"^(\\d{7})$"}},{name:{common:"Cape Verde",official:"Republic of Cabo Verde",nativeName:{por:{official:"Rep\xFAblica de Cabo Verde",common:"Cabo Verde"}}},tld:[".cv"],cca2:"CV",ccn3:"132",cca3:"CPV",cioc:"CPV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CVE:{name:"Cape Verdean escudo",symbol:"Esc"}},idd:{root:"+2",suffixes:["38"]},capital:["Praia"],altSpellings:["CV","Republic of Cabo Verde","Rep\xFAblica de Cabo Verde"],region:"Africa",subregion:"Western Africa",languages:{por:"Portuguese"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0627\u0628\u0648 \u0641\u064A\u0631\u062F\u064A",common:"\u0643\u0627\u0628\u0648 \u0641\u064A\u0631\u062F\u064A"},ces:{official:"Kapverdsk\xE1 republika",common:"Kapverdy"},cym:{official:"Gweriniaeth Cabo Verde",common:"Penrhyn Verde"},deu:{official:"Republik Cabo Verde",common:"Kap Verde"},est:{official:"Cabo Verde Vabariik",common:"Roheneemesaared"},fin:{official:"Kap Verden tasavalta",common:"Kap Verde"},fra:{official:"R\xE9publique du Cap-Vert",common:"\xCEles du Cap-Vert"},hrv:{official:"Republika Cabo Verde",common:"Zelenortska Republika"},hun:{official:"Z\xF6ld-foki K\xF6zt\xE1rsas\xE1g",common:"Z\xF6ld-foki K\xF6zt\xE1rsas\xE1g"},ita:{official:"Repubblica di Capo Verde",common:"Capo Verde"},jpn:{official:"\u30AB\u30FC\u30DC\u30D9\u30EB\u30C7\u5171\u548C\u56FD",common:"\u30AB\u30FC\u30DC\u30D9\u30EB\u30C7"},kor:{official:"\uCE74\uBCF4\uBCA0\uB974\uB370 \uACF5\uD654\uAD6D",common:"\uCE74\uBCF4\uBCA0\uB974\uB370"},nld:{official:"Republiek van Cabo Verde",common:"Kaapverdi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0628\u0648 \u0648\u0631\u062F",common:"\u062F\u0645\u0627\u063A\u0647\u0654 \u0633\u0628\u0632"},pol:{official:"Republika Zielonego Przyl\u0105dka",common:"Republika Zielonego Przyl\u0105dka"},por:{official:"Rep\xFAblica de Cabo Verde",common:"Cabo Verde"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u0430\u0431\u043E -\u0412\u0435\u0440\u0434\u0435",common:"\u041A\u0430\u0431\u043E-\u0412\u0435\u0440\u0434\u0435"},slk:{official:"Kapverdsk\xE1 republika",common:"Kapverdy"},spa:{official:"Rep\xFAblica de Cabo Verde",common:"Cabo Verde"},swe:{official:"Republiken Kap Verde",common:"Kap Verde"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u06CC\u067E \u0648\u0631\u0688\u06CC",common:"\u06A9\u06CC\u067E \u0648\u0631\u0688\u06CC"},zho:{official:"\u4F5B\u5F97\u89D2\u5171\u548C\u56FD",common:"\u4F5B\u5F97\u89D2"}},latlng:[16,-24],landlocked:!1,area:4033,demonyms:{eng:{f:"Cape Verdian",m:"Cape Verdian"},fra:{f:"Cap-verdienne",m:"Cap-verdien"}},flag:"\u{1F1E8}\u{1F1FB}",maps:{googleMaps:"https://goo.gl/maps/Kc9vy5ChjuiAgMfXA",openStreetMaps:"https://www.openstreetmap.org/relation/535774"},population:555988,gini:{"2015":42.4},fifa:"CPV",car:{signs:["CV"],side:"right"},timezones:["UTC-01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cv.png",svg:"https://flagcdn.com/cv.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cv.svg"},startOfWeek:"monday",capitalInfo:{latlng:[14.92,-23.52]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Switzerland",official:"Swiss Confederation",nativeName:{fra:{official:"Conf\xE9d\xE9ration suisse",common:"Suisse"},gsw:{official:"Schweizerische Eidgenossenschaft",common:"Schweiz"},ita:{official:"Confederazione Svizzera",common:"Svizzera"},roh:{official:"Confederaziun svizra",common:"Svizra"}}},tld:[".ch"],cca2:"CH",ccn3:"756",cca3:"CHE",cioc:"SUI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{CHF:{name:"Swiss franc",symbol:"Fr."}},idd:{root:"+4",suffixes:["1"]},capital:["Bern"],altSpellings:["CH","Swiss Confederation","Schweiz","Suisse","Svizzera","Svizra"],region:"Europe",subregion:"Western Europe",languages:{fra:"French",gsw:"Swiss German",ita:"Italian",roh:"Romansh"},translations:{ara:{official:"\u0627\u0644\u0627\u062A\u062D\u0627\u062F \u0627\u0644\u0633\u0648\u064A\u0633\u0631\u064A",common:"\u0633\u0648\u064A\u0633\u0631\u0627"},ces:{official:"\u0160v\xFDcarsk\xE1 konfederace",common:"\u0160v\xFDcarsko"},cym:{official:"Swiss Confederation",common:"Switzerland"},deu:{official:"Schweizerische Eidgenossenschaft",common:"Schweiz"},est:{official:"\u0160veitsi Konf\xF6deratsioon",common:"\u0160veits"},fin:{official:"Sveitsin valaliitto",common:"Sveitsi"},fra:{official:"Conf\xE9d\xE9ration suisse",common:"Suisse"},hrv:{official:"\u0161vicarska Konfederacija",common:"\u0160vicarska"},hun:{official:"Sv\xE1jc",common:"Sv\xE1jc"},ita:{official:"Confederazione svizzera",common:"Svizzera"},jpn:{official:"\u30B9\u30A4\u30B9\u9023\u90A6",common:"\u30B9\u30A4\u30B9"},kor:{official:"\uC2A4\uC704\uC2A4 \uC5F0\uBC29",common:"\uC2A4\uC704\uC2A4"},nld:{official:"Zwitserse Confederatie",common:"Zwitserland"},per:{official:"\u06A9\u0646\u0641\u062F\u0631\u0627\u0633\u06CC\u0648\u0646 \u0633\u0648\u0626\u06CC\u0633",common:"\u0633\u0648\u0626\u06CC\u0633"},pol:{official:"Konfederacja Szwajcarska",common:"Szwajcaria"},por:{official:"Confedera\xE7\xE3o Su\xED\xE7a",common:"Su\xED\xE7a"},rus:{official:"\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0441\u043A\u0430\u044F \u041A\u043E\u043D\u0444\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u044F",common:"\u0428\u0432\u0435\u0439\u0446\u0430\u0440\u0438\u044F"},slk:{official:"\u0160vaj\u010Diarska konfeder\xE1cia",common:"\u0160vaj\u010Diarsko"},spa:{official:"Confederaci\xF3n Suiza",common:"Suiza"},swe:{official:"Schweiziska edsf\xF6rbundet",common:"Schweiz"},urd:{official:"\u0633\u0648\u0626\u06CC\u0633  \u0645\u062A\u062D\u062F\u06C1",common:"\u0633\u0648\u06CC\u0679\u0630\u0631\u0644\u06CC\u0646\u0688"},zho:{official:"\u745E\u58EB\u8054\u90A6",common:"\u745E\u58EB"}},latlng:[47,8],landlocked:!0,borders:["AUT","FRA","ITA","LIE","DEU"],area:41284,demonyms:{eng:{f:"Swiss",m:"Swiss"},fra:{f:"Suisse",m:"Suisse"}},flag:"\u{1F1E8}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/uVuZcXaxSx5jLyEC9",openStreetMaps:"https://www.openstreetmap.org/relation/51701"},population:8654622,gini:{"2018":33.1},fifa:"SUI",car:{signs:["CH"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/ch.png",svg:"https://flagcdn.com/ch.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ch.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ch.svg"},startOfWeek:"monday",capitalInfo:{latlng:[46.92,7.47]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Hong Kong",official:"Hong Kong Special Administrative Region of the People's Republic of China",nativeName:{eng:{official:"Hong Kong Special Administrative Region of the People's Republic of China",common:"Hong Kong"},zho:{official:"\u4E2D\u534E\u4EBA\u6C11\u5171\u548C\u56FD\u9999\u6E2F\u7279\u522B\u884C\u653F\u533A",common:"\u9999\u6E2F"}}},tld:[".hk",".\u9999\u6E2F"],cca2:"HK",ccn3:"344",cca3:"HKG",cioc:"HKG",independent:!1,status:"officially-assigned",unMember:!1,currencies:{HKD:{name:"Hong Kong dollar",symbol:"$"}},idd:{root:"+8",suffixes:["52"]},capital:["City of Victoria"],altSpellings:["HK"],region:"Asia",subregion:"Eastern Asia",languages:{eng:"English",zho:"Chinese"},translations:{ara:{official:"\u0645\u0646\u0637\u0642\u0629 \u0647\u0648\u0646\u063A \u0643\u0648\u0646\u063A \u0627\u0644\u0627\u062F\u0627\u0631\u064A\u0629 \u0627\u0644\u062A\u0627\u0628\u0639\u0629 \u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0635\u064A\u0646 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0647\u0648\u0646\u063A \u0643\u0648\u0646\u063A"},ces:{official:"Zvl\xE1\u0161tn\xED administrativn\xED oblast \u010C\xEDnsk\xE9 lidov\xE9 republiky Hongkong",common:"Hongkong"},cym:{official:"Hong Kong Special Administrative Region of the People's Republic of China",common:"Hong Kong"},deu:{official:"Sonderverwaltungszone Hongkong der Volksrepublik China",common:"Hongkong"},est:{official:"Hongkongi erihalduspiirkond",common:"Hongkong"},fin:{official:"Hong Kongin erityishallintoalue",common:"Hongkong"},fra:{official:"R\xE9gion administrative sp\xE9ciale de Hong Kong de la R\xE9publique populaire de Chine",common:"Hong Kong"},hrv:{official:"Hong Kong Posebnog upravnog podru\u010DjaNarodne Republike Kine",common:"Hong Kong"},hun:{official:"Hongkong",common:"Hongkong"},ita:{official:"Hong Kong Regione amministrativa speciale della Repubblica Popolare Cinese",common:"Hong Kong"},jpn:{official:"\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD\u9999\u6E2F\u7279\u5225\u884C\u653F\u533A",common:"\u9999\u6E2F"},kor:{official:"\uC911\uD654\uC778\uBBFC\uACF5\uD654\uAD6D \uD64D\uCF69 \uD2B9\uBCC4\uD589\uC815\uAD6C",common:"\uD64D\uCF69"},nld:{official:"Hong Kong Speciale Administratieve Regio van de Volksrepubliek China",common:"Hongkong"},per:{official:"\u0647\u064F\u0646\u06AF \u06A9\u064F\u0646\u06AF",common:"\u0647\u064F\u0646\u06AF \u06A9\u064F\u0646\u06AF"},pol:{official:"Specjalny Region Administracyjny Chi\u0144skiej Republiki Ludowej Hongkong",common:"Hongkong"},por:{official:"Hong Kong Regi\xE3o Administrativa Especial da Rep\xFAblica Popular da China",common:"Hong Kong"},rus:{official:"Hong Kong \u0421\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0439 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043D\u044B\u0439 \u0440\u0430\u0439\u043E\u043D \u041A\u0438\u0442\u0430\u0439\u0441\u043A\u043E\u0439 \u041D\u0430\u0440\u043E\u0434\u043D\u043E\u0439 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0438 \u041A\u0438\u0442\u0430\u044F",common:"\u0413\u043E\u043D\u043A\u043E\u043D\u0433"},slk:{official:"\u0160peci\xE1lna administrat\xEDvna oblas\u0165\u010C\xEDnskej \u013Eudovej republiky Hongkong",common:"Hongkong"},spa:{official:"Hong Kong Regi\xF3n Administrativa Especial de la Rep\xFAblica Popular China",common:"Hong Kong"},swe:{official:"Hongkong",common:"Hongkong"},urd:{official:"\u06C1\u0627\u0646\u06AF \u06A9\u0627\u0646\u06AF \u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0686\u06CC\u0646 \u06A9\u0627 \u062E\u0635\u0648\u0635\u06CC \u0627\u0646\u062A\u0638\u0627\u0645\u06CC \u0639\u0644\u0627\u0642\u06C1",common:"\u06C1\u0627\u0646\u06AF \u06A9\u0627\u0646\u06AF"}},latlng:[22.267,114.188],landlocked:!1,borders:["CHN"],area:1104,demonyms:{eng:{f:"Hong Konger",m:"Hong Konger"},fra:{f:"Hongkongaise",m:"Hongkongais"}},flag:"\u{1F1ED}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/1sEnNmT47ffrC8MU8",openStreetMaps:"https://www.openstreetmap.org/relation/913110"},population:7500700,fifa:"HKG",car:{signs:["HK"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/hk.png",svg:"https://flagcdn.com/hk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/hk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/hk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[48.41,-123.33]}},{name:{common:"Bulgaria",official:"Republic of Bulgaria",nativeName:{bul:{official:"\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F",common:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"}}},tld:[".bg"],cca2:"BG",ccn3:"100",cca3:"BGR",cioc:"BUL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BGN:{name:"Bulgarian lev",symbol:"\u043B\u0432"}},idd:{root:"+3",suffixes:["59"]},capital:["Sofia"],altSpellings:["BG","Republic of Bulgaria","\u0420\u0435\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"],region:"Europe",subregion:"Southeast Europe",languages:{bul:"Bulgarian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0628\u0644\u063A\u0627\u0631\u064A\u0627",common:"\u0628\u0644\u063A\u0627\u0631\u064A\u0627"},ces:{official:"Bulharsk\xE1 republika",common:"Bulharsko"},cym:{official:"Gweriniaeth Bwlgaria",common:"Bwlgaria"},deu:{official:"Republik Bulgarien",common:"Bulgarien"},est:{official:"Bulgaaria Vabariik",common:"Bulgaaria"},fin:{official:"Bulgarian tasavalta",common:"Bulgaria"},fra:{official:"R\xE9publique de Bulgarie",common:"Bulgarie"},hrv:{official:"Republika Bugarska",common:"Bugarska"},hun:{official:"Bolg\xE1r K\xF6zt\xE1rsas\xE1g",common:"Bulg\xE1ria"},ita:{official:"Repubblica di Bulgaria",common:"Bulgaria"},jpn:{official:"\u30D6\u30EB\u30AC\u30EA\u30A2\u5171\u548C\u56FD",common:"\u30D6\u30EB\u30AC\u30EA\u30A2"},kor:{official:"\uBD88\uAC00\uB9AC\uC544 \uACF5\uD654\uAD6D",common:"\uBD88\uAC00\uB9AC\uC544"},nld:{official:"Republiek Bulgarije",common:"Bulgarije"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0644\u063A\u0627\u0631\u0633\u062A\u0627\u0646",common:"\u0628\u0644\u063A\u0627\u0631\u0633\u062A\u0627\u0646"},pol:{official:"Republika Bu\u0142garii",common:"Bu\u0142garia"},por:{official:"Rep\xFAblica da Bulg\xE1ria",common:"Bulg\xE1ria"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0411\u043E\u043B\u0433\u0430\u0440\u0438\u044F",common:"\u0411\u043E\u043B\u0433\u0430\u0440\u0438\u044F"},slk:{official:"Bulharsk\xE1 republika",common:"Bulharsko"},spa:{official:"Rep\xFAblica de Bulgaria",common:"Bulgaria"},swe:{official:"Republiken Bulgarien",common:"Bulgarien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0628\u0644\u063A\u0627\u0631\u06CC\u06C1",common:"\u0628\u0644\u063A\u0627\u0631\u06CC\u06C1"},zho:{official:"\u4FDD\u52A0\u5229\u4E9A\u5171\u548C\u56FD",common:"\u4FDD\u52A0\u5229\u4E9A"}},latlng:[43,25],landlocked:!1,borders:["GRC","MKD","ROU","SRB","TUR"],area:110879,demonyms:{eng:{f:"Bulgarian",m:"Bulgarian"},fra:{f:"Bulgare",m:"Bulgare"}},flag:"\u{1F1E7}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/F5uAhDGWzc3BrHfm9",openStreetMaps:"https://www.openstreetmap.org/relation/186382"},population:6927288,gini:{"2018":41.3},fifa:"BUL",car:{signs:["BG"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/bg.png",svg:"https://flagcdn.com/bg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[42.68,23.32]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Jordan",official:"Hashemite Kingdom of Jordan",nativeName:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0623\u0631\u062F\u0646\u064A\u0629 \u0627\u0644\u0647\u0627\u0634\u0645\u064A\u0629",common:"\u0627\u0644\u0623\u0631\u062F\u0646"}}},tld:[".jo","\u0627\u0644\u0627\u0631\u062F\u0646."],cca2:"JO",ccn3:"400",cca3:"JOR",cioc:"JOR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{JOD:{name:"Jordanian dinar",symbol:"\u062F.\u0627"}},idd:{root:"+9",suffixes:["62"]},capital:["Amman"],altSpellings:["JO","Hashemite Kingdom of Jordan","al-Mamlakah al-Urdun\u012Byah al-H\u0101shim\u012Byah"],region:"Asia",subregion:"Western Asia",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0623\u0631\u062F\u0646\u064A\u0629 \u0627\u0644\u0647\u0627\u0634\u0645\u064A\u0629",common:"\u0627\u0644\u0623\u0631\u062F\u0646"},ces:{official:"Jord\xE1nsk\xE9 h\xE1\u0161imovsk\xE9 kr\xE1lovstv\xED",common:"Jord\xE1nsko"},cym:{official:"Hashemite Kingdom of Jordan",common:"Jordan"},deu:{official:"Haschemitisches K\xF6nigreich Jordanien",common:"Jordanien"},est:{official:"Jordaania Ha\u0161imiidi Kuningriik",common:"Jordaania"},fin:{official:"Jordanian ha\u0161emiittinen kunigaskunta",common:"Jordania"},fra:{official:"Royaume hach\xE9mite de Jordanie",common:"Jordanie"},hrv:{official:"Ha\u0161emitske Kraljevine Jordan",common:"Jordan"},hun:{official:"Jord\xE1nia",common:"Jord\xE1nia"},ita:{official:"Regno hascemita di Giordania",common:"Giordania"},jpn:{official:"\u30E8\u30EB\u30C0\u30F3\xB7\u30CF\u30B7\u30DF\u30C6\u738B\u56FD",common:"\u30E8\u30EB\u30C0\u30F3"},kor:{official:"\uC694\uB974\uB2E8 \uD558\uC2EC \uC655\uAD6D",common:"\uC694\uB974\uB2E8"},nld:{official:"Hasjemitisch Koninkrijk Jordani\xEB",common:"Jordani\xEB"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0627\u064F\u0631\u062F\u064F\u0646 \u0647\u0627\u0634\u0645\u06CC",common:"\u0627\u0631\u062F\u0646"},pol:{official:"Jorda\u0144skie Kr\xF3lestwo Haszymidzkie",common:"Jordania"},por:{official:"Reino Hachemita da Jord\xE2nia",common:"Jord\xE2nia"},rus:{official:"\u0418\u043E\u0440\u0434\u0430\u043D\u0441\u043A\u043E\u0433\u043E \u0425\u0430\u0448\u0438\u043C\u0438\u0442\u0441\u043A\u043E\u0433\u043E \u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u0430",common:"\u0418\u043E\u0440\u0434\u0430\u043D\u0438\u044F"},slk:{official:"Jord\xE1nske h\xE1\u0161imovsk\xE9 kr\xE1\u013Eovstvo",common:"Jord\xE1nsko"},spa:{official:"Reino Hachemita de Jordania",common:"Jordania"},swe:{official:"Hashimitiska kungad\xF6met Jordanien",common:"Jordanien"},urd:{official:"\u06BE\u0627\u0634\u0645\u06CC \u0645\u0645\u0644\u06A9\u062A\u0650 \u0627\u0631\u062F\u0646",common:"\u0627\u0631\u062F\u0646"},zho:{official:"\u7EA6\u65E6\u54C8\u5E0C\u59C6\u738B\u56FD",common:"\u7EA6\u65E6"}},latlng:[31,36],landlocked:!1,borders:["IRQ","ISR","PSE","SAU","SYR"],area:89342,demonyms:{eng:{f:"Jordanian",m:"Jordanian"},fra:{f:"Jordanienne",m:"Jordanien"}},flag:"\u{1F1EF}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/ko1dzSDKg8Gsi9A98",openStreetMaps:"https://www.openstreetmap.org/relation/184818"},population:10203140,gini:{"2010":33.7},fifa:"JOR",car:{signs:["HKJ"],side:"right"},timezones:["UTC+03:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/jo.png",svg:"https://flagcdn.com/jo.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/jo.png",svg:"https://mainfacts.com/media/images/coats_of_arms/jo.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[31.95,35.93]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Republic of the Congo",official:"Republic of the Congo",nativeName:{fra:{official:"R\xE9publique du Congo",common:"R\xE9publique du Congo"},kon:{official:"Repubilika ya Kongo",common:"Repubilika ya Kongo"},lin:{official:"Republ\xEDki ya Kong\xF3",common:"Republ\xEDki ya Kong\xF3"}}},tld:[".cg"],cca2:"CG",ccn3:"178",cca3:"COG",cioc:"CGO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["42"]},capital:["Brazzaville"],altSpellings:["CG","Congo","Congo-Brazzaville"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",kon:"Kikongo",lin:"Lingala"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0643\u0648\u0646\u063A\u0648",common:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0643\u0648\u0646\u0641\u0648"},ces:{official:"Kon\u017Esk\xE1 republika",common:"Kongo"},cym:{official:"Gweriniaeth y Congo",common:"Gweriniaeth y Congo"},deu:{official:"Republik Kongo",common:"Kongo"},est:{official:"Kongo Vabariik",common:"Kongo Vabariik"},fin:{official:"Kongon tasavalta",common:"Kongo-Brazzaville"},fra:{official:"R\xE9publique du Congo",common:"Congo"},hrv:{official:"Republika Kongo",common:"Kongo"},hun:{official:"Kong\xF3i K\xF6zt\xE1rsas\xE1g",common:"Kong\xF3i K\xF6zt\xE1rsas\xE1g"},ita:{official:"Repubblica del Congo",common:"Congo"},jpn:{official:"\u30B3\u30F3\u30B4\u5171\u548C\u56FD",common:"\u30B3\u30F3\u30B4\u5171\u548C\u56FD"},kor:{official:"\uCF69\uACE0",common:"\uCF69\uACE0"},nld:{official:"Republiek Congo",common:"Congo"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0628\u0631\u0627\u0632\u0627\u0648\u06CC\u0644 \u06A9\u064F\u0646\u06AF\u0648",common:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u064F\u0646\u06AF\u0648"},pol:{official:"Republika Konga",common:"Kongo"},por:{official:"Rep\xFAblica do Congo",common:"Congo"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u043D\u0433\u043E",common:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u043D\u0433\u043E"},slk:{official:"Kon\u017Esk\xE1 republika",common:"Kongo"},spa:{official:"Rep\xFAblica del Congo",common:"Congo"},swe:{official:"Republiken Kongo",common:"Kongo-Brazzaville"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0627\u0646\u06AF\u0648",common:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0627\u0646\u06AF\u0648"},zho:{official:"\u521A\u679C\u5171\u548C\u56FD",common:"\u521A\u679C"}},latlng:[-1,15],landlocked:!1,borders:["AGO","CMR","CAF","COD","GAB"],area:342e3,demonyms:{eng:{f:"Congolese",m:"Congolese"},fra:{f:"Congolaise",m:"Congolais"}},flag:"\u{1F1E8}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/Phf5dDDKdfCtuBTb6",openStreetMaps:"https://www.openstreetmap.org/relation/192794"},population:89561404,gini:{"2011":48.9},fifa:"CGO",car:{signs:["RCB"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cg.png",svg:"https://flagcdn.com/cg.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-4.25,15.28]}},{name:{common:"Laos",official:"Lao People's Democratic Republic",nativeName:{lao:{official:"\u0EAA\u0EB2\u0E97\u0EB2\u0EA5\u0EB0\u0E99\u0EB0 \u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95 \u0E84\u0EBB\u0E99\u0EA5\u0EB2\u0EA7 \u0E82\u0EAD\u0E87",common:"\u0EAA\u0E9B\u0E9B\u0EA5\u0EB2\u0EA7"}}},tld:[".la"],cca2:"LA",ccn3:"418",cca3:"LAO",cioc:"LAO",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LAK:{name:"Lao kip",symbol:"\u20AD"}},idd:{root:"+8",suffixes:["56"]},capital:["Vientiane"],altSpellings:["LA","Lao","Lao People's Democratic Republic","Sathalanalat Paxathipatai Paxaxon Lao"],region:"Asia",subregion:"South-Eastern Asia",languages:{lao:"Lao"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0644\u0627\u0648\u0633 \u0627\u0644\u062F\u064A\u0645\u0642\u0631\u0627\u0637\u064A\u0629 \u0627\u0644\u0634\u0639\u0628\u064A\u0629",common:"\u0644\u0627\u0648\u0633"},ces:{official:"Laosk\xE1 lidov\u011B demokratick\xE1 republika",common:"Laos"},cym:{official:"Lao People's Democratic Republic",common:"Laos"},deu:{official:"Demokratische Volksrepublik Laos",common:"Laos"},est:{official:"Laose Demokraatlik Rahvavabariik",common:"Laos"},fin:{official:"Laosin demokraattinen kansantasavalta",common:"Laos"},fra:{official:"R\xE9publique d\xE9mocratique populaire lao",common:"Laos"},hrv:{official:"Narodna Demokratska Republika",common:"Laos"},hun:{official:"Laoszi N\xE9pi Demokratikus K\xF6zt\xE1rsas\xE1g",common:"Laosz"},ita:{official:"Repubblica democratica popolare del Laos",common:"Laos"},jpn:{official:"\u30E9\u30AA\u30B9\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u30E9\u30AA\u30B9\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD"},kor:{official:"\uB77C\uC624 \uC778\uBBFC \uBBFC\uC8FC \uACF5\uD654\uAD6D",common:"\uB77C\uC624\uC2A4"},nld:{official:"Lao Democratische Volksrepubliek",common:"Laos"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062F\u0645\u0648\u06A9\u0631\u0627\u062A\u06CC\u06A9 \u062E\u0644\u0642 \u0644\u0627\u0626\u0648\u0633",common:"\u0644\u0627\u0626\u0648\u0633"},pol:{official:"Laota\u0144ska Republika Ludowo-Demokratyczna",common:"Laos"},por:{official:"Laos, Rep\xFAblica Democr\xE1tica",common:"Laos"},rus:{official:"\u041B\u0430\u043E\u0441\u0441\u043A\u0430\u044F \u041D\u0430\u0440\u043E\u0434\u043D\u043E-\u0414\u0435\u043C\u043E\u043A\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041B\u0430\u043E\u0441"},slk:{official:"Laosk\xE1 \u013Eudovodemokratick\xE1 republika",common:"Laos"},spa:{official:"Rep\xFAblica Democr\xE1tica Popular Lao",common:"Laos"},swe:{official:"Demokratiska folkrepubliken Laos",common:"Laos"},urd:{official:"\u0639\u0648\u0627\u0645\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0644\u0627\u0624",common:"\u0644\u0627\u0624\u0633"},zho:{official:"\u8001\u631D\u4EBA\u6C11\u6C11\u4E3B\u5171\u548C\u56FD",common:"\u8001\u631D"}},latlng:[18,105],landlocked:!0,borders:["MMR","KHM","CHN","THA","VNM"],area:236800,demonyms:{eng:{f:"Laotian",m:"Laotian"},fra:{f:"Laotienne",m:"Laotien"}},flag:"\u{1F1F1}\u{1F1E6}",maps:{googleMaps:"https://goo.gl/maps/F3asVB7sRKgSnwbE7",openStreetMaps:"https://www.openstreetmap.org/relation/49903"},population:7275556,gini:{"2018":38.8},fifa:"LAO",car:{signs:["LAO"],side:"right"},timezones:["UTC+07:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/la.png",svg:"https://flagcdn.com/la.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/la.png",svg:"https://mainfacts.com/media/images/coats_of_arms/la.svg"},startOfWeek:"monday",capitalInfo:{latlng:[17.97,102.6]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Norfolk Island",official:"Territory of Norfolk Island",nativeName:{eng:{official:"Territory of Norfolk Island",common:"Norfolk Island"},pih:{official:"Teratri of Norf'k Ailen",common:"Norf'k Ailen"}}},tld:[".nf"],cca2:"NF",ccn3:"574",cca3:"NFK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{AUD:{name:"Australian dollar",symbol:"$"}},idd:{root:"+6",suffixes:["72"]},capital:["Kingston"],altSpellings:["NF","Territory of Norfolk Island","Teratri of Norf'k Ailen"],region:"Oceania",subregion:"Australia and New Zealand",languages:{eng:"English",pih:"Norfuk"},translations:{ara:{official:"\u0625\u0642\u0644\u064A\u0645 \u062C\u0632\u064A\u0631\u0629 \u0646\u0648\u0631\u0641\u0648\u0644\u0643",common:"\u062C\u0632\u064A\u0631\u0629 \u0646\u0648\u0631\u0641\u0648\u0644\u0643"},ces:{official:"Teritorium ostrova Norfolk",common:"Norfolk"},cym:{official:"Territory of Norfolk Island",common:"Norfolk Island"},deu:{official:"Gebiet der Norfolkinsel",common:"Norfolkinsel"},est:{official:"Norfolki saare ala",common:"Norfolk"},fin:{official:"Norfolkinsaaren territorio",common:"Norfolkinsaari"},fra:{official:"Territoire de l'\xEEle Norfolk",common:"\xCEle Norfolk"},hrv:{official:"Teritorij Norfolk Island",common:"Otok Norfolk"},hun:{official:"Norfolk-sziget",common:"Norfolk-sziget"},ita:{official:"Territorio di Norfolk Island",common:"Isola Norfolk"},jpn:{official:"\u30CE\u30FC\u30D5\u30A9\u30FC\u30AF\u5CF6\u306E\u9818\u571F",common:"\u30CE\u30FC\u30D5\u30A9\u30FC\u30AF\u5CF6"},kor:{official:"\uB178\uD37D \uC12C",common:"\uB178\uD37D \uC12C"},nld:{official:"Grondgebied van Norfolk Island",common:"Norfolkeiland"},per:{official:"\u0642\u0644\u0645\u0631\u0648 \u062C\u0632\u0627\u06CC\u0631 \u0646\u0648\u0631\u0641\u06A9",common:"\u062C\u0632\u06CC\u0631\u0647 \u0646\u0648\u0631\u0641\u06A9"},pol:{official:"Terytorium Wyspy Norfolk",common:"Wyspa Norfolk"},por:{official:"Territ\xF3rio da Ilha Norfolk",common:"Ilha Norfolk"},rus:{official:"\u0422\u0435\u0440\u0440\u0438\u0442\u043E\u0440\u0438\u044F \u043E\u0441\u0442\u0440\u043E\u0432\u0430 \u041D\u043E\u0440\u0444\u043E\u043B\u043A",common:"\u041D\u043E\u0440\u0444\u043E\u043B\u043A"},slk:{official:"Terit\xF3rium ostrova Norfolk",common:"Norfolk"},spa:{official:"Territorio de la Isla Norfolk",common:"Isla de Norfolk"},swe:{official:"Norfolk\xF6n",common:"Norfolk\xF6n"},urd:{official:"\u062C\u0632\u06CC\u0631\u06C1 \u0646\u0648\u0631\u0641\u06A9 \u062E\u0637\u06C1",common:"\u062C\u0632\u06CC\u0631\u06C1 \u0646\u0648\u0631\u0641\u06A9"},zho:{official:"\u8BFA\u798F\u514B\u5C9B",common:"\u8BFA\u798F\u514B\u5C9B"}},latlng:[-29.03333333,167.95],landlocked:!1,area:36,demonyms:{eng:{f:"Norfolk Islander",m:"Norfolk Islander"},fra:{f:"Norfolkaise",m:"Norfolkais"}},flag:"\u{1F1F3}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/pbvtm6XYd1iZbjky5",openStreetMaps:"https://www.openstreetmap.org/relation/2574988"},population:2302,car:{signs:["AUS"],side:"left"},timezones:["UTC+11:30"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/nf.png",svg:"https://flagcdn.com/nf.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-29.05,167.97]}},{name:{common:"South Korea",official:"Republic of Korea",nativeName:{kor:{official:"\uB300\uD55C\uBBFC\uAD6D",common:"\uD55C\uAD6D"}}},tld:[".kr",".\uD55C\uAD6D"],cca2:"KR",ccn3:"410",cca3:"KOR",cioc:"KOR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{KRW:{name:"South Korean won",symbol:"\u20A9"}},idd:{root:"+8",suffixes:["2"]},capital:["Seoul"],altSpellings:["KR","Korea, Republic of","Republic of Korea","\uB0A8\uD55C","\uB0A8\uC870\uC120"],region:"Asia",subregion:"Eastern Asia",languages:{kor:"Korean"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0648\u0631\u064A\u0627",common:"\u0643\u0648\u0631\u064A\u0627 \u0627\u0644\u062C\u0646\u0648\u0628\u064A\u0629"},ces:{official:"Korejsk\xE1 republika",common:"Ji\u017En\xED Korea"},cym:{official:"Republic of Korea",common:"South Korea"},deu:{official:"Republik Korea",common:"S\xFCdkorea"},est:{official:"Korea Vabariik",common:"L\xF5una-Korea"},fin:{official:"Korean tasavalta",common:"Etel\xE4-Korea"},fra:{official:"R\xE9publique de Cor\xE9e",common:"Cor\xE9e du Sud"},hrv:{official:"Republika Koreja",common:"Ju\u017Ena Koreja"},hun:{official:"Koreai K\xF6zt\xE1rsas\xE1g",common:"D\xE9l-Korea"},ita:{official:"Repubblica di Corea",common:"Corea del Sud"},jpn:{official:"\u5927\u97D3\u6C11\u56FD",common:"\u97D3\u56FD"},kor:{official:"\uB300\uD55C\uBBFC\uAD6D",common:"\uD55C\uAD6D"},nld:{official:"Republiek Korea",common:"Zuid-Korea"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0631\u0647",common:"\u06A9\u0631\u0647\u0654 \u062C\u0646\u0648\u0628\u06CC"},pol:{official:"Republika Korei",common:"Korea Po\u0142udniowa"},por:{official:"Rep\xFAblica da Coreia",common:"Coreia do Sul"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u0440\u0435\u044F",common:"\u042E\u0436\u043D\u0430\u044F \u041A\u043E\u0440\u0435\u044F"},slk:{official:"K\xF3rejsk\xE1 republika",common:"Ju\u017En\xE1 K\xF3rea"},spa:{official:"Rep\xFAblica de Corea",common:"Corea del Sur"},swe:{official:"Republiken Korea",common:"Sydkorea"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0648\u0631\u06CC\u0627 ",common:"\u062C\u0646\u0648\u0628\u06CC \u06A9\u0648\u0631\u06CC\u0627"},zho:{official:"\u5927\u97E9\u6C11\u56FD",common:"\u97E9\u56FD"}},latlng:[37,127.5],landlocked:!1,borders:["PRK"],area:100210,demonyms:{eng:{f:"South Korean",m:"South Korean"},fra:{f:"Sud-cor\xE9enne",m:"Sud-cor\xE9en"}},flag:"\u{1F1F0}\u{1F1F7}",maps:{googleMaps:"https://goo.gl/maps/7ecjaJXefjAQhxjGA",openStreetMaps:"https://www.openstreetmap.org/relation/307756"},population:51780579,gini:{"2016":31.4},fifa:"KOR",car:{signs:["ROK"],side:"right"},timezones:["UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/kr.png",svg:"https://flagcdn.com/kr.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/kr.png",svg:"https://mainfacts.com/media/images/coats_of_arms/kr.svg"},startOfWeek:"monday",capitalInfo:{latlng:[37.55,126.98]},postalCode:{format:"SEOUL ###-###",regex:"^(?:SEOUL)*(\\d{6})$"}},{name:{common:"Tunisia",official:"Tunisian Republic",nativeName:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062A\u0648\u0646\u0633\u064A\u0629",common:"\u062A\u0648\u0646\u0633"}}},tld:[".tn"],cca2:"TN",ccn3:"788",cca3:"TUN",cioc:"TUN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TND:{name:"Tunisian dinar",symbol:"\u062F.\u062A"}},idd:{root:"+2",suffixes:["16"]},capital:["Tunis"],altSpellings:["TN","Republic of Tunisia","al-Jumh\u016Briyyah at-T\u016Bnisiyyah"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u062A\u0648\u0646\u0633\u064A\u0629",common:"\u062A\u0648\u0646\u0633"},ces:{official:"Tunisk\xE1 republika",common:"Tunisko"},cym:{official:"Tunisian Republic",common:"Tunisia"},deu:{official:"Tunesische Republik",common:"Tunesien"},est:{official:"Tuneesia Vabariik",common:"Tuneesia"},fin:{official:"Tunisian tasavalta",common:"Tunisia"},fra:{official:"R\xE9publique tunisienne",common:"Tunisie"},hrv:{official:"Tuniski Republika",common:"Tunis"},hun:{official:"Tun\xE9ziai K\xF6zt\xE1rsas\xE1g",common:"Tun\xE9zia"},ita:{official:"Repubblica tunisina",common:"Tunisia"},jpn:{official:"\u30C1\u30E5\u30CB\u30B8\u30A2\u5171\u548C\u56FD",common:"\u30C1\u30E5\u30CB\u30B8\u30A2"},kor:{official:"\uD280\uB2C8\uC9C0 \uACF5\uD654\uAD6D",common:"\uD280\uB2C8\uC9C0"},nld:{official:"Republiek Tunesi\xEB",common:"Tunesi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u062A\u0648\u0646\u0633",common:"\u062A\u0648\u0646\u0633"},pol:{official:"Republika Tunezyjska",common:"Tunezja"},por:{official:"Rep\xFAblica da Tun\xEDsia",common:"Tun\xEDsia"},rus:{official:"\u0422\u0443\u043D\u0438\u0441\u0441\u043A\u043E\u0439 \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0438",common:"\u0422\u0443\u043D\u0438\u0441"},slk:{official:"Tunisk\xE1 republika",common:"Tunisko"},spa:{official:"Rep\xFAblica de T\xFAnez",common:"T\xFAnez"},swe:{official:"Republiken Tunisien",common:"Tunisien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062A\u0648\u0646\u0633",common:"\u062A\u0648\u0646\u0633"},zho:{official:"\u7A81\u5C3C\u65AF\u5171\u548C\u56FD",common:"\u7A81\u5C3C\u65AF"}},latlng:[34,9],landlocked:!1,borders:["DZA","LBY"],area:163610,demonyms:{eng:{f:"Tunisian",m:"Tunisian"},fra:{f:"Tunisienne",m:"Tunisien"}},flag:"\u{1F1F9}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/KgUmpZdUuNRaougs8",openStreetMaps:"https://www.openstreetmap.org/relation/192757"},population:11818618,gini:{"2015":32.8},fifa:"TUN",car:{signs:["TN"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/tn.png",svg:"https://flagcdn.com/tn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[36.8,10.18]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Finland",official:"Republic of Finland",nativeName:{fin:{official:"Suomen tasavalta",common:"Suomi"},swe:{official:"Republiken Finland",common:"Finland"}}},tld:[".fi"],cca2:"FI",ccn3:"246",cca3:"FIN",cioc:"FIN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["58"]},capital:["Helsinki"],altSpellings:["FI","Suomi","Republic of Finland","Suomen tasavalta","Republiken Finland"],region:"Europe",subregion:"Northern Europe",languages:{fin:"Finnish",swe:"Swedish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0641\u0646\u0644\u0646\u062F\u0627",common:"\u0641\u0646\u0644\u0646\u062F\u0627"},ces:{official:"Finsk\xE1 republika",common:"Finsko"},cym:{official:"Republic of Finland",common:"Finland"},deu:{official:"Republik Finnland",common:"Finnland"},est:{official:"Soome Vabariik",common:"Soome"},fin:{official:"Suomen tasavalta",common:"Suomi"},fra:{official:"R\xE9publique de Finlande",common:"Finlande"},hrv:{official:"Republika Finska",common:"Finska"},hun:{official:"Finn K\xF6zt\xE1rsas\xE1g",common:"Finnorsz\xE1g"},ita:{official:"Repubblica di Finlandia",common:"Finlandia"},jpn:{official:"\u30D5\u30A3\u30F3\u30E9\u30F3\u30C9\u5171\u548C\u56FD",common:"\u30D5\u30A3\u30F3\u30E9\u30F3\u30C9"},kor:{official:"\uD540\uB780\uB4DC \uACF5\uD654\uAD6D",common:"\uD540\uB780\uB4DC"},nld:{official:"Republiek Finland",common:"Finland"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0641\u0646\u0644\u0627\u0646\u062F",common:"\u0641\u0646\u0644\u0627\u0646\u062F"},pol:{official:"Republika Finlandii",common:"Finlandia"},por:{official:"Rep\xFAblica da Finl\xE2ndia",common:"Finl\xE2ndia"},rus:{official:"\u0424\u0438\u043D\u043B\u044F\u043D\u0434\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0424\u0438\u043D\u043B\u044F\u043D\u0434\u0438\u044F"},slk:{official:"F\xEDnska republika",common:"F\xEDnsko"},spa:{official:"Rep\xFAblica de Finlandia",common:"Finlandia"},swe:{official:"Republiken Finland",common:"Finland"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0641\u0646 \u0644\u06CC\u0646\u0688",common:"\u0641\u0646 \u0644\u06CC\u0646\u0688"},zho:{official:"\u82AC\u5170\u5171\u548C\u56FD",common:"\u82AC\u5170"}},latlng:[64,26],landlocked:!1,borders:["NOR","SWE","RUS"],area:338424,demonyms:{eng:{f:"Finnish",m:"Finnish"},fra:{f:"Finlandaise",m:"Finlandais"}},flag:"\u{1F1EB}\u{1F1EE}",maps:{googleMaps:"https://goo.gl/maps/HjgWDCNKRAYHrkMn8",openStreetMaps:"openstreetmap.org/relation/54224"},population:5530719,gini:{"2018":27.3},fifa:"FIN",car:{signs:["FIN"],side:"right"},timezones:["UTC+02:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/fi.png",svg:"https://flagcdn.com/fi.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fi.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fi.svg"},startOfWeek:"monday",capitalInfo:{latlng:[60.17,24.93]},postalCode:{format:"#####",regex:"^(?:FI)*(\\d{5})$"}},{name:{common:"Zimbabwe",official:"Republic of Zimbabwe",nativeName:{bwg:{official:"Republic of Zimbabwe",common:"Zimbabwe"},eng:{official:"Republic of Zimbabwe",common:"Zimbabwe"},kck:{official:"Republic of Zimbabwe",common:"Zimbabwe"},khi:{official:"Republic of Zimbabwe",common:"Zimbabwe"},ndc:{official:"Republic of Zimbabwe",common:"Zimbabwe"},nde:{official:"Republic of Zimbabwe",common:"Zimbabwe"},nya:{official:"Republic of Zimbabwe",common:"Zimbabwe"},sna:{official:"Republic of Zimbabwe",common:"Zimbabwe"},sot:{official:"Republic of Zimbabwe",common:"Zimbabwe"},toi:{official:"Republic of Zimbabwe",common:"Zimbabwe"},tsn:{official:"Republic of Zimbabwe",common:"Zimbabwe"},tso:{official:"Republic of Zimbabwe",common:"Zimbabwe"},ven:{official:"Republic of Zimbabwe",common:"Zimbabwe"},xho:{official:"Republic of Zimbabwe",common:"Zimbabwe"},zib:{official:"Republic of Zimbabwe",common:"Zimbabwe"}}},tld:[".zw"],cca2:"ZW",ccn3:"716",cca3:"ZWE",cioc:"ZIM",independent:!0,status:"officially-assigned",unMember:!0,currencies:{ZWL:{name:"Zimbabwean dollar",symbol:"$"}},idd:{root:"+2",suffixes:["63"]},capital:["Harare"],altSpellings:["ZW","Republic of Zimbabwe"],region:"Africa",subregion:"Southern Africa",languages:{bwg:"Chibarwe",eng:"English",kck:"Kalanga",khi:"Khoisan",ndc:"Ndau",nde:"Northern Ndebele",nya:"Chewa",sna:"Shona",sot:"Sotho",toi:"Tonga",tsn:"Tswana",tso:"Tsonga",ven:"Venda",xho:"Xhosa",zib:"Zimbabwean Sign Language"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0632\u064A\u0645\u0628\u0627\u0628\u0648\u064A",common:"\u0632\u064A\u0645\u0628\u0627\u0628\u0648\u064A"},ces:{official:"Zimbabwsk\xE1 republika",common:"Zimbabwe"},cym:{official:"Republic of Zimbabwe",common:"Zimbabwe"},deu:{official:"Republik Simbabwe",common:"Simbabwe"},est:{official:"Zimbabwe Vabariik",common:"Zimbabwe"},fin:{official:"Zimbabwen tasavalta",common:"Zimbabwe"},fra:{official:"R\xE9publique du Zimbabwe",common:"Zimbabwe"},hrv:{official:"Republika Zimbabve",common:"Zimbabve"},hun:{official:"Zimbabwei K\xF6zt\xE1rsas\xE1g",common:"Zimbabwe"},ita:{official:"Repubblica dello Zimbabwe",common:"Zimbabwe"},jpn:{official:"\u30B8\u30F3\u30D0\u30D6\u30A8\u5171\u548C\u56FD",common:"\u30B8\u30F3\u30D0\u30D6\u30A8"},kor:{official:"\uC9D0\uBC14\uBE0C\uC6E8 \uACF5\uD654\uAD6D",common:"\uC9D0\uBC14\uBE0C\uC6E8"},nld:{official:"Republiek Zimbabwe",common:"Zimbabwe"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0632\u06CC\u0645\u0628\u0627\u0628\u0648\u0647",common:"\u0632\u06CC\u0645\u0628\u0627\u0628\u0648\u0647"},pol:{official:"Republika Zimbabwe",common:"Zimbabwe"},por:{official:"Rep\xFAblica do Zimbabwe",common:"Zimbabwe"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0417\u0438\u043C\u0431\u0430\u0431\u0432\u0435",common:"\u0417\u0438\u043C\u0431\u0430\u0431\u0432\u0435"},slk:{official:"Zimbabwianska republika",common:"Zimbabwe"},spa:{official:"Rep\xFAblica de Zimbabue",common:"Zimbabue"},swe:{official:"Republiken Zimbabwe",common:"Zimbabwe"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0632\u0645\u0628\u0627\u0628\u0648\u06D2",common:"\u0632\u0645\u0628\u0627\u0628\u0648\u06D2"},zho:{official:"\u6D25\u5DF4\u5E03\u97E6\u5171\u548C\u56FD",common:"\u6D25\u5DF4\u5E03\u97E6"}},latlng:[-20,30],landlocked:!0,borders:["BWA","MOZ","ZAF","ZMB"],area:390757,demonyms:{eng:{f:"Zimbabwean",m:"Zimbabwean"},fra:{f:"Zimbabw\xE9enne",m:"Zimbabw\xE9en"}},flag:"\u{1F1FF}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/M26BqdwQctqxXS65A",openStreetMaps:"https://www.openstreetmap.org/relation/195272"},population:14862927,gini:{"2019":50.3},fifa:"ZIM",car:{signs:["ZW"],side:"left"},timezones:["UTC+02:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/zw.png",svg:"https://flagcdn.com/zw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/zw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/zw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-17.82,31.03]}},{name:{common:"Maldives",official:"Republic of the Maldives",nativeName:{div:{official:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0783\u07A7\u0787\u07B0\u0796\u07AD\u078E\u07AC \u0796\u07AA\u0789\u07B0\u0780\u07AB\u0783\u07A8\u0787\u07B0\u0794\u07A7",common:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0783\u07A7\u0787\u07B0\u0796\u07AD\u078E\u07AC"}}},tld:[".mv"],cca2:"MV",ccn3:"462",cca3:"MDV",cioc:"MDV",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MVR:{name:"Maldivian rufiyaa",symbol:".\u0783"}},idd:{root:"+9",suffixes:["60"]},capital:["Mal\xE9"],altSpellings:["MV","Maldive Islands","Republic of the Maldives","Dhivehi Raajjeyge Jumhooriyya"],region:"Asia",subregion:"Southern Asia",languages:{div:"Maldivian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0645\u0627\u0644\u062F\u064A\u0641",common:"\u0627\u0644\u0645\u0627\u0644\u062F\u064A\u0641"},ces:{official:"Maledivsk\xE1 republika",common:"Maledivy"},cym:{official:"Republic of the Maldives",common:"Maldives"},deu:{official:"Republik Malediven",common:"Malediven"},est:{official:"Maldiivi Vabariik",common:"Maldiivid"},fin:{official:"Malediivien tasavalta",common:"Malediivit"},fra:{official:"R\xE9publique des Maldives",common:"Maldives"},hrv:{official:"Republika Maldivi",common:"Maldivi"},hun:{official:"Mald\xEDv-szigetek",common:"Mald\xEDv-szigetek"},ita:{official:"Repubblica delle Maldive",common:"Maldive"},jpn:{official:"\u30E2\u30EB\u30C7\u30A3\u30D6\u5171\u548C\u56FD",common:"\u30E2\u30EB\u30C7\u30A3\u30D6"},kor:{official:"\uBAB0\uB514\uBE0C \uACF5\uD654\uAD6D",common:"\uBAB0\uB514\uBE0C"},nld:{official:"Republiek van de Malediven",common:"Maldiven"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u0627\u0644\u062F\u06CC\u0648",common:"\u0645\u0627\u0644\u062F\u06CC\u0648"},pol:{official:"Republika Malediw\xF3w",common:"Malediwy"},por:{official:"Rep\xFAblica das Maldivas",common:"Maldivas"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041C\u0430\u043B\u044C\u0434\u0438\u0432\u044B",common:"\u041C\u0430\u043B\u044C\u0434\u0438\u0432\u044B"},slk:{official:"Maldivsk\xE1 republika",common:"Maldivy"},spa:{official:"Rep\xFAblica de las Maldivas",common:"Maldivas"},swe:{official:"Republiken Maldiverna",common:"Maldiverna"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0627\u0644\u062F\u06CC\u067E",common:"\u0645\u0627\u0644\u062F\u06CC\u067E"},zho:{official:"\u9A6C\u5C14\u4EE3\u592B\u5171\u548C\u56FD",common:"\u9A6C\u5C14\u4EE3\u592B"}},latlng:[3.25,73],landlocked:!1,area:300,demonyms:{eng:{f:"Maldivan",m:"Maldivan"},fra:{f:"Maldivienne",m:"Maldivien"}},flag:"\u{1F1F2}\u{1F1FB}",maps:{googleMaps:"https://goo.gl/maps/MNAWGq9vEdbZ9vUV7",openStreetMaps:"https://www.openstreetmap.org/relation/536773"},population:540542,gini:{"2016":31.3},fifa:"MDV",car:{signs:["MV"],side:"left"},timezones:["UTC+05:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/mv.png",svg:"https://flagcdn.com/mv.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mv.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mv.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[4.17,73.51]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Singapore",official:"Republic of Singapore",nativeName:{zho:{official:"\u65B0\u52A0\u5761\u5171\u548C\u56FD",common:"\u65B0\u52A0\u5761"},eng:{official:"Republic of Singapore",common:"Singapore"},msa:{official:"Republik Singapura",common:"Singapura"},tam:{official:"\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD \u0B95\u0BC1\u0B9F\u0BBF\u0BAF\u0BB0\u0B9A\u0BC1",common:"\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD"}}},tld:[".sg",".\u65B0\u52A0\u5761",".\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD"],cca2:"SG",ccn3:"702",cca3:"SGP",cioc:"SGP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SGD:{name:"Singapore dollar",symbol:"$"}},idd:{root:"+6",suffixes:["5"]},capital:["Singapore"],altSpellings:["SG","Singapura","Republik Singapura","\u65B0\u52A0\u5761\u5171\u548C\u56FD"],region:"Asia",subregion:"South-Eastern Asia",languages:{zho:"Chinese",eng:"English",msa:"Malay",tam:"Tamil"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u0646\u063A\u0627\u0641\u0648\u0631\u0629",common:"\u0633\u0646\u063A\u0627\u0641\u0648\u0631\u0629"},ces:{official:"Singapursk\xE1 republika",common:"Singapur"},cym:{official:"Republic of Singapore",common:"Singapore"},deu:{official:"Republik Singapur",common:"Singapur"},est:{official:"Singapuri Vabariik",common:"Singapur"},fin:{official:"Singaporen tasavalta",common:"Singapore"},fra:{official:"R\xE9publique de Singapour",common:"Singapour"},hrv:{official:"Republika Singapur",common:"Singapur"},hun:{official:"Szingap\xFAri K\xF6zt\xE1rsas\xE1g",common:"Szingap\xFAr"},ita:{official:"Repubblica di Singapore",common:"Singapore"},jpn:{official:"\u30B7\u30F3\u30AC\u30DD\u30FC\u30EB\u5171\u548C\u56FD",common:"\u30B7\u30F3\u30AC\u30DD\u30FC\u30EB"},kor:{official:"\uC2F1\uAC00\uD3EC\uB974 \uACF5\uD654\uAD6D",common:"\uC2F1\uAC00\uD3EC\uB974"},nld:{official:"Republiek Singapore",common:"Singapore"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u0646\u06AF\u0627\u067E\u0648\u0631",common:"\u0633\u0646\u06AF\u0627\u067E\u0648\u0631"},pol:{official:"Republika Singapuru",common:"Singapur"},por:{official:"Rep\xFAblica de Singapura",common:"Singapura"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0438\u043D\u0433\u0430\u043F\u0443\u0440",common:"\u0421\u0438\u043D\u0433\u0430\u043F\u0443\u0440"},slk:{official:"Singapursk\xE1 republika",common:"Singapur"},spa:{official:"Rep\xFAblica de Singapur",common:"Singapur"},swe:{official:"Republiken Singapore",common:"Singapore"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u0646\u06AF\u0627\u067E\u0648\u0631",common:"\u0633\u0646\u06AF\u0627\u067E\u0648\u0631"}},latlng:[1.36666666,103.8],landlocked:!1,area:710,demonyms:{eng:{f:"Singaporean",m:"Singaporean"},fra:{f:"Singapourienne",m:"Singapourien"}},flag:"\u{1F1F8}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/QbQt9Y9b5KFzsahV6",openStreetMaps:"https://www.openstreetmap.org/relation/536780"},population:5685807,fifa:"SIN",car:{signs:["SGP"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/sg.png",svg:"https://flagcdn.com/sg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[1.28,103.85]},postalCode:{format:"######",regex:"^(\\d{6})$"}},{name:{common:"Monaco",official:"Principality of Monaco",nativeName:{fra:{official:"Principaut\xE9 de Monaco",common:"Monaco"}}},tld:[".mc"],cca2:"MC",ccn3:"492",cca3:"MCO",cioc:"MON",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["77"]},capital:["Monaco"],altSpellings:["MC","Principality of Monaco","Principaut\xE9 de Monaco"],region:"Europe",subregion:"Western Europe",languages:{fra:"French"},translations:{ara:{official:"\u0625\u0645\u0627\u0631\u0629 \u0645\u0648\u0646\u0627\u0643\u0648",common:"\u0645\u0648\u0646\u0627\u0643\u0648"},ces:{official:"Monack\xE9 kn\xED\u017Eectv\xED",common:"Monako"},cym:{official:"Principality of Monaco",common:"Monaco"},deu:{official:"F\xFCrstentum Monaco",common:"Monaco"},est:{official:"Monaco V\xFCrstiriik",common:"Monaco"},fin:{official:"Monacon ruhtinaskunta",common:"Monaco"},fra:{official:"Principaut\xE9 de Monaco",common:"Monaco"},hrv:{official:"Kne\u017Eevina Monako",common:"Monako"},hun:{official:"Monac\xF3i Hercegs\xE9g",common:"Monaco"},ita:{official:"Principato di Monaco",common:"Principato di Monaco"},jpn:{official:"\u30E2\u30CA\u30B3\u516C\u56FD",common:"\u30E2\u30CA\u30B3"},kor:{official:"\uBAA8\uB098\uCF54 \uACF5\uAD6D",common:"\uBAA8\uB098\uCF54"},nld:{official:"Vorstendom Monaco",common:"Monaco"},per:{official:"\u0634\u0627\u0647\u0632\u0627\u062F\u0647\u200C\u0646\u0634\u06CC\u0646 \u0645\u0648\u0646\u0627\u06A9\u0648",common:"\u0645\u0648\u0646\u0627\u06A9\u0648"},pol:{official:"Ksi\u0119stwo Monako",common:"Monako"},por:{official:"Principado do M\xF3naco",common:"M\xF3naco"},rus:{official:"\u041A\u043D\u044F\u0436\u0435\u0441\u0442\u0432\u043E \u041C\u043E\u043D\u0430\u043A\u043E",common:"\u041C\u043E\u043D\u0430\u043A\u043E"},slk:{official:"Monack\xE9 knie\u017Eatstvo",common:"Monako"},spa:{official:"Principado de M\xF3naco",common:"M\xF3naco"},swe:{official:"Furstend\xF6met Monaco",common:"Monaco"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0645\u0646\u0627\u06A9\u0648",common:"\u0645\u0648\u0646\u0627\u06A9\u0648"},zho:{official:"\u6469\u7EB3\u54E5\u516C\u56FD",common:"\u6469\u7EB3\u54E5"}},latlng:[43.73333333,7.4],landlocked:!1,borders:["FRA"],area:2.02,demonyms:{eng:{f:"Monegasque",m:"Monegasque"},fra:{f:"Mon\xE9gasque",m:"Mon\xE9gasque"}},flag:"\u{1F1F2}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/DGpndDot28bYdXYn7",openStreetMaps:"https://www.openstreetmap.org/relation/1124039"},population:39244,car:{signs:["MC"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/mc.png",svg:"https://flagcdn.com/mc.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[43.73,7.42]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Angola",official:"Republic of Angola",nativeName:{por:{official:"Rep\xFAblica de Angola",common:"Angola"}}},tld:[".ao"],cca2:"AO",ccn3:"024",cca3:"AGO",cioc:"ANG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{AOA:{name:"Angolan kwanza",symbol:"Kz"}},idd:{root:"+2",suffixes:["44"]},capital:["Luanda"],altSpellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an'\u0261\u0254la"],region:"Africa",subregion:"Middle Africa",languages:{por:"Portuguese"},translations:{ara:{official:"\u0623\u0646\u063A\u0648\u0644\u0627",common:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0646\u063A\u0648\u0644\u0627"},ces:{official:"Angolsk\xE1 republika",common:"Angola"},cym:{official:"Gweriniaeth Angola",common:"Angola"},deu:{official:"Republik Angola",common:"Angola"},est:{official:"Angola Vabariik",common:"Angola"},fin:{official:"Angolan tasavalta",common:"Angola"},fra:{official:"R\xE9publique d'Angola",common:"Angola"},hrv:{official:"Republika Angola",common:"Angola"},hun:{official:"Angola",common:"Angola"},ita:{official:"Repubblica dell'Angola",common:"Angola"},jpn:{official:"\u30A2\u30F3\u30B4\u30E9\u5171\u548C\u56FD",common:"\u30A2\u30F3\u30B4\u30E9"},kor:{official:"\uC559\uACE8\uB77C \uACF5\uD654\uAD6D",common:"\uC559\uACE8\uB77C"},nld:{official:"Republiek Angola",common:"Angola"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0646\u06AF\u0648\u0644\u0627",common:"\u0622\u0646\u06AF\u0648\u0644\u0627"},pol:{official:"Republika Angoli",common:"Angola"},por:{official:"Rep\xFAblica de Angola",common:"Angola"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0410\u043D\u0433\u043E\u043B\u0430",common:"\u0410\u043D\u0433\u043E\u043B\u0430"},slk:{official:"Angolsk\xE1 republika",common:"Angola"},spa:{official:"Rep\xFAblica de Angola",common:"Angola"},swe:{official:"Republiken Angola",common:"Angola"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0646\u06AF\u0648\u0644\u06C1",common:"\u0627\u0646\u06AF\u0648\u0644\u06C1"},zho:{official:"\u5B89\u54E5\u62C9\u5171\u548C\u56FD",common:"\u5B89\u54E5\u62C9"}},latlng:[-12.5,18.5],landlocked:!1,borders:["COG","COD","ZMB","NAM"],area:1246700,demonyms:{eng:{f:"Angolan",m:"Angolan"},fra:{f:"Angolaise",m:"Angolais"}},flag:"\u{1F1E6}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/q42Qbf1BmQL3fuZg9",openStreetMaps:"https://www.openstreetmap.org/relation/195267"},population:32866268,gini:{"2018":51.3},fifa:"ANG",car:{signs:["ANG"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ao.png",svg:"https://flagcdn.com/ao.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ao.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ao.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-8.83,13.22]}},{name:{common:"Malaysia",official:"Malaysia",nativeName:{eng:{official:"Malaysia",common:"Malaysia"},msa:{official:"\u0645\u0644\u064A\u0633\u064A\u0627",common:"\u0645\u0644\u064A\u0633\u064A\u0627"}}},tld:[".my"],cca2:"MY",ccn3:"458",cca3:"MYS",cioc:"MAS",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MYR:{name:"Malaysian ringgit",symbol:"RM"}},idd:{root:"+6",suffixes:["0"]},capital:["Kuala Lumpur"],altSpellings:["MY"],region:"Asia",subregion:"South-Eastern Asia",languages:{eng:"English",msa:"Malay"},translations:{ara:{official:"\u0645\u0627\u0644\u064A\u0632\u064A\u0627",common:"\u0645\u0627\u0644\u064A\u0632\u064A\u0627"},ces:{official:"Malajsie",common:"Malajsie"},cym:{official:"Malaysia",common:"Malaysia"},deu:{official:"Malaysia",common:"Malaysia"},est:{official:"Malaisia",common:"Malaisia"},fin:{official:"Malesia",common:"Malesia"},fra:{official:"F\xE9d\xE9ration de Malaisie",common:"Malaisie"},hrv:{official:"Malezija",common:"Malezija"},hun:{official:"Malajzia",common:"Malajzia"},ita:{official:"Malaysia",common:"Malesia"},jpn:{official:"\u30DE\u30EC\u30FC\u30B7\u30A2",common:"\u30DE\u30EC\u30FC\u30B7\u30A2"},kor:{official:"\uB9D0\uB808\uC774\uC2DC\uC544",common:"\uB9D0\uB808\uC774\uC2DC\uC544"},nld:{official:"Maleisi\xEB",common:"Maleisi\xEB"},per:{official:"\u0641\u062F\u0631\u0627\u0633\u06CC\u0648\u0646 \u0645\u0627\u0644\u0632\u06CC",common:"\u0645\u0627\u0644\u0632\u06CC"},pol:{official:"Malezja",common:"Malezja"},por:{official:"Mal\xE1sia",common:"Mal\xE1sia"},rus:{official:"\u041C\u0430\u043B\u0430\u0439\u0437\u0438\u044F",common:"\u041C\u0430\u043B\u0430\u0439\u0437\u0438\u044F"},slk:{official:"Malajzia",common:"Malajzia"},spa:{official:"Malasia",common:"Malasia"},swe:{official:"Malaysia",common:"Malaysia"},urd:{official:"\u0645\u0644\u0627\u0626\u06CC\u0634\u06CC\u0627",common:"\u0645\u0644\u0627\u0626\u06CC\u0634\u06CC\u0627"},zho:{official:"\u9A6C\u6765\u897F\u4E9A",common:"\u9A6C\u6765\u897F\u4E9A"}},latlng:[2.5,112.5],landlocked:!1,borders:["BRN","IDN","THA"],area:330803,demonyms:{eng:{f:"Malaysian",m:"Malaysian"},fra:{f:"Malaisienne",m:"Malaisien"}},flag:"\u{1F1F2}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/qrY1PNeUXGyXDcPy6",openStreetMaps:"https://www.openstreetmap.org/relation/2108121"},population:32365998,gini:{"2015":41.1},fifa:"MAS",car:{signs:["MAL"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/my.png",svg:"https://flagcdn.com/my.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/my.png",svg:"https://mainfacts.com/media/images/coats_of_arms/my.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[3.17,101.7]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Luxembourg",official:"Grand Duchy of Luxembourg",nativeName:{deu:{official:"Gro\xDFherzogtum Luxemburg",common:"Luxemburg"},fra:{official:"Grand-Duch\xE9 de Luxembourg",common:"Luxembourg"},ltz:{official:"Groussherzogtum L\xEBtzebuerg",common:"L\xEBtzebuerg"}}},tld:[".lu"],cca2:"LU",ccn3:"442",cca3:"LUX",cioc:"LUX",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["52"]},capital:["Luxembourg"],altSpellings:["LU","Grand Duchy of Luxembourg","Grand-Duch\xE9 de Luxembourg","Gro\xDFherzogtum Luxemburg","Groussherzogtum L\xEBtzebuerg"],region:"Europe",subregion:"Western Europe",languages:{deu:"German",fra:"French",ltz:"Luxembourgish"},translations:{ara:{official:"\u062F\u0648\u0642\u064A\u0629 \u0644\u0648\u0643\u0633\u0645\u0628\u0648\u0631\u063A",common:"\u0644\u0648\u0643\u0633\u0645\u0628\u0648\u0631\u063A"},ces:{official:"Lucembursk\xE9 velkov\xE9vodstv\xED",common:"Lucembursko"},cym:{official:"Grand Duchy of Luxembourg",common:"Luxembourg"},deu:{official:"Gro\xDFherzogtum Luxemburg,",common:"Luxemburg"},est:{official:"Luksemburgi Suurhertsogiriik",common:"Luksemburg"},fin:{official:"Luxemburgin suurherttuakunta",common:"Luxemburg"},fra:{official:"Grand-Duch\xE9 de Luxembourg",common:"Luxembourg"},hrv:{official:"Veliko Vojvodstvo Luksemburg",common:"Luksemburg"},hun:{official:"Luxemburgi Nagyhercegs\xE9g",common:"Luxemburg"},ita:{official:"Granducato di Lussemburgo",common:"Lussemburgo"},jpn:{official:"\u30EB\u30AF\u30BB\u30F3\u30D6\u30EB\u30AF\u5927\u516C\u56FD",common:"\u30EB\u30AF\u30BB\u30F3\u30D6\u30EB\u30AF"},kor:{official:"\uB8E9\uC148\uBD80\uB974\uD06C \uB300\uACF5\uAD6D",common:"\uB8E9\uC148\uBD80\uB974\uD06C"},nld:{official:"Groothertogdom Luxemburg",common:"Luxemburg"},per:{official:"\u062F\u0648\u06A9\u200C\u0646\u0634\u06CC\u0646 \u0644\u0648\u06A9\u0632\u0627\u0645\u0628\u0648\u0631\u06AF",common:"\u0644\u0648\u06A9\u0632\u0627\u0645\u0628\u0648\u0631\u06AF"},pol:{official:"Wielkie Ksi\u0119stwo Luksemburga",common:"Luksemburg"},por:{official:"Gr\xE3o-Ducado do Luxemburgo",common:"Luxemburgo"},rus:{official:"\u0412\u0435\u043B\u0438\u043A\u043E\u0435 \u0413\u0435\u0440\u0446\u043E\u0433\u0441\u0442\u0432\u043E \u041B\u044E\u043A\u0441\u0435\u043C\u0431\u0443\u0440\u0433",common:"\u041B\u044E\u043A\u0441\u0435\u043C\u0431\u0443\u0440\u0433"},slk:{official:"Luxembursk\xE9 ve\u013Ekovojvodstvo",common:"Luxembursko"},spa:{official:"Gran Ducado de Luxemburgo",common:"Luxemburgo"},swe:{official:"Storhertigd\xF6met Luxemburg",common:"Luxemburg"},urd:{official:"\u062F\u0648\u0642\u06CC\u06C1 \u06A9\u0628\u06CC\u0631\u0644\u06A9\u0633\u0645\u0628\u0631\u06AF",common:"\u0644\u06A9\u0633\u0645\u0628\u0631\u06AF"},zho:{official:"\u5362\u68EE\u5821\u5927\u516C\u56FD",common:"\u5362\u68EE\u5821"}},latlng:[49.75,6.16666666],landlocked:!0,borders:["BEL","FRA","DEU"],area:2586,demonyms:{eng:{f:"Luxembourger",m:"Luxembourger"},fra:{f:"Luxembourgeoise",m:"Luxembourgeois"}},flag:"\u{1F1F1}\u{1F1FA}",maps:{googleMaps:"https://goo.gl/maps/L6b2AgndgHprt2Ko9",openStreetMaps:"https://www.openstreetmap.org/relation/2171347#map=10/49.8167/6.1335"},population:632275,gini:{"2018":35.4},fifa:"LUX",car:{signs:["L"],side:"right"},timezones:["UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/lu.png",svg:"https://flagcdn.com/lu.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/lu.png",svg:"https://mainfacts.com/media/images/coats_of_arms/lu.svg"},startOfWeek:"monday",capitalInfo:{latlng:[49.6,6.12]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Guinea",official:"Republic of Guinea",nativeName:{fra:{official:"R\xE9publique de Guin\xE9e",common:"Guin\xE9e"}}},tld:[".gn"],cca2:"GN",ccn3:"324",cca3:"GIN",cioc:"GUI",independent:!0,status:"officially-assigned",unMember:!0,currencies:{GNF:{name:"Guinean franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["24"]},capital:["Conakry"],altSpellings:["GN","Republic of Guinea","R\xE9publique de Guin\xE9e"],region:"Africa",subregion:"Western Africa",languages:{fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u064A\u0646\u064A\u0627",common:"\u063A\u064A\u0646\u064A\u0627"},ces:{official:"Guinejsk\xE1 republika",common:"Guinea"},cym:{official:"Republic of Guinea",common:"Guinea"},deu:{official:"Republik Guinea",common:"Guinea"},est:{official:"Guinea Vabariik",common:"Guinea"},fin:{official:"Guinean tasavalta",common:"Guinea"},fra:{official:"R\xE9publique de Guin\xE9e",common:"Guin\xE9e"},hrv:{official:"Republika Gvineja",common:"Gvineja"},hun:{official:"Guineai K\xF6zt\xE1rsas\xE1g",common:"Guinea"},ita:{official:"Repubblica di Guinea",common:"Guinea"},jpn:{official:"\u30AE\u30CB\u30A2\u5171\u548C\u56FD",common:"\u30AE\u30CB\u30A2"},kor:{official:"\uAE30\uB2C8 \uACF5\uD654\uAD6D",common:"\uAE30\uB2C8"},nld:{official:"Republiek Guinee",common:"Guinee"},per:{official:"\u0645\u0645\u0644\u06A9\u062A \u0645\u0633\u062A\u0642\u0644 \u067E\u0627\u067E\u0648\u0622 \u06AF\u06CC\u0646\u0647 \u0646\u0648",common:"\u067E\u0627\u067E\u0648\u0622 \u06AF\u06CC\u0646\u0647 \u0646\u0648"},pol:{official:"Republika Gwinei",common:"Gwinea"},por:{official:"Rep\xFAblica da Guin\xE9",common:"Guin\xE9"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0432\u0438\u043D\u0435\u044F",common:"\u0413\u0432\u0438\u043D\u0435\u044F"},slk:{official:"Guinejsk\xE1 republika",common:"Guinea"},spa:{official:"Rep\xFAblica de Guinea",common:"Guinea"},swe:{official:"Republiken Guinea",common:"Guinea"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u0646\u06CC",common:"\u06AF\u0646\u06CC"},zho:{official:"\u51E0\u5185\u4E9A\u5171\u548C\u56FD",common:"\u51E0\u5185\u4E9A"}},latlng:[11,-10],landlocked:!1,borders:["CIV","GNB","LBR","MLI","SEN","SLE"],area:245857,demonyms:{eng:{f:"Guinean",m:"Guinean"},fra:{f:"Guin\xE9enne",m:"Guin\xE9en"}},flag:"\u{1F1EC}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/8J5oM5sA4Ayr1ZYGA",openStreetMaps:"https://www.openstreetmap.org/relation/192778"},population:13132792,gini:{"2012":33.7},fifa:"GUI",car:{signs:["RG"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gn.png",svg:"https://flagcdn.com/gn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[9.5,-13.7]}},{name:{common:"Libya",official:"State of Libya",nativeName:{ara:{official:"\u0627\u0644\u062F\u0648\u0644\u0629 \u0644\u064A\u0628\u064A\u0627",common:"\u200F\u0644\u064A\u0628\u064A\u0627"}}},tld:[".ly"],cca2:"LY",ccn3:"434",cca3:"LBY",cioc:"LBA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{LYD:{name:"Libyan dinar",symbol:"\u0644.\u062F"}},idd:{root:"+2",suffixes:["18"]},capital:["Tripoli"],altSpellings:["LY","State of Libya","Dawlat Libya"],region:"Africa",subregion:"Northern Africa",languages:{ara:"Arabic"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0644\u064A\u0628\u064A\u0627",common:"\u200F\u0644\u064A\u0628\u064A\u0627"},ces:{official:"St\xE1t Libye",common:"Libye"},cym:{official:"State of Libya",common:"Libya"},deu:{official:"Staat Libyen",common:"Libyen"},est:{official:"Liib\xFCa",common:"Liib\xFCa"},fin:{official:"Libyan valtio",common:"Libya"},fra:{official:"Grande R\xE9publique arabe libyenne populaire et socialiste",common:"Libye"},hrv:{official:"Dr\u017Eava Libiji",common:"Libija"},hun:{official:"L\xEDbia \xC1llam",common:"L\xEDbia"},ita:{official:"Stato della Libia",common:"Libia"},jpn:{official:"\u30EA\u30D3\u30A2\u306E\u56FD\u5BB6",common:"\u30EA\u30D3\u30A2"},kor:{official:"\uB9AC\uBE44\uC544",common:"\uB9AC\uBE44\uC544"},nld:{official:"Staat van Libi\xEB",common:"Libi\xEB"},per:{official:"\u062F\u0648\u0644\u062A \u0644\u06CC\u0628\u06CC",common:"\u0644\u06CC\u0628\u06CC"},pol:{official:"Pa\u0144stwo Libia",common:"Libia"},por:{official:"Estado da L\xEDbia",common:"L\xEDbia"},rus:{official:"\u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u041B\u0438\u0432\u0438\u0438",common:"\u041B\u0438\u0432\u0438\u044F"},slk:{official:"L\xEDbya",common:"L\xEDbya"},spa:{official:"Estado de Libia",common:"Libia"},swe:{official:"Staten Libyen",common:"Libyen"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u0644\u06CC\u0628\u06CC\u0627",common:"\u0644\u06CC\u0628\u06CC\u0627"},zho:{official:"\u5229\u6BD4\u4E9A\u56FD",common:"\u5229\u6BD4\u4E9A"}},latlng:[25,17],landlocked:!1,borders:["DZA","TCD","EGY","NER","SDN","TUN"],area:1759540,demonyms:{eng:{f:"Libyan",m:"Libyan"},fra:{f:"Libyenne",m:"Libyen"}},flag:"\u{1F1F1}\u{1F1FE}",maps:{googleMaps:"https://goo.gl/maps/eLgGnaQWcJEdYRMy5",openStreetMaps:"openstreetmap.org/relation/192758"},population:6871287,fifa:"LBY",car:{signs:["LAR"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/ly.png",svg:"https://flagcdn.com/ly.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/ly.png",svg:"https://mainfacts.com/media/images/coats_of_arms/ly.svg"},startOfWeek:"sunday",capitalInfo:{latlng:[32.88,13.17]}},{name:{common:"Spain",official:"Kingdom of Spain",nativeName:{spa:{official:"Reino de Espa\xF1a",common:"Espa\xF1a"}}},tld:[".es"],cca2:"ES",ccn3:"724",cca3:"ESP",cioc:"ESP",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["4"]},capital:["Madrid"],altSpellings:["ES","Kingdom of Spain","Reino de Espa\xF1a"],region:"Europe",subregion:"Southern Europe",languages:{spa:"Spanish"},translations:{ara:{official:"\u0645\u0645\u0644\u0643\u0629 \u0625\u0633\u0628\u0627\u0646\u064A\u0627",common:"\u0625\u0633\u0628\u0627\u0646\u064A\u0627"},ces:{official:"\u0160pan\u011Blsk\xE9 kr\xE1lovstv\xED",common:"\u0160pan\u011Blsko"},cym:{official:"Kingdom of Spain",common:"Spain"},deu:{official:"K\xF6nigreich Spanien",common:"Spanien"},est:{official:"Hispaania Kuningriik",common:"Hispaania"},fin:{official:"Espanjan kuningaskunta",common:"Espanja"},fra:{official:"Royaume d'Espagne",common:"Espagne"},hrv:{official:"Kraljevina \u0160panjolska",common:"\u0160panjolska"},hun:{official:"Spanyol Kir\xE1lys\xE1g",common:"Spanyolorsz\xE1g"},ita:{official:"Regno di Spagna",common:"Spagna"},jpn:{official:"\u30B9\u30DA\u30A4\u30F3\u738B\u56FD",common:"\u30B9\u30DA\u30A4\u30F3"},kor:{official:"\uC5D0\uC2A4\uD30C\uB0D0 \uC655\uAD6D",common:"\uC2A4\uD398\uC778"},nld:{official:"Koninkrijk Spanje",common:"Spanje"},per:{official:"\u067E\u0627\u062F\u0634\u0627\u0647\u06CC \u0627\u0633\u067E\u0627\u0646\u06CC\u0627",common:"\u0627\u0633\u067E\u0627\u0646\u06CC\u0627"},pol:{official:"Kr\xF3lestwo Hiszpanii ",common:"Hiszpania"},por:{official:"Reino de Espanha",common:"Espanha"},rus:{official:"\u041A\u043E\u0440\u043E\u043B\u0435\u0432\u0441\u0442\u0432\u043E \u0418\u0441\u043F\u0430\u043D\u0438\u044F",common:"\u0418\u0441\u043F\u0430\u043D\u0438\u044F"},slk:{official:"\u0160panielske kr\xE1\u013Eovstvo",common:"\u0160panielsko"},spa:{official:"Reino de Espa\xF1a",common:"Espa\xF1a"},swe:{official:"Konungariket Spanien",common:"Spanien"},urd:{official:"\u0645\u0645\u0644\u06A9\u062A\u0650 \u06C1\u0633\u067E\u0627\u0646\u06CC\u06C1",common:"\u06C1\u0633\u067E\u0627\u0646\u06CC\u06C1"},zho:{official:"\u897F\u73ED\u7259\u738B\u56FD",common:"\u897F\u73ED\u7259"}},latlng:[40,-4],landlocked:!1,borders:["AND","FRA","GIB","PRT","MAR"],area:505992,demonyms:{eng:{f:"Spanish",m:"Spanish"},fra:{f:"Espagnole",m:"Espagnol"}},flag:"\u{1F1EA}\u{1F1F8}",maps:{googleMaps:"https://goo.gl/maps/138JaXW8EZzRVitY9",openStreetMaps:"https://www.openstreetmap.org/relation/1311341"},population:47351567,gini:{"2018":34.7},fifa:"ESP",car:{signs:["E"],side:"right"},timezones:["UTC","UTC+01:00"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/es.png",svg:"https://flagcdn.com/es.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/es.png",svg:"https://mainfacts.com/media/images/coats_of_arms/es.svg"},startOfWeek:"monday",capitalInfo:{latlng:[40.4,-3.68]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Indonesia",official:"Republic of Indonesia",nativeName:{ind:{official:"Republik Indonesia",common:"Indonesia"}}},tld:[".id"],cca2:"ID",ccn3:"360",cca3:"IDN",cioc:"INA",independent:!0,status:"officially-assigned",unMember:!0,currencies:{IDR:{name:"Indonesian rupiah",symbol:"Rp"}},idd:{root:"+6",suffixes:["2"]},capital:["Jakarta"],altSpellings:["ID","Republic of Indonesia","Republik Indonesia"],region:"Asia",subregion:"South-Eastern Asia",languages:{ind:"Indonesian"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0625\u0646\u062F\u0648\u0646\u064A\u0633\u064A\u0627",common:"\u0625\u0646\u062F\u0648\u0646\u064A\u0633\u064A\u0627"},ces:{official:"Indon\xE9sk\xE1 republika",common:"Indon\xE9sie"},cym:{official:"Republic of Indonesia",common:"Indonesia"},deu:{official:"Republik Indonesien",common:"Indonesien"},est:{official:"Indoneesia Vabariik",common:"Indoneesia"},fin:{official:"Indonesian tasavalta",common:"Indonesia"},fra:{official:"R\xE9publique d'Indon\xE9sie",common:"Indon\xE9sie"},hrv:{official:"Republika Indonezija",common:"Indonezija"},hun:{official:"Indon\xE9z K\xF6zt\xE1rsas\xE1g",common:"Indon\xE9zia"},ita:{official:"Repubblica di Indonesia",common:"Indonesia"},jpn:{official:"\u30A4\u30F3\u30C9\u30CD\u30B7\u30A2\u5171\u548C\u56FD",common:"\u30A4\u30F3\u30C9\u30CD\u30B7\u30A2"},kor:{official:"\uC778\uB3C4\uB124\uC2DC\uC544 \uACF5\uD654\uAD6D",common:"\uC778\uB3C4\uB124\uC2DC\uC544"},nld:{official:"Republiek Indonesi\xEB",common:"Indonesi\xEB"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0627\u0646\u062F\u0648\u0646\u0632\u06CC",common:"\u0627\u0646\u062F\u0648\u0646\u0632\u06CC"},pol:{official:"Republika Indonezji",common:"Indonezja"},por:{official:"Rep\xFAblica da Indon\xE9sia",common:"Indon\xE9sia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0418\u043D\u0434\u043E\u043D\u0435\u0437\u0438\u044F",common:"\u0418\u043D\u0434\u043E\u043D\u0435\u0437\u0438\u044F"},slk:{official:"Indon\xE9zska republika",common:"Indon\xE9zia"},spa:{official:"Rep\xFAblica de Indonesia",common:"Indonesia"},swe:{official:"Republiken Indonesien",common:"Indonesien"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0627\u0646\u0688\u0648\u0646\u06CC\u0634\u06CC\u0627",common:"\u0627\u0646\u0688\u0648\u0646\u06CC\u0634\u06CC\u0627"},zho:{official:"\u5370\u5EA6\u5C3C\u897F\u4E9A\u5171\u548C\u56FD",common:"\u5370\u5EA6\u5C3C\u897F\u4E9A"}},latlng:[-5,120],landlocked:!1,borders:["TLS","MYS","PNG"],area:1904569,demonyms:{eng:{f:"Indonesian",m:"Indonesian"},fra:{f:"Indon\xE9sienne",m:"Indon\xE9sien"}},flag:"\u{1F1EE}\u{1F1E9}",maps:{googleMaps:"https://goo.gl/maps/9gfPupm5bffixiFJ6",openStreetMaps:"https://www.openstreetmap.org/relation/21335"},population:273523621,gini:{"2019":38.2},fifa:"IDN",car:{signs:["RI"],side:"left"},timezones:["UTC+07:00","UTC+08:00","UTC+09:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/id.png",svg:"https://flagcdn.com/id.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/id.png",svg:"https://mainfacts.com/media/images/coats_of_arms/id.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-6.17,106.82]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Seychelles",official:"Republic of Seychelles",nativeName:{crs:{official:"Repiblik Sesel",common:"Sesel"},eng:{official:"Republic of Seychelles",common:"Seychelles"},fra:{official:"R\xE9publique des Seychelles",common:"Seychelles"}}},tld:[".sc"],cca2:"SC",ccn3:"690",cca3:"SYC",cioc:"SEY",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SCR:{name:"Seychellois rupee",symbol:"\u20A8"}},idd:{root:"+2",suffixes:["48"]},capital:["Victoria"],altSpellings:["SC","Republic of Seychelles","Repiblik Sesel","R\xE9publique des Seychelles"],region:"Africa",subregion:"Eastern Africa",languages:{crs:"Seychellois Creole",eng:"English",fra:"French"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u064A\u0634\u0644",common:"\u0633\u064A\u0634\u0644"},ces:{official:"Seychelsk\xE1 republika",common:"Seychely"},cym:{official:"Republic of Seychelles",common:"Seychelles"},deu:{official:"Republik der Seychellen",common:"Seychellen"},est:{official:"Sei\u0161elli Vabariik",common:"Sei\u0161ellid"},fin:{official:"Seychellien tasavalta",common:"Seychellit"},fra:{official:"R\xE9publique des Seychelles",common:"Seychelles"},hrv:{official:"Republika Sej\u0161eli",common:"Sej\u0161eli"},hun:{official:"Seychelle K\xF6zt\xE1rsas\xE1g",common:"Seychelle-szigetek"},ita:{official:"Repubblica delle Seychelles",common:"Seychelles"},jpn:{official:"\u30BB\u30A4\u30B7\u30A7\u30EB\u5171\u548C\u56FD",common:"\u30BB\u30FC\u30B7\u30A7\u30EB"},kor:{official:"\uC138\uC774\uC178 \uACF5\uD654\uAD6D",common:"\uC138\uC774\uC178"},nld:{official:"Republiek der Seychellen",common:"Seychellen"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u06CC\u0634\u0644",common:"\u0633\u06CC\u0634\u0644"},pol:{official:"Republika Seszeli",common:"Seszele"},por:{official:"Rep\xFAblica das Seychelles",common:"Seicheles"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u0435\u0439\u0448\u0435\u043B\u044C\u0441\u043A\u0438\u0435 \u041E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0421\u0435\u0439\u0448\u0435\u043B\u044C\u0441\u043A\u0438\u0435 \u041E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Seychelsk\xE1 republika",common:"Seychely"},spa:{official:"Rep\xFAblica de las Seychelles",common:"Seychelles"},swe:{official:"Republiken Seychellerna",common:"Seychellerna"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u06CC\u0686\u06CC\u0644\u06CC\u0633",common:"\u0633\u06CC\u0686\u06CC\u0644\u06CC\u0633"},zho:{official:"\u585E\u820C\u5C14\u5171\u548C\u56FD",common:"\u585E\u820C\u5C14"}},latlng:[-4.58333333,55.66666666],landlocked:!1,area:452,demonyms:{eng:{f:"Seychellois",m:"Seychellois"},fra:{f:"Seychelloise",m:"Seychellois"}},flag:"\u{1F1F8}\u{1F1E8}",maps:{googleMaps:"https://goo.gl/maps/aqCcy2TKh5TV5MAX8",openStreetMaps:"https://www.openstreetmap.org/relation/536765"},population:98462,gini:{"2018":32.1},fifa:"SEY",car:{signs:["SY"],side:"left"},timezones:["UTC+04:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sc.png",svg:"https://flagcdn.com/sc.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sc.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sc.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-4.62,55.45]}},{name:{common:"Brunei",official:"Nation of Brunei, Abode of Peace",nativeName:{msa:{official:"Nation of Brunei, Abode Damai",common:"Negara Brunei Darussalam"}}},tld:[".bn"],cca2:"BN",ccn3:"096",cca3:"BRN",cioc:"BRU",independent:!0,status:"officially-assigned",unMember:!0,currencies:{BND:{name:"Brunei dollar",symbol:"$"},SGD:{name:"Singapore dollar",symbol:"$"}},idd:{root:"+6",suffixes:["73"]},capital:["Bandar Seri Begawan"],altSpellings:["BN","Brunei Darussalam","Nation of Brunei","the Abode of Peace"],region:"Asia",subregion:"South-Eastern Asia",languages:{msa:"Malay"},translations:{ara:{official:"\u0628\u0631\u0648\u0646\u0627\u064A \u062F\u0627\u0631 \u0627\u0644\u0633\u0644\u0627\u0645",common:"\u0628\u0631\u0648\u0646\u0627\u064A"},ces:{official:"Sultan\xE1t Brunej",common:"Brunej"},cym:{official:"Teyrnas Brwnei",common:"Brunei"},deu:{official:"Sultanat Brunei Darussalam",common:"Brunei"},est:{official:"Brunei Darussalami Riik",common:"Brunei"},fin:{official:"Brunei Darussalamin valtio",common:"Brunei"},fra:{official:"\xC9tat de Brunei Darussalam",common:"Brunei"},hrv:{official:"Nacija od Bruneja, Ku\u0107u Mira",common:"Brunej"},hun:{official:"Brunei Szultan\xE1tus",common:"Brunei"},ita:{official:"Nazione di Brunei, Dimora della Pace",common:"Brunei"},jpn:{official:"\u30D6\u30EB\u30CD\u30A4\u3001\u5E73\u548C\u306E\u7CBE\u820E\u306E\u56FD\u5BB6",common:"\u30D6\u30EB\u30CD\u30A4\u30FB\u30C0\u30EB\u30B5\u30E9\u30FC\u30E0"},kor:{official:"\uBE0C\uB8E8\uB098\uC774 \uB2E4\uB8E8\uC0B4\uB78C\uAD6D",common:"\uBE0C\uB8E8\uB098\uC774"},nld:{official:"Natie van Brunei, de verblijfplaats van de Vrede",common:"Brunei"},per:{official:"\u0628\u0631\u0648\u0646\u0626\u06CC \u0633\u0631\u0627\u06CC \u0635\u0644\u062D",common:"\u0628\u0631\u0648\u0646\u0626\u06CC"},pol:{official:"Pa\u0144stwo Brunei Darussalam",common:"Brunei"},por:{official:"Na\xE7\xE3o do Brunei, Morada da Paz",common:"Brunei"},rus:{official:"\u041D\u0430\u0446\u0438\u044F \u0411\u0440\u0443\u043D\u0435\u0439, \u043E\u0431\u0438\u0442\u0435\u043B\u044C \u043C\u0438\u0440\u0430",common:"\u0411\u0440\u0443\u043D\u0435\u0439"},slk:{official:"Brunejsk\xFD sultan\xE2t",common:"Brunej"},spa:{official:"Naci\xF3n de Brunei, Morada de la Paz",common:"Brunei"},swe:{official:"Brunei Darussalam",common:"Brunei"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u0650 \u0628\u0631\u0648\u0646\u0627\u0626\u06CC \u062F\u0627\u0631\u0627\u0644\u0633\u0644\u0627\u0645",common:"\u0628\u0631\u0648\u0646\u0627\u0626\u06CC"},zho:{official:"\u6587\u83B1\u548C\u5E73\u4E4B\u56FD",common:"\u6587\u83B1"}},latlng:[4.5,114.66666666],landlocked:!1,borders:["MYS"],area:5765,demonyms:{eng:{f:"Bruneian",m:"Bruneian"},fra:{f:"Brun\xE9ienne",m:"Brun\xE9ien"}},flag:"\u{1F1E7}\u{1F1F3}",maps:{googleMaps:"https://goo.gl/maps/4jb4CqBXhr8vNh579",openStreetMaps:"https://www.openstreetmap.org/relation/2103120"},population:437483,fifa:"BRU",car:{signs:["BRU"],side:"left"},timezones:["UTC+08:00"],continents:["Asia"],flags:{png:"https://flagcdn.com/w320/bn.png",svg:"https://flagcdn.com/bn.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/bn.png",svg:"https://mainfacts.com/media/images/coats_of_arms/bn.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.88,114.93]},postalCode:{format:"@@####",regex:"^([A-Z]{2}\\d{4})$"}},{name:{common:"Mexico",official:"United Mexican States",nativeName:{spa:{official:"Estados Unidos Mexicanos",common:"M\xE9xico"}}},tld:[".mx"],cca2:"MX",ccn3:"484",cca3:"MEX",cioc:"MEX",independent:!0,status:"officially-assigned",unMember:!0,currencies:{MXN:{name:"Mexican peso",symbol:"$"}},idd:{root:"+5",suffixes:["2"]},capital:["Mexico City"],altSpellings:["MX","Mexicanos","United Mexican States","Estados Unidos Mexicanos"],region:"Americas",subregion:"North America",languages:{spa:"Spanish"},translations:{ara:{official:"\u0627\u0644\u0648\u0644\u0627\u064A\u0627\u062A \u0627\u0644\u0645\u062A\u062D\u062F\u0629 \u0627\u0644\u0645\u0643\u0633\u064A\u0643\u064A\u0629",common:"\u0627\u0644\u0645\u0633\u0643\u064A\u0643"},ces:{official:"Spojen\xE9 st\xE1ty mexick\xE9",common:"Mexiko"},cym:{official:"United Mexican States",common:"Mexico"},deu:{official:"Vereinigte Mexikanische Staaten",common:"Mexiko"},est:{official:"Mehhiko \xDChendriigid",common:"Mehhiko"},fin:{official:"Meksikon yhdysvallat",common:"Meksiko"},fra:{official:"\xC9tats-Unis du Mexique",common:"Mexique"},hrv:{official:"Sjedinjene Meksi\u010Dke Dr\u017Eave",common:"Meksiko"},hun:{official:"Mexik\xF3i Egyes\xFClt \xC1llamok",common:"Mexik\xF3"},ita:{official:"Stati Uniti del Messico",common:"Messico"},jpn:{official:"\u30E1\u30AD\u30B7\u30B3\u5408\u8846\u56FD",common:"\u30E1\u30AD\u30B7\u30B3"},kor:{official:"\uBA55\uC2DC\uCF54 \uD569\uC911\uAD6D",common:"\uBA55\uC2DC\uCF54"},nld:{official:"Verenigde Mexicaanse Staten",common:"Mexico"},per:{official:"\u0627\u06CC\u0627\u0644\u0627\u062A \u0645\u062A\u062D\u062F \u0645\u06A9\u0632\u06CC\u06A9",common:"\u0645\u06A9\u0632\u06CC\u06A9"},pol:{official:"Meksyka\u0144skie Stany Zjednoczone",common:"Meksyk"},por:{official:"Estados Unidos Mexicanos",common:"M\xE9xico"},rus:{official:"\u041C\u0435\u043A\u0441\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0435 \u0421\u043E\u0435\u0434\u0438\u043D\u0451\u043D\u043D\u044B\u0435 \u0428\u0442\u0430\u0442\u044B",common:"\u041C\u0435\u043A\u0441\u0438\u043A\u0430"},slk:{official:"Spojen\xE9 \u0161t\xE1\u0161y mexick\xE9",common:"Mexiko"},spa:{official:"Estados Unidos Mexicanos",common:"M\xE9xico"},swe:{official:"Mexikos f\xF6renta stater",common:"Mexiko"},urd:{official:"\u0631\u06CC\u0627\u0633\u062A\u06C1\u0627\u0626\u06D2 \u0645\u062A\u062D\u062F\u06C1 \u0645\u06CC\u06A9\u0633\u06CC\u06A9\u0648",common:"\u0645\u06CC\u06A9\u0633\u06CC\u06A9\u0648"},zho:{official:"\u58A8\u897F\u54E5\u5408\u4F17\u56FD",common:"\u58A8\u897F\u54E5"}},latlng:[23,-102],landlocked:!1,borders:["BLZ","GTM","USA"],area:1964375,demonyms:{eng:{f:"Mexican",m:"Mexican"},fra:{f:"Mexicaine",m:"Mexicain"}},flag:"\u{1F1F2}\u{1F1FD}",maps:{googleMaps:"https://goo.gl/maps/s5g7imNPMDEePxzbA",openStreetMaps:"https://www.openstreetmap.org/relation/114686"},population:128932753,gini:{"2018":45.4},fifa:"MEX",car:{signs:["MEX"],side:"right"},timezones:["UTC-08:00","UTC-07:00","UTC-06:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/mx.png",svg:"https://flagcdn.com/mx.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/mx.png",svg:"https://mainfacts.com/media/images/coats_of_arms/mx.svg"},startOfWeek:"monday",capitalInfo:{latlng:[19.43,-99.13]},postalCode:{format:"#####",regex:"^(\\d{5})$"}},{name:{common:"Saint Helena, Ascension and Tristan da Cunha",official:"Saint Helena, Ascension and Tristan da Cunha",nativeName:{eng:{official:"Saint Helena, Ascension and Tristan da Cunha",common:"Saint Helena, Ascension and Tristan da Cunha"}}},tld:[".sh",".ac"],cca2:"SH",ccn3:"654",cca3:"SHN",independent:!1,status:"officially-assigned",unMember:!1,currencies:{GBP:{name:"Pound sterling",symbol:"\xA3"},SHP:{name:"Saint Helena pound",symbol:"\xA3"}},idd:{root:"+2",suffixes:["90","47"]},capital:["Jamestown"],altSpellings:["Saint Helena","St. Helena, Ascension and Tristan da Cunha"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"\u0633\u0627\u0646\u062A \u0647\u064A\u0644\u064A\u0646\u0627 \u0648\u0623\u0633\u064A\u0646\u0634\u064A\u0646 \u0648\u062A\u0631\u064A\u0633\u062A\u0627\u0646 \u062F\u0627 \u0643\u0648\u0646\u0627",common:"\u0633\u0627\u0646\u062A \u0647\u064A\u0644\u064A\u0646\u0627 \u0648\u0623\u0633\u064A\u0646\u0634\u064A\u0646 \u0648\u062A\u0631\u064A\u0633\u062A\u0627\u0646 \u062F\u0627 \u0643\u0648\u0646\u0627"},ces:{official:"Svat\xE1 Helena, Ascension a Tristan da Cunha",common:"Svat\xE1 Helena, Ascension a Tristan da Cunha"},cym:{official:"Saint Helena, Ascension and Tristan da Cunha",common:"Saint Helena, Ascension and Tristan da Cunha"},deu:{official:"Sankt Helena, Ascension und Tristan da Cunha",common:"St. Helena, Ascension und Tristan da Cunha"},est:{official:"Saint Helena, Ascension ja Tristan da Cunha",common:"Saint Helena, Ascension ja Tristan da Cunha"},fin:{official:"Saint Helena, Ascension ja Tristan da Cunha",common:"Saint Helena, Ascension ja Tristan da Cunha"},fra:{official:"Sainte-H\xE9l\xE8ne, Ascension et Tristan da Cunha",common:"Sainte-H\xE9l\xE8ne, Ascension et Tristan da Cunha"},hrv:{official:"Sveta Helena",common:"Sveta Helena"},hun:{official:"Szent Ilona",common:"Szent Ilona-sziget"},ita:{official:"Sant'Elena, Ascensione e Tristan da Cunha",common:"Sant'Elena, Ascensione e Tristan da Cunha"},jpn:{official:"\u30BB\u30F3\u30C8\u30D8\u30EC\u30CA\u30FB\u30A2\u30BB\u30F3\u30B7\u30E7\u30F3\u304A\u3088\u3073\u30C8\u30EA\u30B9\u30BF\u30F3\u30C0\u30AF\u30FC\u30CB\u30E3",common:"\u30BB\u30F3\u30C8\u30D8\u30EC\u30CA\u30FB\u30A2\u30BB\u30F3\u30B7\u30E7\u30F3\u304A\u3088\u3073\u30C8\u30EA\u30B9\u30BF\u30F3\u30C0\u30AF\u30FC\u30CB\u30E3"},kor:{official:"\uC138\uC778\uD2B8\uD5EC\uB808\uB098",common:"\uC138\uC778\uD2B8\uD5EC\uB808\uB098"},nld:{official:"Sint-Helena, Ascension en Tristan da Cunha",common:"Sint-Helena, Ascension en Tristan da Cunha"},per:{official:"\u0633\u0646\u062A \u0647\u0644\u0646",common:"\u0633\u0646\u062A \u0647\u0644\u0646"},pol:{official:"Wyspa \u015Awi\u0119tej Heleny, Wyspa Wniebowst\u0105pienia i Tristan da Cunha",common:"Wyspa \u015Awi\u0119tej Heleny, Wyspa Wniebowst\u0105pienia i Tristan da Cunha"},por:{official:"Santa Helena, Ascens\xE3o e Trist\xE3o da Cunha",common:"Santa Helena, Ascens\xE3o e Trist\xE3o da Cunha"},rus:{official:"\u041E\u0441\u0442\u0440\u043E\u0432\u0430 \u0421\u0432\u044F\u0442\u043E\u0439 \u0415\u043B\u0435\u043D\u044B, \u0412\u043E\u0437\u043D\u0435\u0441\u0435\u043D\u0438\u044F \u0438 \u0422\u0440\u0438\u0441\u0442\u0430\u043D-\u0434\u0430-\u041A\u0443\u043D\u044C\u044F",common:"\u041E\u0441\u0442\u0440\u043E\u0432\u0430 \u0421\u0432\u044F\u0442\u043E\u0439 \u0415\u043B\u0435\u043D\u044B, \u0412\u043E\u0437\u043D\u0435\u0441\u0435\u043D\u0438\u044F \u0438 \u0422\u0440\u0438\u0441\u0442\u0430\u043D-\u0434\u0430-\u041A\u0443\u043D\u044C\u044F"},slk:{official:"Sv\xE4t\xE1 Helena (z\xE1morsk\xE9 \xFAzemie)",common:"Sv\xE4t\xE1 Helena (z\xE1morsk\xE9 \xFAzemie)"},spa:{official:"Santa Elena, Ascensi\xF3n y Trist\xE1n de Acu\xF1a",common:"Santa Elena, Ascensi\xF3n y Trist\xE1n de Acu\xF1a"},swe:{official:"Sankta Helena",common:"Sankta Helena"},urd:{official:"\u0633\u06CC\u0646\u0679 \u06C1\u0644\u06CC\u0646\u0627\u060C \u0627\u0633\u06CC\u0646\u0634\u0646 \u0648 \u062A\u0631\u0633\u0679\u0627\u0646 \u062F\u0627 \u06A9\u0648\u0646\u06CC\u0627",common:"\u0633\u06CC\u0646\u0679 \u06C1\u0644\u06CC\u0646\u0627\u060C \u0627\u0633\u06CC\u0646\u0634\u0646 \u0648 \u062A\u0631\u0633\u0679\u0627\u0646 \u062F\u0627 \u06A9\u0648\u0646\u06CC\u0627"},zho:{official:"\u5723\u8D6B\u52D2\u62FF\u3001\u963F\u68EE\u677E\u548C\u7279\u91CC\u65AF\u5766-\u8FBE\u5E93\u5C3C\u4E9A",common:"\u5723\u8D6B\u52D2\u62FF\u3001\u963F\u68EE\u677E\u548C\u7279\u91CC\u65AF\u5766-\u8FBE\u5E93\u5C3C\u4E9A"}},latlng:[-15.95,-5.72],landlocked:!1,area:394,demonyms:{eng:{f:"Saint Helenian",m:"Saint Helenian"},fra:{f:"Sainte-H\xE9l\xE9noise",m:"Sainte-H\xE9l\xE8nois"}},flag:"\u{1F1F8}\u{1F1ED}",maps:{googleMaps:"https://goo.gl/maps/iv4VxnPzHkjLCJuc6",openStreetMaps:"https://www.openstreetmap.org/relation/4868269#map=13/-15.9657/-5.7120"},population:53192,car:{signs:["GB"],side:"left"},timezones:["UTC+00:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sh.png",svg:"https://flagcdn.com/sh.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[-15.93,-5.72]},postalCode:{format:"STHL 1ZZ",regex:"^(STHL1ZZ)$"}},{name:{common:"Sierra Leone",official:"Republic of Sierra Leone",nativeName:{eng:{official:"Republic of Sierra Leone",common:"Sierra Leone"}}},tld:[".sl"],cca2:"SL",ccn3:"694",cca3:"SLE",cioc:"SLE",independent:!0,status:"officially-assigned",unMember:!0,currencies:{SLL:{name:"Sierra Leonean leone",symbol:"Le"}},idd:{root:"+2",suffixes:["32"]},capital:["Freetown"],altSpellings:["SL","Republic of Sierra Leone"],region:"Africa",subregion:"Western Africa",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0633\u064A\u0631\u0627\u0644\u064A\u0648\u0646",common:"\u0633\u064A\u0631\u0627\u0644\u064A\u0648\u0646"},ces:{official:"Republika Sierra Leone",common:"Sierra Leone"},cym:{official:"Republic of Sierra Leone",common:"Sierra Leone"},deu:{official:"Republik Sierra Leone",common:"Sierra Leone"},est:{official:"Sierra Leone Vabariik",common:"Sierra Leone"},fin:{official:"Sierra Leonen tasavalta",common:"Sierra Leone"},fra:{official:"R\xE9publique de Sierra Leone",common:"Sierra Leone"},hrv:{official:"Republika Sijera Leone",common:"Sijera Leone"},hun:{official:"Sierra Leone K\xF6zt\xE1rsas\xE1g",common:"Sierra Leone"},ita:{official:"Repubblica della Sierra Leone",common:"Sierra Leone"},jpn:{official:"\u30B7\u30A8\u30E9\u30EC\u30AA\u30CD\u5171\u548C\u56FD",common:"\u30B7\u30A8\u30E9\u30EC\u30AA\u30CD"},kor:{official:"\uC2DC\uC5D0\uB77C\uB9AC\uC628 \uACF5\uD654\uAD6D",common:"\uC2DC\uC5D0\uB77C\uB9AC\uC628"},nld:{official:"Republiek Sierra Leone",common:"Sierra Leone"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0633\u06CC\u0631\u0627\u0644\u0626\u0648\u0646",common:"\u0633\u06CC\u0631\u0627\u0644\u0626\u0648\u0646"},pol:{official:"Sierra Leone",common:"Sierra Leone"},por:{official:"Rep\xFAblica da Serra Leoa",common:"Serra Leoa"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0421\u044C\u0435\u0440\u0440\u0430-\u041B\u0435\u043E\u043D\u0435",common:"\u0421\u044C\u0435\u0440\u0440\u0430-\u041B\u0435\u043E\u043D\u0435"},slk:{official:"Sierraleonsk\xE1 republika",common:"Sierra Leone"},spa:{official:"Rep\xFAblica de Sierra Leona",common:"Sierra Leone"},swe:{official:"Republiken Sierra Leone",common:"Sierra Leone"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u0633\u06CC\u0631\u0627\u0644\u06CC\u0648\u0646",common:"\u0633\u06CC\u0631\u0627\u0644\u06CC\u0648\u0646"},zho:{official:"\u585E\u62C9\u5229\u6602\u5171\u548C\u56FD",common:"\u585E\u62C9\u5229\u6602"}},latlng:[8.5,-11.5],landlocked:!1,borders:["GIN","LBR"],area:71740,demonyms:{eng:{f:"Sierra Leonean",m:"Sierra Leonean"},fra:{f:"Sierra-leonaise",m:"Sierra-leonais"}},flag:"\u{1F1F8}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/jhacar85oq9QaeKB7",openStreetMaps:"https://www.openstreetmap.org/relation/192777"},population:7976985,gini:{"2018":35.7},fifa:"SLE",car:{signs:["WAL"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/sl.png",svg:"https://flagcdn.com/sl.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/sl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/sl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[8.48,-13.23]}},{name:{common:"Central African Republic",official:"Central African Republic",nativeName:{fra:{official:"R\xE9publique centrafricaine",common:"R\xE9publique centrafricaine"},sag:{official:"K\xF6d\xF6r\xF6s\xEAse t\xEE B\xEAafr\xEEka",common:"B\xEAafr\xEEka"}}},tld:[".cf"],cca2:"CF",ccn3:"140",cca3:"CAF",cioc:"CAF",independent:!0,status:"officially-assigned",unMember:!0,currencies:{XAF:{name:"Central African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["36"]},capital:["Bangui"],altSpellings:["CF","Central African Republic","R\xE9publique centrafricaine"],region:"Africa",subregion:"Middle Africa",languages:{fra:"French",sag:"Sango"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0641\u0631\u064A\u0642\u064A\u0627 \u0627\u0644\u0648\u0633\u0637\u0649",common:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0623\u0641\u0631\u064A\u0642\u064A\u0627 \u0627\u0644\u0648\u0633\u0637\u0649"},ces:{official:"St\u0159edoafrick\xE1 republika",common:"St\u0159edoafrick\xE1 republika"},cym:{official:"Gweriniaeth Canolbarth Affrica",common:"Gweriniaeth Canolbarth Affrica"},deu:{official:"Zentralafrikanische Republik",common:"Zentralafrikanische Republik"},est:{official:"Kesk-Aafrika Vabariik",common:"Kesk-Aafrika Vabariik"},fin:{official:"Keski-Afrikan tasavalta",common:"Keski-Afrikan tasavalta"},fra:{official:"R\xE9publique centrafricaine",common:"R\xE9publique centrafricaine"},hrv:{official:"Centralna Afri\u010Dka Republika",common:"Srednjoafri\u010Dka Republika"},hun:{official:"K\xF6z\xE9p-afrikai K\xF6zt\xE1rsas\xE1g",common:"K\xF6z\xE9p-afrikai K\xF6zt\xE1rsas\xE1g"},ita:{official:"Repubblica Centrafricana",common:"Repubblica Centrafricana"},jpn:{official:"\u4E2D\u592E\u30A2\u30D5\u30EA\u30AB\u5171\u548C\u56FD",common:"\u4E2D\u592E\u30A2\u30D5\u30EA\u30AB\u5171\u548C\u56FD"},kor:{official:"\uC911\uC559\uC544\uD504\uB9AC\uCE74 \uACF5\uD654\uAD6D",common:"\uC911\uC559\uC544\uD504\uB9AC\uCE74 \uACF5\uD654\uAD6D"},nld:{official:"Centraal-Afrikaanse Republiek",common:"Centraal-Afrikaanse Republiek"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0641\u0631\u06CC\u0642\u0627\u06CC \u0645\u0631\u06A9\u0632\u06CC",common:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0622\u0641\u0631\u06CC\u0642\u0627\u06CC \u0645\u0631\u06A9\u0632\u06CC"},pol:{official:"Republika \u015Arodkowoafryka\u0144ska",common:"Republika \u015Arodkowoafryka\u0144ska"},por:{official:"Rep\xFAblica Centro-Africano",common:"Rep\xFAblica Centro-Africana"},rus:{official:"\u0426\u0435\u043D\u0442\u0440\u0430\u043B\u044C\u043D\u043E-\u0410\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u0426\u0435\u043D\u0442\u0440\u0430\u043B\u044C\u043D\u043E\u0430\u0444\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430"},slk:{official:"Stredoafrick\xE1 republika",common:"Stredoafrick\xE1 republika"},spa:{official:"Rep\xFAblica Centroafricana",common:"Rep\xFAblica Centroafricana"},swe:{official:"Centralafrikanska republiken",common:"Centralafrikanska republiken"},urd:{official:"\u0648\u0633\u0637\u06CC \u0627\u0641\u0631\u06CC\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1",common:"\u0648\u0633\u0637\u06CC \u0627\u0641\u0631\u06CC\u0642\u06CC \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1"},zho:{official:"\u4E2D\u975E\u5171\u548C\u56FD",common:"\u4E2D\u975E\u5171\u548C\u56FD"}},latlng:[7,21],landlocked:!0,borders:["CMR","TCD","COD","COG","SSD","SDN"],area:622984,demonyms:{eng:{f:"Central African",m:"Central African"},fra:{f:"Centrafricaine",m:"Centrafricain"}},flag:"\u{1F1E8}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/51V8dsi2rGYC9n3c9",openStreetMaps:"https://www.openstreetmap.org/relation/192790"},population:4829764,gini:{"2008":56.2},fifa:"CTA",car:{signs:["RCA"],side:"right"},timezones:["UTC+01:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/cf.png",svg:"https://flagcdn.com/cf.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/cf.png",svg:"https://mainfacts.com/media/images/coats_of_arms/cf.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.37,18.58]}},{name:{common:"Greenland",official:"Greenland",nativeName:{kal:{official:"Kalaallit Nunaat",common:"Kalaallit Nunaat"}}},tld:[".gl"],cca2:"GL",ccn3:"304",cca3:"GRL",independent:!1,status:"officially-assigned",unMember:!1,currencies:{DKK:{name:"krone",symbol:"kr."}},idd:{root:"+2",suffixes:["99"]},capital:["Nuuk"],altSpellings:["GL","Gr\xF8nland"],region:"Americas",subregion:"North America",languages:{kal:"Greenlandic"},translations:{ara:{official:"\u062C\u0631\u064A\u0646\u0644\u0627\u0646\u062F",common:"\u062C\u0631\u064A\u0646\u0644\u0627\u0646\u062F"},ces:{official:"Gr\xF3nsko",common:"Gr\xF3nsko"},cym:{official:"Greenland",common:"Greenland"},deu:{official:"Gr\xF6nland",common:"Gr\xF6nland"},est:{official:"Gr\xF6\xF6nimaa",common:"Gr\xF6\xF6nimaa"},fin:{official:"Gro\xF6nlanti",common:"Gro\xF6nlanti"},fra:{official:"Groenland",common:"Groenland"},hrv:{official:"Grenland",common:"Grenland"},hun:{official:"Gr\xF6nland",common:"Gr\xF6nland"},ita:{official:"Groenlandia",common:"Groenlandia"},jpn:{official:"\u30B0\u30EA\u30FC\u30F3\u30E9\u30F3\u30C9",common:"\u30B0\u30EA\u30FC\u30F3\u30E9\u30F3\u30C9"},kor:{official:"\uADF8\uB9B0\uB780\uB4DC",common:"\uADF8\uB9B0\uB780\uB4DC"},nld:{official:"Groenland",common:"Groenland"},per:{official:"\u06AF\u0631\u0648\u0626\u0646\u0644\u0646\u062F",common:"\u06AF\u0631\u06CC\u0646\u0644\u0646\u062F"},pol:{official:"Grenlandia",common:"Grenlandia"},por:{official:"Groenl\xE2ndia",common:"Gronel\xE2ndia"},rus:{official:"\u0413\u0440\u0435\u043D\u043B\u0430\u043D\u0434\u0438\u044F",common:"\u0413\u0440\u0435\u043D\u043B\u0430\u043D\u0434\u0438\u044F"},slk:{official:"Gr\xF3nsko",common:"Gr\xF3nsko"},spa:{official:"Groenlandia",common:"Groenlandia"},swe:{official:"Gr\xF6nland",common:"Gr\xF6nland"},urd:{official:"\u06AF\u0631\u06CC\u0646 \u0644\u06CC\u0646\u0688",common:"\u06AF\u0631\u06CC\u0646 \u0644\u06CC\u0646\u0688"},zho:{official:"\u683C\u9675\u5170",common:"\u683C\u9675\u5170"}},latlng:[72,-40],landlocked:!1,area:2166086,demonyms:{eng:{f:"Greenlandic",m:"Greenlandic"},fra:{f:"Groenlandaise",m:"Groenlandais"}},flag:"\u{1F1EC}\u{1F1F1}",maps:{googleMaps:"https://goo.gl/maps/j3289UPEQXt1ceSy8",openStreetMaps:"https://www.openstreetmap.org/relation/2184073"},population:56367,car:{signs:["DK"],side:"right"},timezones:["UTC-04:00","UTC-03:00","UTC-01:00","UTC+00:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/gl.png",svg:"https://flagcdn.com/gl.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gl.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gl.svg"},startOfWeek:"monday",capitalInfo:{latlng:[64.18,-51.75]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Colombia",official:"Republic of Colombia",nativeName:{spa:{official:"Rep\xFAblica de Colombia",common:"Colombia"}}},tld:[".co"],cca2:"CO",ccn3:"170",cca3:"COL",cioc:"COL",independent:!0,status:"officially-assigned",unMember:!0,currencies:{COP:{name:"Colombian peso",symbol:"$"}},idd:{root:"+5",suffixes:["7"]},capital:["Bogot\xE1"],altSpellings:["CO","Republic of Colombia","Rep\xFAblica de Colombia"],region:"Americas",subregion:"South America",languages:{spa:"Spanish"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0643\u0648\u0644\u0648\u0645\u0628\u064A\u0627",common:"\u0643\u0648\u0644\u0648\u0645\u0628\u064A\u0627"},ces:{official:"Kolumbijsk\xE1 republika",common:"Kolumbie"},cym:{official:"Gweriniaeth Colombia",common:"Colombia"},deu:{official:"Republik Kolumbien",common:"Kolumbien"},est:{official:"Colombia Vabariik",common:"Colombia"},fin:{official:"Kolumbian tasavalta",common:"Kolumbia"},fra:{official:"R\xE9publique de Colombie",common:"Colombie"},hrv:{official:"Republika Kolumbija",common:"Kolumbija"},hun:{official:"Kolumbiai K\xF6zt\xE1rsas\xE1g",common:"Kolumbia"},ita:{official:"Repubblica di Colombia",common:"Colombia"},jpn:{official:"\u30B3\u30ED\u30F3\u30D3\u30A2\u5171\u548C\u56FD",common:"\u30B3\u30ED\u30F3\u30D3\u30A2"},kor:{official:"\uCF5C\uB86C\uBE44\uC544 \uACF5\uD654\uAD6D",common:"\uCF5C\uB86C\uBE44\uC544"},nld:{official:"Republiek Colombia",common:"Colombia"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06A9\u0644\u0645\u0628\u06CC\u0627",common:"\u06A9\u0644\u0645\u0628\u06CC\u0627"},pol:{official:"Republika Kolumbii",common:"Kolumbia"},por:{official:"Rep\xFAblica da Col\xF4mbia",common:"Col\xF4mbia"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u041A\u043E\u043B\u0443\u043C\u0431\u0438\u044F",common:"\u041A\u043E\u043B\u0443\u043C\u0431\u0438\u044F"},slk:{official:"Kolumbijsk\xE1 republika",common:"Kolumbia"},spa:{official:"Rep\xFAblica de Colombia",common:"Colombia"},swe:{official:"Republiken Colombia",common:"Colombia"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06A9\u0648\u0644\u0645\u0628\u06CC\u0627",common:"\u06A9\u0648\u0644\u0645\u0628\u06CC\u0627"},zho:{official:"\u54E5\u4F26\u6BD4\u4E9A\u5171\u548C\u56FD",common:"\u54E5\u4F26\u6BD4\u4E9A"}},latlng:[4,-72],landlocked:!1,borders:["BRA","ECU","PAN","PER","VEN"],area:1141748,demonyms:{eng:{f:"Colombian",m:"Colombian"},fra:{f:"Colombienne",m:"Colombien"}},flag:"\u{1F1E8}\u{1F1F4}",maps:{googleMaps:"https://goo.gl/maps/RdwTG8e7gPwS62oR6",openStreetMaps:"https://www.openstreetmap.org/relation/120027"},population:50882884,gini:{"2019":51.3},fifa:"COL",car:{signs:["CO"],side:"right"},timezones:["UTC-05:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/co.png",svg:"https://flagcdn.com/co.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/co.png",svg:"https://mainfacts.com/media/images/coats_of_arms/co.svg"},startOfWeek:"monday",capitalInfo:{latlng:[4.71,-74.07]}},{name:{common:"Papua New Guinea",official:"Independent State of Papua New Guinea",nativeName:{eng:{official:"Independent State of Papua New Guinea",common:"Papua New Guinea"},hmo:{official:"Independen Stet bilong Papua Niugini",common:"Papua Niu Gini"},tpi:{official:"Independen Stet bilong Papua Niugini",common:"Papua Niugini"}}},tld:[".pg"],cca2:"PG",ccn3:"598",cca3:"PNG",cioc:"PNG",independent:!0,status:"officially-assigned",unMember:!0,currencies:{PGK:{name:"Papua New Guinean kina",symbol:"K"}},idd:{root:"+6",suffixes:["75"]},capital:["Port Moresby"],altSpellings:["PG","Independent State of Papua New Guinea","Independen Stet bilong Papua Niugini"],region:"Oceania",subregion:"Melanesia",languages:{eng:"English",hmo:"Hiri Motu",tpi:"Tok Pisin"},translations:{ara:{official:"\u062F\u0648\u0644\u0629 \u0628\u0627\u0628\u0648\u0627 \u063A\u064A\u0646\u064A\u0627 \u0627\u0644\u062C\u062F\u064A\u062F\u0629",common:"\u0628\u0627\u0628\u0648\u0627 \u063A\u064A\u0646\u064A\u0627 \u0627\u0644\u062C\u062F\u064A\u062F\u0629"},ces:{official:"Nez\xE1visl\xFD st\xE1t Papua Nov\xE1 Guinea",common:"Papua-Nov\xE1 Guinea"},cym:{official:"Independent State of Papua New Guinea",common:"Papua New Guinea"},deu:{official:"Unabh\xE4ngiger Staat Papua-Neuguinea",common:"Papua-Neuguinea"},est:{official:"Paapua Uus-Guinea Iseseisvusriik",common:"Paapua Uus-Guinea"},fin:{official:"Papua-Uuden-Guinean Itsen\xE4inen valtio",common:"Papua-Uusi-Guinea"},fra:{official:"\xC9tat ind\xE9pendant de Papouasie-Nouvelle-Guin\xE9e",common:"Papouasie-Nouvelle-Guin\xE9e"},hrv:{official:"Nezavisna Dr\u017Eava Papui Novoj Gvineji",common:"Papua Nova Gvineja"},hun:{official:"P\xE1pua \xDAj-Guinea F\xFCggetlen \xC1llam",common:"P\xE1pua \xDAj-Guinea"},ita:{official:"Stato indipendente di Papua Nuova Guinea",common:"Papua Nuova Guinea"},jpn:{official:"\u30D1\u30D7\u30A2\u30CB\u30E5\u30FC\u30AE\u30CB\u30A2\u72EC\u7ACB\u56FD",common:"\u30D1\u30D7\u30A2\u30CB\u30E5\u30FC\u30AE\u30CB\u30A2"},kor:{official:"\uD30C\uD478\uC544\uB274\uAE30\uB2C8 \uB3C5\uB9BD\uAD6D",common:"\uD30C\uD478\uC544\uB274\uAE30\uB2C8"},nld:{official:"Onafhankelijke Staat Papoea -Nieuw-Guinea",common:"Papoea-Nieuw-Guinea"},per:{official:"\u0645\u0645\u0644\u06A9\u062A \u0645\u0633\u062A\u0642\u0644 \u067E\u0627\u067E\u0648\u0622 \u06AF\u06CC\u0646\u0647\u0654 \u0646\u0648",common:"\u067E\u0627\u067E\u0648\u0622 \u06AF\u06CC\u0646\u0647 \u0646\u0648"},pol:{official:"Niezale\u017Cne Pa\u0144stwo Papui-Nowej Gwinei",common:"Papua-Nowa Gwinea"},por:{official:"Estado Independente da Papua Nova Guin\xE9",common:"Papua Nova Guin\xE9"},rus:{official:"\u041D\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0435 \u0413\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u043E \u041F\u0430\u043F\u0443\u0430-\u041D\u043E\u0432\u043E\u0439 \u0413\u0432\u0438\u043D\u0435\u0438",common:"\u041F\u0430\u043F\u0443\u0430 \u2014 \u041D\u043E\u0432\u0430\u044F \u0413\u0432\u0438\u043D\u0435\u044F"},slk:{official:"Nez\xE1visl\xFD \u0161t\xE1t Papua-Nov\xE1 Guinea",common:"Papua-Nov\xE1 Guinea"},spa:{official:"Estado Independiente de Pap\xFAa Nueva Guinea",common:"Pap\xFAa Nueva Guinea"},swe:{official:"Den oberoende staten Papua Nya Guinea",common:"Papua Nya Guinea"},urd:{official:"\u0622\u0632\u0627\u062F \u0631\u06CC\u0627\u0633\u062A\u0650 \u067E\u0627\u067E\u0648\u0627 \u0646\u06CC\u0648 \u06AF\u0646\u06CC",common:"\u067E\u0627\u067E\u0648\u0627 \u0646\u06CC\u0648 \u06AF\u0646\u06CC"},zho:{official:"\u5DF4\u5E03\u4E9A\u65B0\u51E0\u5185\u4E9A",common:"\u5DF4\u5E03\u4E9A\u65B0\u51E0\u5185\u4E9A"}},latlng:[-6,147],landlocked:!1,borders:["IDN"],area:462840,demonyms:{eng:{f:"Papua New Guinean",m:"Papua New Guinean"},fra:{f:"Papouasienne",m:"Papouasien"}},flag:"\u{1F1F5}\u{1F1EC}",maps:{googleMaps:"https://goo.gl/maps/ChGmzZBjZ3vnBwR2A",openStreetMaps:"https://goo.gl/maps/ChGmzZBjZ3vnBwR2A"},population:8947027,gini:{"2009":41.9},fifa:"PNG",car:{signs:["PNG"],side:"left"},timezones:["UTC+10:00"],continents:["Oceania"],flags:{png:"https://flagcdn.com/w320/pg.png",svg:"https://flagcdn.com/pg.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pg.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pg.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-9.45,147.18]},postalCode:{format:"###",regex:"^(\\d{3})$"}},{name:{common:"Falkland Islands",official:"Falkland Islands",nativeName:{eng:{official:"Falkland Islands",common:"Falkland Islands"}}},tld:[".fk"],cca2:"FK",ccn3:"238",cca3:"FLK",independent:!1,status:"officially-assigned",unMember:!1,currencies:{FKP:{name:"Falkland Islands pound",symbol:"\xA3"}},idd:{root:"+5",suffixes:["00"]},capital:["Stanley"],altSpellings:["FK","Islas Malvinas","Falkland Islands (Malvinas)"],region:"Americas",subregion:"South America",languages:{eng:"English"},translations:{ara:{official:"\u062C\u0632\u0631 \u0641\u0648\u0643\u0644\u0627\u0646\u062F",common:"\u062C\u0632\u0631 \u0641\u0648\u0643\u0644\u0627\u0646\u062F"},ces:{official:"Falklandsk\xE9 ostrovy",common:"Falklandy"},cym:{official:"Falkland Islands",common:"Falkland Islands"},deu:{official:"Falklandinseln",common:"Falklandinseln"},est:{official:"Falklandi saared",common:"Falklandi saared"},fin:{official:"Falkandinsaaret",common:"Falkandinsaaret"},fra:{official:"\xCEles Malouines",common:"\xCEles Malouines"},hrv:{official:"Falklandski otoci",common:"Falklandski Otoci"},hun:{official:"Falkland-szigetek",common:"Falkland-szigetek"},ita:{official:"Isole Falkland",common:"Isole Falkland o Isole Malvine"},jpn:{official:"\u30D5\u30A9\u30FC\u30AF\u30E9\u30F3\u30C9",common:"\u30D5\u30A9\u30FC\u30AF\u30E9\u30F3\u30C9\uFF08\u30DE\u30EB\u30D3\u30CA\u30B9\uFF09\u8AF8\u5CF6"},kor:{official:"\uD3EC\uD074\uB79C\uB4DC \uC81C\uB3C4",common:"\uD3EC\uD074\uB79C\uB4DC \uC81C\uB3C4"},nld:{official:"Falkland eilanden",common:"Falklandeilanden"},per:{official:"\u062C\u0632\u0627\u06CC\u0631 \u0641\u0627\u0644\u06A9\u0644\u0646\u062F",common:"\u062C\u0632\u0627\u06CC\u0631 \u0641\u0627\u0644\u06A9\u0644\u0646\u062F"},pol:{official:"Falklandy",common:"Falklandy"},por:{official:"Ilhas Malvinas",common:"Ilhas Malvinas"},rus:{official:"\u0424\u043E\u043B\u043A\u043B\u0435\u043D\u0434\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430",common:"\u0424\u043E\u043B\u043A\u043B\u0435\u043D\u0434\u0441\u043A\u0438\u0435 \u043E\u0441\u0442\u0440\u043E\u0432\u0430"},slk:{official:"Falklandsk\xE9 ostrovy",common:"Falklandy"},spa:{official:"islas Malvinas",common:"Islas Malvinas"},swe:{official:"Falklands\xF6arna",common:"Falklands\xF6arna"},urd:{official:"\u062C\u0632\u0627\u0626\u0631 \u0641\u0627\u06A9\u0644\u06CC\u0646\u0688",common:"\u062C\u0632\u0627\u0626\u0631 \u0641\u0627\u06A9\u0644\u06CC\u0646\u0688"},zho:{official:"\u798F\u514B\u5170\u7FA4\u5C9B",common:"\u798F\u514B\u5170\u7FA4\u5C9B"}},latlng:[-51.75,-59],landlocked:!1,area:12173,demonyms:{eng:{f:"Falkland Islander",m:"Falkland Islander"},fra:{f:"Malouinne",m:"Malouin"}},flag:"\u{1F1EB}\u{1F1F0}",maps:{googleMaps:"https://goo.gl/maps/TZH1x7AGanQKifNk7",openStreetMaps:"https://www.openstreetmap.org/relation/2185374"},population:2563,car:{signs:["GB"],side:"left"},timezones:["UTC-04:00"],continents:["South America"],flags:{png:"https://flagcdn.com/w320/fk.png",svg:"https://flagcdn.com/fk.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/fk.png",svg:"https://mainfacts.com/media/images/coats_of_arms/fk.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-51.7,-57.85]}},{name:{common:"Portugal",official:"Portuguese Republic",nativeName:{por:{official:"Rep\xFAblica portugu\xEAs",common:"Portugal"}}},tld:[".pt"],cca2:"PT",ccn3:"620",cca3:"PRT",cioc:"POR",independent:!0,status:"officially-assigned",unMember:!0,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+3",suffixes:["51"]},capital:["Lisbon"],altSpellings:["PT","Portuguesa","Portuguese Republic","Rep\xFAblica Portuguesa"],region:"Europe",subregion:"Southern Europe",languages:{por:"Portuguese"},translations:{ara:{official:"\u0627\u0644\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u0627\u0644\u0628\u0631\u062A\u063A\u0627\u0644\u064A\u0629",common:"\u0627\u0644\u0628\u0631\u062A\u063A\u0627\u0644"},ces:{official:"Portugalsk\xE1 republika",common:"Portugalsko"},cym:{official:"Portuguese Republic",common:"Portugal"},deu:{official:"Portugiesische Republik",common:"Portugal"},est:{official:"Portugali Vabariik",common:"Portugal"},fin:{official:"Portugalin tasavalta",common:"Portugali"},fra:{official:"R\xE9publique portugaise",common:"Portugal"},hrv:{official:"Portugalska Republika",common:"Portugal"},hun:{official:"Portug\xE1l K\xF6zt\xE1rsas\xE1g",common:"Portug\xE1lia"},ita:{official:"Repubblica portoghese",common:"Portogallo"},jpn:{official:"\u30DD\u30EB\u30C8\u30AC\u30EB\u5171\u548C\u56FD",common:"\u30DD\u30EB\u30C8\u30AC\u30EB"},kor:{official:"\uD3EC\uB974\uD22C\uAC08 \uACF5\uD654\uAD6D",common:"\uD3EC\uB974\uD22C\uAC08"},nld:{official:"Portugese Republiek",common:"Portugal"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u067E\u0631\u062A\u063A\u0627\u0644",common:"\u067E\u0631\u062A\u063A\u0627\u0644"},pol:{official:"Republika Portugalska",common:"Portugalia"},por:{official:"Rep\xFAblica portugu\xEAs",common:"Portugal"},rus:{official:"\u041F\u043E\u0440\u0442\u0443\u0433\u0430\u043B\u044C\u0441\u043A\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430",common:"\u041F\u043E\u0440\u0442\u0443\u0433\u0430\u043B\u0438\u044F"},slk:{official:"Portugalsk\xE1 republika",common:"Portugalsko"},spa:{official:"Rep\xFAblica Portuguesa",common:"Portugal"},swe:{official:"Republiken Portugal",common:"Portugal"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u067E\u0631\u062A\u06AF\u0627\u0644",common:"\u067E\u0631\u062A\u06AF\u0627\u0644"},zho:{official:"\u8461\u8404\u7259\u5171\u548C\u56FD",common:"\u8461\u8404\u7259"}},latlng:[39.5,-8],landlocked:!1,borders:["ESP"],area:92090,demonyms:{eng:{f:"Portuguese",m:"Portuguese"},fra:{f:"Portugaise",m:"Portugais"}},flag:"\u{1F1F5}\u{1F1F9}",maps:{googleMaps:"https://goo.gl/maps/BaTBSyc4GWMmbAKB8",openStreetMaps:"https://www.openstreetmap.org/relation/295480"},population:10305564,gini:{"2018":33.5},fifa:"POR",car:{signs:["P"],side:"right"},timezones:["UTC-01:00","UTC"],continents:["Europe"],flags:{png:"https://flagcdn.com/w320/pt.png",svg:"https://flagcdn.com/pt.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/pt.png",svg:"https://mainfacts.com/media/images/coats_of_arms/pt.svg"},startOfWeek:"monday",capitalInfo:{latlng:[38.72,-9.13]},postalCode:{format:"####-###",regex:"^(\\d{7})$"}},{name:{common:"Guinea-Bissau",official:"Republic of Guinea-Bissau",nativeName:{por:{official:"Rep\xFAblica da Guin\xE9-Bissau",common:"Guin\xE9-Bissau"},pov:{official:"Rep\xFAblica da Guin\xE9-Bissau",common:"Guin\xE9-Bissau"}}},tld:[".gw"],cca2:"GW",ccn3:"624",cca3:"GNB",cioc:"GBS",independent:!0,status:"officially-assigned",unMember:!1,currencies:{XOF:{name:"West African CFA franc",symbol:"Fr"}},idd:{root:"+2",suffixes:["45"]},capital:["Bissau"],altSpellings:["GW","Republic of Guinea-Bissau","Rep\xFAblica da Guin\xE9-Bissau"],region:"Africa",subregion:"Western Africa",languages:{por:"Portuguese",pov:"Upper Guinea Creole"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u063A\u064A\u0646\u064A\u0627 \u0628\u064A\u0633\u0627\u0648",common:"\u063A\u064A\u0646\u064A\u0627 \u0628\u064A\u0633\u0627\u0648"},ces:{official:"Republika Guinea-Bissau",common:"Guinea-Bissau"},cym:{official:"Republic of Guinea-Bissau",common:"Guinea-Bissau"},deu:{official:"Republik Guinea-Bissau",common:"Guinea-Bissau"},est:{official:"Guinea-Bissau Vabariik",common:"Guinea-Bissau"},fin:{official:"Guinea-Bissaun tasavalta",common:"Guinea-Bissau"},fra:{official:"R\xE9publique de Guin\xE9e-Bissau",common:"Guin\xE9e-Bissau"},hrv:{official:"Republika Gvineja Bisau",common:"Gvineja Bisau"},hun:{official:"Bissau-Guineai K\xF6zt\xE1rsas\xE1g",common:"Bissau-Guinea"},ita:{official:"Repubblica di Guinea-Bissau",common:"Guinea-Bissau"},jpn:{official:"\u30AE\u30CB\u30A2\u30D3\u30B5\u30A6\u5171\u548C\u56FD",common:"\u30AE\u30CB\u30A2\u30D3\u30B5\u30A6"},kor:{official:"\uAE30\uB2C8\uBE44\uC0AC\uC6B0 \uACF5\uD654\uAD6D",common:"\uAE30\uB2C8\uBE44\uC0AC\uC6B0"},nld:{official:"Republiek Guinee-Bissau",common:"Guinee-Bissau"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u06AF\u06CC\u0646\u0647 \u0628\u06CC\u0633\u0627\u0626\u0648",common:"\u06AF\u06CC\u0646\u0647 \u0628\u06CC\u0633\u0627\u0626\u0648"},pol:{official:"Republika Gwinei Bissau",common:"Gwinea Bissau"},por:{official:"Rep\xFAblica da Guin\xE9-Bissau",common:"Guin\xE9-Bissau"},rus:{official:"\u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0413\u0432\u0438\u043D\u0435\u044F -\u0411\u0438\u0441\u0430\u0443",common:"\u0413\u0432\u0438\u043D\u0435\u044F-\u0411\u0438\u0441\u0430\u0443"},slk:{official:"Guinejsko-bissausk\xE1 republika",common:"Guinea-Bissau"},spa:{official:"Rep\xFAblica de Guinea-Bissau",common:"Guinea-Bis\xE1u"},swe:{official:"Republiken Guinea-Bissau",common:"Guinea-Bissau"},urd:{official:"\u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u06AF\u0646\u06CC \u0628\u0633\u0627\u0624",common:"\u06AF\u0646\u06CC \u0628\u0633\u0627\u0624"},zho:{official:"\u51E0\u5185\u4E9A\u6BD4\u7ECD\u5171\u548C\u56FD",common:"\u51E0\u5185\u4E9A\u6BD4\u7ECD"}},latlng:[12,-15],landlocked:!1,borders:["GIN","SEN"],area:36125,demonyms:{eng:{f:"Guinea-Bissauan",m:"Guinea-Bissauan"},fra:{f:"Bissau-Guin\xE9enne",m:"Bissau-Guin\xE9en"}},flag:"\u{1F1EC}\u{1F1FC}",maps:{googleMaps:"https://goo.gl/maps/5Wyaz17miUc1zLc67",openStreetMaps:"https://www.openstreetmap.org/relation/192776"},population:1967998,gini:{"2010":50.7},fifa:"GNB",car:{signs:["RGB"],side:"right"},timezones:["UTC"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/gw.png",svg:"https://flagcdn.com/gw.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/gw.png",svg:"https://mainfacts.com/media/images/coats_of_arms/gw.svg"},startOfWeek:"monday",capitalInfo:{latlng:[11.85,-15.58]},postalCode:{format:"####",regex:"^(\\d{4})$"}},{name:{common:"Saint Martin",official:"Saint Martin",nativeName:{fra:{official:"Saint-Martin",common:"Saint-Martin"}}},tld:[".fr",".gp"],cca2:"MF",ccn3:"663",cca3:"MAF",independent:!1,status:"officially-assigned",unMember:!1,currencies:{EUR:{name:"Euro",symbol:"\u20AC"}},idd:{root:"+5",suffixes:["90"]},capital:["Marigot"],altSpellings:["MF","Collectivity of Saint Martin","Collectivit\xE9 de Saint-Martin","Saint Martin (French part)"],region:"Americas",subregion:"Caribbean",languages:{fra:"French"},translations:{ara:{official:"\u0633\u0627\u0646\u062A \u0645\u0627\u0631\u062A\u0646",common:"\u0633\u0627\u0646\u062A \u0645\u0627\u0631\u062A\u0646"},ces:{official:"Svat\xFD Martin",common:"Svat\xFD Martin (Francie)"},cym:{official:"Saint Martin",common:"Saint Martin"},deu:{official:"Saint-Martin",common:"Saint-Martin"},est:{official:"Saint-Martini \xFChendus",common:"Saint-Martin"},fin:{official:"Saint-Martin",common:"Saint-Martin"},fra:{official:"Saint-Martin",common:"Saint-Martin"},hrv:{official:"Saint Martin",common:"Sveti Martin"},hun:{official:"Saint-Martin K\xF6z\xF6ss\xE9g",common:"Saint-Martin"},ita:{official:"saint Martin",common:"Saint Martin"},jpn:{official:"\u30B5\u30F3\u30DE\u30EB\u30BF\u30F3\u5CF6",common:"\u30B5\u30F3\u30FB\u30DE\u30EB\u30BF\u30F3\uFF08\u30D5\u30E9\u30F3\u30B9\u9818\uFF09"},kor:{official:"\uC0DD\uB9C8\uB974\uD0F1",common:"\uC0DD\uB9C8\uB974\uD0F1"},nld:{official:"Saint Martin",common:"Saint-Martin"},per:{official:"\u0633\u0646 \u0645\u0627\u0631\u062A\u0646",common:"\u0633\u0646 \u0645\u0627\u0631\u062A\u0646"},pol:{official:"Wsp\xF3lnota Saint-Martin",common:"Saint-Martin"},por:{official:"saint Martin",common:"S\xE3o Martinho"},rus:{official:"\u0421\u0435\u043D-\u041C\u0430\u0440\u0442\u0435\u043D",common:"\u0421\u0435\u043D-\u041C\u0430\u0440\u0442\u0435\u043D"},slk:{official:"Saint-Martin",common:"Saint-Martin"},spa:{official:"Saint Martin",common:"Saint Martin"},swe:{official:"F\xF6rvaltningsomr\xE5det Saint-Martin",common:"Saint-Martin"},urd:{official:"\u0633\u06CC\u0646\u0679 \u0645\u0627\u0631\u0679\u0646",common:"\u0633\u06CC\u0646\u0679 \u0645\u0627\u0631\u0679\u0646"},zho:{official:"\u5723\u9A6C\u4E01",common:"\u5723\u9A6C\u4E01"}},latlng:[18.08333333,-63.95],landlocked:!1,borders:["SXM"],area:53,demonyms:{eng:{f:"Saint Martin Islander",m:"Saint Martin Islander"},fra:{f:"Saint-Martinoise",m:"Saint-Martinois"}},flag:"\u{1F1F2}\u{1F1EB}",maps:{googleMaps:"https://goo.gl/maps/P9ho9QuJ9EAR28JEA",openStreetMaps:"https://www.openstreetmap.org/relation/63064"},population:38659,car:{signs:["F"],side:"right"},timezones:["UTC-04:00"],continents:["North America"],flags:{png:"https://flagcdn.com/w320/mf.png",svg:"https://flagcdn.com/mf.svg"},coatOfArms:{},startOfWeek:"monday",capitalInfo:{latlng:[18.07,-63.08]},postalCode:{format:"### ###"}},{name:{common:"Tanzania",official:"United Republic of Tanzania",nativeName:{eng:{official:"United Republic of Tanzania",common:"Tanzania"},swa:{official:"Jamhuri ya Muungano wa Tanzania",common:"Tanzania"}}},tld:[".tz"],cca2:"TZ",ccn3:"834",cca3:"TZA",cioc:"TAN",independent:!0,status:"officially-assigned",unMember:!0,currencies:{TZS:{name:"Tanzanian shilling",symbol:"Sh"}},idd:{root:"+2",suffixes:["55"]},capital:["Dodoma"],altSpellings:["TZ","Tanzania, United Republic of","United Republic of Tanzania","Jamhuri ya Muungano wa Tanzania"],region:"Africa",subregion:"Eastern Africa",languages:{eng:"English",swa:"Swahili"},translations:{ara:{official:"\u062C\u0645\u0647\u0648\u0631\u064A\u0629 \u062A\u0646\u0632\u0627\u0646\u064A\u0627 \u0627\u0644\u0627\u062A\u062D\u0627\u062F\u064A\u0629",common:"\u062A\u0646\u0632\u0627\u0646\u064A\u0627"},ces:{official:"Sjednocen\xE1 tanzansk\xE1 republika",common:"Tanzanie"},cym:{official:"United Republic of Tanzania",common:"Tanzania"},deu:{official:"Vereinigte Republik Tansania",common:"Tansania"},est:{official:"Tansaania \xDChendvabariik",common:"Tansaania"},fin:{official:"Tansanian yhdistynyt tasavalta",common:"Tansania"},fra:{official:"R\xE9publique -Unie de Tanzanie",common:"Tanzanie"},hrv:{official:"Ujedinjena Republika Tanzanija",common:"Tanzanija"},hun:{official:"T\xE1dzsik K\xF6zt\xE1rsas\xE1g",common:"T\xE1dzsikiszt\xE1n"},ita:{official:"Repubblica Unita di Tanzania",common:"Tanzania"},jpn:{official:"\u30BF\u30F3\u30B6\u30CB\u30A2\u9023\u5408\u5171\u548C\u56FD",common:"\u30BF\u30F3\u30B6\u30CB\u30A2"},kor:{official:"\uD0C4\uC790\uB2C8\uC544 \uC5F0\uD569 \uACF5\uD654\uAD6D",common:"\uD0C4\uC790\uB2C8\uC544"},nld:{official:"Verenigde Republiek Tanzania",common:"Tanzania"},per:{official:"\u062C\u0645\u0647\u0648\u0631\u06CC \u0645\u062A\u062D\u062F \u062A\u0627\u0646\u0632\u0627\u0646\u06CC\u0627",common:"\u062A\u0627\u0646\u0632\u0627\u0646\u06CC\u0627"},pol:{official:"Zjednoczona Republika Tanzanii",common:"Tanzania"},por:{official:"Rep\xFAblica Unida da Tanz\xE2nia",common:"Tanz\xE2nia"},rus:{official:"\u041E\u0431\u044A\u0435\u0434\u0438\u043D\u0435\u043D\u043D\u0430\u044F \u0420\u0435\u0441\u043F\u0443\u0431\u043B\u0438\u043A\u0430 \u0422\u0430\u043D\u0437\u0430\u043D\u0438\u044F",common:"\u0422\u0430\u043D\u0437\u0430\u043D\u0438\u044F"},slk:{official:"Tanz\xE1nijsk\xE1 zjednoten\xE1 republika",common:"Tanz\xE1nia"},spa:{official:"Rep\xFAblica Unida de Tanzania",common:"Tanzania"},swe:{official:"F\xF6renade republiken Tanzania",common:"Tanzania"},urd:{official:"\u0645\u062A\u062D\u062F\u06C1 \u062C\u0645\u06C1\u0648\u0631\u06CC\u06C1 \u062A\u0646\u0632\u0627\u0646\u06CC\u06C1",common:"\u062A\u0646\u0632\u0627\u0646\u06CC\u06C1"},zho:{official:"\u5766\u6851\u5C3C\u4E9A\u8054\u5408\u5171\u548C\u56FD",common:"\u5766\u6851\u5C3C\u4E9A"}},latlng:[-6,35],landlocked:!1,borders:["BDI","COD","KEN","MWI","MOZ","RWA","UGA","ZMB"],area:945087,demonyms:{eng:{f:"Tanzanian",m:"Tanzanian"},fra:{f:"Tanzanienne",m:"Tanzanien"}},flag:"\u{1F1F9}\u{1F1FF}",maps:{googleMaps:"https://goo.gl/maps/NWYMqZYXte4zGZ2Q8",openStreetMaps:"https://www.openstreetmap.org/relation/195270"},population:59734213,gini:{"2017":40.5},fifa:"TAN",car:{signs:["EAT"],side:"left"},timezones:["UTC+03:00"],continents:["Africa"],flags:{png:"https://flagcdn.com/w320/tz.png",svg:"https://flagcdn.com/tz.svg"},coatOfArms:{png:"https://mainfacts.com/media/images/coats_of_arms/tz.png",svg:"https://mainfacts.com/media/images/coats_of_arms/tz.svg"},startOfWeek:"monday",capitalInfo:{latlng:[-6.16,35.75]}}];/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const mc="140",nd=0,Qc=1,od=2,Xf=1,sd=2,Jn=3,no=0,$i=1,vn=2,Yf=1,Xa=0,dn=1,Gr=2,el=3,il=4,rd=5,on=100,cd=101,ld=102,al=103,tl=104,fd=200,md=201,ud=202,dd=203,$f=204,Qf=205,pd=206,hd=207,gd=208,bd=209,vd=210,yd=0,_d=1,Sd=2,Ur=3,Md=4,kd=5,wd=6,xd=7,As=0,Ad=1,Rd=2,La=0,Td=1,Cd=2,Ed=3,Pd=4,Ld=5,em=300,yn=301,_n=302,Or=303,Fr=304,Rs=306,Vr=1e3,oa=1001,Hr=1002,pi=1003,nl=1004,ol=1005,zi=1006,zd=1007,Ts=1008,Ct=1009,Id=1010,Nd=1011,oo=1012,Bd=1013,cs=1014,_t=1015,so=1016,Dd=1017,Gd=1018,pn=1020,Ud=1021,Od=1022,sa=1023,Fd=1024,Vd=1025,kt=1026,Sn=1027,Hd=1028,Wd=1029,Kd=1030,jd=1031,qd=1033,Hs=33776,Ws=33777,Ks=33778,js=33779,sl=35840,rl=35841,cl=35842,ll=35843,Zd=36196,fl=37492,ml=37496,ul=37808,dl=37809,pl=37810,hl=37811,gl=37812,bl=37813,vl=37814,yl=37815,_l=37816,Sl=37817,Ml=37818,kl=37819,wl=37820,xl=37821,Al=36492,Jd=2200,Xd=2201,Yd=2202,ms=2300,us=2301,qs=2302,sn=2400,rn=2401,ds=2402,uc=2500,im=2501,$d=0,it=3e3,$e=3001,Qd=3200,ep=3201,En=0,ip=1,Ca="srgb",St="srgb-linear",Zs=7680,ap=519,ro=35044,ps=35048,Rl="300 es",Wr=1035;class Pt{addEventListener(e,i){this._listeners===void 0&&(this._listeners={});const a=this._listeners;a[e]===void 0&&(a[e]=[]),a[e].indexOf(i)===-1&&a[e].push(i)}hasEventListener(e,i){if(this._listeners===void 0)return!1;const a=this._listeners;return a[e]!==void 0&&a[e].indexOf(i)!==-1}removeEventListener(e,i){if(this._listeners===void 0)return;const t=this._listeners[e];if(t!==void 0){const n=t.indexOf(i);n!==-1&&t.splice(n,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const a=this._listeners[e.type];if(a!==void 0){e.target=this;const t=a.slice(0);for(let n=0,s=t.length;n<s;n++)t[n].call(this,e);e.target=null}}}const yi=[];for(let o=0;o<256;o++)yi[o]=(o<16?"0":"")+o.toString(16);const Js=Math.PI/180,Kr=180/Math.PI;function _a(){const o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0,a=Math.random()*4294967295|0;return(yi[o&255]+yi[o>>8&255]+yi[o>>16&255]+yi[o>>24&255]+"-"+yi[e&255]+yi[e>>8&255]+"-"+yi[e>>16&15|64]+yi[e>>24&255]+"-"+yi[i&63|128]+yi[i>>8&255]+"-"+yi[i>>16&255]+yi[i>>24&255]+yi[a&255]+yi[a>>8&255]+yi[a>>16&255]+yi[a>>24&255]).toLowerCase()}function wi(o,e,i){return Math.max(e,Math.min(i,o))}function tp(o,e){return(o%e+e)%e}function Xs(o,e,i){return(1-i)*o+i*e}function Tl(o){return(o&o-1)===0&&o!==0}function jr(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}class ie{constructor(e=0,i=0){this.x=e,this.y=i}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,i){return this.x=e,this.y=i,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,i){switch(e){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,i){return i!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,i)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,i){return this.x=e.x+i.x,this.y=e.y+i.y,this}addScaledVector(e,i){return this.x+=e.x*i,this.y+=e.y*i,this}sub(e,i){return i!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,i)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,i){return this.x=e.x-i.x,this.y=e.y-i.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const i=this.x,a=this.y,t=e.elements;return this.x=t[0]*i+t[3]*a+t[6],this.y=t[1]*i+t[4]*a+t[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,i){return this.x=Math.max(e.x,Math.min(i.x,this.x)),this.y=Math.max(e.y,Math.min(i.y,this.y)),this}clampScalar(e,i){return this.x=Math.max(e,Math.min(i,this.x)),this.y=Math.max(e,Math.min(i,this.y)),this}clampLength(e,i){const a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(e,Math.min(i,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const i=this.x-e.x,a=this.y-e.y;return i*i+a*a}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,i){return this.x+=(e.x-this.x)*i,this.y+=(e.y-this.y)*i,this}lerpVectors(e,i,a){return this.x=e.x+(i.x-e.x)*a,this.y=e.y+(i.y-e.y)*a,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,i=0){return this.x=e[i],this.y=e[i+1],this}toArray(e=[],i=0){return e[i]=this.x,e[i+1]=this.y,e}fromBufferAttribute(e,i,a){return a!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(i),this.y=e.getY(i),this}rotateAround(e,i){const a=Math.cos(i),t=Math.sin(i),n=this.x-e.x,s=this.y-e.y;return this.x=n*a-s*t+e.x,this.y=n*t+s*a+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ie.prototype.isVector2=!0;class Si{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,i,a,t,n,s,r,l,c){const f=this.elements;return f[0]=e,f[1]=t,f[2]=r,f[3]=i,f[4]=n,f[5]=l,f[6]=a,f[7]=s,f[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const i=this.elements,a=e.elements;return i[0]=a[0],i[1]=a[1],i[2]=a[2],i[3]=a[3],i[4]=a[4],i[5]=a[5],i[6]=a[6],i[7]=a[7],i[8]=a[8],this}extractBasis(e,i,a){return e.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),a.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const i=e.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,i){const a=e.elements,t=i.elements,n=this.elements,s=a[0],r=a[3],l=a[6],c=a[1],f=a[4],m=a[7],u=a[2],d=a[5],g=a[8],p=t[0],h=t[3],b=t[6],_=t[1],k=t[4],M=t[7],y=t[2],x=t[5],C=t[8];return n[0]=s*p+r*_+l*y,n[3]=s*h+r*k+l*x,n[6]=s*b+r*M+l*C,n[1]=c*p+f*_+m*y,n[4]=c*h+f*k+m*x,n[7]=c*b+f*M+m*C,n[2]=u*p+d*_+g*y,n[5]=u*h+d*k+g*x,n[8]=u*b+d*M+g*C,this}multiplyScalar(e){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=e,i[4]*=e,i[7]*=e,i[2]*=e,i[5]*=e,i[8]*=e,this}determinant(){const e=this.elements,i=e[0],a=e[1],t=e[2],n=e[3],s=e[4],r=e[5],l=e[6],c=e[7],f=e[8];return i*s*f-i*r*c-a*n*f+a*r*l+t*n*c-t*s*l}invert(){const e=this.elements,i=e[0],a=e[1],t=e[2],n=e[3],s=e[4],r=e[5],l=e[6],c=e[7],f=e[8],m=f*s-r*c,u=r*l-f*n,d=c*n-s*l,g=i*m+a*u+t*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/g;return e[0]=m*p,e[1]=(t*c-f*a)*p,e[2]=(r*a-t*s)*p,e[3]=u*p,e[4]=(f*i-t*l)*p,e[5]=(t*n-r*i)*p,e[6]=d*p,e[7]=(a*l-c*i)*p,e[8]=(s*i-a*n)*p,this}transpose(){let e;const i=this.elements;return e=i[1],i[1]=i[3],i[3]=e,e=i[2],i[2]=i[6],i[6]=e,e=i[5],i[5]=i[7],i[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const i=this.elements;return e[0]=i[0],e[1]=i[3],e[2]=i[6],e[3]=i[1],e[4]=i[4],e[5]=i[7],e[6]=i[2],e[7]=i[5],e[8]=i[8],this}setUvTransform(e,i,a,t,n,s,r){const l=Math.cos(n),c=Math.sin(n);return this.set(a*l,a*c,-a*(l*s+c*r)+s+e,-t*c,t*l,-t*(-c*s+l*r)+r+i,0,0,1),this}scale(e,i){const a=this.elements;return a[0]*=e,a[3]*=e,a[6]*=e,a[1]*=i,a[4]*=i,a[7]*=i,this}rotate(e){const i=Math.cos(e),a=Math.sin(e),t=this.elements,n=t[0],s=t[3],r=t[6],l=t[1],c=t[4],f=t[7];return t[0]=i*n+a*l,t[3]=i*s+a*c,t[6]=i*r+a*f,t[1]=-a*n+i*l,t[4]=-a*s+i*c,t[7]=-a*r+i*f,this}translate(e,i){const a=this.elements;return a[0]+=e*a[2],a[3]+=e*a[5],a[6]+=e*a[8],a[1]+=i*a[2],a[4]+=i*a[5],a[7]+=i*a[8],this}equals(e){const i=this.elements,a=e.elements;for(let t=0;t<9;t++)if(i[t]!==a[t])return!1;return!0}fromArray(e,i=0){for(let a=0;a<9;a++)this.elements[a]=e[a+i];return this}toArray(e=[],i=0){const a=this.elements;return e[i]=a[0],e[i+1]=a[1],e[i+2]=a[2],e[i+3]=a[3],e[i+4]=a[4],e[i+5]=a[5],e[i+6]=a[6],e[i+7]=a[7],e[i+8]=a[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Si.prototype.isMatrix3=!0;function am(o){for(let e=o.length-1;e>=0;--e)if(o[e]>65535)return!0;return!1}function co(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function wt(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function ls(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}const Ys={[Ca]:{[St]:wt},[St]:{[Ca]:ls}},ia={legacyMode:!0,get workingColorSpace(){return St},set workingColorSpace(o){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(o,e,i){if(this.legacyMode||e===i||!e||!i)return o;if(Ys[e]&&Ys[e][i]!==void 0){const a=Ys[e][i];return o.r=a(o.r),o.g=a(o.g),o.b=a(o.b),o}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(o,e){return this.convert(o,this.workingColorSpace,e)},toWorkingColorSpace:function(o,e){return this.convert(o,e,this.workingColorSpace)}},tm={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},li={r:0,g:0,b:0},aa={h:0,s:0,l:0},Co={h:0,s:0,l:0};function $s(o,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?o+(e-o)*6*i:i<1/2?e:i<2/3?o+(e-o)*6*(2/3-i):o}function Eo(o,e){return e.r=o.r,e.g=o.g,e.b=o.b,e}class he{constructor(e,i,a){return i===void 0&&a===void 0?this.set(e):this.setRGB(e,i,a)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,i=Ca){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ia.toWorkingColorSpace(this,i),this}setRGB(e,i,a,t=St){return this.r=e,this.g=i,this.b=a,ia.toWorkingColorSpace(this,t),this}setHSL(e,i,a,t=St){if(e=tp(e,1),i=wi(i,0,1),a=wi(a,0,1),i===0)this.r=this.g=this.b=a;else{const n=a<=.5?a*(1+i):a+i-a*i,s=2*a-n;this.r=$s(s,n,e+1/3),this.g=$s(s,n,e),this.b=$s(s,n,e-1/3)}return ia.toWorkingColorSpace(this,t),this}setStyle(e,i=Ca){function a(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let t;if(t=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let n;const s=t[1],r=t[2];switch(s){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,ia.toWorkingColorSpace(this,i),a(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,ia.toWorkingColorSpace(this,i),a(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(r)){const l=parseFloat(n[1])/360,c=parseInt(n[2],10)/100,f=parseInt(n[3],10)/100;return a(n[4]),this.setHSL(l,c,f,i)}break}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=t[1],s=n.length;if(s===3)return this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255,this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255,this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255,ia.toWorkingColorSpace(this,i),this;if(s===6)return this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255,this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255,this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255,ia.toWorkingColorSpace(this,i),this}return e&&e.length>0?this.setColorName(e,i):this}setColorName(e,i=Ca){const a=tm[e.toLowerCase()];return a!==void 0?this.setHex(a,i):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=wt(e.r),this.g=wt(e.g),this.b=wt(e.b),this}copyLinearToSRGB(e){return this.r=ls(e.r),this.g=ls(e.g),this.b=ls(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Ca){return ia.fromWorkingColorSpace(Eo(this,li),e),wi(li.r*255,0,255)<<16^wi(li.g*255,0,255)<<8^wi(li.b*255,0,255)<<0}getHexString(e=Ca){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,i=St){ia.fromWorkingColorSpace(Eo(this,li),i);const a=li.r,t=li.g,n=li.b,s=Math.max(a,t,n),r=Math.min(a,t,n);let l,c;const f=(r+s)/2;if(r===s)l=0,c=0;else{const m=s-r;switch(c=f<=.5?m/(s+r):m/(2-s-r),s){case a:l=(t-n)/m+(t<n?6:0);break;case t:l=(n-a)/m+2;break;case n:l=(a-t)/m+4;break}l/=6}return e.h=l,e.s=c,e.l=f,e}getRGB(e,i=St){return ia.fromWorkingColorSpace(Eo(this,li),i),e.r=li.r,e.g=li.g,e.b=li.b,e}getStyle(e=Ca){return ia.fromWorkingColorSpace(Eo(this,li),e),e!==Ca?`color(${e} ${li.r} ${li.g} ${li.b})`:`rgb(${li.r*255|0},${li.g*255|0},${li.b*255|0})`}offsetHSL(e,i,a){return this.getHSL(aa),aa.h+=e,aa.s+=i,aa.l+=a,this.setHSL(aa.h,aa.s,aa.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,i){return this.r=e.r+i.r,this.g=e.g+i.g,this.b=e.b+i.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,i){return this.r+=(e.r-this.r)*i,this.g+=(e.g-this.g)*i,this.b+=(e.b-this.b)*i,this}lerpColors(e,i,a){return this.r=e.r+(i.r-e.r)*a,this.g=e.g+(i.g-e.g)*a,this.b=e.b+(i.b-e.b)*a,this}lerpHSL(e,i){this.getHSL(aa),e.getHSL(Co);const a=Xs(aa.h,Co.h,i),t=Xs(aa.s,Co.s,i),n=Xs(aa.l,Co.l,i);return this.setHSL(a,t,n),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,i=0){return this.r=e[i],this.g=e[i+1],this.b=e[i+2],this}toArray(e=[],i=0){return e[i]=this.r,e[i+1]=this.g,e[i+2]=this.b,e}fromBufferAttribute(e,i){return this.r=e.getX(i),this.g=e.getY(i),this.b=e.getZ(i),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}he.NAMES=tm;he.prototype.isColor=!0;he.prototype.r=1;he.prototype.g=1;he.prototype.b=1;let Ut;class Lt{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{Ut===void 0&&(Ut=co("canvas")),Ut.width=e.width,Ut.height=e.height;const a=Ut.getContext("2d");e instanceof ImageData?a.putImageData(e,0,0):a.drawImage(e,0,0,e.width,e.height),i=Ut}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const i=co("canvas");i.width=e.width,i.height=e.height;const a=i.getContext("2d");a.drawImage(e,0,0,e.width,e.height);const t=a.getImageData(0,0,e.width,e.height),n=t.data;for(let s=0;s<n.length;s++)n[s]=wt(n[s]/255)*255;return a.putImageData(t,0,0),i}else if(e.data){const i=e.data.slice(0);for(let a=0;a<i.length;a++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[a]=Math.floor(wt(i[a]/255)*255):i[a]=wt(i[a]);return{data:i,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class nm{constructor(e=null){this.uuid=_a(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const i=e===void 0||typeof e=="string";if(!i&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const a={uuid:this.uuid,url:""},t=this.data;if(t!==null){let n;if(Array.isArray(t)){n=[];for(let s=0,r=t.length;s<r;s++)t[s].isDataTexture?n.push(Qs(t[s].image)):n.push(Qs(t[s]))}else n=Qs(t);a.url=n}return i||(e.images[this.uuid]=a),a}}function Qs(o){return typeof HTMLImageElement!="undefined"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&o instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&o instanceof ImageBitmap?Lt.getDataURL(o):o.data?{data:Array.prototype.slice.call(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}nm.prototype.isSource=!0;let np=0;class bi extends Pt{constructor(e=bi.DEFAULT_IMAGE,i=bi.DEFAULT_MAPPING,a=oa,t=oa,n=zi,s=Ts,r=sa,l=Ct,c=1,f=it){super(),Object.defineProperty(this,"id",{value:np++}),this.uuid=_a(),this.name="",this.source=new nm(e),this.mipmaps=[],this.mapping=i,this.wrapS=a,this.wrapT=t,this.magFilter=n,this.minFilter=s,this.anisotropy=c,this.format=r,this.internalFormat=null,this.type=l,this.offset=new ie(0,0),this.repeat=new ie(1,1),this.center=new ie(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Si,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=f,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const i=e===void 0||typeof e=="string";if(!i&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const a={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(a.userData=this.userData),i||(e.textures[this.uuid]=a),a}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==em)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Vr:e.x=e.x-Math.floor(e.x);break;case oa:e.x=e.x<0?0:1;break;case Hr:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Vr:e.y=e.y-Math.floor(e.y);break;case oa:e.y=e.y<0?0:1;break;case Hr:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}bi.DEFAULT_IMAGE=null;bi.DEFAULT_MAPPING=em;bi.prototype.isTexture=!0;class je{constructor(e=0,i=0,a=0,t=1){this.x=e,this.y=i,this.z=a,this.w=t}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,i,a,t){return this.x=e,this.y=i,this.z=a,this.w=t,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,i){switch(e){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;case 3:this.w=i;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,i){return i!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,i)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,i){return this.x=e.x+i.x,this.y=e.y+i.y,this.z=e.z+i.z,this.w=e.w+i.w,this}addScaledVector(e,i){return this.x+=e.x*i,this.y+=e.y*i,this.z+=e.z*i,this.w+=e.w*i,this}sub(e,i){return i!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,i)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,i){return this.x=e.x-i.x,this.y=e.y-i.y,this.z=e.z-i.z,this.w=e.w-i.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const i=this.x,a=this.y,t=this.z,n=this.w,s=e.elements;return this.x=s[0]*i+s[4]*a+s[8]*t+s[12]*n,this.y=s[1]*i+s[5]*a+s[9]*t+s[13]*n,this.z=s[2]*i+s[6]*a+s[10]*t+s[14]*n,this.w=s[3]*i+s[7]*a+s[11]*t+s[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const i=Math.sqrt(1-e.w*e.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/i,this.y=e.y/i,this.z=e.z/i),this}setAxisAngleFromRotationMatrix(e){let i,a,t,n;const l=e.elements,c=l[0],f=l[4],m=l[8],u=l[1],d=l[5],g=l[9],p=l[2],h=l[6],b=l[10];if(Math.abs(f-u)<.01&&Math.abs(m-p)<.01&&Math.abs(g-h)<.01){if(Math.abs(f+u)<.1&&Math.abs(m+p)<.1&&Math.abs(g+h)<.1&&Math.abs(c+d+b-3)<.1)return this.set(1,0,0,0),this;i=Math.PI;const k=(c+1)/2,M=(d+1)/2,y=(b+1)/2,x=(f+u)/4,C=(m+p)/4,v=(g+h)/4;return k>M&&k>y?k<.01?(a=0,t=.707106781,n=.707106781):(a=Math.sqrt(k),t=x/a,n=C/a):M>y?M<.01?(a=.707106781,t=0,n=.707106781):(t=Math.sqrt(M),a=x/t,n=v/t):y<.01?(a=.707106781,t=.707106781,n=0):(n=Math.sqrt(y),a=C/n,t=v/n),this.set(a,t,n,i),this}let _=Math.sqrt((h-g)*(h-g)+(m-p)*(m-p)+(u-f)*(u-f));return Math.abs(_)<.001&&(_=1),this.x=(h-g)/_,this.y=(m-p)/_,this.z=(u-f)/_,this.w=Math.acos((c+d+b-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,i){return this.x=Math.max(e.x,Math.min(i.x,this.x)),this.y=Math.max(e.y,Math.min(i.y,this.y)),this.z=Math.max(e.z,Math.min(i.z,this.z)),this.w=Math.max(e.w,Math.min(i.w,this.w)),this}clampScalar(e,i){return this.x=Math.max(e,Math.min(i,this.x)),this.y=Math.max(e,Math.min(i,this.y)),this.z=Math.max(e,Math.min(i,this.z)),this.w=Math.max(e,Math.min(i,this.w)),this}clampLength(e,i){const a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(e,Math.min(i,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,i){return this.x+=(e.x-this.x)*i,this.y+=(e.y-this.y)*i,this.z+=(e.z-this.z)*i,this.w+=(e.w-this.w)*i,this}lerpVectors(e,i,a){return this.x=e.x+(i.x-e.x)*a,this.y=e.y+(i.y-e.y)*a,this.z=e.z+(i.z-e.z)*a,this.w=e.w+(i.w-e.w)*a,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,i=0){return this.x=e[i],this.y=e[i+1],this.z=e[i+2],this.w=e[i+3],this}toArray(e=[],i=0){return e[i]=this.x,e[i+1]=this.y,e[i+2]=this.z,e[i+3]=this.w,e}fromBufferAttribute(e,i,a){return a!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(i),this.y=e.getY(i),this.z=e.getZ(i),this.w=e.getW(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}je.prototype.isVector4=!0;class Hi extends Pt{constructor(e,i,a={}){super(),this.width=e,this.height=i,this.depth=1,this.scissor=new je(0,0,e,i),this.scissorTest=!1,this.viewport=new je(0,0,e,i);const t={width:e,height:i,depth:1};this.texture=new bi(t,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=a.generateMipmaps!==void 0?a.generateMipmaps:!1,this.texture.internalFormat=a.internalFormat!==void 0?a.internalFormat:null,this.texture.minFilter=a.minFilter!==void 0?a.minFilter:zi,this.depthBuffer=a.depthBuffer!==void 0?a.depthBuffer:!0,this.stencilBuffer=a.stencilBuffer!==void 0?a.stencilBuffer:!1,this.depthTexture=a.depthTexture!==void 0?a.depthTexture:null,this.samples=a.samples!==void 0?a.samples:0}setSize(e,i,a=1){(this.width!==e||this.height!==i||this.depth!==a)&&(this.width=e,this.height=i,this.depth=a,this.texture.image.width=e,this.texture.image.height=i,this.texture.image.depth=a,this.dispose()),this.viewport.set(0,0,e,i),this.scissor.set(0,0,e,i)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}Hi.prototype.isWebGLRenderTarget=!0;class Cs extends bi{constructor(e=null,i=1,a=1,t=1){super(null),this.image={data:e,width:i,height:a,depth:t},this.magFilter=pi,this.minFilter=pi,this.wrapR=oa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Cs.prototype.isDataArrayTexture=!0;class op extends Hi{constructor(e,i,a){super(e,i),this.depth=a,this.texture=new Cs(null,e,i,a),this.texture.isRenderTargetTexture=!0}}op.prototype.isWebGLArrayRenderTarget=!0;class dc extends bi{constructor(e=null,i=1,a=1,t=1){super(null),this.image={data:e,width:i,height:a,depth:t},this.magFilter=pi,this.minFilter=pi,this.wrapR=oa,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}dc.prototype.isData3DTexture=!0;class sp extends Hi{constructor(e,i,a){super(e,i),this.depth=a,this.texture=new dc(null,e,i,a),this.texture.isRenderTargetTexture=!0}}sp.prototype.isWebGL3DRenderTarget=!0;class rp extends Hi{constructor(e,i,a,t={}){super(e,i,t);const n=this.texture;this.texture=[];for(let s=0;s<a;s++)this.texture[s]=n.clone(),this.texture[s].isRenderTargetTexture=!0}setSize(e,i,a=1){if(this.width!==e||this.height!==i||this.depth!==a){this.width=e,this.height=i,this.depth=a;for(let t=0,n=this.texture.length;t<n;t++)this.texture[t].image.width=e,this.texture[t].image.height=i,this.texture[t].image.depth=a;this.dispose()}return this.viewport.set(0,0,e,i),this.scissor.set(0,0,e,i),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let i=0,a=e.texture.length;i<a;i++)this.texture[i]=e.texture[i].clone(),this.texture[i].isRenderTargetTexture=!0;return this}}rp.prototype.isWebGLMultipleRenderTargets=!0;class Ni{constructor(e=0,i=0,a=0,t=1){this._x=e,this._y=i,this._z=a,this._w=t}static slerp(e,i,a,t){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),a.slerpQuaternions(e,i,t)}static slerpFlat(e,i,a,t,n,s,r){let l=a[t+0],c=a[t+1],f=a[t+2],m=a[t+3];const u=n[s+0],d=n[s+1],g=n[s+2],p=n[s+3];if(r===0){e[i+0]=l,e[i+1]=c,e[i+2]=f,e[i+3]=m;return}if(r===1){e[i+0]=u,e[i+1]=d,e[i+2]=g,e[i+3]=p;return}if(m!==p||l!==u||c!==d||f!==g){let h=1-r;const b=l*u+c*d+f*g+m*p,_=b>=0?1:-1,k=1-b*b;if(k>Number.EPSILON){const y=Math.sqrt(k),x=Math.atan2(y,b*_);h=Math.sin(h*x)/y,r=Math.sin(r*x)/y}const M=r*_;if(l=l*h+u*M,c=c*h+d*M,f=f*h+g*M,m=m*h+p*M,h===1-r){const y=1/Math.sqrt(l*l+c*c+f*f+m*m);l*=y,c*=y,f*=y,m*=y}}e[i]=l,e[i+1]=c,e[i+2]=f,e[i+3]=m}static multiplyQuaternionsFlat(e,i,a,t,n,s){const r=a[t],l=a[t+1],c=a[t+2],f=a[t+3],m=n[s],u=n[s+1],d=n[s+2],g=n[s+3];return e[i]=r*g+f*m+l*d-c*u,e[i+1]=l*g+f*u+c*m-r*d,e[i+2]=c*g+f*d+r*u-l*m,e[i+3]=f*g-r*m-l*u-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,i,a,t){return this._x=e,this._y=i,this._z=a,this._w=t,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,i){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const a=e._x,t=e._y,n=e._z,s=e._order,r=Math.cos,l=Math.sin,c=r(a/2),f=r(t/2),m=r(n/2),u=l(a/2),d=l(t/2),g=l(n/2);switch(s){case"XYZ":this._x=u*f*m+c*d*g,this._y=c*d*m-u*f*g,this._z=c*f*g+u*d*m,this._w=c*f*m-u*d*g;break;case"YXZ":this._x=u*f*m+c*d*g,this._y=c*d*m-u*f*g,this._z=c*f*g-u*d*m,this._w=c*f*m+u*d*g;break;case"ZXY":this._x=u*f*m-c*d*g,this._y=c*d*m+u*f*g,this._z=c*f*g+u*d*m,this._w=c*f*m-u*d*g;break;case"ZYX":this._x=u*f*m-c*d*g,this._y=c*d*m+u*f*g,this._z=c*f*g-u*d*m,this._w=c*f*m+u*d*g;break;case"YZX":this._x=u*f*m+c*d*g,this._y=c*d*m+u*f*g,this._z=c*f*g-u*d*m,this._w=c*f*m-u*d*g;break;case"XZY":this._x=u*f*m-c*d*g,this._y=c*d*m-u*f*g,this._z=c*f*g+u*d*m,this._w=c*f*m+u*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return i!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,i){const a=i/2,t=Math.sin(a);return this._x=e.x*t,this._y=e.y*t,this._z=e.z*t,this._w=Math.cos(a),this._onChangeCallback(),this}setFromRotationMatrix(e){const i=e.elements,a=i[0],t=i[4],n=i[8],s=i[1],r=i[5],l=i[9],c=i[2],f=i[6],m=i[10],u=a+r+m;if(u>0){const d=.5/Math.sqrt(u+1);this._w=.25/d,this._x=(f-l)*d,this._y=(n-c)*d,this._z=(s-t)*d}else if(a>r&&a>m){const d=2*Math.sqrt(1+a-r-m);this._w=(f-l)/d,this._x=.25*d,this._y=(t+s)/d,this._z=(n+c)/d}else if(r>m){const d=2*Math.sqrt(1+r-a-m);this._w=(n-c)/d,this._x=(t+s)/d,this._y=.25*d,this._z=(l+f)/d}else{const d=2*Math.sqrt(1+m-a-r);this._w=(s-t)/d,this._x=(n+c)/d,this._y=(l+f)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,i){let a=e.dot(i)+1;return a<Number.EPSILON?(a=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=a):(this._x=0,this._y=-e.z,this._z=e.y,this._w=a)):(this._x=e.y*i.z-e.z*i.y,this._y=e.z*i.x-e.x*i.z,this._z=e.x*i.y-e.y*i.x,this._w=a),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(wi(this.dot(e),-1,1)))}rotateTowards(e,i){const a=this.angleTo(e);if(a===0)return this;const t=Math.min(1,i/a);return this.slerp(e,t),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,i){return i!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,i)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,i){const a=e._x,t=e._y,n=e._z,s=e._w,r=i._x,l=i._y,c=i._z,f=i._w;return this._x=a*f+s*r+t*c-n*l,this._y=t*f+s*l+n*r-a*c,this._z=n*f+s*c+a*l-t*r,this._w=s*f-a*r-t*l-n*c,this._onChangeCallback(),this}slerp(e,i){if(i===0)return this;if(i===1)return this.copy(e);const a=this._x,t=this._y,n=this._z,s=this._w;let r=s*e._w+a*e._x+t*e._y+n*e._z;if(r<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,r=-r):this.copy(e),r>=1)return this._w=s,this._x=a,this._y=t,this._z=n,this;const l=1-r*r;if(l<=Number.EPSILON){const d=1-i;return this._w=d*s+i*this._w,this._x=d*a+i*this._x,this._y=d*t+i*this._y,this._z=d*n+i*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),f=Math.atan2(c,r),m=Math.sin((1-i)*f)/c,u=Math.sin(i*f)/c;return this._w=s*m+this._w*u,this._x=a*m+this._x*u,this._y=t*m+this._y*u,this._z=n*m+this._z*u,this._onChangeCallback(),this}slerpQuaternions(e,i,a){return this.copy(e).slerp(i,a)}random(){const e=Math.random(),i=Math.sqrt(1-e),a=Math.sqrt(e),t=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(i*Math.cos(t),a*Math.sin(n),a*Math.cos(n),i*Math.sin(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,i=0){return this._x=e[i],this._y=e[i+1],this._z=e[i+2],this._w=e[i+3],this._onChangeCallback(),this}toArray(e=[],i=0){return e[i]=this._x,e[i+1]=this._y,e[i+2]=this._z,e[i+3]=this._w,e}fromBufferAttribute(e,i){return this._x=e.getX(i),this._y=e.getY(i),this._z=e.getZ(i),this._w=e.getW(i),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}Ni.prototype.isQuaternion=!0;class T{constructor(e=0,i=0,a=0){this.x=e,this.y=i,this.z=a}set(e,i,a){return a===void 0&&(a=this.z),this.x=e,this.y=i,this.z=a,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,i){switch(e){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,i){return i!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,i)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,i){return this.x=e.x+i.x,this.y=e.y+i.y,this.z=e.z+i.z,this}addScaledVector(e,i){return this.x+=e.x*i,this.y+=e.y*i,this.z+=e.z*i,this}sub(e,i){return i!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,i)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,i){return this.x=e.x-i.x,this.y=e.y-i.y,this.z=e.z-i.z,this}multiply(e,i){return i!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,i)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,i){return this.x=e.x*i.x,this.y=e.y*i.y,this.z=e.z*i.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Cl.setFromEuler(e))}applyAxisAngle(e,i){return this.applyQuaternion(Cl.setFromAxisAngle(e,i))}applyMatrix3(e){const i=this.x,a=this.y,t=this.z,n=e.elements;return this.x=n[0]*i+n[3]*a+n[6]*t,this.y=n[1]*i+n[4]*a+n[7]*t,this.z=n[2]*i+n[5]*a+n[8]*t,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const i=this.x,a=this.y,t=this.z,n=e.elements,s=1/(n[3]*i+n[7]*a+n[11]*t+n[15]);return this.x=(n[0]*i+n[4]*a+n[8]*t+n[12])*s,this.y=(n[1]*i+n[5]*a+n[9]*t+n[13])*s,this.z=(n[2]*i+n[6]*a+n[10]*t+n[14])*s,this}applyQuaternion(e){const i=this.x,a=this.y,t=this.z,n=e.x,s=e.y,r=e.z,l=e.w,c=l*i+s*t-r*a,f=l*a+r*i-n*t,m=l*t+n*a-s*i,u=-n*i-s*a-r*t;return this.x=c*l+u*-n+f*-r-m*-s,this.y=f*l+u*-s+m*-n-c*-r,this.z=m*l+u*-r+c*-s-f*-n,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const i=this.x,a=this.y,t=this.z,n=e.elements;return this.x=n[0]*i+n[4]*a+n[8]*t,this.y=n[1]*i+n[5]*a+n[9]*t,this.z=n[2]*i+n[6]*a+n[10]*t,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,i){return this.x=Math.max(e.x,Math.min(i.x,this.x)),this.y=Math.max(e.y,Math.min(i.y,this.y)),this.z=Math.max(e.z,Math.min(i.z,this.z)),this}clampScalar(e,i){return this.x=Math.max(e,Math.min(i,this.x)),this.y=Math.max(e,Math.min(i,this.y)),this.z=Math.max(e,Math.min(i,this.z)),this}clampLength(e,i){const a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(e,Math.min(i,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,i){return this.x+=(e.x-this.x)*i,this.y+=(e.y-this.y)*i,this.z+=(e.z-this.z)*i,this}lerpVectors(e,i,a){return this.x=e.x+(i.x-e.x)*a,this.y=e.y+(i.y-e.y)*a,this.z=e.z+(i.z-e.z)*a,this}cross(e,i){return i!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,i)):this.crossVectors(this,e)}crossVectors(e,i){const a=e.x,t=e.y,n=e.z,s=i.x,r=i.y,l=i.z;return this.x=t*l-n*r,this.y=n*s-a*l,this.z=a*r-t*s,this}projectOnVector(e){const i=e.lengthSq();if(i===0)return this.set(0,0,0);const a=e.dot(this)/i;return this.copy(e).multiplyScalar(a)}projectOnPlane(e){return er.copy(this).projectOnVector(e),this.sub(er)}reflect(e){return this.sub(er.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const i=Math.sqrt(this.lengthSq()*e.lengthSq());if(i===0)return Math.PI/2;const a=this.dot(e)/i;return Math.acos(wi(a,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const i=this.x-e.x,a=this.y-e.y,t=this.z-e.z;return i*i+a*a+t*t}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,i,a){const t=Math.sin(i)*e;return this.x=t*Math.sin(a),this.y=Math.cos(i)*e,this.z=t*Math.cos(a),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,i,a){return this.x=e*Math.sin(i),this.y=a,this.z=e*Math.cos(i),this}setFromMatrixPosition(e){const i=e.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(e){const i=this.setFromMatrixColumn(e,0).length(),a=this.setFromMatrixColumn(e,1).length(),t=this.setFromMatrixColumn(e,2).length();return this.x=i,this.y=a,this.z=t,this}setFromMatrixColumn(e,i){return this.fromArray(e.elements,i*4)}setFromMatrix3Column(e,i){return this.fromArray(e.elements,i*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,i=0){return this.x=e[i],this.y=e[i+1],this.z=e[i+2],this}toArray(e=[],i=0){return e[i]=this.x,e[i+1]=this.y,e[i+2]=this.z,e}fromBufferAttribute(e,i,a){return a!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(i),this.y=e.getY(i),this.z=e.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,i=Math.random()*Math.PI*2,a=Math.sqrt(1-e**2);return this.x=a*Math.cos(i),this.y=a*Math.sin(i),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}T.prototype.isVector3=!0;const er=new T,Cl=new Ni;class la{constructor(e=new T(1/0,1/0,1/0),i=new T(-1/0,-1/0,-1/0)){this.min=e,this.max=i}set(e,i){return this.min.copy(e),this.max.copy(i),this}setFromArray(e){let i=1/0,a=1/0,t=1/0,n=-1/0,s=-1/0,r=-1/0;for(let l=0,c=e.length;l<c;l+=3){const f=e[l],m=e[l+1],u=e[l+2];f<i&&(i=f),m<a&&(a=m),u<t&&(t=u),f>n&&(n=f),m>s&&(s=m),u>r&&(r=u)}return this.min.set(i,a,t),this.max.set(n,s,r),this}setFromBufferAttribute(e){let i=1/0,a=1/0,t=1/0,n=-1/0,s=-1/0,r=-1/0;for(let l=0,c=e.count;l<c;l++){const f=e.getX(l),m=e.getY(l),u=e.getZ(l);f<i&&(i=f),m<a&&(a=m),u<t&&(t=u),f>n&&(n=f),m>s&&(s=m),u>r&&(r=u)}return this.min.set(i,a,t),this.max.set(n,s,r),this}setFromPoints(e){this.makeEmpty();for(let i=0,a=e.length;i<a;i++)this.expandByPoint(e[i]);return this}setFromCenterAndSize(e,i){const a=mt.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(a),this.max.copy(e).add(a),this}setFromObject(e,i=!1){return this.makeEmpty(),this.expandByObject(e,i)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,i=!1){e.updateWorldMatrix(!1,!1);const a=e.geometry;if(a!==void 0)if(i&&a.attributes!=null&&a.attributes.position!==void 0){const n=a.attributes.position;for(let s=0,r=n.count;s<r;s++)mt.fromBufferAttribute(n,s).applyMatrix4(e.matrixWorld),this.expandByPoint(mt)}else a.boundingBox===null&&a.computeBoundingBox(),ir.copy(a.boundingBox),ir.applyMatrix4(e.matrixWorld),this.union(ir);const t=e.children;for(let n=0,s=t.length;n<s;n++)this.expandByObject(t[n],i);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,i){return i.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,mt),mt.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let i,a;return e.normal.x>0?(i=e.normal.x*this.min.x,a=e.normal.x*this.max.x):(i=e.normal.x*this.max.x,a=e.normal.x*this.min.x),e.normal.y>0?(i+=e.normal.y*this.min.y,a+=e.normal.y*this.max.y):(i+=e.normal.y*this.max.y,a+=e.normal.y*this.min.y),e.normal.z>0?(i+=e.normal.z*this.min.z,a+=e.normal.z*this.max.z):(i+=e.normal.z*this.max.z,a+=e.normal.z*this.min.z),i<=-e.constant&&a>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(On),Po.subVectors(this.max,On),Ot.subVectors(e.a,On),Ft.subVectors(e.b,On),Vt.subVectors(e.c,On),Ga.subVectors(Ft,Ot),Ua.subVectors(Vt,Ft),ut.subVectors(Ot,Vt);let i=[0,-Ga.z,Ga.y,0,-Ua.z,Ua.y,0,-ut.z,ut.y,Ga.z,0,-Ga.x,Ua.z,0,-Ua.x,ut.z,0,-ut.x,-Ga.y,Ga.x,0,-Ua.y,Ua.x,0,-ut.y,ut.x,0];return!ar(i,Ot,Ft,Vt,Po)||(i=[1,0,0,0,1,0,0,0,1],!ar(i,Ot,Ft,Vt,Po))?!1:(Lo.crossVectors(Ga,Ua),i=[Lo.x,Lo.y,Lo.z],ar(i,Ot,Ft,Vt,Po))}clampPoint(e,i){return i.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return mt.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(mt).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ka[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ka[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ka[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ka[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ka[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ka[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ka[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ka[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ka),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}la.prototype.isBox3=!0;const ka=[new T,new T,new T,new T,new T,new T,new T,new T],mt=new T,ir=new la,Ot=new T,Ft=new T,Vt=new T,Ga=new T,Ua=new T,ut=new T,On=new T,Po=new T,Lo=new T,dt=new T;function ar(o,e,i,a,t){for(let n=0,s=o.length-3;n<=s;n+=3){dt.fromArray(o,n);const r=t.x*Math.abs(dt.x)+t.y*Math.abs(dt.y)+t.z*Math.abs(dt.z),l=e.dot(dt),c=i.dot(dt),f=a.dot(dt);if(Math.max(-Math.max(l,c,f),Math.min(l,c,f))>r)return!1}return!0}const cp=new la,El=new T,zo=new T,tr=new T;class Pn{constructor(e=new T,i=-1){this.center=e,this.radius=i}set(e,i){return this.center.copy(e),this.radius=i,this}setFromPoints(e,i){const a=this.center;i!==void 0?a.copy(i):cp.setFromPoints(e).getCenter(a);let t=0;for(let n=0,s=e.length;n<s;n++)t=Math.max(t,a.distanceToSquared(e[n]));return this.radius=Math.sqrt(t),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const i=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=i*i}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,i){const a=this.center.distanceToSquared(e);return i.copy(e),a>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){tr.subVectors(e,this.center);const i=tr.lengthSq();if(i>this.radius*this.radius){const a=Math.sqrt(i),t=(a-this.radius)*.5;this.center.add(tr.multiplyScalar(t/a)),this.radius+=t}return this}union(e){return this.center.equals(e.center)===!0?zo.set(0,0,1).multiplyScalar(e.radius):zo.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(El.copy(e.center).add(zo)),this.expandByPoint(El.copy(e.center).sub(zo)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const wa=new T,nr=new T,Io=new T,Oa=new T,or=new T,No=new T,sr=new T;class zt{constructor(e=new T,i=new T(0,0,-1)){this.origin=e,this.direction=i}set(e,i){return this.origin.copy(e),this.direction.copy(i),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,i){return i.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,wa)),this}closestPointToPoint(e,i){i.subVectors(e,this.origin);const a=i.dot(this.direction);return a<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(a).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const i=wa.subVectors(e,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(e):(wa.copy(this.direction).multiplyScalar(i).add(this.origin),wa.distanceToSquared(e))}distanceSqToSegment(e,i,a,t){nr.copy(e).add(i).multiplyScalar(.5),Io.copy(i).sub(e).normalize(),Oa.copy(this.origin).sub(nr);const n=e.distanceTo(i)*.5,s=-this.direction.dot(Io),r=Oa.dot(this.direction),l=-Oa.dot(Io),c=Oa.lengthSq(),f=Math.abs(1-s*s);let m,u,d,g;if(f>0)if(m=s*l-r,u=s*r-l,g=n*f,m>=0)if(u>=-g)if(u<=g){const p=1/f;m*=p,u*=p,d=m*(m+s*u+2*r)+u*(s*m+u+2*l)+c}else u=n,m=Math.max(0,-(s*u+r)),d=-m*m+u*(u+2*l)+c;else u=-n,m=Math.max(0,-(s*u+r)),d=-m*m+u*(u+2*l)+c;else u<=-g?(m=Math.max(0,-(-s*n+r)),u=m>0?-n:Math.min(Math.max(-n,-l),n),d=-m*m+u*(u+2*l)+c):u<=g?(m=0,u=Math.min(Math.max(-n,-l),n),d=u*(u+2*l)+c):(m=Math.max(0,-(s*n+r)),u=m>0?n:Math.min(Math.max(-n,-l),n),d=-m*m+u*(u+2*l)+c);else u=s>0?-n:n,m=Math.max(0,-(s*u+r)),d=-m*m+u*(u+2*l)+c;return a&&a.copy(this.direction).multiplyScalar(m).add(this.origin),t&&t.copy(Io).multiplyScalar(u).add(nr),d}intersectSphere(e,i){wa.subVectors(e.center,this.origin);const a=wa.dot(this.direction),t=wa.dot(wa)-a*a,n=e.radius*e.radius;if(t>n)return null;const s=Math.sqrt(n-t),r=a-s,l=a+s;return r<0&&l<0?null:r<0?this.at(l,i):this.at(r,i)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const i=e.normal.dot(this.direction);if(i===0)return e.distanceToPoint(this.origin)===0?0:null;const a=-(this.origin.dot(e.normal)+e.constant)/i;return a>=0?a:null}intersectPlane(e,i){const a=this.distanceToPlane(e);return a===null?null:this.at(a,i)}intersectsPlane(e){const i=e.distanceToPoint(this.origin);return i===0||e.normal.dot(this.direction)*i<0}intersectBox(e,i){let a,t,n,s,r,l;const c=1/this.direction.x,f=1/this.direction.y,m=1/this.direction.z,u=this.origin;return c>=0?(a=(e.min.x-u.x)*c,t=(e.max.x-u.x)*c):(a=(e.max.x-u.x)*c,t=(e.min.x-u.x)*c),f>=0?(n=(e.min.y-u.y)*f,s=(e.max.y-u.y)*f):(n=(e.max.y-u.y)*f,s=(e.min.y-u.y)*f),a>s||n>t||((n>a||a!==a)&&(a=n),(s<t||t!==t)&&(t=s),m>=0?(r=(e.min.z-u.z)*m,l=(e.max.z-u.z)*m):(r=(e.max.z-u.z)*m,l=(e.min.z-u.z)*m),a>l||r>t)||((r>a||a!==a)&&(a=r),(l<t||t!==t)&&(t=l),t<0)?null:this.at(a>=0?a:t,i)}intersectsBox(e){return this.intersectBox(e,wa)!==null}intersectTriangle(e,i,a,t,n){or.subVectors(i,e),No.subVectors(a,e),sr.crossVectors(or,No);let s=this.direction.dot(sr),r;if(s>0){if(t)return null;r=1}else if(s<0)r=-1,s=-s;else return null;Oa.subVectors(this.origin,e);const l=r*this.direction.dot(No.crossVectors(Oa,No));if(l<0)return null;const c=r*this.direction.dot(or.cross(Oa));if(c<0||l+c>s)return null;const f=-r*Oa.dot(sr);return f<0?null:this.at(f/s,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class be{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,i,a,t,n,s,r,l,c,f,m,u,d,g,p,h){const b=this.elements;return b[0]=e,b[4]=i,b[8]=a,b[12]=t,b[1]=n,b[5]=s,b[9]=r,b[13]=l,b[2]=c,b[6]=f,b[10]=m,b[14]=u,b[3]=d,b[7]=g,b[11]=p,b[15]=h,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new be().fromArray(this.elements)}copy(e){const i=this.elements,a=e.elements;return i[0]=a[0],i[1]=a[1],i[2]=a[2],i[3]=a[3],i[4]=a[4],i[5]=a[5],i[6]=a[6],i[7]=a[7],i[8]=a[8],i[9]=a[9],i[10]=a[10],i[11]=a[11],i[12]=a[12],i[13]=a[13],i[14]=a[14],i[15]=a[15],this}copyPosition(e){const i=this.elements,a=e.elements;return i[12]=a[12],i[13]=a[13],i[14]=a[14],this}setFromMatrix3(e){const i=e.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(e,i,a){return e.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),a.setFromMatrixColumn(this,2),this}makeBasis(e,i,a){return this.set(e.x,i.x,a.x,0,e.y,i.y,a.y,0,e.z,i.z,a.z,0,0,0,0,1),this}extractRotation(e){const i=this.elements,a=e.elements,t=1/Ht.setFromMatrixColumn(e,0).length(),n=1/Ht.setFromMatrixColumn(e,1).length(),s=1/Ht.setFromMatrixColumn(e,2).length();return i[0]=a[0]*t,i[1]=a[1]*t,i[2]=a[2]*t,i[3]=0,i[4]=a[4]*n,i[5]=a[5]*n,i[6]=a[6]*n,i[7]=0,i[8]=a[8]*s,i[9]=a[9]*s,i[10]=a[10]*s,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const i=this.elements,a=e.x,t=e.y,n=e.z,s=Math.cos(a),r=Math.sin(a),l=Math.cos(t),c=Math.sin(t),f=Math.cos(n),m=Math.sin(n);if(e.order==="XYZ"){const u=s*f,d=s*m,g=r*f,p=r*m;i[0]=l*f,i[4]=-l*m,i[8]=c,i[1]=d+g*c,i[5]=u-p*c,i[9]=-r*l,i[2]=p-u*c,i[6]=g+d*c,i[10]=s*l}else if(e.order==="YXZ"){const u=l*f,d=l*m,g=c*f,p=c*m;i[0]=u+p*r,i[4]=g*r-d,i[8]=s*c,i[1]=s*m,i[5]=s*f,i[9]=-r,i[2]=d*r-g,i[6]=p+u*r,i[10]=s*l}else if(e.order==="ZXY"){const u=l*f,d=l*m,g=c*f,p=c*m;i[0]=u-p*r,i[4]=-s*m,i[8]=g+d*r,i[1]=d+g*r,i[5]=s*f,i[9]=p-u*r,i[2]=-s*c,i[6]=r,i[10]=s*l}else if(e.order==="ZYX"){const u=s*f,d=s*m,g=r*f,p=r*m;i[0]=l*f,i[4]=g*c-d,i[8]=u*c+p,i[1]=l*m,i[5]=p*c+u,i[9]=d*c-g,i[2]=-c,i[6]=r*l,i[10]=s*l}else if(e.order==="YZX"){const u=s*l,d=s*c,g=r*l,p=r*c;i[0]=l*f,i[4]=p-u*m,i[8]=g*m+d,i[1]=m,i[5]=s*f,i[9]=-r*f,i[2]=-c*f,i[6]=d*m+g,i[10]=u-p*m}else if(e.order==="XZY"){const u=s*l,d=s*c,g=r*l,p=r*c;i[0]=l*f,i[4]=-m,i[8]=c*f,i[1]=u*m+p,i[5]=s*f,i[9]=d*m-g,i[2]=g*m-d,i[6]=r*f,i[10]=p*m+u}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(e){return this.compose(lp,e,fp)}lookAt(e,i,a){const t=this.elements;return Ui.subVectors(e,i),Ui.lengthSq()===0&&(Ui.z=1),Ui.normalize(),Fa.crossVectors(a,Ui),Fa.lengthSq()===0&&(Math.abs(a.z)===1?Ui.x+=1e-4:Ui.z+=1e-4,Ui.normalize(),Fa.crossVectors(a,Ui)),Fa.normalize(),Bo.crossVectors(Ui,Fa),t[0]=Fa.x,t[4]=Bo.x,t[8]=Ui.x,t[1]=Fa.y,t[5]=Bo.y,t[9]=Ui.y,t[2]=Fa.z,t[6]=Bo.z,t[10]=Ui.z,this}multiply(e,i){return i!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,i)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,i){const a=e.elements,t=i.elements,n=this.elements,s=a[0],r=a[4],l=a[8],c=a[12],f=a[1],m=a[5],u=a[9],d=a[13],g=a[2],p=a[6],h=a[10],b=a[14],_=a[3],k=a[7],M=a[11],y=a[15],x=t[0],C=t[4],v=t[8],A=t[12],z=t[1],L=t[5],ee=t[9],Z=t[13],P=t[2],G=t[6],I=t[10],F=t[14],W=t[3],D=t[7],H=t[11],Y=t[15];return n[0]=s*x+r*z+l*P+c*W,n[4]=s*C+r*L+l*G+c*D,n[8]=s*v+r*ee+l*I+c*H,n[12]=s*A+r*Z+l*F+c*Y,n[1]=f*x+m*z+u*P+d*W,n[5]=f*C+m*L+u*G+d*D,n[9]=f*v+m*ee+u*I+d*H,n[13]=f*A+m*Z+u*F+d*Y,n[2]=g*x+p*z+h*P+b*W,n[6]=g*C+p*L+h*G+b*D,n[10]=g*v+p*ee+h*I+b*H,n[14]=g*A+p*Z+h*F+b*Y,n[3]=_*x+k*z+M*P+y*W,n[7]=_*C+k*L+M*G+y*D,n[11]=_*v+k*ee+M*I+y*H,n[15]=_*A+k*Z+M*F+y*Y,this}multiplyScalar(e){const i=this.elements;return i[0]*=e,i[4]*=e,i[8]*=e,i[12]*=e,i[1]*=e,i[5]*=e,i[9]*=e,i[13]*=e,i[2]*=e,i[6]*=e,i[10]*=e,i[14]*=e,i[3]*=e,i[7]*=e,i[11]*=e,i[15]*=e,this}determinant(){const e=this.elements,i=e[0],a=e[4],t=e[8],n=e[12],s=e[1],r=e[5],l=e[9],c=e[13],f=e[2],m=e[6],u=e[10],d=e[14],g=e[3],p=e[7],h=e[11],b=e[15];return g*(+n*l*m-t*c*m-n*r*u+a*c*u+t*r*d-a*l*d)+p*(+i*l*d-i*c*u+n*s*u-t*s*d+t*c*f-n*l*f)+h*(+i*c*m-i*r*d-n*s*m+a*s*d+n*r*f-a*c*f)+b*(-t*r*f-i*l*m+i*r*u+t*s*m-a*s*u+a*l*f)}transpose(){const e=this.elements;let i;return i=e[1],e[1]=e[4],e[4]=i,i=e[2],e[2]=e[8],e[8]=i,i=e[6],e[6]=e[9],e[9]=i,i=e[3],e[3]=e[12],e[12]=i,i=e[7],e[7]=e[13],e[13]=i,i=e[11],e[11]=e[14],e[14]=i,this}setPosition(e,i,a){const t=this.elements;return e.isVector3?(t[12]=e.x,t[13]=e.y,t[14]=e.z):(t[12]=e,t[13]=i,t[14]=a),this}invert(){const e=this.elements,i=e[0],a=e[1],t=e[2],n=e[3],s=e[4],r=e[5],l=e[6],c=e[7],f=e[8],m=e[9],u=e[10],d=e[11],g=e[12],p=e[13],h=e[14],b=e[15],_=m*h*c-p*u*c+p*l*d-r*h*d-m*l*b+r*u*b,k=g*u*c-f*h*c-g*l*d+s*h*d+f*l*b-s*u*b,M=f*p*c-g*m*c+g*r*d-s*p*d-f*r*b+s*m*b,y=g*m*l-f*p*l-g*r*u+s*p*u+f*r*h-s*m*h,x=i*_+a*k+t*M+n*y;if(x===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/x;return e[0]=_*C,e[1]=(p*u*n-m*h*n-p*t*d+a*h*d+m*t*b-a*u*b)*C,e[2]=(r*h*n-p*l*n+p*t*c-a*h*c-r*t*b+a*l*b)*C,e[3]=(m*l*n-r*u*n-m*t*c+a*u*c+r*t*d-a*l*d)*C,e[4]=k*C,e[5]=(f*h*n-g*u*n+g*t*d-i*h*d-f*t*b+i*u*b)*C,e[6]=(g*l*n-s*h*n-g*t*c+i*h*c+s*t*b-i*l*b)*C,e[7]=(s*u*n-f*l*n+f*t*c-i*u*c-s*t*d+i*l*d)*C,e[8]=M*C,e[9]=(g*m*n-f*p*n-g*a*d+i*p*d+f*a*b-i*m*b)*C,e[10]=(s*p*n-g*r*n+g*a*c-i*p*c-s*a*b+i*r*b)*C,e[11]=(f*r*n-s*m*n-f*a*c+i*m*c+s*a*d-i*r*d)*C,e[12]=y*C,e[13]=(f*p*t-g*m*t+g*a*u-i*p*u-f*a*h+i*m*h)*C,e[14]=(g*r*t-s*p*t-g*a*l+i*p*l+s*a*h-i*r*h)*C,e[15]=(s*m*t-f*r*t+f*a*l-i*m*l-s*a*u+i*r*u)*C,this}scale(e){const i=this.elements,a=e.x,t=e.y,n=e.z;return i[0]*=a,i[4]*=t,i[8]*=n,i[1]*=a,i[5]*=t,i[9]*=n,i[2]*=a,i[6]*=t,i[10]*=n,i[3]*=a,i[7]*=t,i[11]*=n,this}getMaxScaleOnAxis(){const e=this.elements,i=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],a=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],t=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(i,a,t))}makeTranslation(e,i,a){return this.set(1,0,0,e,0,1,0,i,0,0,1,a,0,0,0,1),this}makeRotationX(e){const i=Math.cos(e),a=Math.sin(e);return this.set(1,0,0,0,0,i,-a,0,0,a,i,0,0,0,0,1),this}makeRotationY(e){const i=Math.cos(e),a=Math.sin(e);return this.set(i,0,a,0,0,1,0,0,-a,0,i,0,0,0,0,1),this}makeRotationZ(e){const i=Math.cos(e),a=Math.sin(e);return this.set(i,-a,0,0,a,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,i){const a=Math.cos(i),t=Math.sin(i),n=1-a,s=e.x,r=e.y,l=e.z,c=n*s,f=n*r;return this.set(c*s+a,c*r-t*l,c*l+t*r,0,c*r+t*l,f*r+a,f*l-t*s,0,c*l-t*r,f*l+t*s,n*l*l+a,0,0,0,0,1),this}makeScale(e,i,a){return this.set(e,0,0,0,0,i,0,0,0,0,a,0,0,0,0,1),this}makeShear(e,i,a,t,n,s){return this.set(1,a,n,0,e,1,s,0,i,t,1,0,0,0,0,1),this}compose(e,i,a){const t=this.elements,n=i._x,s=i._y,r=i._z,l=i._w,c=n+n,f=s+s,m=r+r,u=n*c,d=n*f,g=n*m,p=s*f,h=s*m,b=r*m,_=l*c,k=l*f,M=l*m,y=a.x,x=a.y,C=a.z;return t[0]=(1-(p+b))*y,t[1]=(d+M)*y,t[2]=(g-k)*y,t[3]=0,t[4]=(d-M)*x,t[5]=(1-(u+b))*x,t[6]=(h+_)*x,t[7]=0,t[8]=(g+k)*C,t[9]=(h-_)*C,t[10]=(1-(u+p))*C,t[11]=0,t[12]=e.x,t[13]=e.y,t[14]=e.z,t[15]=1,this}decompose(e,i,a){const t=this.elements;let n=Ht.set(t[0],t[1],t[2]).length();const s=Ht.set(t[4],t[5],t[6]).length(),r=Ht.set(t[8],t[9],t[10]).length();this.determinant()<0&&(n=-n),e.x=t[12],e.y=t[13],e.z=t[14],ta.copy(this);const c=1/n,f=1/s,m=1/r;return ta.elements[0]*=c,ta.elements[1]*=c,ta.elements[2]*=c,ta.elements[4]*=f,ta.elements[5]*=f,ta.elements[6]*=f,ta.elements[8]*=m,ta.elements[9]*=m,ta.elements[10]*=m,i.setFromRotationMatrix(ta),a.x=n,a.y=s,a.z=r,this}makePerspective(e,i,a,t,n,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const r=this.elements,l=2*n/(i-e),c=2*n/(a-t),f=(i+e)/(i-e),m=(a+t)/(a-t),u=-(s+n)/(s-n),d=-2*s*n/(s-n);return r[0]=l,r[4]=0,r[8]=f,r[12]=0,r[1]=0,r[5]=c,r[9]=m,r[13]=0,r[2]=0,r[6]=0,r[10]=u,r[14]=d,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(e,i,a,t,n,s){const r=this.elements,l=1/(i-e),c=1/(a-t),f=1/(s-n),m=(i+e)*l,u=(a+t)*c,d=(s+n)*f;return r[0]=2*l,r[4]=0,r[8]=0,r[12]=-m,r[1]=0,r[5]=2*c,r[9]=0,r[13]=-u,r[2]=0,r[6]=0,r[10]=-2*f,r[14]=-d,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(e){const i=this.elements,a=e.elements;for(let t=0;t<16;t++)if(i[t]!==a[t])return!1;return!0}fromArray(e,i=0){for(let a=0;a<16;a++)this.elements[a]=e[a+i];return this}toArray(e=[],i=0){const a=this.elements;return e[i]=a[0],e[i+1]=a[1],e[i+2]=a[2],e[i+3]=a[3],e[i+4]=a[4],e[i+5]=a[5],e[i+6]=a[6],e[i+7]=a[7],e[i+8]=a[8],e[i+9]=a[9],e[i+10]=a[10],e[i+11]=a[11],e[i+12]=a[12],e[i+13]=a[13],e[i+14]=a[14],e[i+15]=a[15],e}}be.prototype.isMatrix4=!0;const Ht=new T,ta=new be,lp=new T(0,0,0),fp=new T(1,1,1),Fa=new T,Bo=new T,Ui=new T,Pl=new be,Ll=new Ni;class It{constructor(e=0,i=0,a=0,t=It.DefaultOrder){this._x=e,this._y=i,this._z=a,this._order=t}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,i,a,t=this._order){return this._x=e,this._y=i,this._z=a,this._order=t,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,i=this._order,a=!0){const t=e.elements,n=t[0],s=t[4],r=t[8],l=t[1],c=t[5],f=t[9],m=t[2],u=t[6],d=t[10];switch(i){case"XYZ":this._y=Math.asin(wi(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-f,d),this._z=Math.atan2(-s,n)):(this._x=Math.atan2(u,c),this._z=0);break;case"YXZ":this._x=Math.asin(-wi(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(r,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-m,n),this._z=0);break;case"ZXY":this._x=Math.asin(wi(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-m,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,n));break;case"ZYX":this._y=Math.asin(-wi(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(l,n)):(this._x=0,this._z=Math.atan2(-s,c));break;case"YZX":this._z=Math.asin(wi(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,c),this._y=Math.atan2(-m,n)):(this._x=0,this._y=Math.atan2(r,d));break;case"XZY":this._z=Math.asin(-wi(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(u,c),this._y=Math.atan2(r,n)):(this._x=Math.atan2(-f,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,a===!0&&this._onChangeCallback(),this}setFromQuaternion(e,i,a){return Pl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Pl,i,a)}setFromVector3(e,i=this._order){return this.set(e.x,e.y,e.z,i)}reorder(e){return Ll.setFromEuler(this),this.setFromQuaternion(Ll,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],i=0){return e[i]=this._x,e[i+1]=this._y,e[i+2]=this._z,e[i+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}It.prototype.isEuler=!0;It.DefaultOrder="XYZ";It.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class pc{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let mp=0;const zl=new T,Wt=new Ni,xa=new be,Do=new T,Fn=new T,up=new T,dp=new Ni,Il=new T(1,0,0),Nl=new T(0,1,0),Bl=new T(0,0,1),pp={type:"added"},Dl={type:"removed"};class We extends Pt{constructor(){super(),Object.defineProperty(this,"id",{value:mp++}),this.uuid=_a(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=We.DefaultUp.clone();const e=new T,i=new It,a=new Ni,t=new T(1,1,1);function n(){a.setFromEuler(i,!1)}function s(){i.setFromQuaternion(a,void 0,!1)}i._onChange(n),a._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:t},modelViewMatrix:{value:new be},normalMatrix:{value:new Si}}),this.matrix=new be,this.matrixWorld=new be,this.matrixAutoUpdate=We.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new pc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,i){this.quaternion.setFromAxisAngle(e,i)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,i){return Wt.setFromAxisAngle(e,i),this.quaternion.multiply(Wt),this}rotateOnWorldAxis(e,i){return Wt.setFromAxisAngle(e,i),this.quaternion.premultiply(Wt),this}rotateX(e){return this.rotateOnAxis(Il,e)}rotateY(e){return this.rotateOnAxis(Nl,e)}rotateZ(e){return this.rotateOnAxis(Bl,e)}translateOnAxis(e,i){return zl.copy(e).applyQuaternion(this.quaternion),this.position.add(zl.multiplyScalar(i)),this}translateX(e){return this.translateOnAxis(Il,e)}translateY(e){return this.translateOnAxis(Nl,e)}translateZ(e){return this.translateOnAxis(Bl,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(xa.copy(this.matrixWorld).invert())}lookAt(e,i,a){e.isVector3?Do.copy(e):Do.set(e,i,a);const t=this.parent;this.updateWorldMatrix(!0,!1),Fn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?xa.lookAt(Fn,Do,this.up):xa.lookAt(Do,Fn,this.up),this.quaternion.setFromRotationMatrix(xa),t&&(xa.extractRotation(t.matrixWorld),Wt.setFromRotationMatrix(xa),this.quaternion.premultiply(Wt.invert()))}add(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(pp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let a=0;a<arguments.length;a++)this.remove(arguments[a]);return this}const i=this.children.indexOf(e);return i!==-1&&(e.parent=null,this.children.splice(i,1),e.dispatchEvent(Dl)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const i=this.children[e];i.parent=null,i.dispatchEvent(Dl)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),xa.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),xa.multiply(e.parent.matrixWorld)),e.applyMatrix4(xa),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,i){if(this[e]===i)return this;for(let a=0,t=this.children.length;a<t;a++){const s=this.children[a].getObjectByProperty(e,i);if(s!==void 0)return s}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Fn,e,up),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Fn,dp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return e.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(e){e(this);const i=this.children;for(let a=0,t=i.length;a<t;a++)i[a].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const i=this.children;for(let a=0,t=i.length;a<t;a++)i[a].traverseVisible(e)}traverseAncestors(e){const i=this.parent;i!==null&&(e(i),i.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const i=this.children;for(let a=0,t=i.length;a<t;a++)i[a].updateMatrixWorld(e)}updateWorldMatrix(e,i){const a=this.parent;if(e===!0&&a!==null&&a.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),i===!0){const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].updateWorldMatrix(!1,!0)}}toJSON(e){const i=e===void 0||typeof e=="string",a={};i&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},a.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const t={};t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.castShadow===!0&&(t.castShadow=!0),this.receiveShadow===!0&&(t.receiveShadow=!0),this.visible===!1&&(t.visible=!1),this.frustumCulled===!1&&(t.frustumCulled=!1),this.renderOrder!==0&&(t.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(t.userData=this.userData),t.layers=this.layers.mask,t.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(t.matrixAutoUpdate=!1),this.isInstancedMesh&&(t.type="InstancedMesh",t.count=this.count,t.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(t.instanceColor=this.instanceColor.toJSON()));function n(r,l){return r[l.uuid]===void 0&&(r[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?t.background=this.background.toJSON():this.background.isTexture&&(t.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(t.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){t.geometry=n(e.geometries,this.geometry);const r=this.geometry.parameters;if(r!==void 0&&r.shapes!==void 0){const l=r.shapes;if(Array.isArray(l))for(let c=0,f=l.length;c<f;c++){const m=l[c];n(e.shapes,m)}else n(e.shapes,l)}}if(this.isSkinnedMesh&&(t.bindMode=this.bindMode,t.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(e.skeletons,this.skeleton),t.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const r=[];for(let l=0,c=this.material.length;l<c;l++)r.push(n(e.materials,this.material[l]));t.material=r}else t.material=n(e.materials,this.material);if(this.children.length>0){t.children=[];for(let r=0;r<this.children.length;r++)t.children.push(this.children[r].toJSON(e).object)}if(this.animations.length>0){t.animations=[];for(let r=0;r<this.animations.length;r++){const l=this.animations[r];t.animations.push(n(e.animations,l))}}if(i){const r=s(e.geometries),l=s(e.materials),c=s(e.textures),f=s(e.images),m=s(e.shapes),u=s(e.skeletons),d=s(e.animations),g=s(e.nodes);r.length>0&&(a.geometries=r),l.length>0&&(a.materials=l),c.length>0&&(a.textures=c),f.length>0&&(a.images=f),m.length>0&&(a.shapes=m),u.length>0&&(a.skeletons=u),d.length>0&&(a.animations=d),g.length>0&&(a.nodes=g)}return a.object=t,a;function s(r){const l=[];for(const c in r){const f=r[c];delete f.metadata,l.push(f)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,i=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),i===!0)for(let a=0;a<e.children.length;a++){const t=e.children[a];this.add(t.clone())}return this}}We.DefaultUp=new T(0,1,0);We.DefaultMatrixAutoUpdate=!0;We.prototype.isObject3D=!0;const na=new T,Aa=new T,rr=new T,Ra=new T,Kt=new T,jt=new T,Gl=new T,cr=new T,lr=new T,fr=new T;class ci{constructor(e=new T,i=new T,a=new T){this.a=e,this.b=i,this.c=a}static getNormal(e,i,a,t){t.subVectors(a,i),na.subVectors(e,i),t.cross(na);const n=t.lengthSq();return n>0?t.multiplyScalar(1/Math.sqrt(n)):t.set(0,0,0)}static getBarycoord(e,i,a,t,n){na.subVectors(t,i),Aa.subVectors(a,i),rr.subVectors(e,i);const s=na.dot(na),r=na.dot(Aa),l=na.dot(rr),c=Aa.dot(Aa),f=Aa.dot(rr),m=s*c-r*r;if(m===0)return n.set(-2,-1,-1);const u=1/m,d=(c*l-r*f)*u,g=(s*f-r*l)*u;return n.set(1-d-g,g,d)}static containsPoint(e,i,a,t){return this.getBarycoord(e,i,a,t,Ra),Ra.x>=0&&Ra.y>=0&&Ra.x+Ra.y<=1}static getUV(e,i,a,t,n,s,r,l){return this.getBarycoord(e,i,a,t,Ra),l.set(0,0),l.addScaledVector(n,Ra.x),l.addScaledVector(s,Ra.y),l.addScaledVector(r,Ra.z),l}static isFrontFacing(e,i,a,t){return na.subVectors(a,i),Aa.subVectors(e,i),na.cross(Aa).dot(t)<0}set(e,i,a){return this.a.copy(e),this.b.copy(i),this.c.copy(a),this}setFromPointsAndIndices(e,i,a,t){return this.a.copy(e[i]),this.b.copy(e[a]),this.c.copy(e[t]),this}setFromAttributeAndIndices(e,i,a,t){return this.a.fromBufferAttribute(e,i),this.b.fromBufferAttribute(e,a),this.c.fromBufferAttribute(e,t),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return na.subVectors(this.c,this.b),Aa.subVectors(this.a,this.b),na.cross(Aa).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ci.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,i){return ci.getBarycoord(e,this.a,this.b,this.c,i)}getUV(e,i,a,t,n){return ci.getUV(e,this.a,this.b,this.c,i,a,t,n)}containsPoint(e){return ci.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ci.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,i){const a=this.a,t=this.b,n=this.c;let s,r;Kt.subVectors(t,a),jt.subVectors(n,a),cr.subVectors(e,a);const l=Kt.dot(cr),c=jt.dot(cr);if(l<=0&&c<=0)return i.copy(a);lr.subVectors(e,t);const f=Kt.dot(lr),m=jt.dot(lr);if(f>=0&&m<=f)return i.copy(t);const u=l*m-f*c;if(u<=0&&l>=0&&f<=0)return s=l/(l-f),i.copy(a).addScaledVector(Kt,s);fr.subVectors(e,n);const d=Kt.dot(fr),g=jt.dot(fr);if(g>=0&&d<=g)return i.copy(n);const p=d*c-l*g;if(p<=0&&c>=0&&g<=0)return r=c/(c-g),i.copy(a).addScaledVector(jt,r);const h=f*g-d*m;if(h<=0&&m-f>=0&&d-g>=0)return Gl.subVectors(n,t),r=(m-f)/(m-f+(d-g)),i.copy(t).addScaledVector(Gl,r);const b=1/(h+p+u);return s=p*b,r=u*b,i.copy(a).addScaledVector(Kt,s).addScaledVector(jt,r)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let hp=0;class mi extends Pt{constructor(){super(),Object.defineProperty(this,"id",{value:hp++}),this.uuid=_a(),this.name="",this.type="Material",this.blending=dn,this.side=no,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=$f,this.blendDst=Qf,this.blendEquation=on,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ur,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ap,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Zs,this.stencilZFail=Zs,this.stencilZPass=Zs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const i in e){const a=e[i];if(a===void 0){console.warn("THREE.Material: '"+i+"' parameter is undefined.");continue}if(i==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=a===Yf;continue}const t=this[i];if(t===void 0){console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.");continue}t&&t.isColor?t.set(a):t&&t.isVector3&&a&&a.isVector3?t.copy(a):this[i]=a}}toJSON(e){const i=e===void 0||typeof e=="string";i&&(e={textures:{},images:{}});const a={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};a.uuid=this.uuid,a.type=this.type,this.name!==""&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),this.roughness!==void 0&&(a.roughness=this.roughness),this.metalness!==void 0&&(a.metalness=this.metalness),this.sheen!==void 0&&(a.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(a.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(a.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(a.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(a.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(a.shininess=this.shininess),this.clearcoat!==void 0&&(a.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(e).uuid,a.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(e).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(e).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(e).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(e).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(a.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(a.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(a.combine=this.combine)),this.envMapIntensity!==void 0&&(a.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(a.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(a.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(a.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(a.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(a.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(a.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(a.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(a.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(a.size=this.size),this.shadowSide!==null&&(a.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==dn&&(a.blending=this.blending),this.side!==no&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),this.opacity<1&&(a.opacity=this.opacity),this.transparent===!0&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.colorWrite=this.colorWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(a.rotation=this.rotation),this.polygonOffset===!0&&(a.polygonOffset=!0),this.polygonOffsetFactor!==0&&(a.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(a.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(a.linewidth=this.linewidth),this.dashSize!==void 0&&(a.dashSize=this.dashSize),this.gapSize!==void 0&&(a.gapSize=this.gapSize),this.scale!==void 0&&(a.scale=this.scale),this.dithering===!0&&(a.dithering=!0),this.alphaTest>0&&(a.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(a.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(a.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(a.wireframe=this.wireframe),this.wireframeLinewidth>1&&(a.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(a.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(a.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(a.flatShading=this.flatShading),this.visible===!1&&(a.visible=!1),this.toneMapped===!1&&(a.toneMapped=!1),this.fog===!1&&(a.fog=!1),JSON.stringify(this.userData)!=="{}"&&(a.userData=this.userData);function t(n){const s=[];for(const r in n){const l=n[r];delete l.metadata,s.push(l)}return s}if(i){const n=t(e.textures),s=t(e.images);n.length>0&&(a.textures=n),s.length>0&&(a.images=s)}return a}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const i=e.clippingPlanes;let a=null;if(i!==null){const t=i.length;a=new Array(t);for(let n=0;n!==t;++n)a[n]=i[n].clone()}return this.clippingPlanes=a,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}mi.prototype.isMaterial=!0;mi.fromType=function(){return null};class Mo extends mi{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new he(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=As,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Mo.prototype.isMeshBasicMaterial=!0;const ri=new T,Go=new ie;class fi{constructor(e,i,a){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=i,this.count=e!==void 0?e.length/i:0,this.normalized=a===!0,this.usage=ro,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,i,a){e*=this.itemSize,a*=i.itemSize;for(let t=0,n=this.itemSize;t<n;t++)this.array[e+t]=i.array[a+t];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const i=this.array;let a=0;for(let t=0,n=e.length;t<n;t++){let s=e[t];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),s=new he),i[a++]=s.r,i[a++]=s.g,i[a++]=s.b}return this}copyVector2sArray(e){const i=this.array;let a=0;for(let t=0,n=e.length;t<n;t++){let s=e[t];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),s=new ie),i[a++]=s.x,i[a++]=s.y}return this}copyVector3sArray(e){const i=this.array;let a=0;for(let t=0,n=e.length;t<n;t++){let s=e[t];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),s=new T),i[a++]=s.x,i[a++]=s.y,i[a++]=s.z}return this}copyVector4sArray(e){const i=this.array;let a=0;for(let t=0,n=e.length;t<n;t++){let s=e[t];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),s=new je),i[a++]=s.x,i[a++]=s.y,i[a++]=s.z,i[a++]=s.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let i=0,a=this.count;i<a;i++)Go.fromBufferAttribute(this,i),Go.applyMatrix3(e),this.setXY(i,Go.x,Go.y);else if(this.itemSize===3)for(let i=0,a=this.count;i<a;i++)ri.fromBufferAttribute(this,i),ri.applyMatrix3(e),this.setXYZ(i,ri.x,ri.y,ri.z);return this}applyMatrix4(e){for(let i=0,a=this.count;i<a;i++)ri.fromBufferAttribute(this,i),ri.applyMatrix4(e),this.setXYZ(i,ri.x,ri.y,ri.z);return this}applyNormalMatrix(e){for(let i=0,a=this.count;i<a;i++)ri.fromBufferAttribute(this,i),ri.applyNormalMatrix(e),this.setXYZ(i,ri.x,ri.y,ri.z);return this}transformDirection(e){for(let i=0,a=this.count;i<a;i++)ri.fromBufferAttribute(this,i),ri.transformDirection(e),this.setXYZ(i,ri.x,ri.y,ri.z);return this}set(e,i=0){return this.array.set(e,i),this}getX(e){return this.array[e*this.itemSize]}setX(e,i){return this.array[e*this.itemSize]=i,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,i){return this.array[e*this.itemSize+1]=i,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,i){return this.array[e*this.itemSize+2]=i,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,i){return this.array[e*this.itemSize+3]=i,this}setXY(e,i,a){return e*=this.itemSize,this.array[e+0]=i,this.array[e+1]=a,this}setXYZ(e,i,a,t){return e*=this.itemSize,this.array[e+0]=i,this.array[e+1]=a,this.array[e+2]=t,this}setXYZW(e,i,a,t,n){return e*=this.itemSize,this.array[e+0]=i,this.array[e+1]=a,this.array[e+2]=t,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ro&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}fi.prototype.isBufferAttribute=!0;class om extends fi{constructor(e,i,a){super(new Uint16Array(e),i,a)}}class sm extends fi{constructor(e,i,a){super(new Uint32Array(e),i,a)}}class gp extends fi{constructor(e,i,a){super(new Uint16Array(e),i,a)}}gp.prototype.isFloat16BufferAttribute=!0;class ni extends fi{constructor(e,i,a){super(new Float32Array(e),i,a)}}let bp=0;const qi=new be,mr=new We,qt=new T,Oi=new la,Vn=new la,ui=new T;class Xe extends Pt{constructor(){super(),Object.defineProperty(this,"id",{value:bp++}),this.uuid=_a(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(am(e)?sm:om)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,i){return this.attributes[e]=i,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,i,a=0){this.groups.push({start:e,count:i,materialIndex:a})}clearGroups(){this.groups=[]}setDrawRange(e,i){this.drawRange.start=e,this.drawRange.count=i}applyMatrix4(e){const i=this.attributes.position;i!==void 0&&(i.applyMatrix4(e),i.needsUpdate=!0);const a=this.attributes.normal;if(a!==void 0){const n=new Si().getNormalMatrix(e);a.applyNormalMatrix(n),a.needsUpdate=!0}const t=this.attributes.tangent;return t!==void 0&&(t.transformDirection(e),t.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return qi.makeRotationFromQuaternion(e),this.applyMatrix4(qi),this}rotateX(e){return qi.makeRotationX(e),this.applyMatrix4(qi),this}rotateY(e){return qi.makeRotationY(e),this.applyMatrix4(qi),this}rotateZ(e){return qi.makeRotationZ(e),this.applyMatrix4(qi),this}translate(e,i,a){return qi.makeTranslation(e,i,a),this.applyMatrix4(qi),this}scale(e,i,a){return qi.makeScale(e,i,a),this.applyMatrix4(qi),this}lookAt(e){return mr.lookAt(e),mr.updateMatrix(),this.applyMatrix4(mr.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(qt).negate(),this.translate(qt.x,qt.y,qt.z),this}setFromPoints(e){const i=[];for(let a=0,t=e.length;a<t;a++){const n=e[a];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ni(i,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new la);const e=this.attributes.position,i=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new T(-1/0,-1/0,-1/0),new T(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),i)for(let a=0,t=i.length;a<t;a++){const n=i[a];Oi.setFromBufferAttribute(n),this.morphTargetsRelative?(ui.addVectors(this.boundingBox.min,Oi.min),this.boundingBox.expandByPoint(ui),ui.addVectors(this.boundingBox.max,Oi.max),this.boundingBox.expandByPoint(ui)):(this.boundingBox.expandByPoint(Oi.min),this.boundingBox.expandByPoint(Oi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Pn);const e=this.attributes.position,i=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new T,1/0);return}if(e){const a=this.boundingSphere.center;if(Oi.setFromBufferAttribute(e),i)for(let n=0,s=i.length;n<s;n++){const r=i[n];Vn.setFromBufferAttribute(r),this.morphTargetsRelative?(ui.addVectors(Oi.min,Vn.min),Oi.expandByPoint(ui),ui.addVectors(Oi.max,Vn.max),Oi.expandByPoint(ui)):(Oi.expandByPoint(Vn.min),Oi.expandByPoint(Vn.max))}Oi.getCenter(a);let t=0;for(let n=0,s=e.count;n<s;n++)ui.fromBufferAttribute(e,n),t=Math.max(t,a.distanceToSquared(ui));if(i)for(let n=0,s=i.length;n<s;n++){const r=i[n],l=this.morphTargetsRelative;for(let c=0,f=r.count;c<f;c++)ui.fromBufferAttribute(r,c),l&&(qt.fromBufferAttribute(e,c),ui.add(qt)),t=Math.max(t,a.distanceToSquared(ui))}this.boundingSphere.radius=Math.sqrt(t),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,i=this.attributes;if(e===null||i.position===void 0||i.normal===void 0||i.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const a=e.array,t=i.position.array,n=i.normal.array,s=i.uv.array,r=t.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new fi(new Float32Array(4*r),4));const l=this.getAttribute("tangent").array,c=[],f=[];for(let z=0;z<r;z++)c[z]=new T,f[z]=new T;const m=new T,u=new T,d=new T,g=new ie,p=new ie,h=new ie,b=new T,_=new T;function k(z,L,ee){m.fromArray(t,z*3),u.fromArray(t,L*3),d.fromArray(t,ee*3),g.fromArray(s,z*2),p.fromArray(s,L*2),h.fromArray(s,ee*2),u.sub(m),d.sub(m),p.sub(g),h.sub(g);const Z=1/(p.x*h.y-h.x*p.y);!isFinite(Z)||(b.copy(u).multiplyScalar(h.y).addScaledVector(d,-p.y).multiplyScalar(Z),_.copy(d).multiplyScalar(p.x).addScaledVector(u,-h.x).multiplyScalar(Z),c[z].add(b),c[L].add(b),c[ee].add(b),f[z].add(_),f[L].add(_),f[ee].add(_))}let M=this.groups;M.length===0&&(M=[{start:0,count:a.length}]);for(let z=0,L=M.length;z<L;++z){const ee=M[z],Z=ee.start,P=ee.count;for(let G=Z,I=Z+P;G<I;G+=3)k(a[G+0],a[G+1],a[G+2])}const y=new T,x=new T,C=new T,v=new T;function A(z){C.fromArray(n,z*3),v.copy(C);const L=c[z];y.copy(L),y.sub(C.multiplyScalar(C.dot(L))).normalize(),x.crossVectors(v,L);const Z=x.dot(f[z])<0?-1:1;l[z*4]=y.x,l[z*4+1]=y.y,l[z*4+2]=y.z,l[z*4+3]=Z}for(let z=0,L=M.length;z<L;++z){const ee=M[z],Z=ee.start,P=ee.count;for(let G=Z,I=Z+P;G<I;G+=3)A(a[G+0]),A(a[G+1]),A(a[G+2])}}computeVertexNormals(){const e=this.index,i=this.getAttribute("position");if(i!==void 0){let a=this.getAttribute("normal");if(a===void 0)a=new fi(new Float32Array(i.count*3),3),this.setAttribute("normal",a);else for(let u=0,d=a.count;u<d;u++)a.setXYZ(u,0,0,0);const t=new T,n=new T,s=new T,r=new T,l=new T,c=new T,f=new T,m=new T;if(e)for(let u=0,d=e.count;u<d;u+=3){const g=e.getX(u+0),p=e.getX(u+1),h=e.getX(u+2);t.fromBufferAttribute(i,g),n.fromBufferAttribute(i,p),s.fromBufferAttribute(i,h),f.subVectors(s,n),m.subVectors(t,n),f.cross(m),r.fromBufferAttribute(a,g),l.fromBufferAttribute(a,p),c.fromBufferAttribute(a,h),r.add(f),l.add(f),c.add(f),a.setXYZ(g,r.x,r.y,r.z),a.setXYZ(p,l.x,l.y,l.z),a.setXYZ(h,c.x,c.y,c.z)}else for(let u=0,d=i.count;u<d;u+=3)t.fromBufferAttribute(i,u+0),n.fromBufferAttribute(i,u+1),s.fromBufferAttribute(i,u+2),f.subVectors(s,n),m.subVectors(t,n),f.cross(m),a.setXYZ(u+0,f.x,f.y,f.z),a.setXYZ(u+1,f.x,f.y,f.z),a.setXYZ(u+2,f.x,f.y,f.z);this.normalizeNormals(),a.needsUpdate=!0}}merge(e,i){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}i===void 0&&(i=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const a=this.attributes;for(const t in a){if(e.attributes[t]===void 0)continue;const s=a[t].array,r=e.attributes[t],l=r.array,c=r.itemSize*i,f=Math.min(l.length,s.length-c);for(let m=0,u=c;m<f;m++,u++)s[u]=l[m]}return this}normalizeNormals(){const e=this.attributes.normal;for(let i=0,a=e.count;i<a;i++)ui.fromBufferAttribute(e,i),ui.normalize(),e.setXYZ(i,ui.x,ui.y,ui.z)}toNonIndexed(){function e(r,l){const c=r.array,f=r.itemSize,m=r.normalized,u=new c.constructor(l.length*f);let d=0,g=0;for(let p=0,h=l.length;p<h;p++){r.isInterleavedBufferAttribute?d=l[p]*r.data.stride+r.offset:d=l[p]*f;for(let b=0;b<f;b++)u[g++]=c[d++]}return new fi(u,f,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new Xe,a=this.index.array,t=this.attributes;for(const r in t){const l=t[r],c=e(l,a);i.setAttribute(r,c)}const n=this.morphAttributes;for(const r in n){const l=[],c=n[r];for(let f=0,m=c.length;f<m;f++){const u=c[f],d=e(u,a);l.push(d)}i.morphAttributes[r]=l}i.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let r=0,l=s.length;r<l;r++){const c=s[r];i.addGroup(c.start,c.count,c.materialIndex)}return i}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const i=this.index;i!==null&&(e.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const a=this.attributes;for(const l in a){const c=a[l];e.data.attributes[l]=c.toJSON(e.data)}const t={};let n=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],f=[];for(let m=0,u=c.length;m<u;m++){const d=c[m];f.push(d.toJSON(e.data))}f.length>0&&(t[l]=f,n=!0)}n&&(e.data.morphAttributes=t,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const r=this.boundingSphere;return r!==null&&(e.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=e.name;const a=e.index;a!==null&&this.setIndex(a.clone(i));const t=e.attributes;for(const c in t){const f=t[c];this.setAttribute(c,f.clone(i))}const n=e.morphAttributes;for(const c in n){const f=[],m=n[c];for(let u=0,d=m.length;u<d;u++)f.push(m[u].clone(i));this.morphAttributes[c]=f}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let c=0,f=s.length;c<f;c++){const m=s[c];this.addGroup(m.start,m.count,m.materialIndex)}const r=e.boundingBox;r!==null&&(this.boundingBox=r.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Xe.prototype.isBufferGeometry=!0;const Ul=new be,Zt=new zt,ur=new Pn,Va=new T,Ha=new T,Wa=new T,dr=new T,pr=new T,hr=new T,Uo=new T,Oo=new T,Fo=new T,Vo=new ie,Ho=new ie,Wo=new ie,gr=new T,Ko=new T;class Mi extends We{constructor(e=new Xe,i=new Mo){super(),this.type="Mesh",this.geometry=e,this.material=i,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const i=e.morphAttributes,a=Object.keys(i);if(a.length>0){const t=i[a[0]];if(t!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=t.length;n<s;n++){const r=t[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}else{const i=e.morphTargets;i!==void 0&&i.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,i){const a=this.geometry,t=this.material,n=this.matrixWorld;if(t===void 0||(a.boundingSphere===null&&a.computeBoundingSphere(),ur.copy(a.boundingSphere),ur.applyMatrix4(n),e.ray.intersectsSphere(ur)===!1)||(Ul.copy(n).invert(),Zt.copy(e.ray).applyMatrix4(Ul),a.boundingBox!==null&&Zt.intersectsBox(a.boundingBox)===!1))return;let s;if(a.isBufferGeometry){const r=a.index,l=a.attributes.position,c=a.morphAttributes.position,f=a.morphTargetsRelative,m=a.attributes.uv,u=a.attributes.uv2,d=a.groups,g=a.drawRange;if(r!==null)if(Array.isArray(t))for(let p=0,h=d.length;p<h;p++){const b=d[p],_=t[b.materialIndex],k=Math.max(b.start,g.start),M=Math.min(r.count,Math.min(b.start+b.count,g.start+g.count));for(let y=k,x=M;y<x;y+=3){const C=r.getX(y),v=r.getX(y+1),A=r.getX(y+2);s=jo(this,_,e,Zt,l,c,f,m,u,C,v,A),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=b.materialIndex,i.push(s))}}else{const p=Math.max(0,g.start),h=Math.min(r.count,g.start+g.count);for(let b=p,_=h;b<_;b+=3){const k=r.getX(b),M=r.getX(b+1),y=r.getX(b+2);s=jo(this,t,e,Zt,l,c,f,m,u,k,M,y),s&&(s.faceIndex=Math.floor(b/3),i.push(s))}}else if(l!==void 0)if(Array.isArray(t))for(let p=0,h=d.length;p<h;p++){const b=d[p],_=t[b.materialIndex],k=Math.max(b.start,g.start),M=Math.min(l.count,Math.min(b.start+b.count,g.start+g.count));for(let y=k,x=M;y<x;y+=3){const C=y,v=y+1,A=y+2;s=jo(this,_,e,Zt,l,c,f,m,u,C,v,A),s&&(s.faceIndex=Math.floor(y/3),s.face.materialIndex=b.materialIndex,i.push(s))}}else{const p=Math.max(0,g.start),h=Math.min(l.count,g.start+g.count);for(let b=p,_=h;b<_;b+=3){const k=b,M=b+1,y=b+2;s=jo(this,t,e,Zt,l,c,f,m,u,k,M,y),s&&(s.faceIndex=Math.floor(b/3),i.push(s))}}}else a.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}Mi.prototype.isMesh=!0;function vp(o,e,i,a,t,n,s,r){let l;if(e.side===$i?l=a.intersectTriangle(s,n,t,!0,r):l=a.intersectTriangle(t,n,s,e.side!==vn,r),l===null)return null;Ko.copy(r),Ko.applyMatrix4(o.matrixWorld);const c=i.ray.origin.distanceTo(Ko);return c<i.near||c>i.far?null:{distance:c,point:Ko.clone(),object:o}}function jo(o,e,i,a,t,n,s,r,l,c,f,m){Va.fromBufferAttribute(t,c),Ha.fromBufferAttribute(t,f),Wa.fromBufferAttribute(t,m);const u=o.morphTargetInfluences;if(n&&u){Uo.set(0,0,0),Oo.set(0,0,0),Fo.set(0,0,0);for(let g=0,p=n.length;g<p;g++){const h=u[g],b=n[g];h!==0&&(dr.fromBufferAttribute(b,c),pr.fromBufferAttribute(b,f),hr.fromBufferAttribute(b,m),s?(Uo.addScaledVector(dr,h),Oo.addScaledVector(pr,h),Fo.addScaledVector(hr,h)):(Uo.addScaledVector(dr.sub(Va),h),Oo.addScaledVector(pr.sub(Ha),h),Fo.addScaledVector(hr.sub(Wa),h)))}Va.add(Uo),Ha.add(Oo),Wa.add(Fo)}o.isSkinnedMesh&&(o.boneTransform(c,Va),o.boneTransform(f,Ha),o.boneTransform(m,Wa));const d=vp(o,e,i,a,Va,Ha,Wa,gr);if(d){r&&(Vo.fromBufferAttribute(r,c),Ho.fromBufferAttribute(r,f),Wo.fromBufferAttribute(r,m),d.uv=ci.getUV(gr,Va,Ha,Wa,Vo,Ho,Wo,new ie)),l&&(Vo.fromBufferAttribute(l,c),Ho.fromBufferAttribute(l,f),Wo.fromBufferAttribute(l,m),d.uv2=ci.getUV(gr,Va,Ha,Wa,Vo,Ho,Wo,new ie));const g={a:c,b:f,c:m,normal:new T,materialIndex:0};ci.getNormal(Va,Ha,Wa,g.normal),d.face=g}return d}class Ln extends Xe{constructor(e=1,i=1,a=1,t=1,n=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:i,depth:a,widthSegments:t,heightSegments:n,depthSegments:s};const r=this;t=Math.floor(t),n=Math.floor(n),s=Math.floor(s);const l=[],c=[],f=[],m=[];let u=0,d=0;g("z","y","x",-1,-1,a,i,e,s,n,0),g("z","y","x",1,-1,a,i,-e,s,n,1),g("x","z","y",1,1,e,a,i,t,s,2),g("x","z","y",1,-1,e,a,-i,t,s,3),g("x","y","z",1,-1,e,i,a,t,n,4),g("x","y","z",-1,-1,e,i,-a,t,n,5),this.setIndex(l),this.setAttribute("position",new ni(c,3)),this.setAttribute("normal",new ni(f,3)),this.setAttribute("uv",new ni(m,2));function g(p,h,b,_,k,M,y,x,C,v,A){const z=M/C,L=y/v,ee=M/2,Z=y/2,P=x/2,G=C+1,I=v+1;let F=0,W=0;const D=new T;for(let H=0;H<I;H++){const Y=H*L-Z;for(let X=0;X<G;X++){const $=X*z-ee;D[p]=$*_,D[h]=Y*k,D[b]=P,c.push(D.x,D.y,D.z),D[p]=0,D[h]=0,D[b]=x>0?1:-1,f.push(D.x,D.y,D.z),m.push(X/C),m.push(1-H/v),F+=1}}for(let H=0;H<v;H++)for(let Y=0;Y<C;Y++){const X=u+Y+G*H,$=u+Y+G*(H+1),fe=u+(Y+1)+G*(H+1),ge=u+(Y+1)+G*H;l.push(X,$,ge),l.push($,fe,ge),W+=6}r.addGroup(d,W,A),d+=W,u+=F}}static fromJSON(e){return new Ln(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Mn(o){const e={};for(const i in o){e[i]={};for(const a in o[i]){const t=o[i][a];t&&(t.isColor||t.isMatrix3||t.isMatrix4||t.isVector2||t.isVector3||t.isVector4||t.isTexture||t.isQuaternion)?e[i][a]=t.clone():Array.isArray(t)?e[i][a]=t.slice():e[i][a]=t}}return e}function ki(o){const e={};for(let i=0;i<o.length;i++){const a=Mn(o[i]);for(const t in a)e[t]=a[t]}return e}const yp={clone:Mn,merge:ki};var _p=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Sp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ki extends mi{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=_p,this.fragmentShader=Sp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Mn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const i=super.toJSON(e);i.glslVersion=this.glslVersion,i.uniforms={};for(const t in this.uniforms){const s=this.uniforms[t].value;s&&s.isTexture?i.uniforms[t]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?i.uniforms[t]={type:"c",value:s.getHex()}:s&&s.isVector2?i.uniforms[t]={type:"v2",value:s.toArray()}:s&&s.isVector3?i.uniforms[t]={type:"v3",value:s.toArray()}:s&&s.isVector4?i.uniforms[t]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?i.uniforms[t]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?i.uniforms[t]={type:"m4",value:s.toArray()}:i.uniforms[t]={value:s}}Object.keys(this.defines).length>0&&(i.defines=this.defines),i.vertexShader=this.vertexShader,i.fragmentShader=this.fragmentShader;const a={};for(const t in this.extensions)this.extensions[t]===!0&&(a[t]=!0);return Object.keys(a).length>0&&(i.extensions=a),i}}Ki.prototype.isShaderMaterial=!0;class hc extends We{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new be,this.projectionMatrix=new be,this.projectionMatrixInverse=new be}copy(e,i){return super.copy(e,i),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return e.set(-i[8],-i[9],-i[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,i){super.updateWorldMatrix(e,i),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}hc.prototype.isCamera=!0;class xi extends hc{constructor(e=50,i=1,a=.1,t=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=a,this.far=t,this.focus=10,this.aspect=i,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,i){return super.copy(e,i),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const i=.5*this.getFilmHeight()/e;this.fov=Kr*2*Math.atan(i),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Js*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Kr*2*Math.atan(Math.tan(Js*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,i,a,t,n,s){this.aspect=e/i,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=i,this.view.offsetX=a,this.view.offsetY=t,this.view.width=n,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let i=e*Math.tan(Js*.5*this.fov)/this.zoom,a=2*i,t=this.aspect*a,n=-.5*t;const s=this.view;if(this.view!==null&&this.view.enabled){const l=s.fullWidth,c=s.fullHeight;n+=s.offsetX*t/l,i-=s.offsetY*a/c,t*=s.width/l,a*=s.height/c}const r=this.filmOffset;r!==0&&(n+=e*r/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+t,i,i-a,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const i=super.toJSON(e);return i.object.fov=this.fov,i.object.zoom=this.zoom,i.object.near=this.near,i.object.far=this.far,i.object.focus=this.focus,i.object.aspect=this.aspect,this.view!==null&&(i.object.view=Object.assign({},this.view)),i.object.filmGauge=this.filmGauge,i.object.filmOffset=this.filmOffset,i}}xi.prototype.isPerspectiveCamera=!0;const Jt=90,Xt=1;class gc extends We{constructor(e,i,a){if(super(),this.type="CubeCamera",a.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=a;const t=new xi(Jt,Xt,e,i);t.layers=this.layers,t.up.set(0,-1,0),t.lookAt(new T(1,0,0)),this.add(t);const n=new xi(Jt,Xt,e,i);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new T(-1,0,0)),this.add(n);const s=new xi(Jt,Xt,e,i);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new T(0,1,0)),this.add(s);const r=new xi(Jt,Xt,e,i);r.layers=this.layers,r.up.set(0,0,-1),r.lookAt(new T(0,-1,0)),this.add(r);const l=new xi(Jt,Xt,e,i);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new T(0,0,1)),this.add(l);const c=new xi(Jt,Xt,e,i);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new T(0,0,-1)),this.add(c)}update(e,i){this.parent===null&&this.updateMatrixWorld();const a=this.renderTarget,[t,n,s,r,l,c]=this.children,f=e.getRenderTarget(),m=e.toneMapping,u=e.xr.enabled;e.toneMapping=La,e.xr.enabled=!1;const d=a.texture.generateMipmaps;a.texture.generateMipmaps=!1,e.setRenderTarget(a,0),e.render(i,t),e.setRenderTarget(a,1),e.render(i,n),e.setRenderTarget(a,2),e.render(i,s),e.setRenderTarget(a,3),e.render(i,r),e.setRenderTarget(a,4),e.render(i,l),a.texture.generateMipmaps=d,e.setRenderTarget(a,5),e.render(i,c),e.setRenderTarget(f),e.toneMapping=m,e.xr.enabled=u,a.texture.needsPMREMUpdate=!0}}class Es extends bi{constructor(e,i,a,t,n,s,r,l,c,f){e=e!==void 0?e:[],i=i!==void 0?i:yn,super(e,i,a,t,n,s,r,l,c,f),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Es.prototype.isCubeTexture=!0;class rm extends Hi{constructor(e,i={}){super(e,e,i);const a={width:e,height:e,depth:1},t=[a,a,a,a,a,a];this.texture=new Es(t,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:zi}fromEquirectangularTexture(e,i){this.texture.type=i.type,this.texture.encoding=i.encoding,this.texture.generateMipmaps=i.generateMipmaps,this.texture.minFilter=i.minFilter,this.texture.magFilter=i.magFilter;const a={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},t=new Ln(5,5,5),n=new Ki({name:"CubemapFromEquirect",uniforms:Mn(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,side:$i,blending:Xa});n.uniforms.tEquirect.value=i;const s=new Mi(t,n),r=i.minFilter;return i.minFilter===Ts&&(i.minFilter=zi),new gc(1,10,this).update(e,s),i.minFilter=r,s.geometry.dispose(),s.material.dispose(),this}clear(e,i,a,t){const n=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(i,a,t);e.setRenderTarget(n)}}rm.prototype.isWebGLCubeRenderTarget=!0;const br=new T,Mp=new T,kp=new Si;class Pa{constructor(e=new T(1,0,0),i=0){this.normal=e,this.constant=i}set(e,i){return this.normal.copy(e),this.constant=i,this}setComponents(e,i,a,t){return this.normal.set(e,i,a),this.constant=t,this}setFromNormalAndCoplanarPoint(e,i){return this.normal.copy(e),this.constant=-i.dot(this.normal),this}setFromCoplanarPoints(e,i,a){const t=br.subVectors(a,i).cross(Mp.subVectors(e,i)).normalize();return this.setFromNormalAndCoplanarPoint(t,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,i){return i.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,i){const a=e.delta(br),t=this.normal.dot(a);if(t===0)return this.distanceToPoint(e.start)===0?i.copy(e.start):null;const n=-(e.start.dot(this.normal)+this.constant)/t;return n<0||n>1?null:i.copy(a).multiplyScalar(n).add(e.start)}intersectsLine(e){const i=this.distanceToPoint(e.start),a=this.distanceToPoint(e.end);return i<0&&a>0||a<0&&i>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,i){const a=i||kp.getNormalMatrix(e),t=this.coplanarPoint(br).applyMatrix4(e),n=this.normal.applyMatrix3(a).normalize();return this.constant=-t.dot(n),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}Pa.prototype.isPlane=!0;const Yt=new Pn,qo=new T;class Ps{constructor(e=new Pa,i=new Pa,a=new Pa,t=new Pa,n=new Pa,s=new Pa){this.planes=[e,i,a,t,n,s]}set(e,i,a,t,n,s){const r=this.planes;return r[0].copy(e),r[1].copy(i),r[2].copy(a),r[3].copy(t),r[4].copy(n),r[5].copy(s),this}copy(e){const i=this.planes;for(let a=0;a<6;a++)i[a].copy(e.planes[a]);return this}setFromProjectionMatrix(e){const i=this.planes,a=e.elements,t=a[0],n=a[1],s=a[2],r=a[3],l=a[4],c=a[5],f=a[6],m=a[7],u=a[8],d=a[9],g=a[10],p=a[11],h=a[12],b=a[13],_=a[14],k=a[15];return i[0].setComponents(r-t,m-l,p-u,k-h).normalize(),i[1].setComponents(r+t,m+l,p+u,k+h).normalize(),i[2].setComponents(r+n,m+c,p+d,k+b).normalize(),i[3].setComponents(r-n,m-c,p-d,k-b).normalize(),i[4].setComponents(r-s,m-f,p-g,k-_).normalize(),i[5].setComponents(r+s,m+f,p+g,k+_).normalize(),this}intersectsObject(e){const i=e.geometry;return i.boundingSphere===null&&i.computeBoundingSphere(),Yt.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Yt)}intersectsSprite(e){return Yt.center.set(0,0,0),Yt.radius=.7071067811865476,Yt.applyMatrix4(e.matrixWorld),this.intersectsSphere(Yt)}intersectsSphere(e){const i=this.planes,a=e.center,t=-e.radius;for(let n=0;n<6;n++)if(i[n].distanceToPoint(a)<t)return!1;return!0}intersectsBox(e){const i=this.planes;for(let a=0;a<6;a++){const t=i[a];if(qo.x=t.normal.x>0?e.max.x:e.min.x,qo.y=t.normal.y>0?e.max.y:e.min.y,qo.z=t.normal.z>0?e.max.z:e.min.z,t.distanceToPoint(qo)<0)return!1}return!0}containsPoint(e){const i=this.planes;for(let a=0;a<6;a++)if(i[a].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function cm(){let o=null,e=!1,i=null,a=null;function t(n,s){i(n,s),a=o.requestAnimationFrame(t)}return{start:function(){e!==!0&&i!==null&&(a=o.requestAnimationFrame(t),e=!0)},stop:function(){o.cancelAnimationFrame(a),e=!1},setAnimationLoop:function(n){i=n},setContext:function(n){o=n}}}function wp(o,e){const i=e.isWebGL2,a=new WeakMap;function t(c,f){const m=c.array,u=c.usage,d=o.createBuffer();o.bindBuffer(f,d),o.bufferData(f,m,u),c.onUploadCallback();let g;if(m instanceof Float32Array)g=5126;else if(m instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(i)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(m instanceof Int16Array)g=5122;else if(m instanceof Uint32Array)g=5125;else if(m instanceof Int32Array)g=5124;else if(m instanceof Int8Array)g=5120;else if(m instanceof Uint8Array)g=5121;else if(m instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:d,type:g,bytesPerElement:m.BYTES_PER_ELEMENT,version:c.version}}function n(c,f,m){const u=f.array,d=f.updateRange;o.bindBuffer(m,c),d.count===-1?o.bufferSubData(m,0,u):(i?o.bufferSubData(m,d.offset*u.BYTES_PER_ELEMENT,u,d.offset,d.count):o.bufferSubData(m,d.offset*u.BYTES_PER_ELEMENT,u.subarray(d.offset,d.offset+d.count)),d.count=-1)}function s(c){return c.isInterleavedBufferAttribute&&(c=c.data),a.get(c)}function r(c){c.isInterleavedBufferAttribute&&(c=c.data);const f=a.get(c);f&&(o.deleteBuffer(f.buffer),a.delete(c))}function l(c,f){if(c.isGLBufferAttribute){const u=a.get(c);(!u||u.version<c.version)&&a.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const m=a.get(c);m===void 0?a.set(c,t(c,f)):m.version<c.version&&(n(m.buffer,c,f),m.version=c.version)}return{get:s,remove:r,update:l}}class bc extends Xe{constructor(e=1,i=1,a=1,t=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:i,widthSegments:a,heightSegments:t};const n=e/2,s=i/2,r=Math.floor(a),l=Math.floor(t),c=r+1,f=l+1,m=e/r,u=i/l,d=[],g=[],p=[],h=[];for(let b=0;b<f;b++){const _=b*u-s;for(let k=0;k<c;k++){const M=k*m-n;g.push(M,-_,0),p.push(0,0,1),h.push(k/r),h.push(1-b/l)}}for(let b=0;b<l;b++)for(let _=0;_<r;_++){const k=_+c*b,M=_+c*(b+1),y=_+1+c*(b+1),x=_+1+c*b;d.push(k,M,x),d.push(M,y,x)}this.setIndex(d),this.setAttribute("position",new ni(g,3)),this.setAttribute("normal",new ni(p,3)),this.setAttribute("uv",new ni(h,2))}static fromJSON(e){return new bc(e.width,e.height,e.widthSegments,e.heightSegments)}}var xp=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Ap=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Rp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Tp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Cp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Ep=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Pp="vec3 transformed = vec3( position );",Lp=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,zp=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Ip=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Np=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Bp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Dp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Gp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Up=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Op=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Fp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Vp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Hp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Wp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Kp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,jp=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,qp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Zp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Jp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Xp="gl_FragColor = linearToOutputTexel( gl_FragColor );",Yp=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,$p=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Qp=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,eh=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,ih=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ah=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,th=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,nh=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,oh=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,sh=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,rh=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,ch=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,lh=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,fh=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,mh=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,uh=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,dh=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,ph=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,hh=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,gh=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,bh=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,vh=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,yh=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,_h=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Sh=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Mh=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,kh=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,wh=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,xh=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Ah=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Rh=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Th=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Ch=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Eh=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ph=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Lh=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,zh=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Ih=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Nh=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Bh=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Dh=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Gh=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Uh=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Oh=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Fh=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Vh=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Hh=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Wh=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Kh=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,jh=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,qh=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Zh=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Jh=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Xh=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Yh=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,$h=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Qh=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,eg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,ig=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,ag=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,tg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ng=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,og=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,sg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,rg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,cg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,lg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,fg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,mg=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,ug=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,dg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,pg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,hg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,gg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,bg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,vg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,yg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const _g=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Sg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Mg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,kg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,wg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,xg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Ag=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Rg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Tg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Cg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Eg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Pg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Lg=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,zg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ig=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ng=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Dg=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gg=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Ug=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Og=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fg=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vg=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Hg=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Wg=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Kg=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jg=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,qg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Zg=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jg=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Xg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Yg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ze={alphamap_fragment:xp,alphamap_pars_fragment:Ap,alphatest_fragment:Rp,alphatest_pars_fragment:Tp,aomap_fragment:Cp,aomap_pars_fragment:Ep,begin_vertex:Pp,beginnormal_vertex:Lp,bsdfs:zp,bumpmap_pars_fragment:Ip,clipping_planes_fragment:Np,clipping_planes_pars_fragment:Bp,clipping_planes_pars_vertex:Dp,clipping_planes_vertex:Gp,color_fragment:Up,color_pars_fragment:Op,color_pars_vertex:Fp,color_vertex:Vp,common:Hp,cube_uv_reflection_fragment:Wp,defaultnormal_vertex:Kp,displacementmap_pars_vertex:jp,displacementmap_vertex:qp,emissivemap_fragment:Zp,emissivemap_pars_fragment:Jp,encodings_fragment:Xp,encodings_pars_fragment:Yp,envmap_fragment:$p,envmap_common_pars_fragment:Qp,envmap_pars_fragment:eh,envmap_pars_vertex:ih,envmap_physical_pars_fragment:uh,envmap_vertex:ah,fog_vertex:th,fog_pars_vertex:nh,fog_fragment:oh,fog_pars_fragment:sh,gradientmap_pars_fragment:rh,lightmap_fragment:ch,lightmap_pars_fragment:lh,lights_lambert_vertex:fh,lights_pars_begin:mh,lights_toon_fragment:dh,lights_toon_pars_fragment:ph,lights_phong_fragment:hh,lights_phong_pars_fragment:gh,lights_physical_fragment:bh,lights_physical_pars_fragment:vh,lights_fragment_begin:yh,lights_fragment_maps:_h,lights_fragment_end:Sh,logdepthbuf_fragment:Mh,logdepthbuf_pars_fragment:kh,logdepthbuf_pars_vertex:wh,logdepthbuf_vertex:xh,map_fragment:Ah,map_pars_fragment:Rh,map_particle_fragment:Th,map_particle_pars_fragment:Ch,metalnessmap_fragment:Eh,metalnessmap_pars_fragment:Ph,morphcolor_vertex:Lh,morphnormal_vertex:zh,morphtarget_pars_vertex:Ih,morphtarget_vertex:Nh,normal_fragment_begin:Bh,normal_fragment_maps:Dh,normal_pars_fragment:Gh,normal_pars_vertex:Uh,normal_vertex:Oh,normalmap_pars_fragment:Fh,clearcoat_normal_fragment_begin:Vh,clearcoat_normal_fragment_maps:Hh,clearcoat_pars_fragment:Wh,output_fragment:Kh,packing:jh,premultiplied_alpha_fragment:qh,project_vertex:Zh,dithering_fragment:Jh,dithering_pars_fragment:Xh,roughnessmap_fragment:Yh,roughnessmap_pars_fragment:$h,shadowmap_pars_fragment:Qh,shadowmap_pars_vertex:eg,shadowmap_vertex:ig,shadowmask_pars_fragment:ag,skinbase_vertex:tg,skinning_pars_vertex:ng,skinning_vertex:og,skinnormal_vertex:sg,specularmap_fragment:rg,specularmap_pars_fragment:cg,tonemapping_fragment:lg,tonemapping_pars_fragment:fg,transmission_fragment:mg,transmission_pars_fragment:ug,uv_pars_fragment:dg,uv_pars_vertex:pg,uv_vertex:hg,uv2_pars_fragment:gg,uv2_pars_vertex:bg,uv2_vertex:vg,worldpos_vertex:yg,background_vert:_g,background_frag:Sg,cube_vert:Mg,cube_frag:kg,depth_vert:wg,depth_frag:xg,distanceRGBA_vert:Ag,distanceRGBA_frag:Rg,equirect_vert:Tg,equirect_frag:Cg,linedashed_vert:Eg,linedashed_frag:Pg,meshbasic_vert:Lg,meshbasic_frag:zg,meshlambert_vert:Ig,meshlambert_frag:Ng,meshmatcap_vert:Bg,meshmatcap_frag:Dg,meshnormal_vert:Gg,meshnormal_frag:Ug,meshphong_vert:Og,meshphong_frag:Fg,meshphysical_vert:Vg,meshphysical_frag:Hg,meshtoon_vert:Wg,meshtoon_frag:Kg,points_vert:jg,points_frag:qg,shadow_vert:Zg,shadow_frag:Jg,sprite_vert:Xg,sprite_frag:Yg},se={common:{diffuse:{value:new he(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Si},uv2Transform:{value:new Si},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ie(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new he(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new he(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Si}},sprite:{diffuse:{value:new he(16777215)},opacity:{value:1},center:{value:new ie(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Si}}},va={basic:{uniforms:ki([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.fog]),vertexShader:ze.meshbasic_vert,fragmentShader:ze.meshbasic_frag},lambert:{uniforms:ki([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.fog,se.lights,{emissive:{value:new he(0)}}]),vertexShader:ze.meshlambert_vert,fragmentShader:ze.meshlambert_frag},phong:{uniforms:ki([se.common,se.specularmap,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.fog,se.lights,{emissive:{value:new he(0)},specular:{value:new he(1118481)},shininess:{value:30}}]),vertexShader:ze.meshphong_vert,fragmentShader:ze.meshphong_frag},standard:{uniforms:ki([se.common,se.envmap,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.roughnessmap,se.metalnessmap,se.fog,se.lights,{emissive:{value:new he(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ze.meshphysical_vert,fragmentShader:ze.meshphysical_frag},toon:{uniforms:ki([se.common,se.aomap,se.lightmap,se.emissivemap,se.bumpmap,se.normalmap,se.displacementmap,se.gradientmap,se.fog,se.lights,{emissive:{value:new he(0)}}]),vertexShader:ze.meshtoon_vert,fragmentShader:ze.meshtoon_frag},matcap:{uniforms:ki([se.common,se.bumpmap,se.normalmap,se.displacementmap,se.fog,{matcap:{value:null}}]),vertexShader:ze.meshmatcap_vert,fragmentShader:ze.meshmatcap_frag},points:{uniforms:ki([se.points,se.fog]),vertexShader:ze.points_vert,fragmentShader:ze.points_frag},dashed:{uniforms:ki([se.common,se.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ze.linedashed_vert,fragmentShader:ze.linedashed_frag},depth:{uniforms:ki([se.common,se.displacementmap]),vertexShader:ze.depth_vert,fragmentShader:ze.depth_frag},normal:{uniforms:ki([se.common,se.bumpmap,se.normalmap,se.displacementmap,{opacity:{value:1}}]),vertexShader:ze.meshnormal_vert,fragmentShader:ze.meshnormal_frag},sprite:{uniforms:ki([se.sprite,se.fog]),vertexShader:ze.sprite_vert,fragmentShader:ze.sprite_frag},background:{uniforms:{uvTransform:{value:new Si},t2D:{value:null}},vertexShader:ze.background_vert,fragmentShader:ze.background_frag},cube:{uniforms:ki([se.envmap,{opacity:{value:1}}]),vertexShader:ze.cube_vert,fragmentShader:ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ze.equirect_vert,fragmentShader:ze.equirect_frag},distanceRGBA:{uniforms:ki([se.common,se.displacementmap,{referencePosition:{value:new T},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ze.distanceRGBA_vert,fragmentShader:ze.distanceRGBA_frag},shadow:{uniforms:ki([se.lights,se.fog,{color:{value:new he(0)},opacity:{value:1}}]),vertexShader:ze.shadow_vert,fragmentShader:ze.shadow_frag}};va.physical={uniforms:ki([va.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ie(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new he(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ie},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new he(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new he(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ze.meshphysical_vert,fragmentShader:ze.meshphysical_frag};function $g(o,e,i,a,t,n){const s=new he(0);let r=t===!0?0:1,l,c,f=null,m=0,u=null;function d(p,h){let b=!1,_=h.isScene===!0?h.background:null;_&&_.isTexture&&(_=e.get(_));const k=o.xr,M=k.getSession&&k.getSession();M&&M.environmentBlendMode==="additive"&&(_=null),_===null?g(s,r):_&&_.isColor&&(g(_,1),b=!0),(o.autoClear||b)&&o.clear(o.autoClearColor,o.autoClearDepth,o.autoClearStencil),_&&(_.isCubeTexture||_.mapping===Rs)?(c===void 0&&(c=new Mi(new Ln(1,1,1),new Ki({name:"BackgroundCubeMaterial",uniforms:Mn(va.cube.uniforms),vertexShader:va.cube.vertexShader,fragmentShader:va.cube.fragmentShader,side:$i,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(y,x,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),a.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,(f!==_||m!==_.version||u!==o.toneMapping)&&(c.material.needsUpdate=!0,f=_,m=_.version,u=o.toneMapping),c.layers.enableAll(),p.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new Mi(new bc(2,2),new Ki({name:"BackgroundMaterial",uniforms:Mn(va.background.uniforms),vertexShader:va.background.vertexShader,fragmentShader:va.background.fragmentShader,side:no,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),a.update(l)),l.material.uniforms.t2D.value=_,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(f!==_||m!==_.version||u!==o.toneMapping)&&(l.material.needsUpdate=!0,f=_,m=_.version,u=o.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}function g(p,h){i.buffers.color.setClear(p.r,p.g,p.b,h,n)}return{getClearColor:function(){return s},setClearColor:function(p,h=1){s.set(p),r=h,g(s,r)},getClearAlpha:function(){return r},setClearAlpha:function(p){r=p,g(s,r)},render:d}}function Qg(o,e,i,a){const t=o.getParameter(34921),n=a.isWebGL2?null:e.get("OES_vertex_array_object"),s=a.isWebGL2||n!==null,r={},l=h(null);let c=l,f=!1;function m(P,G,I,F,W){let D=!1;if(s){const H=p(F,I,G);c!==H&&(c=H,d(c.object)),D=b(P,F,I,W),D&&_(P,F,I,W)}else{const H=G.wireframe===!0;(c.geometry!==F.id||c.program!==I.id||c.wireframe!==H)&&(c.geometry=F.id,c.program=I.id,c.wireframe=H,D=!0)}W!==null&&i.update(W,34963),(D||f)&&(f=!1,v(P,G,I,F),W!==null&&o.bindBuffer(34963,i.get(W).buffer))}function u(){return a.isWebGL2?o.createVertexArray():n.createVertexArrayOES()}function d(P){return a.isWebGL2?o.bindVertexArray(P):n.bindVertexArrayOES(P)}function g(P){return a.isWebGL2?o.deleteVertexArray(P):n.deleteVertexArrayOES(P)}function p(P,G,I){const F=I.wireframe===!0;let W=r[P.id];W===void 0&&(W={},r[P.id]=W);let D=W[G.id];D===void 0&&(D={},W[G.id]=D);let H=D[F];return H===void 0&&(H=h(u()),D[F]=H),H}function h(P){const G=[],I=[],F=[];for(let W=0;W<t;W++)G[W]=0,I[W]=0,F[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:G,enabledAttributes:I,attributeDivisors:F,object:P,attributes:{},index:null}}function b(P,G,I,F){const W=c.attributes,D=G.attributes;let H=0;const Y=I.getAttributes();for(const X in Y)if(Y[X].location>=0){const fe=W[X];let ge=D[X];if(ge===void 0&&(X==="instanceMatrix"&&P.instanceMatrix&&(ge=P.instanceMatrix),X==="instanceColor"&&P.instanceColor&&(ge=P.instanceColor)),fe===void 0||fe.attribute!==ge||ge&&fe.data!==ge.data)return!0;H++}return c.attributesNum!==H||c.index!==F}function _(P,G,I,F){const W={},D=G.attributes;let H=0;const Y=I.getAttributes();for(const X in Y)if(Y[X].location>=0){let fe=D[X];fe===void 0&&(X==="instanceMatrix"&&P.instanceMatrix&&(fe=P.instanceMatrix),X==="instanceColor"&&P.instanceColor&&(fe=P.instanceColor));const ge={};ge.attribute=fe,fe&&fe.data&&(ge.data=fe.data),W[X]=ge,H++}c.attributes=W,c.attributesNum=H,c.index=F}function k(){const P=c.newAttributes;for(let G=0,I=P.length;G<I;G++)P[G]=0}function M(P){y(P,0)}function y(P,G){const I=c.newAttributes,F=c.enabledAttributes,W=c.attributeDivisors;I[P]=1,F[P]===0&&(o.enableVertexAttribArray(P),F[P]=1),W[P]!==G&&((a.isWebGL2?o:e.get("ANGLE_instanced_arrays"))[a.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](P,G),W[P]=G)}function x(){const P=c.newAttributes,G=c.enabledAttributes;for(let I=0,F=G.length;I<F;I++)G[I]!==P[I]&&(o.disableVertexAttribArray(I),G[I]=0)}function C(P,G,I,F,W,D){a.isWebGL2===!0&&(I===5124||I===5125)?o.vertexAttribIPointer(P,G,I,W,D):o.vertexAttribPointer(P,G,I,F,W,D)}function v(P,G,I,F){if(a.isWebGL2===!1&&(P.isInstancedMesh||F.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;k();const W=F.attributes,D=I.getAttributes(),H=G.defaultAttributeValues;for(const Y in D){const X=D[Y];if(X.location>=0){let $=W[Y];if($===void 0&&(Y==="instanceMatrix"&&P.instanceMatrix&&($=P.instanceMatrix),Y==="instanceColor"&&P.instanceColor&&($=P.instanceColor)),$!==void 0){const fe=$.normalized,ge=$.itemSize,K=i.get($);if(K===void 0)continue;const Ue=K.buffer,Me=K.type,Ce=K.bytesPerElement;if($.isInterleavedBufferAttribute){const ne=$.data,Ie=ne.stride,J=$.offset;if(ne.isInstancedInterleavedBuffer){for(let q=0;q<X.locationSize;q++)y(X.location+q,ne.meshPerAttribute);P.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=ne.meshPerAttribute*ne.count)}else for(let q=0;q<X.locationSize;q++)M(X.location+q);o.bindBuffer(34962,Ue);for(let q=0;q<X.locationSize;q++)C(X.location+q,ge/X.locationSize,Me,fe,Ie*Ce,(J+ge/X.locationSize*q)*Ce)}else{if($.isInstancedBufferAttribute){for(let ne=0;ne<X.locationSize;ne++)y(X.location+ne,$.meshPerAttribute);P.isInstancedMesh!==!0&&F._maxInstanceCount===void 0&&(F._maxInstanceCount=$.meshPerAttribute*$.count)}else for(let ne=0;ne<X.locationSize;ne++)M(X.location+ne);o.bindBuffer(34962,Ue);for(let ne=0;ne<X.locationSize;ne++)C(X.location+ne,ge/X.locationSize,Me,fe,ge*Ce,ge/X.locationSize*ne*Ce)}}else if(H!==void 0){const fe=H[Y];if(fe!==void 0)switch(fe.length){case 2:o.vertexAttrib2fv(X.location,fe);break;case 3:o.vertexAttrib3fv(X.location,fe);break;case 4:o.vertexAttrib4fv(X.location,fe);break;default:o.vertexAttrib1fv(X.location,fe)}}}}x()}function A(){ee();for(const P in r){const G=r[P];for(const I in G){const F=G[I];for(const W in F)g(F[W].object),delete F[W];delete G[I]}delete r[P]}}function z(P){if(r[P.id]===void 0)return;const G=r[P.id];for(const I in G){const F=G[I];for(const W in F)g(F[W].object),delete F[W];delete G[I]}delete r[P.id]}function L(P){for(const G in r){const I=r[G];if(I[P.id]===void 0)continue;const F=I[P.id];for(const W in F)g(F[W].object),delete F[W];delete I[P.id]}}function ee(){Z(),f=!0,c!==l&&(c=l,d(c.object))}function Z(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:m,reset:ee,resetDefaultState:Z,dispose:A,releaseStatesOfGeometry:z,releaseStatesOfProgram:L,initAttributes:k,enableAttribute:M,disableUnusedAttributes:x}}function eb(o,e,i,a){const t=a.isWebGL2;let n;function s(c){n=c}function r(c,f){o.drawArrays(n,c,f),i.update(f,n,1)}function l(c,f,m){if(m===0)return;let u,d;if(t)u=o,d="drawArraysInstanced";else if(u=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",u===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[d](n,c,f,m),i.update(f,n,m)}this.setMode=s,this.render=r,this.renderInstances=l}function ib(o,e,i){let a;function t(){if(a!==void 0)return a;if(e.has("EXT_texture_filter_anisotropic")===!0){const C=e.get("EXT_texture_filter_anisotropic");a=o.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else a=0;return a}function n(C){if(C==="highp"){if(o.getShaderPrecisionFormat(35633,36338).precision>0&&o.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";C="mediump"}return C==="mediump"&&o.getShaderPrecisionFormat(35633,36337).precision>0&&o.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext!="undefined"&&o instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&o instanceof WebGL2ComputeRenderingContext;let r=i.precision!==void 0?i.precision:"highp";const l=n(r);l!==r&&(console.warn("THREE.WebGLRenderer:",r,"not supported, using",l,"instead."),r=l);const c=s||e.has("WEBGL_draw_buffers"),f=i.logarithmicDepthBuffer===!0,m=o.getParameter(34930),u=o.getParameter(35660),d=o.getParameter(3379),g=o.getParameter(34076),p=o.getParameter(34921),h=o.getParameter(36347),b=o.getParameter(36348),_=o.getParameter(36349),k=u>0,M=s||e.has("OES_texture_float"),y=k&&M,x=s?o.getParameter(36183):0;return{isWebGL2:s,drawBuffers:c,getMaxAnisotropy:t,getMaxPrecision:n,precision:r,logarithmicDepthBuffer:f,maxTextures:m,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:h,maxVaryings:b,maxFragmentUniforms:_,vertexTextures:k,floatFragmentTextures:M,floatVertexTextures:y,maxSamples:x}}function ab(o){const e=this;let i=null,a=0,t=!1,n=!1;const s=new Pa,r=new Si,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(m,u,d){const g=m.length!==0||u||a!==0||t;return t=u,i=f(m,d,0),a=m.length,g},this.beginShadows=function(){n=!0,f(null)},this.endShadows=function(){n=!1,c()},this.setState=function(m,u,d){const g=m.clippingPlanes,p=m.clipIntersection,h=m.clipShadows,b=o.get(m);if(!t||g===null||g.length===0||n&&!h)n?f(null):c();else{const _=n?0:a,k=_*4;let M=b.clippingState||null;l.value=M,M=f(g,u,k,d);for(let y=0;y!==k;++y)M[y]=i[y];b.clippingState=M,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==i&&(l.value=i,l.needsUpdate=a>0),e.numPlanes=a,e.numIntersection=0}function f(m,u,d,g){const p=m!==null?m.length:0;let h=null;if(p!==0){if(h=l.value,g!==!0||h===null){const b=d+p*4,_=u.matrixWorldInverse;r.getNormalMatrix(_),(h===null||h.length<b)&&(h=new Float32Array(b));for(let k=0,M=d;k!==p;++k,M+=4)s.copy(m[k]).applyMatrix4(_,r),s.normal.toArray(h,M),h[M+3]=s.constant}l.value=h,l.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,h}}function tb(o){let e=new WeakMap;function i(s,r){return r===Or?s.mapping=yn:r===Fr&&(s.mapping=_n),s}function a(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const r=s.mapping;if(r===Or||r===Fr)if(e.has(s)){const l=e.get(s).texture;return i(l,s.mapping)}else{const l=s.image;if(l&&l.height>0){const c=new rm(l.height/2);return c.fromEquirectangularTexture(o,s),e.set(s,c),s.addEventListener("dispose",t),i(c.texture,s.mapping)}else return null}}return s}function t(s){const r=s.target;r.removeEventListener("dispose",t);const l=e.get(r);l!==void 0&&(e.delete(r),l.dispose())}function n(){e=new WeakMap}return{get:a,dispose:n}}class vc extends hc{constructor(e=-1,i=1,a=1,t=-1,n=.1,s=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=i,this.top=a,this.bottom=t,this.near=n,this.far=s,this.updateProjectionMatrix()}copy(e,i){return super.copy(e,i),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,i,a,t,n,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=i,this.view.offsetX=a,this.view.offsetY=t,this.view.width=n,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),i=(this.top-this.bottom)/(2*this.zoom),a=(this.right+this.left)/2,t=(this.top+this.bottom)/2;let n=a-e,s=a+e,r=t+i,l=t-i;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=c*this.view.offsetX,s=n+c*this.view.width,r-=f*this.view.offsetY,l=r-f*this.view.height}this.projectionMatrix.makeOrthographic(n,s,r,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const i=super.toJSON(e);return i.object.zoom=this.zoom,i.object.left=this.left,i.object.right=this.right,i.object.top=this.top,i.object.bottom=this.bottom,i.object.near=this.near,i.object.far=this.far,this.view!==null&&(i.object.view=Object.assign({},this.view)),i}}vc.prototype.isOrthographicCamera=!0;const cn=4,Ol=[.125,.215,.35,.446,.526,.582],yt=20,vr=new vc,Fl=new he;let yr=null;const gt=(1+Math.sqrt(5))/2,$t=1/gt,Vl=[new T(1,1,1),new T(-1,1,1),new T(1,1,-1),new T(-1,1,-1),new T(0,gt,$t),new T(0,gt,-$t),new T($t,0,gt),new T(-$t,0,gt),new T(gt,$t,0),new T(-gt,$t,0)];class Hl{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,i=0,a=.1,t=100){yr=this._renderer.getRenderTarget(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(e,a,t,n),i>0&&this._blur(n,0,0,i),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e,i=null){return this._fromTexture(e,i)}fromCubemap(e,i=null){return this._fromTexture(e,i)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=jl(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Kl(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(yr),e.scissorTest=!1,Zo(e,0,0,e.width,e.height)}_fromTexture(e,i){e.mapping===yn||e.mapping===_n?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),yr=this._renderer.getRenderTarget();const a=i||this._allocateTargets();return this._textureToCubeUV(e,a),this._applyPMREM(a),this._cleanup(a),a}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),i=4*this._cubeSize,a={magFilter:zi,minFilter:zi,generateMipmaps:!1,type:so,format:sa,encoding:it,depthBuffer:!1},t=Wl(e,i,a);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Wl(e,i,a);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=nb(n)),this._blurMaterial=ob(n,e,i)}return t}_compileMaterial(e){const i=new Mi(this._lodPlanes[0],e);this._renderer.compile(i,vr)}_sceneToCubeUV(e,i,a,t){const r=new xi(90,1,i,a),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],f=this._renderer,m=f.autoClear,u=f.toneMapping;f.getClearColor(Fl),f.toneMapping=La,f.autoClear=!1;const d=new Mo({name:"PMREM.Background",side:$i,depthWrite:!1,depthTest:!1}),g=new Mi(new Ln,d);let p=!1;const h=e.background;h?h.isColor&&(d.color.copy(h),e.background=null,p=!0):(d.color.copy(Fl),p=!0);for(let b=0;b<6;b++){const _=b%3;_===0?(r.up.set(0,l[b],0),r.lookAt(c[b],0,0)):_===1?(r.up.set(0,0,l[b]),r.lookAt(0,c[b],0)):(r.up.set(0,l[b],0),r.lookAt(0,0,c[b]));const k=this._cubeSize;Zo(t,_*k,b>2?k:0,k,k),f.setRenderTarget(t),p&&f.render(g,r),f.render(e,r)}g.geometry.dispose(),g.material.dispose(),f.toneMapping=u,f.autoClear=m,e.background=h}_textureToCubeUV(e,i){const a=this._renderer,t=e.mapping===yn||e.mapping===_n;t?(this._cubemapMaterial===null&&(this._cubemapMaterial=jl()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Kl());const n=t?this._cubemapMaterial:this._equirectMaterial,s=new Mi(this._lodPlanes[0],n),r=n.uniforms;r.envMap.value=e;const l=this._cubeSize;Zo(i,0,0,3*l,2*l),a.setRenderTarget(i),a.render(s,vr)}_applyPMREM(e){const i=this._renderer,a=i.autoClear;i.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),s=Vl[(t-1)%Vl.length];this._blur(e,t-1,t,n,s)}i.autoClear=a}_blur(e,i,a,t,n){const s=this._pingPongRenderTarget;this._halfBlur(e,s,i,a,t,"latitudinal",n),this._halfBlur(s,e,a,a,t,"longitudinal",n)}_halfBlur(e,i,a,t,n,s,r){const l=this._renderer,c=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,m=new Mi(this._lodPlanes[t],c),u=c.uniforms,d=this._sizeLods[a]-1,g=isFinite(n)?Math.PI/(2*d):2*Math.PI/(2*yt-1),p=n/g,h=isFinite(n)?1+Math.floor(f*p):yt;h>yt&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${h} samples when the maximum is set to ${yt}`);const b=[];let _=0;for(let C=0;C<yt;++C){const v=C/p,A=Math.exp(-v*v/2);b.push(A),C===0?_+=A:C<h&&(_+=2*A)}for(let C=0;C<b.length;C++)b[C]=b[C]/_;u.envMap.value=e.texture,u.samples.value=h,u.weights.value=b,u.latitudinal.value=s==="latitudinal",r&&(u.poleAxis.value=r);const{_lodMax:k}=this;u.dTheta.value=g,u.mipInt.value=k-a;const M=this._sizeLods[t],y=3*M*(t>k-cn?t-k+cn:0),x=4*(this._cubeSize-M);Zo(i,y,x,3*M,2*M),l.setRenderTarget(i),l.render(m,vr)}}function nb(o){const e=[],i=[],a=[];let t=o;const n=o-cn+1+Ol.length;for(let s=0;s<n;s++){const r=Math.pow(2,t);i.push(r);let l=1/r;s>o-cn?l=Ol[s-o+cn-1]:s===0&&(l=0),a.push(l);const c=1/(r-2),f=-c,m=1+c,u=[f,f,m,f,m,m,f,f,m,m,f,m],d=6,g=6,p=3,h=2,b=1,_=new Float32Array(p*g*d),k=new Float32Array(h*g*d),M=new Float32Array(b*g*d);for(let x=0;x<d;x++){const C=x%3*2/3-1,v=x>2?0:-1,A=[C,v,0,C+2/3,v,0,C+2/3,v+1,0,C,v,0,C+2/3,v+1,0,C,v+1,0];_.set(A,p*g*x),k.set(u,h*g*x);const z=[x,x,x,x,x,x];M.set(z,b*g*x)}const y=new Xe;y.setAttribute("position",new fi(_,p)),y.setAttribute("uv",new fi(k,h)),y.setAttribute("faceIndex",new fi(M,b)),e.push(y),t>cn&&t--}return{lodPlanes:e,sizeLods:i,sigmas:a}}function Wl(o,e,i){const a=new Hi(o,e,i);return a.texture.mapping=Rs,a.texture.name="PMREM.cubeUv",a.scissorTest=!0,a}function Zo(o,e,i,a,t){o.viewport.set(e,i,a,t),o.scissor.set(e,i,a,t)}function ob(o,e,i){const a=new Float32Array(yt),t=new T(0,1,0);return new Ki({name:"SphericalGaussianBlur",defines:{n:yt,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/i,CUBEUV_MAX_MIP:`${o}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:a},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t}},vertexShader:yc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Xa,depthTest:!1,depthWrite:!1})}function Kl(){return new Ki({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:yc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Xa,depthTest:!1,depthWrite:!1})}function jl(){return new Ki({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:yc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Xa,depthTest:!1,depthWrite:!1})}function yc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function sb(o){let e=new WeakMap,i=null;function a(r){if(r&&r.isTexture){const l=r.mapping,c=l===Or||l===Fr,f=l===yn||l===_n;if(c||f)if(r.isRenderTargetTexture&&r.needsPMREMUpdate===!0){r.needsPMREMUpdate=!1;let m=e.get(r);return i===null&&(i=new Hl(o)),m=c?i.fromEquirectangular(r,m):i.fromCubemap(r,m),e.set(r,m),m.texture}else{if(e.has(r))return e.get(r).texture;{const m=r.image;if(c&&m&&m.height>0||f&&m&&t(m)){i===null&&(i=new Hl(o));const u=c?i.fromEquirectangular(r):i.fromCubemap(r);return e.set(r,u),r.addEventListener("dispose",n),u.texture}else return null}}}return r}function t(r){let l=0;const c=6;for(let f=0;f<c;f++)r[f]!==void 0&&l++;return l===c}function n(r){const l=r.target;l.removeEventListener("dispose",n);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function s(){e=new WeakMap,i!==null&&(i.dispose(),i=null)}return{get:a,dispose:s}}function rb(o){const e={};function i(a){if(e[a]!==void 0)return e[a];let t;switch(a){case"WEBGL_depth_texture":t=o.getExtension("WEBGL_depth_texture")||o.getExtension("MOZ_WEBGL_depth_texture")||o.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=o.getExtension("EXT_texture_filter_anisotropic")||o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=o.getExtension("WEBGL_compressed_texture_pvrtc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=o.getExtension(a)}return e[a]=t,t}return{has:function(a){return i(a)!==null},init:function(a){a.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(a){const t=i(a);return t===null&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),t}}}function cb(o,e,i,a){const t={},n=new WeakMap;function s(m){const u=m.target;u.index!==null&&e.remove(u.index);for(const g in u.attributes)e.remove(u.attributes[g]);u.removeEventListener("dispose",s),delete t[u.id];const d=n.get(u);d&&(e.remove(d),n.delete(u)),a.releaseStatesOfGeometry(u),u.isInstancedBufferGeometry===!0&&delete u._maxInstanceCount,i.memory.geometries--}function r(m,u){return t[u.id]===!0||(u.addEventListener("dispose",s),t[u.id]=!0,i.memory.geometries++),u}function l(m){const u=m.attributes;for(const g in u)e.update(u[g],34962);const d=m.morphAttributes;for(const g in d){const p=d[g];for(let h=0,b=p.length;h<b;h++)e.update(p[h],34962)}}function c(m){const u=[],d=m.index,g=m.attributes.position;let p=0;if(d!==null){const _=d.array;p=d.version;for(let k=0,M=_.length;k<M;k+=3){const y=_[k+0],x=_[k+1],C=_[k+2];u.push(y,x,x,C,C,y)}}else{const _=g.array;p=g.version;for(let k=0,M=_.length/3-1;k<M;k+=3){const y=k+0,x=k+1,C=k+2;u.push(y,x,x,C,C,y)}}const h=new(am(u)?sm:om)(u,1);h.version=p;const b=n.get(m);b&&e.remove(b),n.set(m,h)}function f(m){const u=n.get(m);if(u){const d=m.index;d!==null&&u.version<d.version&&c(m)}else c(m);return n.get(m)}return{get:r,update:l,getWireframeAttribute:f}}function lb(o,e,i,a){const t=a.isWebGL2;let n;function s(u){n=u}let r,l;function c(u){r=u.type,l=u.bytesPerElement}function f(u,d){o.drawElements(n,d,r,u*l),i.update(d,n,1)}function m(u,d,g){if(g===0)return;let p,h;if(t)p=o,h="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[h](n,d,r,u*l,g),i.update(d,n,g)}this.setMode=s,this.setIndex=c,this.render=f,this.renderInstances=m}function fb(o){const e={geometries:0,textures:0},i={frame:0,calls:0,triangles:0,points:0,lines:0};function a(n,s,r){switch(i.calls++,s){case 4:i.triangles+=r*(n/3);break;case 1:i.lines+=r*(n/2);break;case 3:i.lines+=r*(n-1);break;case 2:i.lines+=r*n;break;case 0:i.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function t(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0}return{memory:e,render:i,programs:null,autoReset:!0,reset:t,update:a}}function mb(o,e){return o[0]-e[0]}function ub(o,e){return Math.abs(e[1])-Math.abs(o[1])}function _r(o,e){let i=1;const a=e.isInterleavedBufferAttribute?e.data.array:e.array;a instanceof Int8Array?i=127:a instanceof Int16Array?i=32767:a instanceof Int32Array?i=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",a),o.divideScalar(i)}function db(o,e,i){const a={},t=new Float32Array(8),n=new WeakMap,s=new je,r=[];for(let c=0;c<8;c++)r[c]=[c,0];function l(c,f,m,u){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,h=p!==void 0?p.length:0;let b=n.get(f);if(b===void 0||b.count!==h){let I=function(){P.dispose(),n.delete(f),f.removeEventListener("dispose",I)};var g=I;b!==void 0&&b.texture.dispose();const M=f.morphAttributes.position!==void 0,y=f.morphAttributes.normal!==void 0,x=f.morphAttributes.color!==void 0,C=f.morphAttributes.position||[],v=f.morphAttributes.normal||[],A=f.morphAttributes.color||[];let z=0;M===!0&&(z=1),y===!0&&(z=2),x===!0&&(z=3);let L=f.attributes.position.count*z,ee=1;L>e.maxTextureSize&&(ee=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const Z=new Float32Array(L*ee*4*h),P=new Cs(Z,L,ee,h);P.type=_t,P.needsUpdate=!0;const G=z*4;for(let F=0;F<h;F++){const W=C[F],D=v[F],H=A[F],Y=L*ee*4*F;for(let X=0;X<W.count;X++){const $=X*G;M===!0&&(s.fromBufferAttribute(W,X),W.normalized===!0&&_r(s,W),Z[Y+$+0]=s.x,Z[Y+$+1]=s.y,Z[Y+$+2]=s.z,Z[Y+$+3]=0),y===!0&&(s.fromBufferAttribute(D,X),D.normalized===!0&&_r(s,D),Z[Y+$+4]=s.x,Z[Y+$+5]=s.y,Z[Y+$+6]=s.z,Z[Y+$+7]=0),x===!0&&(s.fromBufferAttribute(H,X),H.normalized===!0&&_r(s,H),Z[Y+$+8]=s.x,Z[Y+$+9]=s.y,Z[Y+$+10]=s.z,Z[Y+$+11]=H.itemSize===4?s.w:1)}}b={count:h,texture:P,size:new ie(L,ee)},n.set(f,b),f.addEventListener("dispose",I)}let _=0;for(let M=0;M<d.length;M++)_+=d[M];const k=f.morphTargetsRelative?1:1-_;u.getUniforms().setValue(o,"morphTargetBaseInfluence",k),u.getUniforms().setValue(o,"morphTargetInfluences",d),u.getUniforms().setValue(o,"morphTargetsTexture",b.texture,i),u.getUniforms().setValue(o,"morphTargetsTextureSize",b.size)}else{const p=d===void 0?0:d.length;let h=a[f.id];if(h===void 0||h.length!==p){h=[];for(let y=0;y<p;y++)h[y]=[y,0];a[f.id]=h}for(let y=0;y<p;y++){const x=h[y];x[0]=y,x[1]=d[y]}h.sort(ub);for(let y=0;y<8;y++)y<p&&h[y][1]?(r[y][0]=h[y][0],r[y][1]=h[y][1]):(r[y][0]=Number.MAX_SAFE_INTEGER,r[y][1]=0);r.sort(mb);const b=f.morphAttributes.position,_=f.morphAttributes.normal;let k=0;for(let y=0;y<8;y++){const x=r[y],C=x[0],v=x[1];C!==Number.MAX_SAFE_INTEGER&&v?(b&&f.getAttribute("morphTarget"+y)!==b[C]&&f.setAttribute("morphTarget"+y,b[C]),_&&f.getAttribute("morphNormal"+y)!==_[C]&&f.setAttribute("morphNormal"+y,_[C]),t[y]=v,k+=v):(b&&f.hasAttribute("morphTarget"+y)===!0&&f.deleteAttribute("morphTarget"+y),_&&f.hasAttribute("morphNormal"+y)===!0&&f.deleteAttribute("morphNormal"+y),t[y]=0)}const M=f.morphTargetsRelative?1:1-k;u.getUniforms().setValue(o,"morphTargetBaseInfluence",M),u.getUniforms().setValue(o,"morphTargetInfluences",t)}}return{update:l}}function pb(o,e,i,a){let t=new WeakMap;function n(l){const c=a.render.frame,f=l.geometry,m=e.get(l,f);return t.get(m)!==c&&(e.update(m),t.set(m,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",r)===!1&&l.addEventListener("dispose",r),i.update(l.instanceMatrix,34962),l.instanceColor!==null&&i.update(l.instanceColor,34962)),m}function s(){t=new WeakMap}function r(l){const c=l.target;c.removeEventListener("dispose",r),i.remove(c.instanceMatrix),c.instanceColor!==null&&i.remove(c.instanceColor)}return{update:n,dispose:s}}const lm=new bi,fm=new Cs,mm=new dc,um=new Es,ql=[],Zl=[],Jl=new Float32Array(16),Xl=new Float32Array(9),Yl=new Float32Array(4);function zn(o,e,i){const a=o[0];if(a<=0||a>0)return o;const t=e*i;let n=ql[t];if(n===void 0&&(n=new Float32Array(t),ql[t]=n),e!==0){a.toArray(n,0);for(let s=1,r=0;s!==e;++s)r+=i,o[s].toArray(n,r)}return n}function Pi(o,e){if(o.length!==e.length)return!1;for(let i=0,a=o.length;i<a;i++)if(o[i]!==e[i])return!1;return!0}function Li(o,e){for(let i=0,a=e.length;i<a;i++)o[i]=e[i]}function Ls(o,e){let i=Zl[e];i===void 0&&(i=new Int32Array(e),Zl[e]=i);for(let a=0;a!==e;++a)i[a]=o.allocateTextureUnit();return i}function hb(o,e){const i=this.cache;i[0]!==e&&(o.uniform1f(this.addr,e),i[0]=e)}function gb(o,e){const i=this.cache;if(e.x!==void 0)(i[0]!==e.x||i[1]!==e.y)&&(o.uniform2f(this.addr,e.x,e.y),i[0]=e.x,i[1]=e.y);else{if(Pi(i,e))return;o.uniform2fv(this.addr,e),Li(i,e)}}function bb(o,e){const i=this.cache;if(e.x!==void 0)(i[0]!==e.x||i[1]!==e.y||i[2]!==e.z)&&(o.uniform3f(this.addr,e.x,e.y,e.z),i[0]=e.x,i[1]=e.y,i[2]=e.z);else if(e.r!==void 0)(i[0]!==e.r||i[1]!==e.g||i[2]!==e.b)&&(o.uniform3f(this.addr,e.r,e.g,e.b),i[0]=e.r,i[1]=e.g,i[2]=e.b);else{if(Pi(i,e))return;o.uniform3fv(this.addr,e),Li(i,e)}}function vb(o,e){const i=this.cache;if(e.x!==void 0)(i[0]!==e.x||i[1]!==e.y||i[2]!==e.z||i[3]!==e.w)&&(o.uniform4f(this.addr,e.x,e.y,e.z,e.w),i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=e.w);else{if(Pi(i,e))return;o.uniform4fv(this.addr,e),Li(i,e)}}function yb(o,e){const i=this.cache,a=e.elements;if(a===void 0){if(Pi(i,e))return;o.uniformMatrix2fv(this.addr,!1,e),Li(i,e)}else{if(Pi(i,a))return;Yl.set(a),o.uniformMatrix2fv(this.addr,!1,Yl),Li(i,a)}}function _b(o,e){const i=this.cache,a=e.elements;if(a===void 0){if(Pi(i,e))return;o.uniformMatrix3fv(this.addr,!1,e),Li(i,e)}else{if(Pi(i,a))return;Xl.set(a),o.uniformMatrix3fv(this.addr,!1,Xl),Li(i,a)}}function Sb(o,e){const i=this.cache,a=e.elements;if(a===void 0){if(Pi(i,e))return;o.uniformMatrix4fv(this.addr,!1,e),Li(i,e)}else{if(Pi(i,a))return;Jl.set(a),o.uniformMatrix4fv(this.addr,!1,Jl),Li(i,a)}}function Mb(o,e){const i=this.cache;i[0]!==e&&(o.uniform1i(this.addr,e),i[0]=e)}function kb(o,e){const i=this.cache;Pi(i,e)||(o.uniform2iv(this.addr,e),Li(i,e))}function wb(o,e){const i=this.cache;Pi(i,e)||(o.uniform3iv(this.addr,e),Li(i,e))}function xb(o,e){const i=this.cache;Pi(i,e)||(o.uniform4iv(this.addr,e),Li(i,e))}function Ab(o,e){const i=this.cache;i[0]!==e&&(o.uniform1ui(this.addr,e),i[0]=e)}function Rb(o,e){const i=this.cache;Pi(i,e)||(o.uniform2uiv(this.addr,e),Li(i,e))}function Tb(o,e){const i=this.cache;Pi(i,e)||(o.uniform3uiv(this.addr,e),Li(i,e))}function Cb(o,e){const i=this.cache;Pi(i,e)||(o.uniform4uiv(this.addr,e),Li(i,e))}function Eb(o,e,i){const a=this.cache,t=i.allocateTextureUnit();a[0]!==t&&(o.uniform1i(this.addr,t),a[0]=t),i.setTexture2D(e||lm,t)}function Pb(o,e,i){const a=this.cache,t=i.allocateTextureUnit();a[0]!==t&&(o.uniform1i(this.addr,t),a[0]=t),i.setTexture3D(e||mm,t)}function Lb(o,e,i){const a=this.cache,t=i.allocateTextureUnit();a[0]!==t&&(o.uniform1i(this.addr,t),a[0]=t),i.setTextureCube(e||um,t)}function zb(o,e,i){const a=this.cache,t=i.allocateTextureUnit();a[0]!==t&&(o.uniform1i(this.addr,t),a[0]=t),i.setTexture2DArray(e||fm,t)}function Ib(o){switch(o){case 5126:return hb;case 35664:return gb;case 35665:return bb;case 35666:return vb;case 35674:return yb;case 35675:return _b;case 35676:return Sb;case 5124:case 35670:return Mb;case 35667:case 35671:return kb;case 35668:case 35672:return wb;case 35669:case 35673:return xb;case 5125:return Ab;case 36294:return Rb;case 36295:return Tb;case 36296:return Cb;case 35678:case 36198:case 36298:case 36306:case 35682:return Eb;case 35679:case 36299:case 36307:return Pb;case 35680:case 36300:case 36308:case 36293:return Lb;case 36289:case 36303:case 36311:case 36292:return zb}}function Nb(o,e){o.uniform1fv(this.addr,e)}function Bb(o,e){const i=zn(e,this.size,2);o.uniform2fv(this.addr,i)}function Db(o,e){const i=zn(e,this.size,3);o.uniform3fv(this.addr,i)}function Gb(o,e){const i=zn(e,this.size,4);o.uniform4fv(this.addr,i)}function Ub(o,e){const i=zn(e,this.size,4);o.uniformMatrix2fv(this.addr,!1,i)}function Ob(o,e){const i=zn(e,this.size,9);o.uniformMatrix3fv(this.addr,!1,i)}function Fb(o,e){const i=zn(e,this.size,16);o.uniformMatrix4fv(this.addr,!1,i)}function Vb(o,e){o.uniform1iv(this.addr,e)}function Hb(o,e){o.uniform2iv(this.addr,e)}function Wb(o,e){o.uniform3iv(this.addr,e)}function Kb(o,e){o.uniform4iv(this.addr,e)}function jb(o,e){o.uniform1uiv(this.addr,e)}function qb(o,e){o.uniform2uiv(this.addr,e)}function Zb(o,e){o.uniform3uiv(this.addr,e)}function Jb(o,e){o.uniform4uiv(this.addr,e)}function Xb(o,e,i){const a=e.length,t=Ls(i,a);o.uniform1iv(this.addr,t);for(let n=0;n!==a;++n)i.setTexture2D(e[n]||lm,t[n])}function Yb(o,e,i){const a=e.length,t=Ls(i,a);o.uniform1iv(this.addr,t);for(let n=0;n!==a;++n)i.setTexture3D(e[n]||mm,t[n])}function $b(o,e,i){const a=e.length,t=Ls(i,a);o.uniform1iv(this.addr,t);for(let n=0;n!==a;++n)i.setTextureCube(e[n]||um,t[n])}function Qb(o,e,i){const a=e.length,t=Ls(i,a);o.uniform1iv(this.addr,t);for(let n=0;n!==a;++n)i.setTexture2DArray(e[n]||fm,t[n])}function ev(o){switch(o){case 5126:return Nb;case 35664:return Bb;case 35665:return Db;case 35666:return Gb;case 35674:return Ub;case 35675:return Ob;case 35676:return Fb;case 5124:case 35670:return Vb;case 35667:case 35671:return Hb;case 35668:case 35672:return Wb;case 35669:case 35673:return Kb;case 5125:return jb;case 36294:return qb;case 36295:return Zb;case 36296:return Jb;case 35678:case 36198:case 36298:case 36306:case 35682:return Xb;case 35679:case 36299:case 36307:return Yb;case 35680:case 36300:case 36308:case 36293:return $b;case 36289:case 36303:case 36311:case 36292:return Qb}}function iv(o,e,i){this.id=o,this.addr=i,this.cache=[],this.setValue=Ib(e.type)}function av(o,e,i){this.id=o,this.addr=i,this.cache=[],this.size=e.size,this.setValue=ev(e.type)}function dm(o){this.id=o,this.seq=[],this.map={}}dm.prototype.setValue=function(o,e,i){const a=this.seq;for(let t=0,n=a.length;t!==n;++t){const s=a[t];s.setValue(o,e[s.id],i)}};const Sr=/(\w+)(\])?(\[|\.)?/g;function $l(o,e){o.seq.push(e),o.map[e.id]=e}function tv(o,e,i){const a=o.name,t=a.length;for(Sr.lastIndex=0;;){const n=Sr.exec(a),s=Sr.lastIndex;let r=n[1];const l=n[2]==="]",c=n[3];if(l&&(r=r|0),c===void 0||c==="["&&s+2===t){$l(i,c===void 0?new iv(r,o,e):new av(r,o,e));break}else{let m=i.map[r];m===void 0&&(m=new dm(r),$l(i,m)),i=m}}}function Ya(o,e){this.seq=[],this.map={};const i=o.getProgramParameter(e,35718);for(let a=0;a<i;++a){const t=o.getActiveUniform(e,a),n=o.getUniformLocation(e,t.name);tv(t,n,this)}}Ya.prototype.setValue=function(o,e,i,a){const t=this.map[e];t!==void 0&&t.setValue(o,i,a)};Ya.prototype.setOptional=function(o,e,i){const a=e[i];a!==void 0&&this.setValue(o,i,a)};Ya.upload=function(o,e,i,a){for(let t=0,n=e.length;t!==n;++t){const s=e[t],r=i[s.id];r.needsUpdate!==!1&&s.setValue(o,r.value,a)}};Ya.seqWithValue=function(o,e){const i=[];for(let a=0,t=o.length;a!==t;++a){const n=o[a];n.id in e&&i.push(n)}return i};function Ql(o,e,i){const a=o.createShader(e);return o.shaderSource(a,i),o.compileShader(a),a}let nv=0;function ov(o,e){const i=o.split(`
`),a=[],t=Math.max(e-6,0),n=Math.min(e+6,i.length);for(let s=t;s<n;s++)a.push(s+1+": "+i[s]);return a.join(`
`)}function sv(o){switch(o){case it:return["Linear","( value )"];case $e:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",o),["Linear","( value )"]}}function ef(o,e,i){const a=o.getShaderParameter(e,35713),t=o.getShaderInfoLog(e).trim();if(a&&t==="")return"";const n=/ERROR: 0:(\d+)/.exec(t);if(n){const s=parseInt(n[0]);return i.toUpperCase()+`

`+t+`

`+ov(o.getShaderSource(e),s)}else return t}function rv(o,e){const i=sv(e);return"vec4 "+o+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function cv(o,e){let i;switch(e){case Td:i="Linear";break;case Cd:i="Reinhard";break;case Ed:i="OptimizedCineon";break;case Pd:i="ACESFilmic";break;case Ld:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),i="Linear"}return"vec3 "+o+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function lv(o){return[o.extensionDerivatives||!!o.envMapCubeUVHeight||o.bumpMap||o.tangentSpaceNormalMap||o.clearcoatNormalMap||o.flatShading||o.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(o.extensionFragDepth||o.logarithmicDepthBuffer)&&o.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",o.extensionDrawBuffers&&o.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(o.extensionShaderTextureLOD||o.envMap||o.transmission)&&o.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Xn).join(`
`)}function fv(o){const e=[];for(const i in o){const a=o[i];a!==!1&&e.push("#define "+i+" "+a)}return e.join(`
`)}function mv(o,e){const i={},a=o.getProgramParameter(e,35721);for(let t=0;t<a;t++){const n=o.getActiveAttrib(e,t),s=n.name;let r=1;n.type===35674&&(r=2),n.type===35675&&(r=3),n.type===35676&&(r=4),i[s]={type:n.type,location:o.getAttribLocation(e,s),locationSize:r}}return i}function Xn(o){return o!==""}function af(o,e){return o.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function tf(o,e){return o.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const uv=/^[ \t]*#include +<([\w\d./]+)>/gm;function qr(o){return o.replace(uv,dv)}function dv(o,e){const i=ze[e];if(i===void 0)throw new Error("Can not resolve #include <"+e+">");return qr(i)}const pv=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,hv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function nf(o){return o.replace(hv,pm).replace(pv,gv)}function gv(o,e,i,a){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),pm(o,e,i,a)}function pm(o,e,i,a){let t="";for(let n=parseInt(e);n<parseInt(i);n++)t+=a.replace(/\[\s*i\s*\]/g,"[ "+n+" ]").replace(/UNROLLED_LOOP_INDEX/g,n);return t}function of(o){let e="precision "+o.precision+` float;
precision `+o.precision+" int;";return o.precision==="highp"?e+=`
#define HIGH_PRECISION`:o.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:o.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function bv(o){let e="SHADOWMAP_TYPE_BASIC";return o.shadowMapType===Xf?e="SHADOWMAP_TYPE_PCF":o.shadowMapType===sd?e="SHADOWMAP_TYPE_PCF_SOFT":o.shadowMapType===Jn&&(e="SHADOWMAP_TYPE_VSM"),e}function vv(o){let e="ENVMAP_TYPE_CUBE";if(o.envMap)switch(o.envMapMode){case yn:case _n:e="ENVMAP_TYPE_CUBE";break;case Rs:e="ENVMAP_TYPE_CUBE_UV";break}return e}function yv(o){let e="ENVMAP_MODE_REFLECTION";if(o.envMap)switch(o.envMapMode){case _n:e="ENVMAP_MODE_REFRACTION";break}return e}function _v(o){let e="ENVMAP_BLENDING_NONE";if(o.envMap)switch(o.combine){case As:e="ENVMAP_BLENDING_MULTIPLY";break;case Ad:e="ENVMAP_BLENDING_MIX";break;case Rd:e="ENVMAP_BLENDING_ADD";break}return e}function Sv(o){const e=o.envMapCubeUVHeight;if(e===null)return null;const i=Math.log2(e)-2,a=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,i),7*16)),texelHeight:a,maxMip:i}}function Mv(o,e,i,a){const t=o.getContext(),n=i.defines;let s=i.vertexShader,r=i.fragmentShader;const l=bv(i),c=vv(i),f=yv(i),m=_v(i),u=Sv(i),d=i.isWebGL2?"":lv(i),g=fv(n),p=t.createProgram();let h,b,_=i.glslVersion?"#version "+i.glslVersion+`
`:"";i.isRawShaderMaterial?(h=[g].filter(Xn).join(`
`),h.length>0&&(h+=`
`),b=[d,g].filter(Xn).join(`
`),b.length>0&&(b+=`
`)):(h=[of(i),"#define SHADER_NAME "+i.shaderName,g,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+f:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&i.flatShading===!1?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Xn).join(`
`),b=[d,of(i),"#define SHADER_NAME "+i.shaderName,g,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+c:"",i.envMap?"#define "+f:"",i.envMap?"#define "+m:"",u?"#define CUBEUV_TEXEL_WIDTH "+u.texelWidth:"",u?"#define CUBEUV_TEXEL_HEIGHT "+u.texelHeight:"",u?"#define CUBEUV_MAX_MIP "+u.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMap&&i.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",i.normalMap&&i.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",i.specularColorMap?"#define USE_SPECULARCOLORMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEENCOLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUvs?"#define USE_UV":"",i.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+l:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==La?"#define TONE_MAPPING":"",i.toneMapping!==La?ze.tonemapping_pars_fragment:"",i.toneMapping!==La?cv("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",ze.encodings_pars_fragment,rv("linearToOutputTexel",i.outputEncoding),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"",`
`].filter(Xn).join(`
`)),s=qr(s),s=af(s,i),s=tf(s,i),r=qr(r),r=af(r,i),r=tf(r,i),s=nf(s),r=nf(r),i.isWebGL2&&i.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,h=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+h,b=["#define varying in",i.glslVersion===Rl?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===Rl?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+b);const k=_+h+s,M=_+b+r,y=Ql(t,35633,k),x=Ql(t,35632,M);if(t.attachShader(p,y),t.attachShader(p,x),i.index0AttributeName!==void 0?t.bindAttribLocation(p,0,i.index0AttributeName):i.morphTargets===!0&&t.bindAttribLocation(p,0,"position"),t.linkProgram(p),o.debug.checkShaderErrors){const A=t.getProgramInfoLog(p).trim(),z=t.getShaderInfoLog(y).trim(),L=t.getShaderInfoLog(x).trim();let ee=!0,Z=!0;if(t.getProgramParameter(p,35714)===!1){ee=!1;const P=ef(t,y,"vertex"),G=ef(t,x,"fragment");console.error("THREE.WebGLProgram: Shader Error "+t.getError()+" - VALIDATE_STATUS "+t.getProgramParameter(p,35715)+`

Program Info Log: `+A+`
`+P+`
`+G)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(z===""||L==="")&&(Z=!1);Z&&(this.diagnostics={runnable:ee,programLog:A,vertexShader:{log:z,prefix:h},fragmentShader:{log:L,prefix:b}})}t.deleteShader(y),t.deleteShader(x);let C;this.getUniforms=function(){return C===void 0&&(C=new Ya(t,p)),C};let v;return this.getAttributes=function(){return v===void 0&&(v=mv(t,p)),v},this.destroy=function(){a.releaseStatesOfProgram(this),t.deleteProgram(p),this.program=void 0},this.name=i.shaderName,this.id=nv++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=y,this.fragmentShader=x,this}let kv=0;class wv{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const i=e.vertexShader,a=e.fragmentShader,t=this._getShaderStage(i),n=this._getShaderStage(a),s=this._getShaderCacheForMaterial(e);return s.has(t)===!1&&(s.add(t),t.usedTimes++),s.has(n)===!1&&(s.add(n),n.usedTimes++),this}remove(e){const i=this.materialCache.get(e);for(const a of i)a.usedTimes--,a.usedTimes===0&&this.shaderCache.delete(a.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const i=this.materialCache;return i.has(e)===!1&&i.set(e,new Set),i.get(e)}_getShaderStage(e){const i=this.shaderCache;if(i.has(e)===!1){const a=new xv(e);i.set(e,a)}return i.get(e)}}class xv{constructor(e){this.id=kv++,this.code=e,this.usedTimes=0}}function Av(o,e,i,a,t,n,s){const r=new pc,l=new wv,c=[],f=t.isWebGL2,m=t.logarithmicDepthBuffer,u=t.vertexTextures;let d=t.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(v,A,z,L,ee){const Z=L.fog,P=ee.geometry,G=v.isMeshStandardMaterial?L.environment:null,I=(v.isMeshStandardMaterial?i:e).get(v.envMap||G),F=!!I&&I.mapping===Rs?I.image.height:null,W=g[v.type];v.precision!==null&&(d=t.getMaxPrecision(v.precision),d!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",d,"instead."));const D=P.morphAttributes.position||P.morphAttributes.normal||P.morphAttributes.color,H=D!==void 0?D.length:0;let Y=0;P.morphAttributes.position!==void 0&&(Y=1),P.morphAttributes.normal!==void 0&&(Y=2),P.morphAttributes.color!==void 0&&(Y=3);let X,$,fe,ge;if(W){const ne=va[W];X=ne.vertexShader,$=ne.fragmentShader}else X=v.vertexShader,$=v.fragmentShader,l.update(v),fe=l.getVertexShaderID(v),ge=l.getFragmentShaderID(v);const K=o.getRenderTarget(),Ue=v.alphaTest>0,Me=v.clearcoat>0;return{isWebGL2:f,shaderID:W,shaderName:v.type,vertexShader:X,fragmentShader:$,defines:v.defines,customVertexShaderID:fe,customFragmentShaderID:ge,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:d,instancing:ee.isInstancedMesh===!0,instancingColor:ee.isInstancedMesh===!0&&ee.instanceColor!==null,supportsVertexTextures:u,outputEncoding:K===null?o.outputEncoding:K.isXRRenderTarget===!0?K.texture.encoding:it,map:!!v.map,matcap:!!v.matcap,envMap:!!I,envMapMode:I&&I.mapping,envMapCubeUVHeight:F,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===ip,tangentSpaceNormalMap:v.normalMapType===En,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===$e,clearcoat:Me,clearcoatMap:Me&&!!v.clearcoatMap,clearcoatRoughnessMap:Me&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:Me&&!!v.clearcoatNormalMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===dn,alphaMap:!!v.alphaMap,alphaTest:Ue,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!P.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!P.attributes.color&&P.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||v.transmission>0||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||v.sheen>0||!!v.sheenColorMap||!!v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!Z,useFog:v.fog===!0,fogExp2:Z&&Z.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:m,skinning:ee.isSkinnedMesh===!0,morphTargets:P.morphAttributes.position!==void 0,morphNormals:P.morphAttributes.normal!==void 0,morphColors:P.morphAttributes.color!==void 0,morphTargetsCount:H,morphTextureStride:Y,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:v.dithering,shadowMapEnabled:o.shadowMap.enabled&&z.length>0,shadowMapType:o.shadowMap.type,toneMapping:v.toneMapped?o.toneMapping:La,physicallyCorrectLights:o.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===vn,flipSided:v.side===$i,useDepthPacking:!!v.depthPacking,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:f||a.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||a.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||a.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function h(v){const A=[];if(v.shaderID?A.push(v.shaderID):(A.push(v.customVertexShaderID),A.push(v.customFragmentShaderID)),v.defines!==void 0)for(const z in v.defines)A.push(z),A.push(v.defines[z]);return v.isRawShaderMaterial===!1&&(b(A,v),_(A,v),A.push(o.outputEncoding)),A.push(v.customProgramCacheKey),A.join()}function b(v,A){v.push(A.precision),v.push(A.outputEncoding),v.push(A.envMapMode),v.push(A.envMapCubeUVHeight),v.push(A.combine),v.push(A.vertexUvs),v.push(A.fogExp2),v.push(A.sizeAttenuation),v.push(A.morphTargetsCount),v.push(A.morphAttributeCount),v.push(A.numDirLights),v.push(A.numPointLights),v.push(A.numSpotLights),v.push(A.numHemiLights),v.push(A.numRectAreaLights),v.push(A.numDirLightShadows),v.push(A.numPointLightShadows),v.push(A.numSpotLightShadows),v.push(A.shadowMapType),v.push(A.toneMapping),v.push(A.numClippingPlanes),v.push(A.numClipIntersection),v.push(A.depthPacking)}function _(v,A){r.disableAll(),A.isWebGL2&&r.enable(0),A.supportsVertexTextures&&r.enable(1),A.instancing&&r.enable(2),A.instancingColor&&r.enable(3),A.map&&r.enable(4),A.matcap&&r.enable(5),A.envMap&&r.enable(6),A.lightMap&&r.enable(7),A.aoMap&&r.enable(8),A.emissiveMap&&r.enable(9),A.bumpMap&&r.enable(10),A.normalMap&&r.enable(11),A.objectSpaceNormalMap&&r.enable(12),A.tangentSpaceNormalMap&&r.enable(13),A.clearcoat&&r.enable(14),A.clearcoatMap&&r.enable(15),A.clearcoatRoughnessMap&&r.enable(16),A.clearcoatNormalMap&&r.enable(17),A.displacementMap&&r.enable(18),A.specularMap&&r.enable(19),A.roughnessMap&&r.enable(20),A.metalnessMap&&r.enable(21),A.gradientMap&&r.enable(22),A.alphaMap&&r.enable(23),A.alphaTest&&r.enable(24),A.vertexColors&&r.enable(25),A.vertexAlphas&&r.enable(26),A.vertexUvs&&r.enable(27),A.vertexTangents&&r.enable(28),A.uvsVertexOnly&&r.enable(29),A.fog&&r.enable(30),v.push(r.mask),r.disableAll(),A.useFog&&r.enable(0),A.flatShading&&r.enable(1),A.logarithmicDepthBuffer&&r.enable(2),A.skinning&&r.enable(3),A.morphTargets&&r.enable(4),A.morphNormals&&r.enable(5),A.morphColors&&r.enable(6),A.premultipliedAlpha&&r.enable(7),A.shadowMapEnabled&&r.enable(8),A.physicallyCorrectLights&&r.enable(9),A.doubleSided&&r.enable(10),A.flipSided&&r.enable(11),A.useDepthPacking&&r.enable(12),A.dithering&&r.enable(13),A.specularIntensityMap&&r.enable(14),A.specularColorMap&&r.enable(15),A.transmission&&r.enable(16),A.transmissionMap&&r.enable(17),A.thicknessMap&&r.enable(18),A.sheen&&r.enable(19),A.sheenColorMap&&r.enable(20),A.sheenRoughnessMap&&r.enable(21),A.decodeVideoTexture&&r.enable(22),A.opaque&&r.enable(23),v.push(r.mask)}function k(v){const A=g[v.type];let z;if(A){const L=va[A];z=yp.clone(L.uniforms)}else z=v.uniforms;return z}function M(v,A){let z;for(let L=0,ee=c.length;L<ee;L++){const Z=c[L];if(Z.cacheKey===A){z=Z,++z.usedTimes;break}}return z===void 0&&(z=new Mv(o,A,v,n),c.push(z)),z}function y(v){if(--v.usedTimes===0){const A=c.indexOf(v);c[A]=c[c.length-1],c.pop(),v.destroy()}}function x(v){l.remove(v)}function C(){l.dispose()}return{getParameters:p,getProgramCacheKey:h,getUniforms:k,acquireProgram:M,releaseProgram:y,releaseShaderCache:x,programs:c,dispose:C}}function Rv(){let o=new WeakMap;function e(n){let s=o.get(n);return s===void 0&&(s={},o.set(n,s)),s}function i(n){o.delete(n)}function a(n,s,r){o.get(n)[s]=r}function t(){o=new WeakMap}return{get:e,remove:i,update:a,dispose:t}}function Tv(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function sf(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function rf(){const o=[];let e=0;const i=[],a=[],t=[];function n(){e=0,i.length=0,a.length=0,t.length=0}function s(m,u,d,g,p,h){let b=o[e];return b===void 0?(b={id:m.id,object:m,geometry:u,material:d,groupOrder:g,renderOrder:m.renderOrder,z:p,group:h},o[e]=b):(b.id=m.id,b.object=m,b.geometry=u,b.material=d,b.groupOrder=g,b.renderOrder=m.renderOrder,b.z=p,b.group=h),e++,b}function r(m,u,d,g,p,h){const b=s(m,u,d,g,p,h);d.transmission>0?a.push(b):d.transparent===!0?t.push(b):i.push(b)}function l(m,u,d,g,p,h){const b=s(m,u,d,g,p,h);d.transmission>0?a.unshift(b):d.transparent===!0?t.unshift(b):i.unshift(b)}function c(m,u){i.length>1&&i.sort(m||Tv),a.length>1&&a.sort(u||sf),t.length>1&&t.sort(u||sf)}function f(){for(let m=e,u=o.length;m<u;m++){const d=o[m];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:i,transmissive:a,transparent:t,init:n,push:r,unshift:l,finish:f,sort:c}}function Cv(){let o=new WeakMap;function e(a,t){let n;return o.has(a)===!1?(n=new rf,o.set(a,[n])):t>=o.get(a).length?(n=new rf,o.get(a).push(n)):n=o.get(a)[t],n}function i(){o=new WeakMap}return{get:e,dispose:i}}function Ev(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let i;switch(e.type){case"DirectionalLight":i={direction:new T,color:new he};break;case"SpotLight":i={position:new T,direction:new T,color:new he,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new T,color:new he,distance:0,decay:0};break;case"HemisphereLight":i={direction:new T,skyColor:new he,groundColor:new he};break;case"RectAreaLight":i={color:new he,position:new T,halfWidth:new T,halfHeight:new T};break}return o[e.id]=i,i}}}function Pv(){const o={};return{get:function(e){if(o[e.id]!==void 0)return o[e.id];let i;switch(e.type){case"DirectionalLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ie,shadowCameraNear:1,shadowCameraFar:1e3};break}return o[e.id]=i,i}}}let Lv=0;function zv(o,e){return(e.castShadow?1:0)-(o.castShadow?1:0)}function Iv(o,e){const i=new Ev,a=Pv(),t={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let f=0;f<9;f++)t.probe.push(new T);const n=new T,s=new be,r=new be;function l(f,m){let u=0,d=0,g=0;for(let A=0;A<9;A++)t.probe[A].set(0,0,0);let p=0,h=0,b=0,_=0,k=0,M=0,y=0,x=0;f.sort(zv);const C=m!==!0?Math.PI:1;for(let A=0,z=f.length;A<z;A++){const L=f[A],ee=L.color,Z=L.intensity,P=L.distance,G=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)u+=ee.r*Z*C,d+=ee.g*Z*C,g+=ee.b*Z*C;else if(L.isLightProbe)for(let I=0;I<9;I++)t.probe[I].addScaledVector(L.sh.coefficients[I],Z);else if(L.isDirectionalLight){const I=i.get(L);if(I.color.copy(L.color).multiplyScalar(L.intensity*C),L.castShadow){const F=L.shadow,W=a.get(L);W.shadowBias=F.bias,W.shadowNormalBias=F.normalBias,W.shadowRadius=F.radius,W.shadowMapSize=F.mapSize,t.directionalShadow[p]=W,t.directionalShadowMap[p]=G,t.directionalShadowMatrix[p]=L.shadow.matrix,M++}t.directional[p]=I,p++}else if(L.isSpotLight){const I=i.get(L);if(I.position.setFromMatrixPosition(L.matrixWorld),I.color.copy(ee).multiplyScalar(Z*C),I.distance=P,I.coneCos=Math.cos(L.angle),I.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),I.decay=L.decay,L.castShadow){const F=L.shadow,W=a.get(L);W.shadowBias=F.bias,W.shadowNormalBias=F.normalBias,W.shadowRadius=F.radius,W.shadowMapSize=F.mapSize,t.spotShadow[b]=W,t.spotShadowMap[b]=G,t.spotShadowMatrix[b]=L.shadow.matrix,x++}t.spot[b]=I,b++}else if(L.isRectAreaLight){const I=i.get(L);I.color.copy(ee).multiplyScalar(Z),I.halfWidth.set(L.width*.5,0,0),I.halfHeight.set(0,L.height*.5,0),t.rectArea[_]=I,_++}else if(L.isPointLight){const I=i.get(L);if(I.color.copy(L.color).multiplyScalar(L.intensity*C),I.distance=L.distance,I.decay=L.decay,L.castShadow){const F=L.shadow,W=a.get(L);W.shadowBias=F.bias,W.shadowNormalBias=F.normalBias,W.shadowRadius=F.radius,W.shadowMapSize=F.mapSize,W.shadowCameraNear=F.camera.near,W.shadowCameraFar=F.camera.far,t.pointShadow[h]=W,t.pointShadowMap[h]=G,t.pointShadowMatrix[h]=L.shadow.matrix,y++}t.point[h]=I,h++}else if(L.isHemisphereLight){const I=i.get(L);I.skyColor.copy(L.color).multiplyScalar(Z*C),I.groundColor.copy(L.groundColor).multiplyScalar(Z*C),t.hemi[k]=I,k++}}_>0&&(e.isWebGL2||o.has("OES_texture_float_linear")===!0?(t.rectAreaLTC1=se.LTC_FLOAT_1,t.rectAreaLTC2=se.LTC_FLOAT_2):o.has("OES_texture_half_float_linear")===!0?(t.rectAreaLTC1=se.LTC_HALF_1,t.rectAreaLTC2=se.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),t.ambient[0]=u,t.ambient[1]=d,t.ambient[2]=g;const v=t.hash;(v.directionalLength!==p||v.pointLength!==h||v.spotLength!==b||v.rectAreaLength!==_||v.hemiLength!==k||v.numDirectionalShadows!==M||v.numPointShadows!==y||v.numSpotShadows!==x)&&(t.directional.length=p,t.spot.length=b,t.rectArea.length=_,t.point.length=h,t.hemi.length=k,t.directionalShadow.length=M,t.directionalShadowMap.length=M,t.pointShadow.length=y,t.pointShadowMap.length=y,t.spotShadow.length=x,t.spotShadowMap.length=x,t.directionalShadowMatrix.length=M,t.pointShadowMatrix.length=y,t.spotShadowMatrix.length=x,v.directionalLength=p,v.pointLength=h,v.spotLength=b,v.rectAreaLength=_,v.hemiLength=k,v.numDirectionalShadows=M,v.numPointShadows=y,v.numSpotShadows=x,t.version=Lv++)}function c(f,m){let u=0,d=0,g=0,p=0,h=0;const b=m.matrixWorldInverse;for(let _=0,k=f.length;_<k;_++){const M=f[_];if(M.isDirectionalLight){const y=t.directional[u];y.direction.setFromMatrixPosition(M.matrixWorld),n.setFromMatrixPosition(M.target.matrixWorld),y.direction.sub(n),y.direction.transformDirection(b),u++}else if(M.isSpotLight){const y=t.spot[g];y.position.setFromMatrixPosition(M.matrixWorld),y.position.applyMatrix4(b),y.direction.setFromMatrixPosition(M.matrixWorld),n.setFromMatrixPosition(M.target.matrixWorld),y.direction.sub(n),y.direction.transformDirection(b),g++}else if(M.isRectAreaLight){const y=t.rectArea[p];y.position.setFromMatrixPosition(M.matrixWorld),y.position.applyMatrix4(b),r.identity(),s.copy(M.matrixWorld),s.premultiply(b),r.extractRotation(s),y.halfWidth.set(M.width*.5,0,0),y.halfHeight.set(0,M.height*.5,0),y.halfWidth.applyMatrix4(r),y.halfHeight.applyMatrix4(r),p++}else if(M.isPointLight){const y=t.point[d];y.position.setFromMatrixPosition(M.matrixWorld),y.position.applyMatrix4(b),d++}else if(M.isHemisphereLight){const y=t.hemi[h];y.direction.setFromMatrixPosition(M.matrixWorld),y.direction.transformDirection(b),h++}}}return{setup:l,setupView:c,state:t}}function cf(o,e){const i=new Iv(o,e),a=[],t=[];function n(){a.length=0,t.length=0}function s(m){a.push(m)}function r(m){t.push(m)}function l(m){i.setup(a,m)}function c(m){i.setupView(a,m)}return{init:n,state:{lightsArray:a,shadowsArray:t,lights:i},setupLights:l,setupLightsView:c,pushLight:s,pushShadow:r}}function Nv(o,e){let i=new WeakMap;function a(n,s=0){let r;return i.has(n)===!1?(r=new cf(o,e),i.set(n,[r])):s>=i.get(n).length?(r=new cf(o,e),i.get(n).push(r)):r=i.get(n)[s],r}function t(){i=new WeakMap}return{get:a,dispose:t}}class _c extends mi{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Qd,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}_c.prototype.isMeshDepthMaterial=!0;class Sc extends mi{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new T,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Sc.prototype.isMeshDistanceMaterial=!0;const Bv=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Dv=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function hm(o,e,i){let a=new Ps;const t=new ie,n=new ie,s=new je,r=new _c({depthPacking:ep}),l=new Sc,c={},f=i.maxTextureSize,m={0:$i,1:no,2:vn},u=new Ki({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ie},radius:{value:4}},vertexShader:Bv,fragmentShader:Dv}),d=u.clone();d.defines.HORIZONTAL_PASS=1;const g=new Xe;g.setAttribute("position",new fi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new Mi(g,u),h=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Xf,this.render=function(M,y,x){if(h.enabled===!1||h.autoUpdate===!1&&h.needsUpdate===!1||M.length===0)return;const C=o.getRenderTarget(),v=o.getActiveCubeFace(),A=o.getActiveMipmapLevel(),z=o.state;z.setBlending(Xa),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let L=0,ee=M.length;L<ee;L++){const Z=M[L],P=Z.shadow;if(P===void 0){console.warn("THREE.WebGLShadowMap:",Z,"has no shadow.");continue}if(P.autoUpdate===!1&&P.needsUpdate===!1)continue;t.copy(P.mapSize);const G=P.getFrameExtents();if(t.multiply(G),n.copy(P.mapSize),(t.x>f||t.y>f)&&(t.x>f&&(n.x=Math.floor(f/G.x),t.x=n.x*G.x,P.mapSize.x=n.x),t.y>f&&(n.y=Math.floor(f/G.y),t.y=n.y*G.y,P.mapSize.y=n.y)),P.map===null&&!P.isPointLightShadow&&this.type===Jn&&(P.map=new Hi(t.x,t.y),P.map.texture.name=Z.name+".shadowMap",P.mapPass=new Hi(t.x,t.y),P.camera.updateProjectionMatrix()),P.map===null){const F={minFilter:pi,magFilter:pi,format:sa};P.map=new Hi(t.x,t.y,F),P.map.texture.name=Z.name+".shadowMap",P.camera.updateProjectionMatrix()}o.setRenderTarget(P.map),o.clear();const I=P.getViewportCount();for(let F=0;F<I;F++){const W=P.getViewport(F);s.set(n.x*W.x,n.y*W.y,n.x*W.z,n.y*W.w),z.viewport(s),P.updateMatrices(Z,F),a=P.getFrustum(),k(y,x,P.camera,Z,this.type)}!P.isPointLightShadow&&this.type===Jn&&b(P,x),P.needsUpdate=!1}h.needsUpdate=!1,o.setRenderTarget(C,v,A)};function b(M,y){const x=e.update(p);u.defines.VSM_SAMPLES!==M.blurSamples&&(u.defines.VSM_SAMPLES=M.blurSamples,d.defines.VSM_SAMPLES=M.blurSamples,u.needsUpdate=!0,d.needsUpdate=!0),u.uniforms.shadow_pass.value=M.map.texture,u.uniforms.resolution.value=M.mapSize,u.uniforms.radius.value=M.radius,o.setRenderTarget(M.mapPass),o.clear(),o.renderBufferDirect(y,null,x,u,p,null),d.uniforms.shadow_pass.value=M.mapPass.texture,d.uniforms.resolution.value=M.mapSize,d.uniforms.radius.value=M.radius,o.setRenderTarget(M.map),o.clear(),o.renderBufferDirect(y,null,x,d,p,null)}function _(M,y,x,C,v,A){let z=null;const L=x.isPointLight===!0?M.customDistanceMaterial:M.customDepthMaterial;if(L!==void 0?z=L:z=x.isPointLight===!0?l:r,o.localClippingEnabled&&y.clipShadows===!0&&y.clippingPlanes.length!==0||y.displacementMap&&y.displacementScale!==0||y.alphaMap&&y.alphaTest>0){const ee=z.uuid,Z=y.uuid;let P=c[ee];P===void 0&&(P={},c[ee]=P);let G=P[Z];G===void 0&&(G=z.clone(),P[Z]=G),z=G}return z.visible=y.visible,z.wireframe=y.wireframe,A===Jn?z.side=y.shadowSide!==null?y.shadowSide:y.side:z.side=y.shadowSide!==null?y.shadowSide:m[y.side],z.alphaMap=y.alphaMap,z.alphaTest=y.alphaTest,z.clipShadows=y.clipShadows,z.clippingPlanes=y.clippingPlanes,z.clipIntersection=y.clipIntersection,z.displacementMap=y.displacementMap,z.displacementScale=y.displacementScale,z.displacementBias=y.displacementBias,z.wireframeLinewidth=y.wireframeLinewidth,z.linewidth=y.linewidth,x.isPointLight===!0&&z.isMeshDistanceMaterial===!0&&(z.referencePosition.setFromMatrixPosition(x.matrixWorld),z.nearDistance=C,z.farDistance=v),z}function k(M,y,x,C,v){if(M.visible===!1)return;if(M.layers.test(y.layers)&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&v===Jn)&&(!M.frustumCulled||a.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,M.matrixWorld);const L=e.update(M),ee=M.material;if(Array.isArray(ee)){const Z=L.groups;for(let P=0,G=Z.length;P<G;P++){const I=Z[P],F=ee[I.materialIndex];if(F&&F.visible){const W=_(M,F,C,x.near,x.far,v);o.renderBufferDirect(x,null,L,W,M,I)}}}else if(ee.visible){const Z=_(M,ee,C,x.near,x.far,v);o.renderBufferDirect(x,null,L,Z,M,null)}}const z=M.children;for(let L=0,ee=z.length;L<ee;L++)k(z[L],y,x,C,v)}}function Gv(o,e,i){const a=i.isWebGL2;function t(){let E=!1;const re=new je;let oe=null;const ke=new je(0,0,0,0);return{setMask:function(ue){oe!==ue&&!E&&(o.colorMask(ue,ue,ue,ue),oe=ue)},setLocked:function(ue){E=ue},setClear:function(ue,Se,te,we,Fe){Fe===!0&&(ue*=we,Se*=we,te*=we),re.set(ue,Se,te,we),ke.equals(re)===!1&&(o.clearColor(ue,Se,te,we),ke.copy(re))},reset:function(){E=!1,oe=null,ke.set(-1,0,0,0)}}}function n(){let E=!1,re=null,oe=null,ke=null;return{setTest:function(ue){ue?ge(2929):K(2929)},setMask:function(ue){re!==ue&&!E&&(o.depthMask(ue),re=ue)},setFunc:function(ue){if(oe!==ue){if(ue)switch(ue){case yd:o.depthFunc(512);break;case _d:o.depthFunc(519);break;case Sd:o.depthFunc(513);break;case Ur:o.depthFunc(515);break;case Md:o.depthFunc(514);break;case kd:o.depthFunc(518);break;case wd:o.depthFunc(516);break;case xd:o.depthFunc(517);break;default:o.depthFunc(515)}else o.depthFunc(515);oe=ue}},setLocked:function(ue){E=ue},setClear:function(ue){ke!==ue&&(o.clearDepth(ue),ke=ue)},reset:function(){E=!1,re=null,oe=null,ke=null}}}function s(){let E=!1,re=null,oe=null,ke=null,ue=null,Se=null,te=null,we=null,Fe=null;return{setTest:function(Be){E||(Be?ge(2960):K(2960))},setMask:function(Be){re!==Be&&!E&&(o.stencilMask(Be),re=Be)},setFunc:function(Be,fa,ma){(oe!==Be||ke!==fa||ue!==ma)&&(o.stencilFunc(Be,fa,ma),oe=Be,ke=fa,ue=ma)},setOp:function(Be,fa,ma){(Se!==Be||te!==fa||we!==ma)&&(o.stencilOp(Be,fa,ma),Se=Be,te=fa,we=ma)},setLocked:function(Be){E=Be},setClear:function(Be){Fe!==Be&&(o.clearStencil(Be),Fe=Be)},reset:function(){E=!1,re=null,oe=null,ke=null,ue=null,Se=null,te=null,we=null,Fe=null}}}const r=new t,l=new n,c=new s;let f={},m={},u=new WeakMap,d=[],g=null,p=!1,h=null,b=null,_=null,k=null,M=null,y=null,x=null,C=!1,v=null,A=null,z=null,L=null,ee=null;const Z=o.getParameter(35661);let P=!1,G=0;const I=o.getParameter(7938);I.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL (\d)/.exec(I)[1]),P=G>=1):I.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),P=G>=2);let F=null,W={};const D=o.getParameter(3088),H=o.getParameter(2978),Y=new je().fromArray(D),X=new je().fromArray(H);function $(E,re,oe){const ke=new Uint8Array(4),ue=o.createTexture();o.bindTexture(E,ue),o.texParameteri(E,10241,9728),o.texParameteri(E,10240,9728);for(let Se=0;Se<oe;Se++)o.texImage2D(re+Se,0,6408,1,1,0,6408,5121,ke);return ue}const fe={};fe[3553]=$(3553,3553,1),fe[34067]=$(34067,34069,6),r.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ge(2929),l.setFunc(Ur),ae(!1),de(Qc),ge(2884),J(Xa);function ge(E){f[E]!==!0&&(o.enable(E),f[E]=!0)}function K(E){f[E]!==!1&&(o.disable(E),f[E]=!1)}function Ue(E,re){return m[E]!==re?(o.bindFramebuffer(E,re),m[E]=re,a&&(E===36009&&(m[36160]=re),E===36160&&(m[36009]=re)),!0):!1}function Me(E,re){let oe=d,ke=!1;if(E)if(oe=u.get(re),oe===void 0&&(oe=[],u.set(re,oe)),E.isWebGLMultipleRenderTargets){const ue=E.texture;if(oe.length!==ue.length||oe[0]!==36064){for(let Se=0,te=ue.length;Se<te;Se++)oe[Se]=36064+Se;oe.length=ue.length,ke=!0}}else oe[0]!==36064&&(oe[0]=36064,ke=!0);else oe[0]!==1029&&(oe[0]=1029,ke=!0);ke&&(i.isWebGL2?o.drawBuffers(oe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(oe))}function Ce(E){return g!==E?(o.useProgram(E),g=E,!0):!1}const ne={[on]:32774,[cd]:32778,[ld]:32779};if(a)ne[al]=32775,ne[tl]=32776;else{const E=e.get("EXT_blend_minmax");E!==null&&(ne[al]=E.MIN_EXT,ne[tl]=E.MAX_EXT)}const Ie={[fd]:0,[md]:1,[ud]:768,[$f]:770,[vd]:776,[gd]:774,[pd]:772,[dd]:769,[Qf]:771,[bd]:775,[hd]:773};function J(E,re,oe,ke,ue,Se,te,we){if(E===Xa){p===!0&&(K(3042),p=!1);return}if(p===!1&&(ge(3042),p=!0),E!==rd){if(E!==h||we!==C){if((b!==on||M!==on)&&(o.blendEquation(32774),b=on,M=on),we)switch(E){case dn:o.blendFuncSeparate(1,771,1,771);break;case Gr:o.blendFunc(1,1);break;case el:o.blendFuncSeparate(0,769,0,1);break;case il:o.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",E);break}else switch(E){case dn:o.blendFuncSeparate(770,771,1,771);break;case Gr:o.blendFunc(770,1);break;case el:o.blendFuncSeparate(0,769,0,1);break;case il:o.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",E);break}_=null,k=null,y=null,x=null,h=E,C=we}return}ue=ue||re,Se=Se||oe,te=te||ke,(re!==b||ue!==M)&&(o.blendEquationSeparate(ne[re],ne[ue]),b=re,M=ue),(oe!==_||ke!==k||Se!==y||te!==x)&&(o.blendFuncSeparate(Ie[oe],Ie[ke],Ie[Se],Ie[te]),_=oe,k=ke,y=Se,x=te),h=E,C=null}function q(E,re){E.side===vn?K(2884):ge(2884);let oe=E.side===$i;re&&(oe=!oe),ae(oe),E.blending===dn&&E.transparent===!1?J(Xa):J(E.blending,E.blendEquation,E.blendSrc,E.blendDst,E.blendEquationAlpha,E.blendSrcAlpha,E.blendDstAlpha,E.premultipliedAlpha),l.setFunc(E.depthFunc),l.setTest(E.depthTest),l.setMask(E.depthWrite),r.setMask(E.colorWrite);const ke=E.stencilWrite;c.setTest(ke),ke&&(c.setMask(E.stencilWriteMask),c.setFunc(E.stencilFunc,E.stencilRef,E.stencilFuncMask),c.setOp(E.stencilFail,E.stencilZFail,E.stencilZPass)),Ae(E.polygonOffset,E.polygonOffsetFactor,E.polygonOffsetUnits),E.alphaToCoverage===!0?ge(32926):K(32926)}function ae(E){v!==E&&(E?o.frontFace(2304):o.frontFace(2305),v=E)}function de(E){E!==nd?(ge(2884),E!==A&&(E===Qc?o.cullFace(1029):E===od?o.cullFace(1028):o.cullFace(1032))):K(2884),A=E}function le(E){E!==z&&(P&&o.lineWidth(E),z=E)}function Ae(E,re,oe){E?(ge(32823),(L!==re||ee!==oe)&&(o.polygonOffset(re,oe),L=re,ee=oe)):K(32823)}function _e(E){E?ge(3089):K(3089)}function ve(E){E===void 0&&(E=33984+Z-1),F!==E&&(o.activeTexture(E),F=E)}function Ye(E,re){F===null&&ve();let oe=W[F];oe===void 0&&(oe={type:void 0,texture:void 0},W[F]=oe),(oe.type!==E||oe.texture!==re)&&(o.bindTexture(E,re||fe[E]),oe.type=E,oe.texture=re)}function qe(){const E=W[F];E!==void 0&&E.type!==void 0&&(o.bindTexture(E.type,null),E.type=void 0,E.texture=void 0)}function R(){try{o.compressedTexImage2D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function S(){try{o.texSubImage2D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function O(){try{o.texSubImage3D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function Q(){try{o.compressedTexSubImage2D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function ce(){try{o.texStorage2D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function me(){try{o.texStorage3D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function ye(){try{o.texImage2D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function V(){try{o.texImage3D.apply(o,arguments)}catch(E){console.error("THREE.WebGLState:",E)}}function Te(E){Y.equals(E)===!1&&(o.scissor(E.x,E.y,E.z,E.w),Y.copy(E))}function Pe(E){X.equals(E)===!1&&(o.viewport(E.x,E.y,E.z,E.w),X.copy(E))}function pe(){o.disable(3042),o.disable(2884),o.disable(2929),o.disable(32823),o.disable(3089),o.disable(2960),o.disable(32926),o.blendEquation(32774),o.blendFunc(1,0),o.blendFuncSeparate(1,0,1,0),o.colorMask(!0,!0,!0,!0),o.clearColor(0,0,0,0),o.depthMask(!0),o.depthFunc(513),o.clearDepth(1),o.stencilMask(4294967295),o.stencilFunc(519,0,4294967295),o.stencilOp(7680,7680,7680),o.clearStencil(0),o.cullFace(1029),o.frontFace(2305),o.polygonOffset(0,0),o.activeTexture(33984),o.bindFramebuffer(36160,null),a===!0&&(o.bindFramebuffer(36009,null),o.bindFramebuffer(36008,null)),o.useProgram(null),o.lineWidth(1),o.scissor(0,0,o.canvas.width,o.canvas.height),o.viewport(0,0,o.canvas.width,o.canvas.height),f={},F=null,W={},m={},u=new WeakMap,d=[],g=null,p=!1,h=null,b=null,_=null,k=null,M=null,y=null,x=null,C=!1,v=null,A=null,z=null,L=null,ee=null,Y.set(0,0,o.canvas.width,o.canvas.height),X.set(0,0,o.canvas.width,o.canvas.height),r.reset(),l.reset(),c.reset()}return{buffers:{color:r,depth:l,stencil:c},enable:ge,disable:K,bindFramebuffer:Ue,drawBuffers:Me,useProgram:Ce,setBlending:J,setMaterial:q,setFlipSided:ae,setCullFace:de,setLineWidth:le,setPolygonOffset:Ae,setScissorTest:_e,activeTexture:ve,bindTexture:Ye,unbindTexture:qe,compressedTexImage2D:R,texImage2D:ye,texImage3D:V,texStorage2D:ce,texStorage3D:me,texSubImage2D:S,texSubImage3D:O,compressedTexSubImage2D:Q,scissor:Te,viewport:Pe,reset:pe}}function Uv(o,e,i,a,t,n,s){const r=t.isWebGL2,l=t.maxTextures,c=t.maxCubemapSize,f=t.maxTextureSize,m=t.maxSamples,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,d=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let p;const h=new WeakMap;let b=!1;try{b=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(R,S){return b?new OffscreenCanvas(R,S):co("canvas")}function k(R,S,O,Q){let ce=1;if((R.width>Q||R.height>Q)&&(ce=Q/Math.max(R.width,R.height)),ce<1||S===!0)if(typeof HTMLImageElement!="undefined"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&R instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&R instanceof ImageBitmap){const me=S?jr:Math.floor,ye=me(ce*R.width),V=me(ce*R.height);p===void 0&&(p=_(ye,V));const Te=O?_(ye,V):p;return Te.width=ye,Te.height=V,Te.getContext("2d").drawImage(R,0,0,ye,V),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+ye+"x"+V+")."),Te}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function M(R){return Tl(R.width)&&Tl(R.height)}function y(R){return r?!1:R.wrapS!==oa||R.wrapT!==oa||R.minFilter!==pi&&R.minFilter!==zi}function x(R,S){return R.generateMipmaps&&S&&R.minFilter!==pi&&R.minFilter!==zi}function C(R){o.generateMipmap(R)}function v(R,S,O,Q,ce=!1){if(r===!1)return S;if(R!==null){if(o[R]!==void 0)return o[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let me=S;return S===6403&&(O===5126&&(me=33326),O===5131&&(me=33325),O===5121&&(me=33321)),S===33319&&(O===5126&&(me=33328),O===5131&&(me=33327),O===5121&&(me=33323)),S===6408&&(O===5126&&(me=34836),O===5131&&(me=34842),O===5121&&(me=Q===$e&&ce===!1?35907:32856),O===32819&&(me=32854),O===32820&&(me=32855)),(me===33325||me===33326||me===33327||me===33328||me===34842||me===34836)&&e.get("EXT_color_buffer_float"),me}function A(R,S,O){return x(R,O)===!0||R.isFramebufferTexture&&R.minFilter!==pi&&R.minFilter!==zi?Math.log2(Math.max(S.width,S.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?S.mipmaps.length:1}function z(R){return R===pi||R===nl||R===ol?9728:9729}function L(R){const S=R.target;S.removeEventListener("dispose",L),Z(S),S.isVideoTexture&&g.delete(S)}function ee(R){const S=R.target;S.removeEventListener("dispose",ee),G(S)}function Z(R){const S=a.get(R);if(S.__webglInit===void 0)return;const O=R.source,Q=h.get(O);if(Q){const ce=Q[S.__cacheKey];ce.usedTimes--,ce.usedTimes===0&&P(R),Object.keys(Q).length===0&&h.delete(O)}a.remove(R)}function P(R){const S=a.get(R);o.deleteTexture(S.__webglTexture);const O=R.source,Q=h.get(O);delete Q[S.__cacheKey],s.memory.textures--}function G(R){const S=R.texture,O=a.get(R),Q=a.get(S);if(Q.__webglTexture!==void 0&&(o.deleteTexture(Q.__webglTexture),s.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let ce=0;ce<6;ce++)o.deleteFramebuffer(O.__webglFramebuffer[ce]),O.__webglDepthbuffer&&o.deleteRenderbuffer(O.__webglDepthbuffer[ce]);else o.deleteFramebuffer(O.__webglFramebuffer),O.__webglDepthbuffer&&o.deleteRenderbuffer(O.__webglDepthbuffer),O.__webglMultisampledFramebuffer&&o.deleteFramebuffer(O.__webglMultisampledFramebuffer),O.__webglColorRenderbuffer&&o.deleteRenderbuffer(O.__webglColorRenderbuffer),O.__webglDepthRenderbuffer&&o.deleteRenderbuffer(O.__webglDepthRenderbuffer);if(R.isWebGLMultipleRenderTargets)for(let ce=0,me=S.length;ce<me;ce++){const ye=a.get(S[ce]);ye.__webglTexture&&(o.deleteTexture(ye.__webglTexture),s.memory.textures--),a.remove(S[ce])}a.remove(S),a.remove(R)}let I=0;function F(){I=0}function W(){const R=I;return R>=l&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+l),I+=1,R}function D(R){const S=[];return S.push(R.wrapS),S.push(R.wrapT),S.push(R.magFilter),S.push(R.minFilter),S.push(R.anisotropy),S.push(R.internalFormat),S.push(R.format),S.push(R.type),S.push(R.generateMipmaps),S.push(R.premultiplyAlpha),S.push(R.flipY),S.push(R.unpackAlignment),S.push(R.encoding),S.join()}function H(R,S){const O=a.get(R);if(R.isVideoTexture&&Ye(R),R.isRenderTargetTexture===!1&&R.version>0&&O.__version!==R.version){const Q=R.image;if(Q===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Me(O,R,S);return}}i.activeTexture(33984+S),i.bindTexture(3553,O.__webglTexture)}function Y(R,S){const O=a.get(R);if(R.version>0&&O.__version!==R.version){Me(O,R,S);return}i.activeTexture(33984+S),i.bindTexture(35866,O.__webglTexture)}function X(R,S){const O=a.get(R);if(R.version>0&&O.__version!==R.version){Me(O,R,S);return}i.activeTexture(33984+S),i.bindTexture(32879,O.__webglTexture)}function $(R,S){const O=a.get(R);if(R.version>0&&O.__version!==R.version){Ce(O,R,S);return}i.activeTexture(33984+S),i.bindTexture(34067,O.__webglTexture)}const fe={[Vr]:10497,[oa]:33071,[Hr]:33648},ge={[pi]:9728,[nl]:9984,[ol]:9986,[zi]:9729,[zd]:9985,[Ts]:9987};function K(R,S,O){if(O?(o.texParameteri(R,10242,fe[S.wrapS]),o.texParameteri(R,10243,fe[S.wrapT]),(R===32879||R===35866)&&o.texParameteri(R,32882,fe[S.wrapR]),o.texParameteri(R,10240,ge[S.magFilter]),o.texParameteri(R,10241,ge[S.minFilter])):(o.texParameteri(R,10242,33071),o.texParameteri(R,10243,33071),(R===32879||R===35866)&&o.texParameteri(R,32882,33071),(S.wrapS!==oa||S.wrapT!==oa)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),o.texParameteri(R,10240,z(S.magFilter)),o.texParameteri(R,10241,z(S.minFilter)),S.minFilter!==pi&&S.minFilter!==zi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const Q=e.get("EXT_texture_filter_anisotropic");if(S.type===_t&&e.has("OES_texture_float_linear")===!1||r===!1&&S.type===so&&e.has("OES_texture_half_float_linear")===!1)return;(S.anisotropy>1||a.get(S).__currentAnisotropy)&&(o.texParameterf(R,Q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,t.getMaxAnisotropy())),a.get(S).__currentAnisotropy=S.anisotropy)}}function Ue(R,S){let O=!1;R.__webglInit===void 0&&(R.__webglInit=!0,S.addEventListener("dispose",L));const Q=S.source;let ce=h.get(Q);ce===void 0&&(ce={},h.set(Q,ce));const me=D(S);if(me!==R.__cacheKey){ce[me]===void 0&&(ce[me]={texture:o.createTexture(),usedTimes:0},s.memory.textures++,O=!0),ce[me].usedTimes++;const ye=ce[R.__cacheKey];ye!==void 0&&(ce[R.__cacheKey].usedTimes--,ye.usedTimes===0&&P(S)),R.__cacheKey=me,R.__webglTexture=ce[me].texture}return O}function Me(R,S,O){let Q=3553;S.isDataArrayTexture&&(Q=35866),S.isData3DTexture&&(Q=32879);const ce=Ue(R,S),me=S.source;if(i.activeTexture(33984+O),i.bindTexture(Q,R.__webglTexture),me.version!==me.__currentVersion||ce===!0){o.pixelStorei(37440,S.flipY),o.pixelStorei(37441,S.premultiplyAlpha),o.pixelStorei(3317,S.unpackAlignment),o.pixelStorei(37443,0);const ye=y(S)&&M(S.image)===!1;let V=k(S.image,ye,!1,f);V=qe(S,V);const Te=M(V)||r,Pe=n.convert(S.format,S.encoding);let pe=n.convert(S.type),E=v(S.internalFormat,Pe,pe,S.encoding,S.isVideoTexture);K(Q,S,Te);let re;const oe=S.mipmaps,ke=r&&S.isVideoTexture!==!0,ue=R.__version===void 0||ce===!0,Se=A(S,V,Te);if(S.isDepthTexture)E=6402,r?S.type===_t?E=36012:S.type===cs?E=33190:S.type===pn?E=35056:E=33189:S.type===_t&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===kt&&E===6402&&S.type!==oo&&S.type!==cs&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=oo,pe=n.convert(S.type)),S.format===Sn&&E===6402&&(E=34041,S.type!==pn&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=pn,pe=n.convert(S.type))),ue&&(ke?i.texStorage2D(3553,1,E,V.width,V.height):i.texImage2D(3553,0,E,V.width,V.height,0,Pe,pe,null));else if(S.isDataTexture)if(oe.length>0&&Te){ke&&ue&&i.texStorage2D(3553,Se,E,oe[0].width,oe[0].height);for(let te=0,we=oe.length;te<we;te++)re=oe[te],ke?i.texSubImage2D(3553,te,0,0,re.width,re.height,Pe,pe,re.data):i.texImage2D(3553,te,E,re.width,re.height,0,Pe,pe,re.data);S.generateMipmaps=!1}else ke?(ue&&i.texStorage2D(3553,Se,E,V.width,V.height),i.texSubImage2D(3553,0,0,0,V.width,V.height,Pe,pe,V.data)):i.texImage2D(3553,0,E,V.width,V.height,0,Pe,pe,V.data);else if(S.isCompressedTexture){ke&&ue&&i.texStorage2D(3553,Se,E,oe[0].width,oe[0].height);for(let te=0,we=oe.length;te<we;te++)re=oe[te],S.format!==sa?Pe!==null?ke?i.compressedTexSubImage2D(3553,te,0,0,re.width,re.height,Pe,re.data):i.compressedTexImage2D(3553,te,E,re.width,re.height,0,re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ke?i.texSubImage2D(3553,te,0,0,re.width,re.height,Pe,pe,re.data):i.texImage2D(3553,te,E,re.width,re.height,0,Pe,pe,re.data)}else if(S.isDataArrayTexture)ke?(ue&&i.texStorage3D(35866,Se,E,V.width,V.height,V.depth),i.texSubImage3D(35866,0,0,0,0,V.width,V.height,V.depth,Pe,pe,V.data)):i.texImage3D(35866,0,E,V.width,V.height,V.depth,0,Pe,pe,V.data);else if(S.isData3DTexture)ke?(ue&&i.texStorage3D(32879,Se,E,V.width,V.height,V.depth),i.texSubImage3D(32879,0,0,0,0,V.width,V.height,V.depth,Pe,pe,V.data)):i.texImage3D(32879,0,E,V.width,V.height,V.depth,0,Pe,pe,V.data);else if(S.isFramebufferTexture){if(ue)if(ke)i.texStorage2D(3553,Se,E,V.width,V.height);else{let te=V.width,we=V.height;for(let Fe=0;Fe<Se;Fe++)i.texImage2D(3553,Fe,E,te,we,0,Pe,pe,null),te>>=1,we>>=1}}else if(oe.length>0&&Te){ke&&ue&&i.texStorage2D(3553,Se,E,oe[0].width,oe[0].height);for(let te=0,we=oe.length;te<we;te++)re=oe[te],ke?i.texSubImage2D(3553,te,0,0,Pe,pe,re):i.texImage2D(3553,te,E,Pe,pe,re);S.generateMipmaps=!1}else ke?(ue&&i.texStorage2D(3553,Se,E,V.width,V.height),i.texSubImage2D(3553,0,0,0,Pe,pe,V)):i.texImage2D(3553,0,E,Pe,pe,V);x(S,Te)&&C(Q),me.__currentVersion=me.version,S.onUpdate&&S.onUpdate(S)}R.__version=S.version}function Ce(R,S,O){if(S.image.length!==6)return;const Q=Ue(R,S),ce=S.source;if(i.activeTexture(33984+O),i.bindTexture(34067,R.__webglTexture),ce.version!==ce.__currentVersion||Q===!0){o.pixelStorei(37440,S.flipY),o.pixelStorei(37441,S.premultiplyAlpha),o.pixelStorei(3317,S.unpackAlignment),o.pixelStorei(37443,0);const me=S.isCompressedTexture||S.image[0].isCompressedTexture,ye=S.image[0]&&S.image[0].isDataTexture,V=[];for(let te=0;te<6;te++)!me&&!ye?V[te]=k(S.image[te],!1,!0,c):V[te]=ye?S.image[te].image:S.image[te],V[te]=qe(S,V[te]);const Te=V[0],Pe=M(Te)||r,pe=n.convert(S.format,S.encoding),E=n.convert(S.type),re=v(S.internalFormat,pe,E,S.encoding),oe=r&&S.isVideoTexture!==!0,ke=R.__version===void 0;let ue=A(S,Te,Pe);K(34067,S,Pe);let Se;if(me){oe&&ke&&i.texStorage2D(34067,ue,re,Te.width,Te.height);for(let te=0;te<6;te++){Se=V[te].mipmaps;for(let we=0;we<Se.length;we++){const Fe=Se[we];S.format!==sa?pe!==null?oe?i.compressedTexSubImage2D(34069+te,we,0,0,Fe.width,Fe.height,pe,Fe.data):i.compressedTexImage2D(34069+te,we,re,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):oe?i.texSubImage2D(34069+te,we,0,0,Fe.width,Fe.height,pe,E,Fe.data):i.texImage2D(34069+te,we,re,Fe.width,Fe.height,0,pe,E,Fe.data)}}}else{Se=S.mipmaps,oe&&ke&&(Se.length>0&&ue++,i.texStorage2D(34067,ue,re,V[0].width,V[0].height));for(let te=0;te<6;te++)if(ye){oe?i.texSubImage2D(34069+te,0,0,0,V[te].width,V[te].height,pe,E,V[te].data):i.texImage2D(34069+te,0,re,V[te].width,V[te].height,0,pe,E,V[te].data);for(let we=0;we<Se.length;we++){const Be=Se[we].image[te].image;oe?i.texSubImage2D(34069+te,we+1,0,0,Be.width,Be.height,pe,E,Be.data):i.texImage2D(34069+te,we+1,re,Be.width,Be.height,0,pe,E,Be.data)}}else{oe?i.texSubImage2D(34069+te,0,0,0,pe,E,V[te]):i.texImage2D(34069+te,0,re,pe,E,V[te]);for(let we=0;we<Se.length;we++){const Fe=Se[we];oe?i.texSubImage2D(34069+te,we+1,0,0,pe,E,Fe.image[te]):i.texImage2D(34069+te,we+1,re,pe,E,Fe.image[te])}}}x(S,Pe)&&C(34067),ce.__currentVersion=ce.version,S.onUpdate&&S.onUpdate(S)}R.__version=S.version}function ne(R,S,O,Q,ce){const me=n.convert(O.format,O.encoding),ye=n.convert(O.type),V=v(O.internalFormat,me,ye,O.encoding);a.get(S).__hasExternalTextures||(ce===32879||ce===35866?i.texImage3D(ce,0,V,S.width,S.height,S.depth,0,me,ye,null):i.texImage2D(ce,0,V,S.width,S.height,0,me,ye,null)),i.bindFramebuffer(36160,R),ve(S)?u.framebufferTexture2DMultisampleEXT(36160,Q,ce,a.get(O).__webglTexture,0,_e(S)):o.framebufferTexture2D(36160,Q,ce,a.get(O).__webglTexture,0),i.bindFramebuffer(36160,null)}function Ie(R,S,O){if(o.bindRenderbuffer(36161,R),S.depthBuffer&&!S.stencilBuffer){let Q=33189;if(O||ve(S)){const ce=S.depthTexture;ce&&ce.isDepthTexture&&(ce.type===_t?Q=36012:ce.type===cs&&(Q=33190));const me=_e(S);ve(S)?u.renderbufferStorageMultisampleEXT(36161,me,Q,S.width,S.height):o.renderbufferStorageMultisample(36161,me,Q,S.width,S.height)}else o.renderbufferStorage(36161,Q,S.width,S.height);o.framebufferRenderbuffer(36160,36096,36161,R)}else if(S.depthBuffer&&S.stencilBuffer){const Q=_e(S);O&&ve(S)===!1?o.renderbufferStorageMultisample(36161,Q,35056,S.width,S.height):ve(S)?u.renderbufferStorageMultisampleEXT(36161,Q,35056,S.width,S.height):o.renderbufferStorage(36161,34041,S.width,S.height),o.framebufferRenderbuffer(36160,33306,36161,R)}else{const Q=S.isWebGLMultipleRenderTargets===!0?S.texture[0]:S.texture,ce=n.convert(Q.format,Q.encoding),me=n.convert(Q.type),ye=v(Q.internalFormat,ce,me,Q.encoding),V=_e(S);O&&ve(S)===!1?o.renderbufferStorageMultisample(36161,V,ye,S.width,S.height):ve(S)?u.renderbufferStorageMultisampleEXT(36161,V,ye,S.width,S.height):o.renderbufferStorage(36161,ye,S.width,S.height)}o.bindRenderbuffer(36161,null)}function J(R,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,R),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!a.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),H(S.depthTexture,0);const Q=a.get(S.depthTexture).__webglTexture,ce=_e(S);if(S.depthTexture.format===kt)ve(S)?u.framebufferTexture2DMultisampleEXT(36160,36096,3553,Q,0,ce):o.framebufferTexture2D(36160,36096,3553,Q,0);else if(S.depthTexture.format===Sn)ve(S)?u.framebufferTexture2DMultisampleEXT(36160,33306,3553,Q,0,ce):o.framebufferTexture2D(36160,33306,3553,Q,0);else throw new Error("Unknown depthTexture format")}function q(R){const S=a.get(R),O=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!S.__autoAllocateDepthBuffer){if(O)throw new Error("target.depthTexture not supported in Cube render targets");J(S.__webglFramebuffer,R)}else if(O){S.__webglDepthbuffer=[];for(let Q=0;Q<6;Q++)i.bindFramebuffer(36160,S.__webglFramebuffer[Q]),S.__webglDepthbuffer[Q]=o.createRenderbuffer(),Ie(S.__webglDepthbuffer[Q],R,!1)}else i.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=o.createRenderbuffer(),Ie(S.__webglDepthbuffer,R,!1);i.bindFramebuffer(36160,null)}function ae(R,S,O){const Q=a.get(R);S!==void 0&&ne(Q.__webglFramebuffer,R,R.texture,36064,3553),O!==void 0&&q(R)}function de(R){const S=R.texture,O=a.get(R),Q=a.get(S);R.addEventListener("dispose",ee),R.isWebGLMultipleRenderTargets!==!0&&(Q.__webglTexture===void 0&&(Q.__webglTexture=o.createTexture()),Q.__version=S.version,s.memory.textures++);const ce=R.isWebGLCubeRenderTarget===!0,me=R.isWebGLMultipleRenderTargets===!0,ye=M(R)||r;if(ce){O.__webglFramebuffer=[];for(let V=0;V<6;V++)O.__webglFramebuffer[V]=o.createFramebuffer()}else if(O.__webglFramebuffer=o.createFramebuffer(),me)if(t.drawBuffers){const V=R.texture;for(let Te=0,Pe=V.length;Te<Pe;Te++){const pe=a.get(V[Te]);pe.__webglTexture===void 0&&(pe.__webglTexture=o.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(r&&R.samples>0&&ve(R)===!1){O.__webglMultisampledFramebuffer=o.createFramebuffer(),O.__webglColorRenderbuffer=o.createRenderbuffer(),o.bindRenderbuffer(36161,O.__webglColorRenderbuffer);const V=n.convert(S.format,S.encoding),Te=n.convert(S.type),Pe=v(S.internalFormat,V,Te,S.encoding),pe=_e(R);o.renderbufferStorageMultisample(36161,pe,Pe,R.width,R.height),i.bindFramebuffer(36160,O.__webglMultisampledFramebuffer),o.framebufferRenderbuffer(36160,36064,36161,O.__webglColorRenderbuffer),o.bindRenderbuffer(36161,null),R.depthBuffer&&(O.__webglDepthRenderbuffer=o.createRenderbuffer(),Ie(O.__webglDepthRenderbuffer,R,!0)),i.bindFramebuffer(36160,null)}if(ce){i.bindTexture(34067,Q.__webglTexture),K(34067,S,ye);for(let V=0;V<6;V++)ne(O.__webglFramebuffer[V],R,S,36064,34069+V);x(S,ye)&&C(34067),i.unbindTexture()}else if(me){const V=R.texture;for(let Te=0,Pe=V.length;Te<Pe;Te++){const pe=V[Te],E=a.get(pe);i.bindTexture(3553,E.__webglTexture),K(3553,pe,ye),ne(O.__webglFramebuffer,R,pe,36064+Te,3553),x(pe,ye)&&C(3553)}i.unbindTexture()}else{let V=3553;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(r?V=R.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(V,Q.__webglTexture),K(V,S,ye),ne(O.__webglFramebuffer,R,S,36064,V),x(S,ye)&&C(V),i.unbindTexture()}R.depthBuffer&&q(R)}function le(R){const S=M(R)||r,O=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let Q=0,ce=O.length;Q<ce;Q++){const me=O[Q];if(x(me,S)){const ye=R.isWebGLCubeRenderTarget?34067:3553,V=a.get(me).__webglTexture;i.bindTexture(ye,V),C(ye),i.unbindTexture()}}}function Ae(R){if(r&&R.samples>0&&ve(R)===!1){const S=R.width,O=R.height;let Q=16384;const ce=[36064],me=R.stencilBuffer?33306:36096;R.depthBuffer&&ce.push(me);const ye=a.get(R),V=ye.__ignoreDepthValues!==void 0?ye.__ignoreDepthValues:!1;V===!1&&(R.depthBuffer&&(Q|=256),R.stencilBuffer&&(Q|=1024)),i.bindFramebuffer(36008,ye.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,ye.__webglFramebuffer),V===!0&&(o.invalidateFramebuffer(36008,[me]),o.invalidateFramebuffer(36009,[me])),o.blitFramebuffer(0,0,S,O,0,0,S,O,Q,9728),d&&o.invalidateFramebuffer(36008,ce),i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,ye.__webglMultisampledFramebuffer)}}function _e(R){return Math.min(m,R.samples)}function ve(R){const S=a.get(R);return r&&R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function Ye(R){const S=s.render.frame;g.get(R)!==S&&(g.set(R,S),R.update())}function qe(R,S){const O=R.encoding,Q=R.format,ce=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===Wr||O!==it&&(O===$e?r===!1?e.has("EXT_sRGB")===!0&&Q===sa?(R.format=Wr,R.minFilter=zi,R.generateMipmaps=!1):S=Lt.sRGBToLinear(S):(Q!==sa||ce!==Ct)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",O)),S}this.allocateTextureUnit=W,this.resetTextureUnits=F,this.setTexture2D=H,this.setTexture2DArray=Y,this.setTexture3D=X,this.setTextureCube=$,this.rebindTextures=ae,this.setupRenderTarget=de,this.updateRenderTargetMipmap=le,this.updateMultisampleRenderTarget=Ae,this.setupDepthRenderbuffer=q,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=ve}function Ov(o,e,i){const a=i.isWebGL2;function t(n,s=null){let r;if(n===Ct)return 5121;if(n===Dd)return 32819;if(n===Gd)return 32820;if(n===Id)return 5120;if(n===Nd)return 5122;if(n===oo)return 5123;if(n===Bd)return 5124;if(n===cs)return 5125;if(n===_t)return 5126;if(n===so)return a?5131:(r=e.get("OES_texture_half_float"),r!==null?r.HALF_FLOAT_OES:null);if(n===Ud)return 6406;if(n===sa)return 6408;if(n===Fd)return 6409;if(n===Vd)return 6410;if(n===kt)return 6402;if(n===Sn)return 34041;if(n===Hd)return 6403;if(n===Od)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===Wr)return r=e.get("EXT_sRGB"),r!==null?r.SRGB_ALPHA_EXT:null;if(n===Wd)return 36244;if(n===Kd)return 33319;if(n===jd)return 33320;if(n===qd)return 36249;if(n===Hs||n===Ws||n===Ks||n===js)if(s===$e)if(r=e.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(n===Hs)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ws)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Ks)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===js)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=e.get("WEBGL_compressed_texture_s3tc"),r!==null){if(n===Hs)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ws)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Ks)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===js)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===sl||n===rl||n===cl||n===ll)if(r=e.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(n===sl)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===rl)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===cl)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===ll)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Zd)return r=e.get("WEBGL_compressed_texture_etc1"),r!==null?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===fl||n===ml)if(r=e.get("WEBGL_compressed_texture_etc"),r!==null){if(n===fl)return s===$e?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(n===ml)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===ul||n===dl||n===pl||n===hl||n===gl||n===bl||n===vl||n===yl||n===_l||n===Sl||n===Ml||n===kl||n===wl||n===xl)if(r=e.get("WEBGL_compressed_texture_astc"),r!==null){if(n===ul)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===dl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===pl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===hl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===gl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===bl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===vl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===yl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===_l)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Sl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Ml)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===kl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===wl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===xl)return s===$e?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Al)if(r=e.get("EXT_texture_compression_bptc"),r!==null){if(n===Al)return s===$e?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return n===pn?a?34042:(r=e.get("WEBGL_depth_texture"),r!==null?r.UNSIGNED_INT_24_8_WEBGL:null):o[n]!==void 0?o[n]:null}return{convert:t}}class gm extends xi{constructor(e=[]){super(),this.cameras=e}}gm.prototype.isArrayCamera=!0;class ln extends We{constructor(){super(),this.type="Group"}}ln.prototype.isGroup=!0;const Fv={type:"move"};class Mr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ln,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ln,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new T,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new T),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ln,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new T,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new T),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,i,a){let t=null,n=null,s=null;const r=this._targetRay,l=this._grip,c=this._hand;if(e&&i.session.visibilityState!=="visible-blurred")if(r!==null&&(t=i.getPose(e.targetRaySpace,a),t!==null&&(r.matrix.fromArray(t.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),t.linearVelocity?(r.hasLinearVelocity=!0,r.linearVelocity.copy(t.linearVelocity)):r.hasLinearVelocity=!1,t.angularVelocity?(r.hasAngularVelocity=!0,r.angularVelocity.copy(t.angularVelocity)):r.hasAngularVelocity=!1,this.dispatchEvent(Fv))),c&&e.hand){s=!0;for(const p of e.hand.values()){const h=i.getJointPose(p,a);if(c.joints[p.jointName]===void 0){const _=new ln;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[p.jointName]=_,c.add(_)}const b=c.joints[p.jointName];h!==null&&(b.matrix.fromArray(h.transform.matrix),b.matrix.decompose(b.position,b.rotation,b.scale),b.jointRadius=h.radius),b.visible=h!==null}const f=c.joints["index-finger-tip"],m=c.joints["thumb-tip"],u=f.position.distanceTo(m.position),d=.02,g=.005;c.inputState.pinching&&u>d+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&u<=d-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(n=i.getPose(e.gripSpace,a),n!==null&&(l.matrix.fromArray(n.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),n.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(n.linearVelocity)):l.hasLinearVelocity=!1,n.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(n.angularVelocity)):l.hasAngularVelocity=!1));return r!==null&&(r.visible=t!==null),l!==null&&(l.visible=n!==null),c!==null&&(c.visible=s!==null),this}}class bm extends bi{constructor(e,i,a,t,n,s,r,l,c,f){if(f=f!==void 0?f:kt,f!==kt&&f!==Sn)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");a===void 0&&f===kt&&(a=oo),a===void 0&&f===Sn&&(a=pn),super(null,t,n,s,r,l,f,a,c),this.image={width:e,height:i},this.magFilter=r!==void 0?r:pi,this.minFilter=l!==void 0?l:pi,this.flipY=!1,this.generateMipmaps=!1}}bm.prototype.isDepthTexture=!0;class Vv extends Pt{constructor(e,i){super();const a=this;let t=null,n=1,s=null,r="local-floor",l=null,c=null,f=null,m=null,u=null,d=null;const g=i.getContextAttributes();let p=null,h=null;const b=[],_=new Map,k=new xi;k.layers.enable(1),k.viewport=new je;const M=new xi;M.layers.enable(2),M.viewport=new je;const y=[k,M],x=new gm;x.layers.enable(1),x.layers.enable(2);let C=null,v=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(D){let H=b[D];return H===void 0&&(H=new Mr,b[D]=H),H.getTargetRaySpace()},this.getControllerGrip=function(D){let H=b[D];return H===void 0&&(H=new Mr,b[D]=H),H.getGripSpace()},this.getHand=function(D){let H=b[D];return H===void 0&&(H=new Mr,b[D]=H),H.getHandSpace()};function A(D){const H=_.get(D.inputSource);H&&H.dispatchEvent({type:D.type,data:D.inputSource})}function z(){_.forEach(function(D,H){D.disconnect(H)}),_.clear(),C=null,v=null,e.setRenderTarget(p),u=null,m=null,f=null,t=null,h=null,W.stop(),a.isPresenting=!1,a.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(D){n=D,a.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(D){r=D,a.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||s},this.setReferenceSpace=function(D){l=D},this.getBaseLayer=function(){return m!==null?m:u},this.getBinding=function(){return f},this.getFrame=function(){return d},this.getSession=function(){return t},this.setSession=async function(D){if(t=D,t!==null){if(p=e.getRenderTarget(),t.addEventListener("select",A),t.addEventListener("selectstart",A),t.addEventListener("selectend",A),t.addEventListener("squeeze",A),t.addEventListener("squeezestart",A),t.addEventListener("squeezeend",A),t.addEventListener("end",z),t.addEventListener("inputsourceschange",L),g.xrCompatible!==!0&&await i.makeXRCompatible(),t.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const H={antialias:t.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:n};u=new XRWebGLLayer(t,i,H),t.updateRenderState({baseLayer:u}),h=new Hi(u.framebufferWidth,u.framebufferHeight,{format:sa,type:Ct,encoding:e.outputEncoding})}else{let H=null,Y=null,X=null;g.depth&&(X=g.stencil?35056:33190,H=g.stencil?Sn:kt,Y=g.stencil?pn:oo);const $={colorFormat:e.outputEncoding===$e?35907:32856,depthFormat:X,scaleFactor:n};f=new XRWebGLBinding(t,i),m=f.createProjectionLayer($),t.updateRenderState({layers:[m]}),h=new Hi(m.textureWidth,m.textureHeight,{format:sa,type:Ct,depthTexture:new bm(m.textureWidth,m.textureHeight,Y,void 0,void 0,void 0,void 0,void 0,void 0,H),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const fe=e.properties.get(h);fe.__ignoreDepthValues=m.ignoreDepthValues}h.isXRRenderTarget=!0,this.setFoveation(1),s=await t.requestReferenceSpace(r),W.setContext(t),W.start(),a.isPresenting=!0,a.dispatchEvent({type:"sessionstart"})}};function L(D){const H=t.inputSources;for(let Y=0;Y<H.length;Y++){const X=H[Y].handedness==="right"?1:0;_.set(H[Y],b[X])}for(let Y=0;Y<D.removed.length;Y++){const X=D.removed[Y],$=_.get(X);$&&($.dispatchEvent({type:"disconnected",data:X}),_.delete(X))}for(let Y=0;Y<D.added.length;Y++){const X=D.added[Y],$=_.get(X);$&&$.dispatchEvent({type:"connected",data:X})}}const ee=new T,Z=new T;function P(D,H,Y){ee.setFromMatrixPosition(H.matrixWorld),Z.setFromMatrixPosition(Y.matrixWorld);const X=ee.distanceTo(Z),$=H.projectionMatrix.elements,fe=Y.projectionMatrix.elements,ge=$[14]/($[10]-1),K=$[14]/($[10]+1),Ue=($[9]+1)/$[5],Me=($[9]-1)/$[5],Ce=($[8]-1)/$[0],ne=(fe[8]+1)/fe[0],Ie=ge*Ce,J=ge*ne,q=X/(-Ce+ne),ae=q*-Ce;H.matrixWorld.decompose(D.position,D.quaternion,D.scale),D.translateX(ae),D.translateZ(q),D.matrixWorld.compose(D.position,D.quaternion,D.scale),D.matrixWorldInverse.copy(D.matrixWorld).invert();const de=ge+q,le=K+q,Ae=Ie-ae,_e=J+(X-ae),ve=Ue*K/le*de,Ye=Me*K/le*de;D.projectionMatrix.makePerspective(Ae,_e,ve,Ye,de,le)}function G(D,H){H===null?D.matrixWorld.copy(D.matrix):D.matrixWorld.multiplyMatrices(H.matrixWorld,D.matrix),D.matrixWorldInverse.copy(D.matrixWorld).invert()}this.updateCamera=function(D){if(t===null)return;x.near=M.near=k.near=D.near,x.far=M.far=k.far=D.far,(C!==x.near||v!==x.far)&&(t.updateRenderState({depthNear:x.near,depthFar:x.far}),C=x.near,v=x.far);const H=D.parent,Y=x.cameras;G(x,H);for(let $=0;$<Y.length;$++)G(Y[$],H);x.matrixWorld.decompose(x.position,x.quaternion,x.scale),D.position.copy(x.position),D.quaternion.copy(x.quaternion),D.scale.copy(x.scale),D.matrix.copy(x.matrix),D.matrixWorld.copy(x.matrixWorld);const X=D.children;for(let $=0,fe=X.length;$<fe;$++)X[$].updateMatrixWorld(!0);Y.length===2?P(x,k,M):x.projectionMatrix.copy(k.projectionMatrix)},this.getCamera=function(){return x},this.getFoveation=function(){if(m!==null)return m.fixedFoveation;if(u!==null)return u.fixedFoveation},this.setFoveation=function(D){m!==null&&(m.fixedFoveation=D),u!==null&&u.fixedFoveation!==void 0&&(u.fixedFoveation=D)};let I=null;function F(D,H){if(c=H.getViewerPose(l||s),d=H,c!==null){const X=c.views;u!==null&&(e.setRenderTargetFramebuffer(h,u.framebuffer),e.setRenderTarget(h));let $=!1;X.length!==x.cameras.length&&(x.cameras.length=0,$=!0);for(let fe=0;fe<X.length;fe++){const ge=X[fe];let K=null;if(u!==null)K=u.getViewport(ge);else{const Me=f.getViewSubImage(m,ge);K=Me.viewport,fe===0&&(e.setRenderTargetTextures(h,Me.colorTexture,m.ignoreDepthValues?void 0:Me.depthStencilTexture),e.setRenderTarget(h))}const Ue=y[fe];Ue.matrix.fromArray(ge.transform.matrix),Ue.projectionMatrix.fromArray(ge.projectionMatrix),Ue.viewport.set(K.x,K.y,K.width,K.height),fe===0&&x.matrix.copy(Ue.matrix),$===!0&&x.cameras.push(Ue)}}const Y=t.inputSources;for(let X=0;X<b.length;X++){const $=Y[X],fe=_.get($);fe!==void 0&&fe.update($,H,l||s)}I&&I(D,H),d=null}const W=new cm;W.setAnimationLoop(F),this.setAnimationLoop=function(D){I=D},this.dispose=function(){}}}function Hv(o,e){function i(p,h){p.fogColor.value.copy(h.color),h.isFog?(p.fogNear.value=h.near,p.fogFar.value=h.far):h.isFogExp2&&(p.fogDensity.value=h.density)}function a(p,h,b,_,k){h.isMeshBasicMaterial||h.isMeshLambertMaterial?t(p,h):h.isMeshToonMaterial?(t(p,h),f(p,h)):h.isMeshPhongMaterial?(t(p,h),c(p,h)):h.isMeshStandardMaterial?(t(p,h),m(p,h),h.isMeshPhysicalMaterial&&u(p,h,k)):h.isMeshMatcapMaterial?(t(p,h),d(p,h)):h.isMeshDepthMaterial?t(p,h):h.isMeshDistanceMaterial?(t(p,h),g(p,h)):h.isMeshNormalMaterial?t(p,h):h.isLineBasicMaterial?(n(p,h),h.isLineDashedMaterial&&s(p,h)):h.isPointsMaterial?r(p,h,b,_):h.isSpriteMaterial?l(p,h):h.isShadowMaterial?(p.color.value.copy(h.color),p.opacity.value=h.opacity):h.isShaderMaterial&&(h.uniformsNeedUpdate=!1)}function t(p,h){p.opacity.value=h.opacity,h.color&&p.diffuse.value.copy(h.color),h.emissive&&p.emissive.value.copy(h.emissive).multiplyScalar(h.emissiveIntensity),h.map&&(p.map.value=h.map),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.bumpMap&&(p.bumpMap.value=h.bumpMap,p.bumpScale.value=h.bumpScale,h.side===$i&&(p.bumpScale.value*=-1)),h.displacementMap&&(p.displacementMap.value=h.displacementMap,p.displacementScale.value=h.displacementScale,p.displacementBias.value=h.displacementBias),h.emissiveMap&&(p.emissiveMap.value=h.emissiveMap),h.normalMap&&(p.normalMap.value=h.normalMap,p.normalScale.value.copy(h.normalScale),h.side===$i&&p.normalScale.value.negate()),h.specularMap&&(p.specularMap.value=h.specularMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);const b=e.get(h).envMap;if(b&&(p.envMap.value=b,p.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=h.reflectivity,p.ior.value=h.ior,p.refractionRatio.value=h.refractionRatio),h.lightMap){p.lightMap.value=h.lightMap;const M=o.physicallyCorrectLights!==!0?Math.PI:1;p.lightMapIntensity.value=h.lightMapIntensity*M}h.aoMap&&(p.aoMap.value=h.aoMap,p.aoMapIntensity.value=h.aoMapIntensity);let _;h.map?_=h.map:h.specularMap?_=h.specularMap:h.displacementMap?_=h.displacementMap:h.normalMap?_=h.normalMap:h.bumpMap?_=h.bumpMap:h.roughnessMap?_=h.roughnessMap:h.metalnessMap?_=h.metalnessMap:h.alphaMap?_=h.alphaMap:h.emissiveMap?_=h.emissiveMap:h.clearcoatMap?_=h.clearcoatMap:h.clearcoatNormalMap?_=h.clearcoatNormalMap:h.clearcoatRoughnessMap?_=h.clearcoatRoughnessMap:h.specularIntensityMap?_=h.specularIntensityMap:h.specularColorMap?_=h.specularColorMap:h.transmissionMap?_=h.transmissionMap:h.thicknessMap?_=h.thicknessMap:h.sheenColorMap?_=h.sheenColorMap:h.sheenRoughnessMap&&(_=h.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),p.uvTransform.value.copy(_.matrix));let k;h.aoMap?k=h.aoMap:h.lightMap&&(k=h.lightMap),k!==void 0&&(k.isWebGLRenderTarget&&(k=k.texture),k.matrixAutoUpdate===!0&&k.updateMatrix(),p.uv2Transform.value.copy(k.matrix))}function n(p,h){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity}function s(p,h){p.dashSize.value=h.dashSize,p.totalSize.value=h.dashSize+h.gapSize,p.scale.value=h.scale}function r(p,h,b,_){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,p.size.value=h.size*b,p.scale.value=_*.5,h.map&&(p.map.value=h.map),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);let k;h.map?k=h.map:h.alphaMap&&(k=h.alphaMap),k!==void 0&&(k.matrixAutoUpdate===!0&&k.updateMatrix(),p.uvTransform.value.copy(k.matrix))}function l(p,h){p.diffuse.value.copy(h.color),p.opacity.value=h.opacity,p.rotation.value=h.rotation,h.map&&(p.map.value=h.map),h.alphaMap&&(p.alphaMap.value=h.alphaMap),h.alphaTest>0&&(p.alphaTest.value=h.alphaTest);let b;h.map?b=h.map:h.alphaMap&&(b=h.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),p.uvTransform.value.copy(b.matrix))}function c(p,h){p.specular.value.copy(h.specular),p.shininess.value=Math.max(h.shininess,1e-4)}function f(p,h){h.gradientMap&&(p.gradientMap.value=h.gradientMap)}function m(p,h){p.roughness.value=h.roughness,p.metalness.value=h.metalness,h.roughnessMap&&(p.roughnessMap.value=h.roughnessMap),h.metalnessMap&&(p.metalnessMap.value=h.metalnessMap),e.get(h).envMap&&(p.envMapIntensity.value=h.envMapIntensity)}function u(p,h,b){p.ior.value=h.ior,h.sheen>0&&(p.sheenColor.value.copy(h.sheenColor).multiplyScalar(h.sheen),p.sheenRoughness.value=h.sheenRoughness,h.sheenColorMap&&(p.sheenColorMap.value=h.sheenColorMap),h.sheenRoughnessMap&&(p.sheenRoughnessMap.value=h.sheenRoughnessMap)),h.clearcoat>0&&(p.clearcoat.value=h.clearcoat,p.clearcoatRoughness.value=h.clearcoatRoughness,h.clearcoatMap&&(p.clearcoatMap.value=h.clearcoatMap),h.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=h.clearcoatRoughnessMap),h.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(h.clearcoatNormalScale),p.clearcoatNormalMap.value=h.clearcoatNormalMap,h.side===$i&&p.clearcoatNormalScale.value.negate())),h.transmission>0&&(p.transmission.value=h.transmission,p.transmissionSamplerMap.value=b.texture,p.transmissionSamplerSize.value.set(b.width,b.height),h.transmissionMap&&(p.transmissionMap.value=h.transmissionMap),p.thickness.value=h.thickness,h.thicknessMap&&(p.thicknessMap.value=h.thicknessMap),p.attenuationDistance.value=h.attenuationDistance,p.attenuationColor.value.copy(h.attenuationColor)),p.specularIntensity.value=h.specularIntensity,p.specularColor.value.copy(h.specularColor),h.specularIntensityMap&&(p.specularIntensityMap.value=h.specularIntensityMap),h.specularColorMap&&(p.specularColorMap.value=h.specularColorMap)}function d(p,h){h.matcap&&(p.matcap.value=h.matcap)}function g(p,h){p.referencePosition.value.copy(h.referencePosition),p.nearDistance.value=h.nearDistance,p.farDistance.value=h.farDistance}return{refreshFogUniforms:i,refreshMaterialUniforms:a}}function Wv(){const o=co("canvas");return o.style.display="block",o}function Ke(o={}){const e=o.canvas!==void 0?o.canvas:Wv(),i=o.context!==void 0?o.context:null,a=o.depth!==void 0?o.depth:!0,t=o.stencil!==void 0?o.stencil:!0,n=o.antialias!==void 0?o.antialias:!1,s=o.premultipliedAlpha!==void 0?o.premultipliedAlpha:!0,r=o.preserveDrawingBuffer!==void 0?o.preserveDrawingBuffer:!1,l=o.powerPreference!==void 0?o.powerPreference:"default",c=o.failIfMajorPerformanceCaveat!==void 0?o.failIfMajorPerformanceCaveat:!1;let f;i!==null?f=i.getContextAttributes().alpha:f=o.alpha!==void 0?o.alpha:!1;let m=null,u=null;const d=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=it,this.physicallyCorrectLights=!1,this.toneMapping=La,this.toneMappingExposure=1;const p=this;let h=!1,b=0,_=0,k=null,M=-1,y=null;const x=new je,C=new je;let v=null,A=e.width,z=e.height,L=1,ee=null,Z=null;const P=new je(0,0,A,z),G=new je(0,0,A,z);let I=!1;const F=new Ps;let W=!1,D=!1,H=null;const Y=new be,X=new ie,$=new T,fe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ge(){return k===null?L:1}let K=i;function Ue(w,N){for(let U=0;U<w.length;U++){const B=w[U],j=e.getContext(B,N);if(j!==null)return j}return null}try{const w={alpha:!0,depth:a,stencil:t,antialias:n,premultipliedAlpha:s,preserveDrawingBuffer:r,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${mc}`),e.addEventListener("webglcontextlost",E,!1),e.addEventListener("webglcontextrestored",re,!1),K===null){const N=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&N.shift(),K=Ue(N,w),K===null)throw Ue(N)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}K.getShaderPrecisionFormat===void 0&&(K.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let Me,Ce,ne,Ie,J,q,ae,de,le,Ae,_e,ve,Ye,qe,R,S,O,Q,ce,me,ye,V,Te;function Pe(){Me=new rb(K),Ce=new ib(K,Me,o),Me.init(Ce),V=new Ov(K,Me,Ce),ne=new Gv(K,Me,Ce),Ie=new fb(K),J=new Rv,q=new Uv(K,Me,ne,J,Ce,V,Ie),ae=new tb(p),de=new sb(p),le=new wp(K,Ce),Te=new Qg(K,Me,le,Ce),Ae=new cb(K,le,Ie,Te),_e=new pb(K,Ae,le,Ie),ce=new db(K,Ce,q),S=new ab(J),ve=new Av(p,ae,de,Me,Ce,Te,S),Ye=new Hv(p,J),qe=new Cv,R=new Nv(Me,Ce),Q=new $g(p,ae,ne,_e,f,s),O=new hm(p,_e,Ce),me=new eb(K,Me,Ie,Ce),ye=new lb(K,Me,Ie,Ce),Ie.programs=ve.programs,p.capabilities=Ce,p.extensions=Me,p.properties=J,p.renderLists=qe,p.shadowMap=O,p.state=ne,p.info=Ie}Pe();const pe=new Vv(p,K);this.xr=pe,this.getContext=function(){return K},this.getContextAttributes=function(){return K.getContextAttributes()},this.forceContextLoss=function(){const w=Me.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){const w=Me.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(w){w!==void 0&&(L=w,this.setSize(A,z,!1))},this.getSize=function(w){return w.set(A,z)},this.setSize=function(w,N,U){if(pe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=w,z=N,e.width=Math.floor(w*L),e.height=Math.floor(N*L),U!==!1&&(e.style.width=w+"px",e.style.height=N+"px"),this.setViewport(0,0,w,N)},this.getDrawingBufferSize=function(w){return w.set(A*L,z*L).floor()},this.setDrawingBufferSize=function(w,N,U){A=w,z=N,L=U,e.width=Math.floor(w*U),e.height=Math.floor(N*U),this.setViewport(0,0,w,N)},this.getCurrentViewport=function(w){return w.copy(x)},this.getViewport=function(w){return w.copy(P)},this.setViewport=function(w,N,U,B){w.isVector4?P.set(w.x,w.y,w.z,w.w):P.set(w,N,U,B),ne.viewport(x.copy(P).multiplyScalar(L).floor())},this.getScissor=function(w){return w.copy(G)},this.setScissor=function(w,N,U,B){w.isVector4?G.set(w.x,w.y,w.z,w.w):G.set(w,N,U,B),ne.scissor(C.copy(G).multiplyScalar(L).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(w){ne.setScissorTest(I=w)},this.setOpaqueSort=function(w){ee=w},this.setTransparentSort=function(w){Z=w},this.getClearColor=function(w){return w.copy(Q.getClearColor())},this.setClearColor=function(){Q.setClearColor.apply(Q,arguments)},this.getClearAlpha=function(){return Q.getClearAlpha()},this.setClearAlpha=function(){Q.setClearAlpha.apply(Q,arguments)},this.clear=function(w=!0,N=!0,U=!0){let B=0;w&&(B|=16384),N&&(B|=256),U&&(B|=1024),K.clear(B)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",E,!1),e.removeEventListener("webglcontextrestored",re,!1),qe.dispose(),R.dispose(),J.dispose(),ae.dispose(),de.dispose(),_e.dispose(),Te.dispose(),ve.dispose(),pe.dispose(),pe.removeEventListener("sessionstart",we),pe.removeEventListener("sessionend",Fe),H&&(H.dispose(),H=null),Be.stop()};function E(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),h=!0}function re(){console.log("THREE.WebGLRenderer: Context Restored."),h=!1;const w=Ie.autoReset,N=O.enabled,U=O.autoUpdate,B=O.needsUpdate,j=O.type;Pe(),Ie.autoReset=w,O.enabled=N,O.autoUpdate=U,O.needsUpdate=B,O.type=j}function oe(w){const N=w.target;N.removeEventListener("dispose",oe),ke(N)}function ke(w){ue(w),J.remove(w)}function ue(w){const N=J.get(w).programs;N!==void 0&&(N.forEach(function(U){ve.releaseProgram(U)}),w.isShaderMaterial&&ve.releaseShaderCache(w))}this.renderBufferDirect=function(w,N,U,B,j,xe){N===null&&(N=fe);const Re=j.isMesh&&j.matrixWorld.determinant()<0,Le=Qu(w,N,U,B,j);ne.setMaterial(B,Re);let Ee=U.index;const Ve=U.attributes.position;if(Ee===null){if(Ve===void 0||Ve.count===0)return}else if(Ee.count===0)return;let De=1;B.wireframe===!0&&(Ee=Ae.getWireframeAttribute(U),De=2),Te.setup(j,B,Le,U,Ee);let Ge,ti=me;Ee!==null&&(Ge=le.get(Ee),ti=ye,ti.setIndex(Ge));const ft=Ee!==null?Ee.count:Ve.count,Bt=U.drawRange.start*De,Dt=U.drawRange.count*De,ua=xe!==null?xe.start*De:0,Oe=xe!==null?xe.count*De:1/0,Gt=Math.max(Bt,ua),si=Math.min(ft,Bt+Dt,ua+Oe)-1,da=Math.max(0,si-Gt+1);if(da!==0){if(j.isMesh)B.wireframe===!0?(ne.setLineWidth(B.wireframeLinewidth*ge()),ti.setMode(1)):ti.setMode(4);else if(j.isLine){let Da=B.linewidth;Da===void 0&&(Da=1),ne.setLineWidth(Da*ge()),j.isLineSegments?ti.setMode(1):j.isLineLoop?ti.setMode(2):ti.setMode(3)}else j.isPoints?ti.setMode(0):j.isSprite&&ti.setMode(4);if(j.isInstancedMesh)ti.renderInstances(Gt,da,j.count);else if(U.isInstancedBufferGeometry){const Da=Math.min(U.instanceCount,U._maxInstanceCount);ti.renderInstances(Gt,da,Da)}else ti.render(Gt,da)}},this.compile=function(w,N){u=R.get(w),u.init(),g.push(u),w.traverseVisible(function(U){U.isLight&&U.layers.test(N.layers)&&(u.pushLight(U),U.castShadow&&u.pushShadow(U))}),u.setupLights(p.physicallyCorrectLights),w.traverse(function(U){const B=U.material;if(B)if(Array.isArray(B))for(let j=0;j<B.length;j++){const xe=B[j];Os(xe,w,U)}else Os(B,w,U)}),g.pop(),u=null};let Se=null;function te(w){Se&&Se(w)}function we(){Be.stop()}function Fe(){Be.start()}const Be=new cm;Be.setAnimationLoop(te),typeof self!="undefined"&&Be.setContext(self),this.setAnimationLoop=function(w){Se=w,pe.setAnimationLoop(w),w===null?Be.stop():Be.start()},pe.addEventListener("sessionstart",we),pe.addEventListener("sessionend",Fe),this.render=function(w,N){if(N!==void 0&&N.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(h===!0)return;w.autoUpdate===!0&&w.updateMatrixWorld(),N.parent===null&&N.updateMatrixWorld(),pe.enabled===!0&&pe.isPresenting===!0&&(pe.cameraAutoUpdate===!0&&pe.updateCamera(N),N=pe.getCamera()),w.isScene===!0&&w.onBeforeRender(p,w,N,k),u=R.get(w,g.length),u.init(),g.push(u),Y.multiplyMatrices(N.projectionMatrix,N.matrixWorldInverse),F.setFromProjectionMatrix(Y),D=this.localClippingEnabled,W=S.init(this.clippingPlanes,D,N),m=qe.get(w,d.length),m.init(),d.push(m),fa(w,N,0,p.sortObjects),m.finish(),p.sortObjects===!0&&m.sort(ee,Z),W===!0&&S.beginShadows();const U=u.state.shadowsArray;if(O.render(U,w,N),W===!0&&S.endShadows(),this.info.autoReset===!0&&this.info.reset(),Q.render(m,w),u.setupLights(p.physicallyCorrectLights),N.isArrayCamera){const B=N.cameras;for(let j=0,xe=B.length;j<xe;j++){const Re=B[j];ma(m,w,Re,Re.viewport)}}else ma(m,w,N);k!==null&&(q.updateMultisampleRenderTarget(k),q.updateRenderTargetMipmap(k)),w.isScene===!0&&w.onAfterRender(p,w,N),Te.resetDefaultState(),M=-1,y=null,g.pop(),g.length>0?u=g[g.length-1]:u=null,d.pop(),d.length>0?m=d[d.length-1]:m=null};function fa(w,N,U,B){if(w.visible===!1)return;if(w.layers.test(N.layers)){if(w.isGroup)U=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(N);else if(w.isLight)u.pushLight(w),w.castShadow&&u.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||F.intersectsSprite(w)){B&&$.setFromMatrixPosition(w.matrixWorld).applyMatrix4(Y);const Re=_e.update(w),Le=w.material;Le.visible&&m.push(w,Re,Le,U,$.z,null)}}else if((w.isMesh||w.isLine||w.isPoints)&&(w.isSkinnedMesh&&w.skeleton.frame!==Ie.render.frame&&(w.skeleton.update(),w.skeleton.frame=Ie.render.frame),!w.frustumCulled||F.intersectsObject(w))){B&&$.setFromMatrixPosition(w.matrixWorld).applyMatrix4(Y);const Re=_e.update(w),Le=w.material;if(Array.isArray(Le)){const Ee=Re.groups;for(let Ve=0,De=Ee.length;Ve<De;Ve++){const Ge=Ee[Ve],ti=Le[Ge.materialIndex];ti&&ti.visible&&m.push(w,Re,ti,U,$.z,Ge)}}else Le.visible&&m.push(w,Re,Le,U,$.z,null)}}const xe=w.children;for(let Re=0,Le=xe.length;Re<Le;Re++)fa(xe[Re],N,U,B)}function ma(w,N,U,B){const j=w.opaque,xe=w.transmissive,Re=w.transparent;u.setupLightsView(U),xe.length>0&&Yu(j,N,U),B&&ne.viewport(x.copy(B)),j.length>0&&To(j,N,U),xe.length>0&&To(xe,N,U),Re.length>0&&To(Re,N,U),ne.buffers.depth.setTest(!0),ne.buffers.depth.setMask(!0),ne.buffers.color.setMask(!0),ne.setPolygonOffset(!1)}function Yu(w,N,U){const B=Ce.isWebGL2;H===null&&(H=new Hi(1,1,{generateMipmaps:!0,type:Me.has("EXT_color_buffer_half_float")?so:Ct,minFilter:Ts,samples:B&&n===!0?4:0})),p.getDrawingBufferSize(X),B?H.setSize(X.x,X.y):H.setSize(jr(X.x),jr(X.y));const j=p.getRenderTarget();p.setRenderTarget(H),p.clear();const xe=p.toneMapping;p.toneMapping=La,To(w,N,U),p.toneMapping=xe,q.updateMultisampleRenderTarget(H),q.updateRenderTargetMipmap(H),p.setRenderTarget(j)}function To(w,N,U){const B=N.isScene===!0?N.overrideMaterial:null;for(let j=0,xe=w.length;j<xe;j++){const Re=w[j],Le=Re.object,Ee=Re.geometry,Ve=B===null?Re.material:B,De=Re.group;Le.layers.test(U.layers)&&$u(Le,N,U,Ee,Ve,De)}}function $u(w,N,U,B,j,xe){w.onBeforeRender(p,N,U,B,j,xe),w.modelViewMatrix.multiplyMatrices(U.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),j.onBeforeRender(p,N,U,B,w,xe),j.transparent===!0&&j.side===vn?(j.side=$i,j.needsUpdate=!0,p.renderBufferDirect(U,N,B,j,w,xe),j.side=no,j.needsUpdate=!0,p.renderBufferDirect(U,N,B,j,w,xe),j.side=vn):p.renderBufferDirect(U,N,B,j,w,xe),w.onAfterRender(p,N,U,B,j,xe)}function Os(w,N,U){N.isScene!==!0&&(N=fe);const B=J.get(w),j=u.state.lights,xe=u.state.shadowsArray,Re=j.state.version,Le=ve.getParameters(w,j.state,xe,N,U),Ee=ve.getProgramCacheKey(Le);let Ve=B.programs;B.environment=w.isMeshStandardMaterial?N.environment:null,B.fog=N.fog,B.envMap=(w.isMeshStandardMaterial?de:ae).get(w.envMap||B.environment),Ve===void 0&&(w.addEventListener("dispose",oe),Ve=new Map,B.programs=Ve);let De=Ve.get(Ee);if(De!==void 0){if(B.currentProgram===De&&B.lightsStateVersion===Re)return $c(w,Le),De}else Le.uniforms=ve.getUniforms(w),w.onBuild(U,Le,p),w.onBeforeCompile(Le,p),De=ve.acquireProgram(Le,Ee),Ve.set(Ee,De),B.uniforms=Le.uniforms;const Ge=B.uniforms;(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(Ge.clippingPlanes=S.uniform),$c(w,Le),B.needsLights=id(w),B.lightsStateVersion=Re,B.needsLights&&(Ge.ambientLightColor.value=j.state.ambient,Ge.lightProbe.value=j.state.probe,Ge.directionalLights.value=j.state.directional,Ge.directionalLightShadows.value=j.state.directionalShadow,Ge.spotLights.value=j.state.spot,Ge.spotLightShadows.value=j.state.spotShadow,Ge.rectAreaLights.value=j.state.rectArea,Ge.ltc_1.value=j.state.rectAreaLTC1,Ge.ltc_2.value=j.state.rectAreaLTC2,Ge.pointLights.value=j.state.point,Ge.pointLightShadows.value=j.state.pointShadow,Ge.hemisphereLights.value=j.state.hemi,Ge.directionalShadowMap.value=j.state.directionalShadowMap,Ge.directionalShadowMatrix.value=j.state.directionalShadowMatrix,Ge.spotShadowMap.value=j.state.spotShadowMap,Ge.spotShadowMatrix.value=j.state.spotShadowMatrix,Ge.pointShadowMap.value=j.state.pointShadowMap,Ge.pointShadowMatrix.value=j.state.pointShadowMatrix);const ti=De.getUniforms(),ft=Ya.seqWithValue(ti.seq,Ge);return B.currentProgram=De,B.uniformsList=ft,De}function $c(w,N){const U=J.get(w);U.outputEncoding=N.outputEncoding,U.instancing=N.instancing,U.skinning=N.skinning,U.morphTargets=N.morphTargets,U.morphNormals=N.morphNormals,U.morphColors=N.morphColors,U.morphTargetsCount=N.morphTargetsCount,U.numClippingPlanes=N.numClippingPlanes,U.numIntersection=N.numClipIntersection,U.vertexAlphas=N.vertexAlphas,U.vertexTangents=N.vertexTangents,U.toneMapping=N.toneMapping}function Qu(w,N,U,B,j){N.isScene!==!0&&(N=fe),q.resetTextureUnits();const xe=N.fog,Re=B.isMeshStandardMaterial?N.environment:null,Le=k===null?p.outputEncoding:k.isXRRenderTarget===!0?k.texture.encoding:it,Ee=(B.isMeshStandardMaterial?de:ae).get(B.envMap||Re),Ve=B.vertexColors===!0&&!!U.attributes.color&&U.attributes.color.itemSize===4,De=!!B.normalMap&&!!U.attributes.tangent,Ge=!!U.morphAttributes.position,ti=!!U.morphAttributes.normal,ft=!!U.morphAttributes.color,Bt=B.toneMapped?p.toneMapping:La,Dt=U.morphAttributes.position||U.morphAttributes.normal||U.morphAttributes.color,ua=Dt!==void 0?Dt.length:0,Oe=J.get(B),Gt=u.state.lights;if(W===!0&&(D===!0||w!==y)){const pa=w===y&&B.id===M;S.setState(B,w,pa)}let si=!1;B.version===Oe.__version?(Oe.needsLights&&Oe.lightsStateVersion!==Gt.state.version||Oe.outputEncoding!==Le||j.isInstancedMesh&&Oe.instancing===!1||!j.isInstancedMesh&&Oe.instancing===!0||j.isSkinnedMesh&&Oe.skinning===!1||!j.isSkinnedMesh&&Oe.skinning===!0||Oe.envMap!==Ee||B.fog===!0&&Oe.fog!==xe||Oe.numClippingPlanes!==void 0&&(Oe.numClippingPlanes!==S.numPlanes||Oe.numIntersection!==S.numIntersection)||Oe.vertexAlphas!==Ve||Oe.vertexTangents!==De||Oe.morphTargets!==Ge||Oe.morphNormals!==ti||Oe.morphColors!==ft||Oe.toneMapping!==Bt||Ce.isWebGL2===!0&&Oe.morphTargetsCount!==ua)&&(si=!0):(si=!0,Oe.__version=B.version);let da=Oe.currentProgram;si===!0&&(da=Os(B,N,j));let Da=!1,Gn=!1,Fs=!1;const Ci=da.getUniforms(),Un=Oe.uniforms;if(ne.useProgram(da.program)&&(Da=!0,Gn=!0,Fs=!0),B.id!==M&&(M=B.id,Gn=!0),Da||y!==w){if(Ci.setValue(K,"projectionMatrix",w.projectionMatrix),Ce.logarithmicDepthBuffer&&Ci.setValue(K,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),y!==w&&(y=w,Gn=!0,Fs=!0),B.isShaderMaterial||B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshStandardMaterial||B.envMap){const pa=Ci.map.cameraPosition;pa!==void 0&&pa.setValue(K,$.setFromMatrixPosition(w.matrixWorld))}(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial)&&Ci.setValue(K,"isOrthographic",w.isOrthographicCamera===!0),(B.isMeshPhongMaterial||B.isMeshToonMaterial||B.isMeshLambertMaterial||B.isMeshBasicMaterial||B.isMeshStandardMaterial||B.isShaderMaterial||B.isShadowMaterial||j.isSkinnedMesh)&&Ci.setValue(K,"viewMatrix",w.matrixWorldInverse)}if(j.isSkinnedMesh){Ci.setOptional(K,j,"bindMatrix"),Ci.setOptional(K,j,"bindMatrixInverse");const pa=j.skeleton;pa&&(Ce.floatVertexTextures?(pa.boneTexture===null&&pa.computeBoneTexture(),Ci.setValue(K,"boneTexture",pa.boneTexture,q),Ci.setValue(K,"boneTextureSize",pa.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Vs=U.morphAttributes;return(Vs.position!==void 0||Vs.normal!==void 0||Vs.color!==void 0&&Ce.isWebGL2===!0)&&ce.update(j,U,B,da),(Gn||Oe.receiveShadow!==j.receiveShadow)&&(Oe.receiveShadow=j.receiveShadow,Ci.setValue(K,"receiveShadow",j.receiveShadow)),Gn&&(Ci.setValue(K,"toneMappingExposure",p.toneMappingExposure),Oe.needsLights&&ed(Un,Fs),xe&&B.fog===!0&&Ye.refreshFogUniforms(Un,xe),Ye.refreshMaterialUniforms(Un,B,L,z,H),Ya.upload(K,Oe.uniformsList,Un,q)),B.isShaderMaterial&&B.uniformsNeedUpdate===!0&&(Ya.upload(K,Oe.uniformsList,Un,q),B.uniformsNeedUpdate=!1),B.isSpriteMaterial&&Ci.setValue(K,"center",j.center),Ci.setValue(K,"modelViewMatrix",j.modelViewMatrix),Ci.setValue(K,"normalMatrix",j.normalMatrix),Ci.setValue(K,"modelMatrix",j.matrixWorld),da}function ed(w,N){w.ambientLightColor.needsUpdate=N,w.lightProbe.needsUpdate=N,w.directionalLights.needsUpdate=N,w.directionalLightShadows.needsUpdate=N,w.pointLights.needsUpdate=N,w.pointLightShadows.needsUpdate=N,w.spotLights.needsUpdate=N,w.spotLightShadows.needsUpdate=N,w.rectAreaLights.needsUpdate=N,w.hemisphereLights.needsUpdate=N}function id(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return k},this.setRenderTargetTextures=function(w,N,U){J.get(w.texture).__webglTexture=N,J.get(w.depthTexture).__webglTexture=U;const B=J.get(w);B.__hasExternalTextures=!0,B.__hasExternalTextures&&(B.__autoAllocateDepthBuffer=U===void 0,B.__autoAllocateDepthBuffer||Me.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),B.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(w,N){const U=J.get(w);U.__webglFramebuffer=N,U.__useDefaultFramebuffer=N===void 0},this.setRenderTarget=function(w,N=0,U=0){k=w,b=N,_=U;let B=!0;if(w){const Ee=J.get(w);Ee.__useDefaultFramebuffer!==void 0?(ne.bindFramebuffer(36160,null),B=!1):Ee.__webglFramebuffer===void 0?q.setupRenderTarget(w):Ee.__hasExternalTextures&&q.rebindTextures(w,J.get(w.texture).__webglTexture,J.get(w.depthTexture).__webglTexture)}let j=null,xe=!1,Re=!1;if(w){const Ee=w.texture;(Ee.isData3DTexture||Ee.isDataArrayTexture)&&(Re=!0);const Ve=J.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(j=Ve[N],xe=!0):Ce.isWebGL2&&w.samples>0&&q.useMultisampledRTT(w)===!1?j=J.get(w).__webglMultisampledFramebuffer:j=Ve,x.copy(w.viewport),C.copy(w.scissor),v=w.scissorTest}else x.copy(P).multiplyScalar(L).floor(),C.copy(G).multiplyScalar(L).floor(),v=I;if(ne.bindFramebuffer(36160,j)&&Ce.drawBuffers&&B&&ne.drawBuffers(w,j),ne.viewport(x),ne.scissor(C),ne.setScissorTest(v),xe){const Ee=J.get(w.texture);K.framebufferTexture2D(36160,36064,34069+N,Ee.__webglTexture,U)}else if(Re){const Ee=J.get(w.texture),Ve=N||0;K.framebufferTextureLayer(36160,36064,Ee.__webglTexture,U||0,Ve)}M=-1},this.readRenderTargetPixels=function(w,N,U,B,j,xe,Re){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Le=J.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&Re!==void 0&&(Le=Le[Re]),Le){ne.bindFramebuffer(36160,Le);try{const Ee=w.texture,Ve=Ee.format,De=Ee.type;if(Ve!==sa&&V.convert(Ve)!==K.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ge=De===so&&(Me.has("EXT_color_buffer_half_float")||Ce.isWebGL2&&Me.has("EXT_color_buffer_float"));if(De!==Ct&&V.convert(De)!==K.getParameter(35738)&&!(De===_t&&(Ce.isWebGL2||Me.has("OES_texture_float")||Me.has("WEBGL_color_buffer_float")))&&!Ge){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}N>=0&&N<=w.width-B&&U>=0&&U<=w.height-j&&K.readPixels(N,U,B,j,V.convert(Ve),V.convert(De),xe)}finally{const Ee=k!==null?J.get(k).__webglFramebuffer:null;ne.bindFramebuffer(36160,Ee)}}},this.copyFramebufferToTexture=function(w,N,U=0){if(N.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const B=Math.pow(2,-U),j=Math.floor(N.image.width*B),xe=Math.floor(N.image.height*B);q.setTexture2D(N,0),K.copyTexSubImage2D(3553,U,0,0,w.x,w.y,j,xe),ne.unbindTexture()},this.copyTextureToTexture=function(w,N,U,B=0){const j=N.image.width,xe=N.image.height,Re=V.convert(U.format),Le=V.convert(U.type);q.setTexture2D(U,0),K.pixelStorei(37440,U.flipY),K.pixelStorei(37441,U.premultiplyAlpha),K.pixelStorei(3317,U.unpackAlignment),N.isDataTexture?K.texSubImage2D(3553,B,w.x,w.y,j,xe,Re,Le,N.image.data):N.isCompressedTexture?K.compressedTexSubImage2D(3553,B,w.x,w.y,N.mipmaps[0].width,N.mipmaps[0].height,Re,N.mipmaps[0].data):K.texSubImage2D(3553,B,w.x,w.y,Re,Le,N.image),B===0&&U.generateMipmaps&&K.generateMipmap(3553),ne.unbindTexture()},this.copyTextureToTexture3D=function(w,N,U,B,j=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const xe=w.max.x-w.min.x+1,Re=w.max.y-w.min.y+1,Le=w.max.z-w.min.z+1,Ee=V.convert(B.format),Ve=V.convert(B.type);let De;if(B.isData3DTexture)q.setTexture3D(B,0),De=32879;else if(B.isDataArrayTexture)q.setTexture2DArray(B,0),De=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}K.pixelStorei(37440,B.flipY),K.pixelStorei(37441,B.premultiplyAlpha),K.pixelStorei(3317,B.unpackAlignment);const Ge=K.getParameter(3314),ti=K.getParameter(32878),ft=K.getParameter(3316),Bt=K.getParameter(3315),Dt=K.getParameter(32877),ua=U.isCompressedTexture?U.mipmaps[0]:U.image;K.pixelStorei(3314,ua.width),K.pixelStorei(32878,ua.height),K.pixelStorei(3316,w.min.x),K.pixelStorei(3315,w.min.y),K.pixelStorei(32877,w.min.z),U.isDataTexture||U.isData3DTexture?K.texSubImage3D(De,j,N.x,N.y,N.z,xe,Re,Le,Ee,Ve,ua.data):U.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),K.compressedTexSubImage3D(De,j,N.x,N.y,N.z,xe,Re,Le,Ee,ua.data)):K.texSubImage3D(De,j,N.x,N.y,N.z,xe,Re,Le,Ee,Ve,ua),K.pixelStorei(3314,Ge),K.pixelStorei(32878,ti),K.pixelStorei(3316,ft),K.pixelStorei(3315,Bt),K.pixelStorei(32877,Dt),j===0&&B.generateMipmaps&&K.generateMipmap(De),ne.unbindTexture()},this.initTexture=function(w){q.setTexture2D(w,0),ne.unbindTexture()},this.resetState=function(){b=0,_=0,k=null,ne.reset(),Te.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Ke.prototype.isWebGLRenderer=!0;class Kv extends Ke{}Kv.prototype.isWebGL1Renderer=!0;class Mc extends We{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,i){return super.copy(e,i),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const i=super.toJSON(e);return this.fog!==null&&(i.object.fog=this.fog.toJSON()),i}}Mc.prototype.isScene=!0;class ko{constructor(e,i){this.array=e,this.stride=i,this.count=e!==void 0?e.length/i:0,this.usage=ro,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=_a()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,i,a){e*=this.stride,a*=i.stride;for(let t=0,n=this.stride;t<n;t++)this.array[e+t]=i.array[a+t];return this}set(e,i=0){return this.array.set(e,i),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_a()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const i=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),a=new this.constructor(i,this.stride);return a.setUsage(this.usage),a}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_a()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}ko.prototype.isInterleavedBuffer=!0;const Ei=new T;class lo{constructor(e,i,a,t=!1){this.name="",this.data=e,this.itemSize=i,this.offset=a,this.normalized=t===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let i=0,a=this.data.count;i<a;i++)Ei.fromBufferAttribute(this,i),Ei.applyMatrix4(e),this.setXYZ(i,Ei.x,Ei.y,Ei.z);return this}applyNormalMatrix(e){for(let i=0,a=this.count;i<a;i++)Ei.fromBufferAttribute(this,i),Ei.applyNormalMatrix(e),this.setXYZ(i,Ei.x,Ei.y,Ei.z);return this}transformDirection(e){for(let i=0,a=this.count;i<a;i++)Ei.fromBufferAttribute(this,i),Ei.transformDirection(e),this.setXYZ(i,Ei.x,Ei.y,Ei.z);return this}setX(e,i){return this.data.array[e*this.data.stride+this.offset]=i,this}setY(e,i){return this.data.array[e*this.data.stride+this.offset+1]=i,this}setZ(e,i){return this.data.array[e*this.data.stride+this.offset+2]=i,this}setW(e,i){return this.data.array[e*this.data.stride+this.offset+3]=i,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,i,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=i,this.data.array[e+1]=a,this}setXYZ(e,i,a,t){return e=e*this.data.stride+this.offset,this.data.array[e+0]=i,this.data.array[e+1]=a,this.data.array[e+2]=t,this}setXYZW(e,i,a,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=i,this.data.array[e+1]=a,this.data.array[e+2]=t,this.data.array[e+3]=n,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const i=[];for(let a=0;a<this.count;a++){const t=a*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)i.push(this.data.array[t+n])}return new fi(new this.array.constructor(i),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new lo(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const i=[];for(let a=0;a<this.count;a++){const t=a*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)i.push(this.data.array[t+n])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:i,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}lo.prototype.isInterleavedBufferAttribute=!0;class kc extends mi{constructor(e){super(),this.type="SpriteMaterial",this.color=new he(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}kc.prototype.isSpriteMaterial=!0;let Qt;const Hn=new T,en=new T,an=new T,tn=new ie,Wn=new ie,vm=new be,Jo=new T,Kn=new T,Xo=new T,lf=new ie,kr=new ie,ff=new ie;class jv extends We{constructor(e){if(super(),this.type="Sprite",Qt===void 0){Qt=new Xe;const i=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),a=new ko(i,5);Qt.setIndex([0,1,2,0,2,3]),Qt.setAttribute("position",new lo(a,3,0,!1)),Qt.setAttribute("uv",new lo(a,2,3,!1))}this.geometry=Qt,this.material=e!==void 0?e:new kc,this.center=new ie(.5,.5)}raycast(e,i){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),en.setFromMatrixScale(this.matrixWorld),vm.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),an.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&en.multiplyScalar(-an.z);const a=this.material.rotation;let t,n;a!==0&&(n=Math.cos(a),t=Math.sin(a));const s=this.center;Yo(Jo.set(-.5,-.5,0),an,s,en,t,n),Yo(Kn.set(.5,-.5,0),an,s,en,t,n),Yo(Xo.set(.5,.5,0),an,s,en,t,n),lf.set(0,0),kr.set(1,0),ff.set(1,1);let r=e.ray.intersectTriangle(Jo,Kn,Xo,!1,Hn);if(r===null&&(Yo(Kn.set(-.5,.5,0),an,s,en,t,n),kr.set(0,1),r=e.ray.intersectTriangle(Jo,Xo,Kn,!1,Hn),r===null))return;const l=e.ray.origin.distanceTo(Hn);l<e.near||l>e.far||i.push({distance:l,point:Hn.clone(),uv:ci.getUV(Hn,Jo,Kn,Xo,lf,kr,ff,new ie),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}jv.prototype.isSprite=!0;function Yo(o,e,i,a,t,n){tn.subVectors(o,i).addScalar(.5).multiply(a),t!==void 0?(Wn.x=n*tn.x-t*tn.y,Wn.y=t*tn.x+n*tn.y):Wn.copy(tn),o.copy(e),o.x+=Wn.x,o.y+=Wn.y,o.applyMatrix4(vm)}const mf=new T,uf=new je,df=new je,qv=new T,pf=new be;class ym extends Mi{constructor(e,i){super(e,i),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new be,this.bindMatrixInverse=new be}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,i){this.skeleton=e,i===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),i=this.matrixWorld),this.bindMatrix.copy(i),this.bindMatrixInverse.copy(i).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new je,i=this.geometry.attributes.skinWeight;for(let a=0,t=i.count;a<t;a++){e.fromBufferAttribute(i,a);const n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),i.setXYZW(a,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,i){const a=this.skeleton,t=this.geometry;uf.fromBufferAttribute(t.attributes.skinIndex,e),df.fromBufferAttribute(t.attributes.skinWeight,e),mf.copy(i).applyMatrix4(this.bindMatrix),i.set(0,0,0);for(let n=0;n<4;n++){const s=df.getComponent(n);if(s!==0){const r=uf.getComponent(n);pf.multiplyMatrices(a.bones[r].matrixWorld,a.boneInverses[r]),i.addScaledVector(qv.copy(mf).applyMatrix4(pf),s)}}return i.applyMatrix4(this.bindMatrixInverse)}}ym.prototype.isSkinnedMesh=!0;class Zv extends We{constructor(){super(),this.type="Bone"}}Zv.prototype.isBone=!0;class Jv extends bi{constructor(e=null,i=1,a=1,t,n,s,r,l,c=pi,f=pi,m,u){super(null,s,r,l,c,f,t,n,m,u),this.image={data:e,width:i,height:a},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Jv.prototype.isDataTexture=!0;class Zr extends fi{constructor(e,i,a,t=1){typeof a=="number"&&(t=a,a=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,i,a),this.meshPerAttribute=t}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Zr.prototype.isInstancedBufferAttribute=!0;const hf=new be,gf=new be,$o=[],jn=new Mi;class Xv extends Mi{constructor(e,i,a){super(e,i),this.instanceMatrix=new Zr(new Float32Array(a*16),16),this.instanceColor=null,this.count=a,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,i){i.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,i){i.fromArray(this.instanceMatrix.array,e*16)}raycast(e,i){const a=this.matrixWorld,t=this.count;if(jn.geometry=this.geometry,jn.material=this.material,jn.material!==void 0)for(let n=0;n<t;n++){this.getMatrixAt(n,hf),gf.multiplyMatrices(a,hf),jn.matrixWorld=gf,jn.raycast(e,$o);for(let s=0,r=$o.length;s<r;s++){const l=$o[s];l.instanceId=n,l.object=this,i.push(l)}$o.length=0}}setColorAt(e,i){this.instanceColor===null&&(this.instanceColor=new Zr(new Float32Array(this.instanceMatrix.count*3),3)),i.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,i){i.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Xv.prototype.isInstancedMesh=!0;class In extends mi{constructor(e){super(),this.type="LineBasicMaterial",this.color=new he(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}In.prototype.isLineBasicMaterial=!0;const bf=new T,vf=new T,yf=new be,wr=new zt,Qo=new Pn;class wc extends We{constructor(e=new Xe,i=new In){super(),this.type="Line",this.geometry=e,this.material=i,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const i=e.attributes.position,a=[0];for(let t=1,n=i.count;t<n;t++)bf.fromBufferAttribute(i,t-1),vf.fromBufferAttribute(i,t),a[t]=a[t-1],a[t]+=bf.distanceTo(vf);e.setAttribute("lineDistance",new ni(a,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,i){const a=this.geometry,t=this.matrixWorld,n=e.params.Line.threshold,s=a.drawRange;if(a.boundingSphere===null&&a.computeBoundingSphere(),Qo.copy(a.boundingSphere),Qo.applyMatrix4(t),Qo.radius+=n,e.ray.intersectsSphere(Qo)===!1)return;yf.copy(t).invert(),wr.copy(e.ray).applyMatrix4(yf);const r=n/((this.scale.x+this.scale.y+this.scale.z)/3),l=r*r,c=new T,f=new T,m=new T,u=new T,d=this.isLineSegments?2:1;if(a.isBufferGeometry){const g=a.index,h=a.attributes.position;if(g!==null){const b=Math.max(0,s.start),_=Math.min(g.count,s.start+s.count);for(let k=b,M=_-1;k<M;k+=d){const y=g.getX(k),x=g.getX(k+1);if(c.fromBufferAttribute(h,y),f.fromBufferAttribute(h,x),wr.distanceSqToSegment(c,f,u,m)>l)continue;u.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(u);v<e.near||v>e.far||i.push({distance:v,point:m.clone().applyMatrix4(this.matrixWorld),index:k,face:null,faceIndex:null,object:this})}}else{const b=Math.max(0,s.start),_=Math.min(h.count,s.start+s.count);for(let k=b,M=_-1;k<M;k+=d){if(c.fromBufferAttribute(h,k),f.fromBufferAttribute(h,k+1),wr.distanceSqToSegment(c,f,u,m)>l)continue;u.applyMatrix4(this.matrixWorld);const x=e.ray.origin.distanceTo(u);x<e.near||x>e.far||i.push({distance:x,point:m.clone().applyMatrix4(this.matrixWorld),index:k,face:null,faceIndex:null,object:this})}}}else a.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const i=e.morphAttributes,a=Object.keys(i);if(a.length>0){const t=i[a[0]];if(t!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=t.length;n<s;n++){const r=t[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}else{const i=e.morphTargets;i!==void 0&&i.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}wc.prototype.isLine=!0;const _f=new T,Sf=new T;class xc extends wc{constructor(e,i){super(e,i),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const i=e.attributes.position,a=[];for(let t=0,n=i.count;t<n;t+=2)_f.fromBufferAttribute(i,t),Sf.fromBufferAttribute(i,t+1),a[t]=t===0?0:a[t-1],a[t+1]=a[t]+_f.distanceTo(Sf);e.setAttribute("lineDistance",new ni(a,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}xc.prototype.isLineSegments=!0;class Yv extends wc{constructor(e,i){super(e,i),this.type="LineLoop"}}Yv.prototype.isLineLoop=!0;class zs extends mi{constructor(e){super(),this.type="PointsMaterial",this.color=new he(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}zs.prototype.isPointsMaterial=!0;const Mf=new be,Jr=new zt,es=new Pn,is=new T;class _m extends We{constructor(e=new Xe,i=new zs){super(),this.type="Points",this.geometry=e,this.material=i,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,i){const a=this.geometry,t=this.matrixWorld,n=e.params.Points.threshold,s=a.drawRange;if(a.boundingSphere===null&&a.computeBoundingSphere(),es.copy(a.boundingSphere),es.applyMatrix4(t),es.radius+=n,e.ray.intersectsSphere(es)===!1)return;Mf.copy(t).invert(),Jr.copy(e.ray).applyMatrix4(Mf);const r=n/((this.scale.x+this.scale.y+this.scale.z)/3),l=r*r;if(a.isBufferGeometry){const c=a.index,m=a.attributes.position;if(c!==null){const u=Math.max(0,s.start),d=Math.min(c.count,s.start+s.count);for(let g=u,p=d;g<p;g++){const h=c.getX(g);is.fromBufferAttribute(m,h),kf(is,h,l,t,e,i,this)}}else{const u=Math.max(0,s.start),d=Math.min(m.count,s.start+s.count);for(let g=u,p=d;g<p;g++)is.fromBufferAttribute(m,g),kf(is,g,l,t,e,i,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const i=e.morphAttributes,a=Object.keys(i);if(a.length>0){const t=i[a[0]];if(t!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,s=t.length;n<s;n++){const r=t[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=n}}}}else{const i=e.morphTargets;i!==void 0&&i.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}_m.prototype.isPoints=!0;function kf(o,e,i,a,t,n,s){const r=Jr.distanceSqToPoint(o);if(r<i){const l=new T;Jr.closestPointToPoint(o,l),l.applyMatrix4(a);const c=t.ray.origin.distanceTo(l);if(c<t.near||c>t.far)return;n.push({distance:c,distanceToRay:Math.sqrt(r),point:l,index:e,face:null,object:s})}}class $v extends bi{constructor(e,i,a,t,n,s,r,l,c){super(e,i,a,t,n,s,r,l,c),this.minFilter=s!==void 0?s:zi,this.magFilter=n!==void 0?n:zi,this.generateMipmaps=!1;const f=this;function m(){f.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}$v.prototype.isVideoTexture=!0;class Qv extends bi{constructor(e,i,a){super({width:e,height:i}),this.format=a,this.magFilter=pi,this.minFilter=pi,this.generateMipmaps=!1,this.needsUpdate=!0}}Qv.prototype.isFramebufferTexture=!0;class e0 extends bi{constructor(e,i,a,t,n,s,r,l,c,f,m,u){super(null,s,r,l,c,f,t,n,m,u),this.image={width:i,height:a},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}e0.prototype.isCompressedTexture=!0;class i0 extends bi{constructor(e,i,a,t,n,s,r,l,c){super(e,i,a,t,n,s,r,l,c),this.needsUpdate=!0}}i0.prototype.isCanvasTexture=!0;class Qi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,i){const a=this.getUtoTmapping(e);return this.getPoint(a,i)}getPoints(e=5){const i=[];for(let a=0;a<=e;a++)i.push(this.getPoint(a/e));return i}getSpacedPoints(e=5){const i=[];for(let a=0;a<=e;a++)i.push(this.getPointAt(a/e));return i}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const i=[];let a,t=this.getPoint(0),n=0;i.push(0);for(let s=1;s<=e;s++)a=this.getPoint(s/e),n+=a.distanceTo(t),i.push(n),t=a;return this.cacheArcLengths=i,i}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,i){const a=this.getLengths();let t=0;const n=a.length;let s;i?s=i:s=e*a[n-1];let r=0,l=n-1,c;for(;r<=l;)if(t=Math.floor(r+(l-r)/2),c=a[t]-s,c<0)r=t+1;else if(c>0)l=t-1;else{l=t;break}if(t=l,a[t]===s)return t/(n-1);const f=a[t],u=a[t+1]-f,d=(s-f)/u;return(t+d)/(n-1)}getTangent(e,i){let t=e-1e-4,n=e+1e-4;t<0&&(t=0),n>1&&(n=1);const s=this.getPoint(t),r=this.getPoint(n),l=i||(s.isVector2?new ie:new T);return l.copy(r).sub(s).normalize(),l}getTangentAt(e,i){const a=this.getUtoTmapping(e);return this.getTangent(a,i)}computeFrenetFrames(e,i){const a=new T,t=[],n=[],s=[],r=new T,l=new be;for(let d=0;d<=e;d++){const g=d/e;t[d]=this.getTangentAt(g,new T)}n[0]=new T,s[0]=new T;let c=Number.MAX_VALUE;const f=Math.abs(t[0].x),m=Math.abs(t[0].y),u=Math.abs(t[0].z);f<=c&&(c=f,a.set(1,0,0)),m<=c&&(c=m,a.set(0,1,0)),u<=c&&a.set(0,0,1),r.crossVectors(t[0],a).normalize(),n[0].crossVectors(t[0],r),s[0].crossVectors(t[0],n[0]);for(let d=1;d<=e;d++){if(n[d]=n[d-1].clone(),s[d]=s[d-1].clone(),r.crossVectors(t[d-1],t[d]),r.length()>Number.EPSILON){r.normalize();const g=Math.acos(wi(t[d-1].dot(t[d]),-1,1));n[d].applyMatrix4(l.makeRotationAxis(r,g))}s[d].crossVectors(t[d],n[d])}if(i===!0){let d=Math.acos(wi(n[0].dot(n[e]),-1,1));d/=e,t[0].dot(r.crossVectors(n[0],n[e]))>0&&(d=-d);for(let g=1;g<=e;g++)n[g].applyMatrix4(l.makeRotationAxis(t[g],d*g)),s[g].crossVectors(t[g],n[g])}return{tangents:t,normals:n,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Is extends Qi{constructor(e=0,i=0,a=1,t=1,n=0,s=Math.PI*2,r=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=i,this.xRadius=a,this.yRadius=t,this.aStartAngle=n,this.aEndAngle=s,this.aClockwise=r,this.aRotation=l}getPoint(e,i){const a=i||new ie,t=Math.PI*2;let n=this.aEndAngle-this.aStartAngle;const s=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=t;for(;n>t;)n-=t;n<Number.EPSILON&&(s?n=0:n=t),this.aClockwise===!0&&!s&&(n===t?n=-t:n=n-t);const r=this.aStartAngle+e*n;let l=this.aX+this.xRadius*Math.cos(r),c=this.aY+this.yRadius*Math.sin(r);if(this.aRotation!==0){const f=Math.cos(this.aRotation),m=Math.sin(this.aRotation),u=l-this.aX,d=c-this.aY;l=u*f-d*m+this.aX,c=u*m+d*f+this.aY}return a.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Is.prototype.isEllipseCurve=!0;class Sm extends Is{constructor(e,i,a,t,n,s){super(e,i,a,a,t,n,s),this.type="ArcCurve"}}Sm.prototype.isArcCurve=!0;function Ac(){let o=0,e=0,i=0,a=0;function t(n,s,r,l){o=n,e=r,i=-3*n+3*s-2*r-l,a=2*n-2*s+r+l}return{initCatmullRom:function(n,s,r,l,c){t(s,r,c*(r-n),c*(l-s))},initNonuniformCatmullRom:function(n,s,r,l,c,f,m){let u=(s-n)/c-(r-n)/(c+f)+(r-s)/f,d=(r-s)/f-(l-s)/(f+m)+(l-r)/m;u*=f,d*=f,t(s,r,u,d)},calc:function(n){const s=n*n,r=s*n;return o+e*n+i*s+a*r}}}const as=new T,xr=new Ac,Ar=new Ac,Rr=new Ac;class Mm extends Qi{constructor(e=[],i=!1,a="centripetal",t=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=i,this.curveType=a,this.tension=t}getPoint(e,i=new T){const a=i,t=this.points,n=t.length,s=(n-(this.closed?0:1))*e;let r=Math.floor(s),l=s-r;this.closed?r+=r>0?0:(Math.floor(Math.abs(r)/n)+1)*n:l===0&&r===n-1&&(r=n-2,l=1);let c,f;this.closed||r>0?c=t[(r-1)%n]:(as.subVectors(t[0],t[1]).add(t[0]),c=as);const m=t[r%n],u=t[(r+1)%n];if(this.closed||r+2<n?f=t[(r+2)%n]:(as.subVectors(t[n-1],t[n-2]).add(t[n-1]),f=as),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(m),d),p=Math.pow(m.distanceToSquared(u),d),h=Math.pow(u.distanceToSquared(f),d);p<1e-4&&(p=1),g<1e-4&&(g=p),h<1e-4&&(h=p),xr.initNonuniformCatmullRom(c.x,m.x,u.x,f.x,g,p,h),Ar.initNonuniformCatmullRom(c.y,m.y,u.y,f.y,g,p,h),Rr.initNonuniformCatmullRom(c.z,m.z,u.z,f.z,g,p,h)}else this.curveType==="catmullrom"&&(xr.initCatmullRom(c.x,m.x,u.x,f.x,this.tension),Ar.initCatmullRom(c.y,m.y,u.y,f.y,this.tension),Rr.initCatmullRom(c.z,m.z,u.z,f.z,this.tension));return a.set(xr.calc(l),Ar.calc(l),Rr.calc(l)),a}copy(e){super.copy(e),this.points=[];for(let i=0,a=e.points.length;i<a;i++){const t=e.points[i];this.points.push(t.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let i=0,a=this.points.length;i<a;i++){const t=this.points[i];e.points.push(t.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let i=0,a=e.points.length;i<a;i++){const t=e.points[i];this.points.push(new T().fromArray(t))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Mm.prototype.isCatmullRomCurve3=!0;function wf(o,e,i,a,t){const n=(a-e)*.5,s=(t-i)*.5,r=o*o,l=o*r;return(2*i-2*a+n+s)*l+(-3*i+3*a-2*n-s)*r+n*o+i}function a0(o,e){const i=1-o;return i*i*e}function t0(o,e){return 2*(1-o)*o*e}function n0(o,e){return o*o*e}function Qn(o,e,i,a){return a0(o,e)+t0(o,i)+n0(o,a)}function o0(o,e){const i=1-o;return i*i*i*e}function s0(o,e){const i=1-o;return 3*i*i*o*e}function r0(o,e){return 3*(1-o)*o*o*e}function c0(o,e){return o*o*o*e}function eo(o,e,i,a,t){return o0(o,e)+s0(o,i)+r0(o,a)+c0(o,t)}class Rc extends Qi{constructor(e=new ie,i=new ie,a=new ie,t=new ie){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=i,this.v2=a,this.v3=t}getPoint(e,i=new ie){const a=i,t=this.v0,n=this.v1,s=this.v2,r=this.v3;return a.set(eo(e,t.x,n.x,s.x,r.x),eo(e,t.y,n.y,s.y,r.y)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Rc.prototype.isCubicBezierCurve=!0;class km extends Qi{constructor(e=new T,i=new T,a=new T,t=new T){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=i,this.v2=a,this.v3=t}getPoint(e,i=new T){const a=i,t=this.v0,n=this.v1,s=this.v2,r=this.v3;return a.set(eo(e,t.x,n.x,s.x,r.x),eo(e,t.y,n.y,s.y,r.y),eo(e,t.z,n.z,s.z,r.z)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}km.prototype.isCubicBezierCurve3=!0;class Ns extends Qi{constructor(e=new ie,i=new ie){super(),this.type="LineCurve",this.v1=e,this.v2=i}getPoint(e,i=new ie){const a=i;return e===1?a.copy(this.v2):(a.copy(this.v2).sub(this.v1),a.multiplyScalar(e).add(this.v1)),a}getPointAt(e,i){return this.getPoint(e,i)}getTangent(e,i){const a=i||new ie;return a.copy(this.v2).sub(this.v1).normalize(),a}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Ns.prototype.isLineCurve=!0;class l0 extends Qi{constructor(e=new T,i=new T){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=i}getPoint(e,i=new T){const a=i;return e===1?a.copy(this.v2):(a.copy(this.v2).sub(this.v1),a.multiplyScalar(e).add(this.v1)),a}getPointAt(e,i){return this.getPoint(e,i)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Tc extends Qi{constructor(e=new ie,i=new ie,a=new ie){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=i,this.v2=a}getPoint(e,i=new ie){const a=i,t=this.v0,n=this.v1,s=this.v2;return a.set(Qn(e,t.x,n.x,s.x),Qn(e,t.y,n.y,s.y)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Tc.prototype.isQuadraticBezierCurve=!0;class wm extends Qi{constructor(e=new T,i=new T,a=new T){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=i,this.v2=a}getPoint(e,i=new T){const a=i,t=this.v0,n=this.v1,s=this.v2;return a.set(Qn(e,t.x,n.x,s.x),Qn(e,t.y,n.y,s.y),Qn(e,t.z,n.z,s.z)),a}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}wm.prototype.isQuadraticBezierCurve3=!0;class Cc extends Qi{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,i=new ie){const a=i,t=this.points,n=(t.length-1)*e,s=Math.floor(n),r=n-s,l=t[s===0?s:s-1],c=t[s],f=t[s>t.length-2?t.length-1:s+1],m=t[s>t.length-3?t.length-1:s+2];return a.set(wf(r,l.x,c.x,f.x,m.x),wf(r,l.y,c.y,f.y,m.y)),a}copy(e){super.copy(e),this.points=[];for(let i=0,a=e.points.length;i<a;i++){const t=e.points[i];this.points.push(t.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let i=0,a=this.points.length;i<a;i++){const t=this.points[i];e.points.push(t.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let i=0,a=e.points.length;i<a;i++){const t=e.points[i];this.points.push(new ie().fromArray(t))}return this}}Cc.prototype.isSplineCurve=!0;var xm=Object.freeze({__proto__:null,ArcCurve:Sm,CatmullRomCurve3:Mm,CubicBezierCurve:Rc,CubicBezierCurve3:km,EllipseCurve:Is,LineCurve:Ns,LineCurve3:l0,QuadraticBezierCurve:Tc,QuadraticBezierCurve3:wm,SplineCurve:Cc});class f0 extends Qi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),i=this.curves[this.curves.length-1].getPoint(1);e.equals(i)||this.curves.push(new Ns(i,e))}getPoint(e,i){const a=e*this.getLength(),t=this.getCurveLengths();let n=0;for(;n<t.length;){if(t[n]>=a){const s=t[n]-a,r=this.curves[n],l=r.getLength(),c=l===0?0:1-s/l;return r.getPointAt(c,i)}n++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let i=0;for(let a=0,t=this.curves.length;a<t;a++)i+=this.curves[a].getLength(),e.push(i);return this.cacheLengths=e,e}getSpacedPoints(e=40){const i=[];for(let a=0;a<=e;a++)i.push(this.getPoint(a/e));return this.autoClose&&i.push(i[0]),i}getPoints(e=12){const i=[];let a;for(let t=0,n=this.curves;t<n.length;t++){const s=n[t],r=s.isEllipseCurve?e*2:s.isLineCurve||s.isLineCurve3?1:s.isSplineCurve?e*s.points.length:e,l=s.getPoints(r);for(let c=0;c<l.length;c++){const f=l[c];a&&a.equals(f)||(i.push(f),a=f)}}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i}copy(e){super.copy(e),this.curves=[];for(let i=0,a=e.curves.length;i<a;i++){const t=e.curves[i];this.curves.push(t.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let i=0,a=this.curves.length;i<a;i++){const t=this.curves[i];e.curves.push(t.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let i=0,a=e.curves.length;i<a;i++){const t=e.curves[i];this.curves.push(new xm[t.type]().fromJSON(t))}return this}}class Xr extends f0{constructor(e){super(),this.type="Path",this.currentPoint=new ie,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let i=1,a=e.length;i<a;i++)this.lineTo(e[i].x,e[i].y);return this}moveTo(e,i){return this.currentPoint.set(e,i),this}lineTo(e,i){const a=new Ns(this.currentPoint.clone(),new ie(e,i));return this.curves.push(a),this.currentPoint.set(e,i),this}quadraticCurveTo(e,i,a,t){const n=new Tc(this.currentPoint.clone(),new ie(e,i),new ie(a,t));return this.curves.push(n),this.currentPoint.set(a,t),this}bezierCurveTo(e,i,a,t,n,s){const r=new Rc(this.currentPoint.clone(),new ie(e,i),new ie(a,t),new ie(n,s));return this.curves.push(r),this.currentPoint.set(n,s),this}splineThru(e){const i=[this.currentPoint.clone()].concat(e),a=new Cc(i);return this.curves.push(a),this.currentPoint.copy(e[e.length-1]),this}arc(e,i,a,t,n,s){const r=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+r,i+l,a,t,n,s),this}absarc(e,i,a,t,n,s){return this.absellipse(e,i,a,a,t,n,s),this}ellipse(e,i,a,t,n,s,r,l){const c=this.currentPoint.x,f=this.currentPoint.y;return this.absellipse(e+c,i+f,a,t,n,s,r,l),this}absellipse(e,i,a,t,n,s,r,l){const c=new Is(e,i,a,t,n,s,r,l);if(this.curves.length>0){const m=c.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(c);const f=c.getPoint(1);return this.currentPoint.copy(f),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}new T;new T;new T;new ci;class wo extends Xr{constructor(e){super(e),this.uuid=_a(),this.type="Shape",this.holes=[]}getPointsHoles(e){const i=[];for(let a=0,t=this.holes.length;a<t;a++)i[a]=this.holes[a].getPoints(e);return i}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let i=0,a=e.holes.length;i<a;i++){const t=e.holes[i];this.holes.push(t.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let i=0,a=this.holes.length;i<a;i++){const t=this.holes[i];e.holes.push(t.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let i=0,a=e.holes.length;i<a;i++){const t=e.holes[i];this.holes.push(new Xr().fromJSON(t))}return this}}const m0={triangulate:function(o,e,i=2){const a=e&&e.length,t=a?e[0]*i:o.length;let n=Am(o,0,t,i,!0);const s=[];if(!n||n.next===n.prev)return s;let r,l,c,f,m,u,d;if(a&&(n=g0(o,e,n,i)),o.length>80*i){r=c=o[0],l=f=o[1];for(let g=i;g<t;g+=i)m=o[g],u=o[g+1],m<r&&(r=m),u<l&&(l=u),m>c&&(c=m),u>f&&(f=u);d=Math.max(c-r,f-l),d=d!==0?1/d:0}return fo(n,s,i,r,l,d),s}};function Am(o,e,i,a,t){let n,s;if(t===R0(o,e,i,a)>0)for(n=e;n<i;n+=a)s=xf(n,o[n],o[n+1],s);else for(n=i-a;n>=e;n-=a)s=xf(n,o[n],o[n+1],s);return s&&Bs(s,s.next)&&(uo(s),s=s.next),s}function at(o,e){if(!o)return o;e||(e=o);let i=o,a;do if(a=!1,!i.steiner&&(Bs(i,i.next)||ai(i.prev,i,i.next)===0)){if(uo(i),i=e=i.prev,i===i.next)break;a=!0}else i=i.next;while(a||i!==e);return e}function fo(o,e,i,a,t,n,s){if(!o)return;!s&&n&&S0(o,a,t,n);let r=o,l,c;for(;o.prev!==o.next;){if(l=o.prev,c=o.next,n?d0(o,a,t,n):u0(o)){e.push(l.i/i),e.push(o.i/i),e.push(c.i/i),uo(o),o=c.next,r=c.next;continue}if(o=c,o===r){s?s===1?(o=p0(at(o),e,i),fo(o,e,i,a,t,n,2)):s===2&&h0(o,e,i,a,t,n):fo(at(o),e,i,a,t,n,1);break}}}function u0(o){const e=o.prev,i=o,a=o.next;if(ai(e,i,a)>=0)return!1;let t=o.next.next;for(;t!==o.prev;){if(fn(e.x,e.y,i.x,i.y,a.x,a.y,t.x,t.y)&&ai(t.prev,t,t.next)>=0)return!1;t=t.next}return!0}function d0(o,e,i,a){const t=o.prev,n=o,s=o.next;if(ai(t,n,s)>=0)return!1;const r=t.x<n.x?t.x<s.x?t.x:s.x:n.x<s.x?n.x:s.x,l=t.y<n.y?t.y<s.y?t.y:s.y:n.y<s.y?n.y:s.y,c=t.x>n.x?t.x>s.x?t.x:s.x:n.x>s.x?n.x:s.x,f=t.y>n.y?t.y>s.y?t.y:s.y:n.y>s.y?n.y:s.y,m=Yr(r,l,e,i,a),u=Yr(c,f,e,i,a);let d=o.prevZ,g=o.nextZ;for(;d&&d.z>=m&&g&&g.z<=u;){if(d!==o.prev&&d!==o.next&&fn(t.x,t.y,n.x,n.y,s.x,s.y,d.x,d.y)&&ai(d.prev,d,d.next)>=0||(d=d.prevZ,g!==o.prev&&g!==o.next&&fn(t.x,t.y,n.x,n.y,s.x,s.y,g.x,g.y)&&ai(g.prev,g,g.next)>=0))return!1;g=g.nextZ}for(;d&&d.z>=m;){if(d!==o.prev&&d!==o.next&&fn(t.x,t.y,n.x,n.y,s.x,s.y,d.x,d.y)&&ai(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;g&&g.z<=u;){if(g!==o.prev&&g!==o.next&&fn(t.x,t.y,n.x,n.y,s.x,s.y,g.x,g.y)&&ai(g.prev,g,g.next)>=0)return!1;g=g.nextZ}return!0}function p0(o,e,i){let a=o;do{const t=a.prev,n=a.next.next;!Bs(t,n)&&Rm(t,a,a.next,n)&&mo(t,n)&&mo(n,t)&&(e.push(t.i/i),e.push(a.i/i),e.push(n.i/i),uo(a),uo(a.next),a=o=n),a=a.next}while(a!==o);return at(a)}function h0(o,e,i,a,t,n){let s=o;do{let r=s.next.next;for(;r!==s.prev;){if(s.i!==r.i&&w0(s,r)){let l=Tm(s,r);s=at(s,s.next),l=at(l,l.next),fo(s,e,i,a,t,n),fo(l,e,i,a,t,n);return}r=r.next}s=s.next}while(s!==o)}function g0(o,e,i,a){const t=[];let n,s,r,l,c;for(n=0,s=e.length;n<s;n++)r=e[n]*a,l=n<s-1?e[n+1]*a:o.length,c=Am(o,r,l,a,!1),c===c.next&&(c.steiner=!0),t.push(k0(c));for(t.sort(b0),n=0;n<t.length;n++)v0(t[n],i),i=at(i,i.next);return i}function b0(o,e){return o.x-e.x}function v0(o,e){if(e=y0(o,e),e){const i=Tm(e,o);at(e,e.next),at(i,i.next)}}function y0(o,e){let i=e;const a=o.x,t=o.y;let n=-1/0,s;do{if(t<=i.y&&t>=i.next.y&&i.next.y!==i.y){const u=i.x+(t-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(u<=a&&u>n){if(n=u,u===a){if(t===i.y)return i;if(t===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!s)return null;if(a===n)return s;const r=s,l=s.x,c=s.y;let f=1/0,m;i=s;do a>=i.x&&i.x>=l&&a!==i.x&&fn(t<c?a:n,t,l,c,t<c?n:a,t,i.x,i.y)&&(m=Math.abs(t-i.y)/(a-i.x),mo(i,o)&&(m<f||m===f&&(i.x>s.x||i.x===s.x&&_0(s,i)))&&(s=i,f=m)),i=i.next;while(i!==r);return s}function _0(o,e){return ai(o.prev,o,e.prev)<0&&ai(e.next,o,o.next)<0}function S0(o,e,i,a){let t=o;do t.z===null&&(t.z=Yr(t.x,t.y,e,i,a)),t.prevZ=t.prev,t.nextZ=t.next,t=t.next;while(t!==o);t.prevZ.nextZ=null,t.prevZ=null,M0(t)}function M0(o){let e,i,a,t,n,s,r,l,c=1;do{for(i=o,o=null,n=null,s=0;i;){for(s++,a=i,r=0,e=0;e<c&&(r++,a=a.nextZ,!!a);e++);for(l=c;r>0||l>0&&a;)r!==0&&(l===0||!a||i.z<=a.z)?(t=i,i=i.nextZ,r--):(t=a,a=a.nextZ,l--),n?n.nextZ=t:o=t,t.prevZ=n,n=t;i=a}n.nextZ=null,c*=2}while(s>1);return o}function Yr(o,e,i,a,t){return o=32767*(o-i)*t,e=32767*(e-a)*t,o=(o|o<<8)&16711935,o=(o|o<<4)&252645135,o=(o|o<<2)&858993459,o=(o|o<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,o|e<<1}function k0(o){let e=o,i=o;do(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next;while(e!==o);return i}function fn(o,e,i,a,t,n,s,r){return(t-s)*(e-r)-(o-s)*(n-r)>=0&&(o-s)*(a-r)-(i-s)*(e-r)>=0&&(i-s)*(n-r)-(t-s)*(a-r)>=0}function w0(o,e){return o.next.i!==e.i&&o.prev.i!==e.i&&!x0(o,e)&&(mo(o,e)&&mo(e,o)&&A0(o,e)&&(ai(o.prev,o,e.prev)||ai(o,e.prev,e))||Bs(o,e)&&ai(o.prev,o,o.next)>0&&ai(e.prev,e,e.next)>0)}function ai(o,e,i){return(e.y-o.y)*(i.x-e.x)-(e.x-o.x)*(i.y-e.y)}function Bs(o,e){return o.x===e.x&&o.y===e.y}function Rm(o,e,i,a){const t=ns(ai(o,e,i)),n=ns(ai(o,e,a)),s=ns(ai(i,a,o)),r=ns(ai(i,a,e));return!!(t!==n&&s!==r||t===0&&ts(o,i,e)||n===0&&ts(o,a,e)||s===0&&ts(i,o,a)||r===0&&ts(i,e,a))}function ts(o,e,i){return e.x<=Math.max(o.x,i.x)&&e.x>=Math.min(o.x,i.x)&&e.y<=Math.max(o.y,i.y)&&e.y>=Math.min(o.y,i.y)}function ns(o){return o>0?1:o<0?-1:0}function x0(o,e){let i=o;do{if(i.i!==o.i&&i.next.i!==o.i&&i.i!==e.i&&i.next.i!==e.i&&Rm(i,i.next,o,e))return!0;i=i.next}while(i!==o);return!1}function mo(o,e){return ai(o.prev,o,o.next)<0?ai(o,e,o.next)>=0&&ai(o,o.prev,e)>=0:ai(o,e,o.prev)<0||ai(o,o.next,e)<0}function A0(o,e){let i=o,a=!1;const t=(o.x+e.x)/2,n=(o.y+e.y)/2;do i.y>n!=i.next.y>n&&i.next.y!==i.y&&t<(i.next.x-i.x)*(n-i.y)/(i.next.y-i.y)+i.x&&(a=!a),i=i.next;while(i!==o);return a}function Tm(o,e){const i=new $r(o.i,o.x,o.y),a=new $r(e.i,e.x,e.y),t=o.next,n=e.prev;return o.next=e,e.prev=o,i.next=t,t.prev=i,a.next=i,i.prev=a,n.next=a,a.prev=n,a}function xf(o,e,i,a){const t=new $r(o,e,i);return a?(t.next=a.next,t.prev=a,a.next.prev=t,a.next=t):(t.prev=t,t.next=t),t}function uo(o){o.next.prev=o.prev,o.prev.next=o.next,o.prevZ&&(o.prevZ.nextZ=o.nextZ),o.nextZ&&(o.nextZ.prevZ=o.prevZ)}function $r(o,e,i){this.i=o,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function R0(o,e,i,a){let t=0;for(let n=e,s=i-a;n<i;n+=a)t+=(o[s]-o[n])*(o[n+1]+o[s+1]),s=n;return t}class $a{static area(e){const i=e.length;let a=0;for(let t=i-1,n=0;n<i;t=n++)a+=e[t].x*e[n].y-e[n].x*e[t].y;return a*.5}static isClockWise(e){return $a.area(e)<0}static triangulateShape(e,i){const a=[],t=[],n=[];Af(e),Rf(a,e);let s=e.length;i.forEach(Af);for(let l=0;l<i.length;l++)t.push(s),s+=i[l].length,Rf(a,i[l]);const r=m0.triangulate(a,t);for(let l=0;l<r.length;l+=3)n.push(r.slice(l,l+3));return n}}function Af(o){const e=o.length;e>2&&o[e-1].equals(o[0])&&o.pop()}function Rf(o,e){for(let i=0;i<e.length;i++)o.push(e[i].x),o.push(e[i].y)}class Nn extends Xe{constructor(e=new wo([new ie(.5,.5),new ie(-.5,.5),new ie(-.5,-.5),new ie(.5,-.5)]),i={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:i},e=Array.isArray(e)?e:[e];const a=this,t=[],n=[];for(let r=0,l=e.length;r<l;r++){const c=e[r];s(c)}this.setAttribute("position",new ni(t,3)),this.setAttribute("uv",new ni(n,2)),this.computeVertexNormals();function s(r){const l=[],c=i.curveSegments!==void 0?i.curveSegments:12,f=i.steps!==void 0?i.steps:1;let m=i.depth!==void 0?i.depth:1,u=i.bevelEnabled!==void 0?i.bevelEnabled:!0,d=i.bevelThickness!==void 0?i.bevelThickness:.2,g=i.bevelSize!==void 0?i.bevelSize:d-.1,p=i.bevelOffset!==void 0?i.bevelOffset:0,h=i.bevelSegments!==void 0?i.bevelSegments:3;const b=i.extrudePath,_=i.UVGenerator!==void 0?i.UVGenerator:T0;i.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),m=i.amount);let k,M=!1,y,x,C,v;b&&(k=b.getSpacedPoints(f),M=!0,u=!1,y=b.computeFrenetFrames(f,!1),x=new T,C=new T,v=new T),u||(h=0,d=0,g=0,p=0);const A=r.extractPoints(c);let z=A.shape;const L=A.holes;if(!$a.isClockWise(z)){z=z.reverse();for(let J=0,q=L.length;J<q;J++){const ae=L[J];$a.isClockWise(ae)&&(L[J]=ae.reverse())}}const Z=$a.triangulateShape(z,L),P=z;for(let J=0,q=L.length;J<q;J++){const ae=L[J];z=z.concat(ae)}function G(J,q,ae){return q||console.error("THREE.ExtrudeGeometry: vec does not exist"),q.clone().multiplyScalar(ae).add(J)}const I=z.length,F=Z.length;function W(J,q,ae){let de,le,Ae;const _e=J.x-q.x,ve=J.y-q.y,Ye=ae.x-J.x,qe=ae.y-J.y,R=_e*_e+ve*ve,S=_e*qe-ve*Ye;if(Math.abs(S)>Number.EPSILON){const O=Math.sqrt(R),Q=Math.sqrt(Ye*Ye+qe*qe),ce=q.x-ve/O,me=q.y+_e/O,ye=ae.x-qe/Q,V=ae.y+Ye/Q,Te=((ye-ce)*qe-(V-me)*Ye)/(_e*qe-ve*Ye);de=ce+_e*Te-J.x,le=me+ve*Te-J.y;const Pe=de*de+le*le;if(Pe<=2)return new ie(de,le);Ae=Math.sqrt(Pe/2)}else{let O=!1;_e>Number.EPSILON?Ye>Number.EPSILON&&(O=!0):_e<-Number.EPSILON?Ye<-Number.EPSILON&&(O=!0):Math.sign(ve)===Math.sign(qe)&&(O=!0),O?(de=-ve,le=_e,Ae=Math.sqrt(R)):(de=_e,le=ve,Ae=Math.sqrt(R/2))}return new ie(de/Ae,le/Ae)}const D=[];for(let J=0,q=P.length,ae=q-1,de=J+1;J<q;J++,ae++,de++)ae===q&&(ae=0),de===q&&(de=0),D[J]=W(P[J],P[ae],P[de]);const H=[];let Y,X=D.concat();for(let J=0,q=L.length;J<q;J++){const ae=L[J];Y=[];for(let de=0,le=ae.length,Ae=le-1,_e=de+1;de<le;de++,Ae++,_e++)Ae===le&&(Ae=0),_e===le&&(_e=0),Y[de]=W(ae[de],ae[Ae],ae[_e]);H.push(Y),X=X.concat(Y)}for(let J=0;J<h;J++){const q=J/h,ae=d*Math.cos(q*Math.PI/2),de=g*Math.sin(q*Math.PI/2)+p;for(let le=0,Ae=P.length;le<Ae;le++){const _e=G(P[le],D[le],de);Ue(_e.x,_e.y,-ae)}for(let le=0,Ae=L.length;le<Ae;le++){const _e=L[le];Y=H[le];for(let ve=0,Ye=_e.length;ve<Ye;ve++){const qe=G(_e[ve],Y[ve],de);Ue(qe.x,qe.y,-ae)}}}const $=g+p;for(let J=0;J<I;J++){const q=u?G(z[J],X[J],$):z[J];M?(C.copy(y.normals[0]).multiplyScalar(q.x),x.copy(y.binormals[0]).multiplyScalar(q.y),v.copy(k[0]).add(C).add(x),Ue(v.x,v.y,v.z)):Ue(q.x,q.y,0)}for(let J=1;J<=f;J++)for(let q=0;q<I;q++){const ae=u?G(z[q],X[q],$):z[q];M?(C.copy(y.normals[J]).multiplyScalar(ae.x),x.copy(y.binormals[J]).multiplyScalar(ae.y),v.copy(k[J]).add(C).add(x),Ue(v.x,v.y,v.z)):Ue(ae.x,ae.y,m/f*J)}for(let J=h-1;J>=0;J--){const q=J/h,ae=d*Math.cos(q*Math.PI/2),de=g*Math.sin(q*Math.PI/2)+p;for(let le=0,Ae=P.length;le<Ae;le++){const _e=G(P[le],D[le],de);Ue(_e.x,_e.y,m+ae)}for(let le=0,Ae=L.length;le<Ae;le++){const _e=L[le];Y=H[le];for(let ve=0,Ye=_e.length;ve<Ye;ve++){const qe=G(_e[ve],Y[ve],de);M?Ue(qe.x,qe.y+k[f-1].y,k[f-1].x+ae):Ue(qe.x,qe.y,m+ae)}}}fe(),ge();function fe(){const J=t.length/3;if(u){let q=0,ae=I*q;for(let de=0;de<F;de++){const le=Z[de];Me(le[2]+ae,le[1]+ae,le[0]+ae)}q=f+h*2,ae=I*q;for(let de=0;de<F;de++){const le=Z[de];Me(le[0]+ae,le[1]+ae,le[2]+ae)}}else{for(let q=0;q<F;q++){const ae=Z[q];Me(ae[2],ae[1],ae[0])}for(let q=0;q<F;q++){const ae=Z[q];Me(ae[0]+I*f,ae[1]+I*f,ae[2]+I*f)}}a.addGroup(J,t.length/3-J,0)}function ge(){const J=t.length/3;let q=0;K(P,q),q+=P.length;for(let ae=0,de=L.length;ae<de;ae++){const le=L[ae];K(le,q),q+=le.length}a.addGroup(J,t.length/3-J,1)}function K(J,q){let ae=J.length;for(;--ae>=0;){const de=ae;let le=ae-1;le<0&&(le=J.length-1);for(let Ae=0,_e=f+h*2;Ae<_e;Ae++){const ve=I*Ae,Ye=I*(Ae+1),qe=q+de+ve,R=q+le+ve,S=q+le+Ye,O=q+de+Ye;Ce(qe,R,S,O)}}}function Ue(J,q,ae){l.push(J),l.push(q),l.push(ae)}function Me(J,q,ae){ne(J),ne(q),ne(ae);const de=t.length/3,le=_.generateTopUV(a,t,de-3,de-2,de-1);Ie(le[0]),Ie(le[1]),Ie(le[2])}function Ce(J,q,ae,de){ne(J),ne(q),ne(de),ne(q),ne(ae),ne(de);const le=t.length/3,Ae=_.generateSideWallUV(a,t,le-6,le-3,le-2,le-1);Ie(Ae[0]),Ie(Ae[1]),Ie(Ae[3]),Ie(Ae[1]),Ie(Ae[2]),Ie(Ae[3])}function ne(J){t.push(l[J*3+0]),t.push(l[J*3+1]),t.push(l[J*3+2])}function Ie(J){n.push(J.x),n.push(J.y)}}}toJSON(){const e=super.toJSON(),i=this.parameters.shapes,a=this.parameters.options;return C0(i,a,e)}static fromJSON(e,i){const a=[];for(let n=0,s=e.shapes.length;n<s;n++){const r=i[e.shapes[n]];a.push(r)}const t=e.options.extrudePath;return t!==void 0&&(e.options.extrudePath=new xm[t.type]().fromJSON(t)),new Nn(a,e.options)}}const T0={generateTopUV:function(o,e,i,a,t){const n=e[i*3],s=e[i*3+1],r=e[a*3],l=e[a*3+1],c=e[t*3],f=e[t*3+1];return[new ie(n,s),new ie(r,l),new ie(c,f)]},generateSideWallUV:function(o,e,i,a,t,n){const s=e[i*3],r=e[i*3+1],l=e[i*3+2],c=e[a*3],f=e[a*3+1],m=e[a*3+2],u=e[t*3],d=e[t*3+1],g=e[t*3+2],p=e[n*3],h=e[n*3+1],b=e[n*3+2];return Math.abs(r-f)<Math.abs(s-c)?[new ie(s,1-l),new ie(c,1-m),new ie(u,1-g),new ie(p,1-b)]:[new ie(r,1-l),new ie(f,1-m),new ie(d,1-g),new ie(h,1-b)]}};function C0(o,e,i){if(i.shapes=[],Array.isArray(o))for(let a=0,t=o.length;a<t;a++){const n=o[a];i.shapes.push(n.uuid)}else i.shapes.push(o.uuid);return e.extrudePath!==void 0&&(i.options.extrudePath=e.extrudePath.toJSON()),i}class Ec extends Xe{constructor(e=new wo([new ie(0,.5),new ie(-.5,-.5),new ie(.5,-.5)]),i=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:i};const a=[],t=[],n=[],s=[];let r=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let f=0;f<e.length;f++)c(e[f]),this.addGroup(r,l,f),r+=l,l=0;this.setIndex(a),this.setAttribute("position",new ni(t,3)),this.setAttribute("normal",new ni(n,3)),this.setAttribute("uv",new ni(s,2));function c(f){const m=t.length/3,u=f.extractPoints(i);let d=u.shape;const g=u.holes;$a.isClockWise(d)===!1&&(d=d.reverse());for(let h=0,b=g.length;h<b;h++){const _=g[h];$a.isClockWise(_)===!0&&(g[h]=_.reverse())}const p=$a.triangulateShape(d,g);for(let h=0,b=g.length;h<b;h++){const _=g[h];d=d.concat(_)}for(let h=0,b=d.length;h<b;h++){const _=d[h];t.push(_.x,_.y,0),n.push(0,0,1),s.push(_.x,_.y)}for(let h=0,b=p.length;h<b;h++){const _=p[h],k=_[0]+m,M=_[1]+m,y=_[2]+m;a.push(k,M,y),l+=3}}}toJSON(){const e=super.toJSON(),i=this.parameters.shapes;return E0(i,e)}static fromJSON(e,i){const a=[];for(let t=0,n=e.shapes.length;t<n;t++){const s=i[e.shapes[t]];a.push(s)}return new Ec(a,e.curveSegments)}}function E0(o,e){if(e.shapes=[],Array.isArray(o))for(let i=0,a=o.length;i<a;i++){const t=o[i];e.shapes.push(t.uuid)}else e.shapes.push(o.uuid);return e}class Ds extends Xe{constructor(e=1,i=32,a=16,t=0,n=Math.PI*2,s=0,r=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:i,heightSegments:a,phiStart:t,phiLength:n,thetaStart:s,thetaLength:r},i=Math.max(3,Math.floor(i)),a=Math.max(2,Math.floor(a));const l=Math.min(s+r,Math.PI);let c=0;const f=[],m=new T,u=new T,d=[],g=[],p=[],h=[];for(let b=0;b<=a;b++){const _=[],k=b/a;let M=0;b==0&&s==0?M=.5/i:b==a&&l==Math.PI&&(M=-.5/i);for(let y=0;y<=i;y++){const x=y/i;m.x=-e*Math.cos(t+x*n)*Math.sin(s+k*r),m.y=e*Math.cos(s+k*r),m.z=e*Math.sin(t+x*n)*Math.sin(s+k*r),g.push(m.x,m.y,m.z),u.copy(m).normalize(),p.push(u.x,u.y,u.z),h.push(x+M,1-k),_.push(c++)}f.push(_)}for(let b=0;b<a;b++)for(let _=0;_<i;_++){const k=f[b][_+1],M=f[b][_],y=f[b+1][_],x=f[b+1][_+1];(b!==0||s>0)&&d.push(k,M,x),(b!==a-1||l<Math.PI)&&d.push(M,y,x)}this.setIndex(d),this.setAttribute("position",new ni(g,3)),this.setAttribute("normal",new ni(p,3)),this.setAttribute("uv",new ni(h,2))}static fromJSON(e){return new Ds(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Cm extends mi{constructor(e){super(),this.type="ShadowMaterial",this.color=new he(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}Cm.prototype.isShadowMaterial=!0;class Em extends Ki{constructor(e){super(e),this.type="RawShaderMaterial"}}Em.prototype.isRawShaderMaterial=!0;class Pc extends mi{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new he(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=En,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}Pc.prototype.isMeshStandardMaterial=!0;class Pm extends Pc{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ie(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return wi(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(i){this.ior=(1+.4*i)/(1-.4*i)}}),this.sheenColor=new he(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new he(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new he(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}Pm.prototype.isMeshPhysicalMaterial=!0;class Lm extends mi{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new he(16777215),this.specular=new he(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=En,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=As,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}Lm.prototype.isMeshPhongMaterial=!0;class zm extends mi{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new he(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=En,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}zm.prototype.isMeshToonMaterial=!0;class Im extends mi{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=En,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}Im.prototype.isMeshNormalMaterial=!0;class Nm extends mi{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new he(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=As,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}Nm.prototype.isMeshLambertMaterial=!0;class Bm extends mi{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new he(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=En,this.normalScale=new ie(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}Bm.prototype.isMeshMatcapMaterial=!0;class Dm extends In{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Dm.prototype.isLineDashedMaterial=!0;const P0={ShadowMaterial:Cm,SpriteMaterial:kc,RawShaderMaterial:Em,ShaderMaterial:Ki,PointsMaterial:zs,MeshPhysicalMaterial:Pm,MeshStandardMaterial:Pc,MeshPhongMaterial:Lm,MeshToonMaterial:zm,MeshNormalMaterial:Im,MeshLambertMaterial:Nm,MeshDepthMaterial:_c,MeshDistanceMaterial:Sc,MeshBasicMaterial:Mo,MeshMatcapMaterial:Bm,LineDashedMaterial:Dm,LineBasicMaterial:In,Material:mi};mi.fromType=function(o){return new P0[o]};const Qe={arraySlice:function(o,e,i){return Qe.isTypedArray(o)?new o.constructor(o.subarray(e,i!==void 0?i:o.length)):o.slice(e,i)},convertArray:function(o,e,i){return!o||!i&&o.constructor===e?o:typeof e.BYTES_PER_ELEMENT=="number"?new e(o):Array.prototype.slice.call(o)},isTypedArray:function(o){return ArrayBuffer.isView(o)&&!(o instanceof DataView)},getKeyframeOrder:function(o){function e(t,n){return o[t]-o[n]}const i=o.length,a=new Array(i);for(let t=0;t!==i;++t)a[t]=t;return a.sort(e),a},sortedArray:function(o,e,i){const a=o.length,t=new o.constructor(a);for(let n=0,s=0;s!==a;++n){const r=i[n]*e;for(let l=0;l!==e;++l)t[s++]=o[r+l]}return t},flattenJSON:function(o,e,i,a){let t=1,n=o[0];for(;n!==void 0&&n[a]===void 0;)n=o[t++];if(n===void 0)return;let s=n[a];if(s!==void 0)if(Array.isArray(s))do s=n[a],s!==void 0&&(e.push(n.time),i.push.apply(i,s)),n=o[t++];while(n!==void 0);else if(s.toArray!==void 0)do s=n[a],s!==void 0&&(e.push(n.time),s.toArray(i,i.length)),n=o[t++];while(n!==void 0);else do s=n[a],s!==void 0&&(e.push(n.time),i.push(s)),n=o[t++];while(n!==void 0)},subclip:function(o,e,i,a,t=30){const n=o.clone();n.name=e;const s=[];for(let l=0;l<n.tracks.length;++l){const c=n.tracks[l],f=c.getValueSize(),m=[],u=[];for(let d=0;d<c.times.length;++d){const g=c.times[d]*t;if(!(g<i||g>=a)){m.push(c.times[d]);for(let p=0;p<f;++p)u.push(c.values[d*f+p])}}m.length!==0&&(c.times=Qe.convertArray(m,c.times.constructor),c.values=Qe.convertArray(u,c.values.constructor),s.push(c))}n.tracks=s;let r=1/0;for(let l=0;l<n.tracks.length;++l)r>n.tracks[l].times[0]&&(r=n.tracks[l].times[0]);for(let l=0;l<n.tracks.length;++l)n.tracks[l].shift(-1*r);return n.resetDuration(),n},makeClipAdditive:function(o,e=0,i=o,a=30){a<=0&&(a=30);const t=i.tracks.length,n=e/a;for(let s=0;s<t;++s){const r=i.tracks[s],l=r.ValueTypeName;if(l==="bool"||l==="string")continue;const c=o.tracks.find(function(b){return b.name===r.name&&b.ValueTypeName===l});if(c===void 0)continue;let f=0;const m=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=m/3);let u=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=d/3);const g=r.times.length-1;let p;if(n<=r.times[0]){const b=f,_=m-f;p=Qe.arraySlice(r.values,b,_)}else if(n>=r.times[g]){const b=g*m+f,_=b+m-f;p=Qe.arraySlice(r.values,b,_)}else{const b=r.createInterpolant(),_=f,k=m-f;b.evaluate(n),p=Qe.arraySlice(b.resultBuffer,_,k)}l==="quaternion"&&new Ni().fromArray(p).normalize().conjugate().toArray(p);const h=c.times.length;for(let b=0;b<h;++b){const _=b*d+u;if(l==="quaternion")Ni.multiplyQuaternionsFlat(c.values,_,p,0,c.values,_);else{const k=d-u*2;for(let M=0;M<k;++M)c.values[_+M]-=p[M]}}}return o.blendMode=im,o}};class tt{constructor(e,i,a,t){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=t!==void 0?t:new i.constructor(a),this.sampleValues=i,this.valueSize=a,this.settings=null,this.DefaultSettings_={}}evaluate(e){const i=this.parameterPositions;let a=this._cachedIndex,t=i[a],n=i[a-1];e:{i:{let s;a:{t:if(!(e<t)){for(let r=a+2;;){if(t===void 0){if(e<n)break t;return a=i.length,this._cachedIndex=a,this.afterEnd_(a-1,e,n)}if(a===r)break;if(n=t,t=i[++a],e<t)break i}s=i.length;break a}if(!(e>=n)){const r=i[1];e<r&&(a=2,n=r);for(let l=a-2;;){if(n===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,t);if(a===l)break;if(t=n,n=i[--a-1],e>=n)break i}s=a,a=0;break a}break e}for(;a<s;){const r=a+s>>>1;e<i[r]?s=r:a=r+1}if(t=i[a],n=i[a-1],n===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,t);if(t===void 0)return a=i.length,this._cachedIndex=a,this.afterEnd_(a-1,n,e)}this._cachedIndex=a,this.intervalChanged_(a,n,t)}return this.interpolate_(a,n,e,t)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const i=this.resultBuffer,a=this.sampleValues,t=this.valueSize,n=e*t;for(let s=0;s!==t;++s)i[s]=a[n+s];return i}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}tt.prototype.beforeStart_=tt.prototype.copySampleValue_;tt.prototype.afterEnd_=tt.prototype.copySampleValue_;class L0 extends tt{constructor(e,i,a,t){super(e,i,a,t),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:sn,endingEnd:sn}}intervalChanged_(e,i,a){const t=this.parameterPositions;let n=e-2,s=e+1,r=t[n],l=t[s];if(r===void 0)switch(this.getSettings_().endingStart){case rn:n=e,r=2*i-a;break;case ds:n=t.length-2,r=i+t[n]-t[n+1];break;default:n=e,r=a}if(l===void 0)switch(this.getSettings_().endingEnd){case rn:s=e,l=2*a-i;break;case ds:s=1,l=a+t[1]-t[0];break;default:s=e-1,l=i}const c=(a-i)*.5,f=this.valueSize;this._weightPrev=c/(i-r),this._weightNext=c/(l-a),this._offsetPrev=n*f,this._offsetNext=s*f}interpolate_(e,i,a,t){const n=this.resultBuffer,s=this.sampleValues,r=this.valueSize,l=e*r,c=l-r,f=this._offsetPrev,m=this._offsetNext,u=this._weightPrev,d=this._weightNext,g=(a-i)/(t-i),p=g*g,h=p*g,b=-u*h+2*u*p-u*g,_=(1+u)*h+(-1.5-2*u)*p+(-.5+u)*g+1,k=(-1-d)*h+(1.5+d)*p+.5*g,M=d*h-d*p;for(let y=0;y!==r;++y)n[y]=b*s[f+y]+_*s[c+y]+k*s[l+y]+M*s[m+y];return n}}class Gm extends tt{constructor(e,i,a,t){super(e,i,a,t)}interpolate_(e,i,a,t){const n=this.resultBuffer,s=this.sampleValues,r=this.valueSize,l=e*r,c=l-r,f=(a-i)/(t-i),m=1-f;for(let u=0;u!==r;++u)n[u]=s[c+u]*m+s[l+u]*f;return n}}class z0 extends tt{constructor(e,i,a,t){super(e,i,a,t)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ma{constructor(e,i,a,t){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(i===void 0||i.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Qe.convertArray(i,this.TimeBufferType),this.values=Qe.convertArray(a,this.ValueBufferType),this.setInterpolation(t||this.DefaultInterpolation)}static toJSON(e){const i=e.constructor;let a;if(i.toJSON!==this.toJSON)a=i.toJSON(e);else{a={name:e.name,times:Qe.convertArray(e.times,Array),values:Qe.convertArray(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(a.interpolation=t)}return a.type=e.ValueTypeName,a}InterpolantFactoryMethodDiscrete(e){return new z0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Gm(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new L0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let i;switch(e){case ms:i=this.InterpolantFactoryMethodDiscrete;break;case us:i=this.InterpolantFactoryMethodLinear;break;case qs:i=this.InterpolantFactoryMethodSmooth;break}if(i===void 0){const a="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(a);return console.warn("THREE.KeyframeTrack:",a),this}return this.createInterpolant=i,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ms;case this.InterpolantFactoryMethodLinear:return us;case this.InterpolantFactoryMethodSmooth:return qs}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const i=this.times;for(let a=0,t=i.length;a!==t;++a)i[a]+=e}return this}scale(e){if(e!==1){const i=this.times;for(let a=0,t=i.length;a!==t;++a)i[a]*=e}return this}trim(e,i){const a=this.times,t=a.length;let n=0,s=t-1;for(;n!==t&&a[n]<e;)++n;for(;s!==-1&&a[s]>i;)--s;if(++s,n!==0||s!==t){n>=s&&(s=Math.max(s,1),n=s-1);const r=this.getValueSize();this.times=Qe.arraySlice(a,n,s),this.values=Qe.arraySlice(this.values,n*r,s*r)}return this}validate(){let e=!0;const i=this.getValueSize();i-Math.floor(i)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const a=this.times,t=this.values,n=a.length;n===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let r=0;r!==n;r++){const l=a[r];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,r,l),e=!1;break}if(s!==null&&s>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,r,l,s),e=!1;break}s=l}if(t!==void 0&&Qe.isTypedArray(t))for(let r=0,l=t.length;r!==l;++r){const c=t[r];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,r,c),e=!1;break}}return e}optimize(){const e=Qe.arraySlice(this.times),i=Qe.arraySlice(this.values),a=this.getValueSize(),t=this.getInterpolation()===qs,n=e.length-1;let s=1;for(let r=1;r<n;++r){let l=!1;const c=e[r],f=e[r+1];if(c!==f&&(r!==1||c!==e[0]))if(t)l=!0;else{const m=r*a,u=m-a,d=m+a;for(let g=0;g!==a;++g){const p=i[m+g];if(p!==i[u+g]||p!==i[d+g]){l=!0;break}}}if(l){if(r!==s){e[s]=e[r];const m=r*a,u=s*a;for(let d=0;d!==a;++d)i[u+d]=i[m+d]}++s}}if(n>0){e[s]=e[n];for(let r=n*a,l=s*a,c=0;c!==a;++c)i[l+c]=i[r+c];++s}return s!==e.length?(this.times=Qe.arraySlice(e,0,s),this.values=Qe.arraySlice(i,0,s*a)):(this.times=e,this.values=i),this}clone(){const e=Qe.arraySlice(this.times,0),i=Qe.arraySlice(this.values,0),a=this.constructor,t=new a(this.name,e,i);return t.createInterpolant=this.createInterpolant,t}}Ma.prototype.TimeBufferType=Float32Array;Ma.prototype.ValueBufferType=Float32Array;Ma.prototype.DefaultInterpolation=us;class Bn extends Ma{}Bn.prototype.ValueTypeName="bool";Bn.prototype.ValueBufferType=Array;Bn.prototype.DefaultInterpolation=ms;Bn.prototype.InterpolantFactoryMethodLinear=void 0;Bn.prototype.InterpolantFactoryMethodSmooth=void 0;class Um extends Ma{}Um.prototype.ValueTypeName="color";class hs extends Ma{}hs.prototype.ValueTypeName="number";class I0 extends tt{constructor(e,i,a,t){super(e,i,a,t)}interpolate_(e,i,a,t){const n=this.resultBuffer,s=this.sampleValues,r=this.valueSize,l=(a-i)/(t-i);let c=e*r;for(let f=c+r;c!==f;c+=4)Ni.slerpFlat(n,0,s,c-r,s,c,l);return n}}class xo extends Ma{InterpolantFactoryMethodLinear(e){return new I0(this.times,this.values,this.getValueSize(),e)}}xo.prototype.ValueTypeName="quaternion";xo.prototype.DefaultInterpolation=us;xo.prototype.InterpolantFactoryMethodSmooth=void 0;class Dn extends Ma{}Dn.prototype.ValueTypeName="string";Dn.prototype.ValueBufferType=Array;Dn.prototype.DefaultInterpolation=ms;Dn.prototype.InterpolantFactoryMethodLinear=void 0;Dn.prototype.InterpolantFactoryMethodSmooth=void 0;class gs extends Ma{}gs.prototype.ValueTypeName="vector";class Tf{constructor(e,i=-1,a,t=uc){this.name=e,this.tracks=a,this.duration=i,this.blendMode=t,this.uuid=_a(),this.duration<0&&this.resetDuration()}static parse(e){const i=[],a=e.tracks,t=1/(e.fps||1);for(let s=0,r=a.length;s!==r;++s)i.push(B0(a[s]).scale(t));const n=new this(e.name,e.duration,i,e.blendMode);return n.uuid=e.uuid,n}static toJSON(e){const i=[],a=e.tracks,t={name:e.name,duration:e.duration,tracks:i,uuid:e.uuid,blendMode:e.blendMode};for(let n=0,s=a.length;n!==s;++n)i.push(Ma.toJSON(a[n]));return t}static CreateFromMorphTargetSequence(e,i,a,t){const n=i.length,s=[];for(let r=0;r<n;r++){let l=[],c=[];l.push((r+n-1)%n,r,(r+1)%n),c.push(0,1,0);const f=Qe.getKeyframeOrder(l);l=Qe.sortedArray(l,1,f),c=Qe.sortedArray(c,1,f),!t&&l[0]===0&&(l.push(n),c.push(c[0])),s.push(new hs(".morphTargetInfluences["+i[r].name+"]",l,c).scale(1/a))}return new this(e,-1,s)}static findByName(e,i){let a=e;if(!Array.isArray(e)){const t=e;a=t.geometry&&t.geometry.animations||t.animations}for(let t=0;t<a.length;t++)if(a[t].name===i)return a[t];return null}static CreateClipsFromMorphTargetSequences(e,i,a){const t={},n=/^([\w-]*?)([\d]+)$/;for(let r=0,l=e.length;r<l;r++){const c=e[r],f=c.name.match(n);if(f&&f.length>1){const m=f[1];let u=t[m];u||(t[m]=u=[]),u.push(c)}}const s=[];for(const r in t)s.push(this.CreateFromMorphTargetSequence(r,t[r],i,a));return s}static parseAnimation(e,i){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const a=function(m,u,d,g,p){if(d.length!==0){const h=[],b=[];Qe.flattenJSON(d,h,b,g),h.length!==0&&p.push(new m(u,h,b))}},t=[],n=e.name||"default",s=e.fps||30,r=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let m=0;m<c.length;m++){const u=c[m].keys;if(!(!u||u.length===0))if(u[0].morphTargets){const d={};let g;for(g=0;g<u.length;g++)if(u[g].morphTargets)for(let p=0;p<u[g].morphTargets.length;p++)d[u[g].morphTargets[p]]=-1;for(const p in d){const h=[],b=[];for(let _=0;_!==u[g].morphTargets.length;++_){const k=u[g];h.push(k.time),b.push(k.morphTarget===p?1:0)}t.push(new hs(".morphTargetInfluence["+p+"]",h,b))}l=d.length*s}else{const d=".bones["+i[m].name+"]";a(gs,d+".position",u,"pos",t),a(xo,d+".quaternion",u,"rot",t),a(gs,d+".scale",u,"scl",t)}}return t.length===0?null:new this(n,l,t,r)}resetDuration(){const e=this.tracks;let i=0;for(let a=0,t=e.length;a!==t;++a){const n=this.tracks[a];i=Math.max(i,n.times[n.times.length-1])}return this.duration=i,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let i=0;i<this.tracks.length;i++)e=e&&this.tracks[i].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let i=0;i<this.tracks.length;i++)e.push(this.tracks[i].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function N0(o){switch(o.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return hs;case"vector":case"vector2":case"vector3":case"vector4":return gs;case"color":return Um;case"quaternion":return xo;case"bool":case"boolean":return Bn;case"string":return Dn}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+o)}function B0(o){if(o.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=N0(o.type);if(o.times===void 0){const i=[],a=[];Qe.flattenJSON(o.keys,i,a,"value"),o.times=i,o.values=a}return e.parse!==void 0?e.parse(o):new e(o.name,o.times,o.values,o.interpolation)}const kn={enabled:!1,files:{},add:function(o,e){this.enabled!==!1&&(this.files[o]=e)},get:function(o){if(this.enabled!==!1)return this.files[o]},remove:function(o){delete this.files[o]},clear:function(){this.files={}}};class D0{constructor(e,i,a){const t=this;let n=!1,s=0,r=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=i,this.onError=a,this.itemStart=function(f){r++,n===!1&&t.onStart!==void 0&&t.onStart(f,s,r),n=!0},this.itemEnd=function(f){s++,t.onProgress!==void 0&&t.onProgress(f,s,r),s===r&&(n=!1,t.onLoad!==void 0&&t.onLoad())},this.itemError=function(f){t.onError!==void 0&&t.onError(f)},this.resolveURL=function(f){return l?l(f):f},this.setURLModifier=function(f){return l=f,this},this.addHandler=function(f,m){return c.push(f,m),this},this.removeHandler=function(f){const m=c.indexOf(f);return m!==-1&&c.splice(m,2),this},this.getHandler=function(f){for(let m=0,u=c.length;m<u;m+=2){const d=c[m],g=c[m+1];if(d.global&&(d.lastIndex=0),d.test(f))return g}return null}}}const G0=new D0;class ct{constructor(e){this.manager=e!==void 0?e:G0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,i){const a=this;return new Promise(function(t,n){a.load(e,t,i,n)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ta={};class U0 extends ct{constructor(e){super(e)}load(e,i,a,t){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const n=kn.get(e);if(n!==void 0)return this.manager.itemStart(e),setTimeout(()=>{i&&i(n),this.manager.itemEnd(e)},0),n;if(Ta[e]!==void 0){Ta[e].push({onLoad:i,onProgress:a,onError:t});return}Ta[e]=[],Ta[e].push({onLoad:i,onProgress:a,onError:t});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),r=this.mimeType,l=this.responseType;fetch(s).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body===void 0||c.body.getReader===void 0)return c;const f=Ta[e],m=c.body.getReader(),u=c.headers.get("Content-Length"),d=u?parseInt(u):0,g=d!==0;let p=0;const h=new ReadableStream({start(b){_();function _(){m.read().then(({done:k,value:M})=>{if(k)b.close();else{p+=M.byteLength;const y=new ProgressEvent("progress",{lengthComputable:g,loaded:p,total:d});for(let x=0,C=f.length;x<C;x++){const v=f[x];v.onProgress&&v.onProgress(y)}b.enqueue(M),_()}})}}});return new Response(h)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(f=>new DOMParser().parseFromString(f,r));case"json":return c.json();default:if(r===void 0)return c.text();{const m=/charset="?([^;"\s]*)"?/i.exec(r),u=m&&m[1]?m[1].toLowerCase():void 0,d=new TextDecoder(u);return c.arrayBuffer().then(g=>d.decode(g))}}}).then(c=>{kn.add(e,c);const f=Ta[e];delete Ta[e];for(let m=0,u=f.length;m<u;m++){const d=f[m];d.onLoad&&d.onLoad(c)}}).catch(c=>{const f=Ta[e];if(f===void 0)throw this.manager.itemError(e),c;delete Ta[e];for(let m=0,u=f.length;m<u;m++){const d=f[m];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Om extends ct{constructor(e){super(e)}load(e,i,a,t){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const n=this,s=kn.get(e);if(s!==void 0)return n.manager.itemStart(e),setTimeout(function(){i&&i(s),n.manager.itemEnd(e)},0),s;const r=co("img");function l(){f(),kn.add(e,this),i&&i(this),n.manager.itemEnd(e)}function c(m){f(),t&&t(m),n.manager.itemError(e),n.manager.itemEnd(e)}function f(){r.removeEventListener("load",l,!1),r.removeEventListener("error",c,!1)}return r.addEventListener("load",l,!1),r.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(r.crossOrigin=this.crossOrigin),n.manager.itemStart(e),r.src=e,r}}class O0 extends ct{constructor(e){super(e)}load(e,i,a,t){const n=new Es,s=new Om(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let r=0;function l(c){s.load(e[c],function(f){n.images[c]=f,r++,r===6&&(n.needsUpdate=!0,i&&i(n))},void 0,t)}for(let c=0;c<e.length;++c)l(c);return n}}class Fm extends ct{constructor(e){super(e)}load(e,i,a,t){const n=new bi,s=new Om(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(r){n.image=r,n.needsUpdate=!0,i!==void 0&&i(n)},a,t),n}}class Sa extends We{constructor(e,i=1){super(),this.type="Light",this.color=new he(e),this.intensity=i}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const i=super.toJSON(e);return i.object.color=this.color.getHex(),i.object.intensity=this.intensity,this.groundColor!==void 0&&(i.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(i.object.distance=this.distance),this.angle!==void 0&&(i.object.angle=this.angle),this.decay!==void 0&&(i.object.decay=this.decay),this.penumbra!==void 0&&(i.object.penumbra=this.penumbra),this.shadow!==void 0&&(i.object.shadow=this.shadow.toJSON()),i}}Sa.prototype.isLight=!0;class F0 extends Sa{constructor(e,i,a){super(e,a),this.type="HemisphereLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.groundColor=new he(i)}copy(e){return Sa.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}F0.prototype.isHemisphereLight=!0;const Cf=new be,Ef=new T,Pf=new T;class Lc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ie(512,512),this.map=null,this.mapPass=null,this.matrix=new be,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ps,this._frameExtents=new ie(1,1),this._viewportCount=1,this._viewports=[new je(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const i=this.camera,a=this.matrix;Ef.setFromMatrixPosition(e.matrixWorld),i.position.copy(Ef),Pf.setFromMatrixPosition(e.target.matrixWorld),i.lookAt(Pf),i.updateMatrixWorld(),Cf.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Cf),a.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),a.multiply(i.projectionMatrix),a.multiply(i.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Vm extends Lc{constructor(){super(new xi(50,1,.5,500)),this.focus=1}updateMatrices(e){const i=this.camera,a=Kr*2*e.angle*this.focus,t=this.mapSize.width/this.mapSize.height,n=e.distance||i.far;(a!==i.fov||t!==i.aspect||n!==i.far)&&(i.fov=a,i.aspect=t,i.far=n,i.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Vm.prototype.isSpotLightShadow=!0;class V0 extends Sa{constructor(e,i,a=0,t=Math.PI/3,n=0,s=1){super(e,i),this.type="SpotLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.target=new We,this.distance=a,this.angle=t,this.penumbra=n,this.decay=s,this.shadow=new Vm}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}V0.prototype.isSpotLight=!0;const Lf=new be,qn=new T,Tr=new T;class Hm extends Lc{constructor(){super(new xi(90,1,.5,500)),this._frameExtents=new ie(4,2),this._viewportCount=6,this._viewports=[new je(2,1,1,1),new je(0,1,1,1),new je(3,1,1,1),new je(1,1,1,1),new je(3,0,1,1),new je(1,0,1,1)],this._cubeDirections=[new T(1,0,0),new T(-1,0,0),new T(0,0,1),new T(0,0,-1),new T(0,1,0),new T(0,-1,0)],this._cubeUps=[new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,1,0),new T(0,0,1),new T(0,0,-1)]}updateMatrices(e,i=0){const a=this.camera,t=this.matrix,n=e.distance||a.far;n!==a.far&&(a.far=n,a.updateProjectionMatrix()),qn.setFromMatrixPosition(e.matrixWorld),a.position.copy(qn),Tr.copy(a.position),Tr.add(this._cubeDirections[i]),a.up.copy(this._cubeUps[i]),a.lookAt(Tr),a.updateMatrixWorld(),t.makeTranslation(-qn.x,-qn.y,-qn.z),Lf.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Lf)}}Hm.prototype.isPointLightShadow=!0;class H0 extends Sa{constructor(e,i,a=0,t=1){super(e,i),this.type="PointLight",this.distance=a,this.decay=t,this.shadow=new Hm}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}H0.prototype.isPointLight=!0;class Wm extends Lc{constructor(){super(new vc(-5,5,5,-5,.5,500))}}Wm.prototype.isDirectionalLightShadow=!0;class W0 extends Sa{constructor(e,i){super(e,i),this.type="DirectionalLight",this.position.copy(We.DefaultUp),this.updateMatrix(),this.target=new We,this.shadow=new Wm}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}W0.prototype.isDirectionalLight=!0;class K0 extends Sa{constructor(e,i){super(e,i),this.type="AmbientLight"}}K0.prototype.isAmbientLight=!0;class j0 extends Sa{constructor(e,i,a=10,t=10){super(e,i),this.type="RectAreaLight",this.width=a,this.height=t}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const i=super.toJSON(e);return i.object.width=this.width,i.object.height=this.height,i}}j0.prototype.isRectAreaLight=!0;class Km{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new T)}set(e){for(let i=0;i<9;i++)this.coefficients[i].copy(e[i]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,i){const a=e.x,t=e.y,n=e.z,s=this.coefficients;return i.copy(s[0]).multiplyScalar(.282095),i.addScaledVector(s[1],.488603*t),i.addScaledVector(s[2],.488603*n),i.addScaledVector(s[3],.488603*a),i.addScaledVector(s[4],1.092548*(a*t)),i.addScaledVector(s[5],1.092548*(t*n)),i.addScaledVector(s[6],.315392*(3*n*n-1)),i.addScaledVector(s[7],1.092548*(a*n)),i.addScaledVector(s[8],.546274*(a*a-t*t)),i}getIrradianceAt(e,i){const a=e.x,t=e.y,n=e.z,s=this.coefficients;return i.copy(s[0]).multiplyScalar(.886227),i.addScaledVector(s[1],2*.511664*t),i.addScaledVector(s[2],2*.511664*n),i.addScaledVector(s[3],2*.511664*a),i.addScaledVector(s[4],2*.429043*a*t),i.addScaledVector(s[5],2*.429043*t*n),i.addScaledVector(s[6],.743125*n*n-.247708),i.addScaledVector(s[7],2*.429043*a*n),i.addScaledVector(s[8],.429043*(a*a-t*t)),i}add(e){for(let i=0;i<9;i++)this.coefficients[i].add(e.coefficients[i]);return this}addScaledSH(e,i){for(let a=0;a<9;a++)this.coefficients[a].addScaledVector(e.coefficients[a],i);return this}scale(e){for(let i=0;i<9;i++)this.coefficients[i].multiplyScalar(e);return this}lerp(e,i){for(let a=0;a<9;a++)this.coefficients[a].lerp(e.coefficients[a],i);return this}equals(e){for(let i=0;i<9;i++)if(!this.coefficients[i].equals(e.coefficients[i]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,i=0){const a=this.coefficients;for(let t=0;t<9;t++)a[t].fromArray(e,i+t*3);return this}toArray(e=[],i=0){const a=this.coefficients;for(let t=0;t<9;t++)a[t].toArray(e,i+t*3);return e}static getBasisAt(e,i){const a=e.x,t=e.y,n=e.z;i[0]=.282095,i[1]=.488603*t,i[2]=.488603*n,i[3]=.488603*a,i[4]=1.092548*a*t,i[5]=1.092548*t*n,i[6]=.315392*(3*n*n-1),i[7]=1.092548*a*n,i[8]=.546274*(a*a-t*t)}}Km.prototype.isSphericalHarmonics3=!0;class zc extends Sa{constructor(e=new Km,i=1){super(void 0,i),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const i=super.toJSON(e);return i.object.sh=this.sh.toArray(),i}}zc.prototype.isLightProbe=!0;class q0{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let i="";for(let a=0,t=e.length;a<t;a++)i+=String.fromCharCode(e[a]);try{return decodeURIComponent(escape(i))}catch{return i}}static extractUrlBase(e){const i=e.lastIndexOf("/");return i===-1?"./":e.slice(0,i+1)}static resolveURL(e,i){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(i)&&/^\//.test(e)&&(i=i.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:i+e)}}class Z0 extends Xe{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Z0.prototype.isInstancedBufferGeometry=!0;class J0 extends ct{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,i,a,t){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const n=this,s=kn.get(e);if(s!==void 0)return n.manager.itemStart(e),setTimeout(function(){i&&i(s),n.manager.itemEnd(e)},0),s;const r={};r.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",r.headers=this.requestHeader,fetch(e,r).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(l){kn.add(e,l),i&&i(l),n.manager.itemEnd(e)}).catch(function(l){t&&t(l),n.manager.itemError(e),n.manager.itemEnd(e)}),n.manager.itemStart(e)}}J0.prototype.isImageBitmapLoader=!0;let os;const X0={getContext:function(){return os===void 0&&(os=new(window.AudioContext||window.webkitAudioContext)),os},setContext:function(o){os=o}};class Y0 extends ct{constructor(e){super(e)}load(e,i,a,t){const n=this,s=new U0(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(r){try{const l=r.slice(0);X0.getContext().decodeAudioData(l,function(f){i(f)})}catch(l){t?t(l):console.error(l),n.manager.itemError(e)}},a,t)}}class $0 extends zc{constructor(e,i,a=1){super(void 0,a);const t=new he().set(e),n=new he().set(i),s=new T(t.r,t.g,t.b),r=new T(n.r,n.g,n.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(r).multiplyScalar(l),this.sh.coefficients[1].copy(s).sub(r).multiplyScalar(c)}}$0.prototype.isHemisphereLightProbe=!0;class Q0 extends zc{constructor(e,i=1){super(void 0,i);const a=new he().set(e);this.sh.coefficients[0].set(a.r,a.g,a.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Q0.prototype.isAmbientLightProbe=!0;class ey extends We{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const i=this.context.createBufferSource();return i.buffer=this.buffer,i.loop=this.loop,i.loopStart=this.loopStart,i.loopEnd=this.loopEnd,i.onended=this.onEnded.bind(this),i.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=i,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,i=this.filters.length;e<i;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,i=this.filters.length;e<i;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class iy{constructor(e,i,a){this.binding=e,this.valueSize=a;let t,n,s;switch(i){case"quaternion":t=this._slerp,n=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(a*6),this._workIndex=5;break;case"string":case"bool":t=this._select,n=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(a*5);break;default:t=this._lerp,n=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(a*5)}this._mixBufferRegion=t,this._mixBufferRegionAdditive=n,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,i){const a=this.buffer,t=this.valueSize,n=e*t+t;let s=this.cumulativeWeight;if(s===0){for(let r=0;r!==t;++r)a[n+r]=a[r];s=i}else{s+=i;const r=i/s;this._mixBufferRegion(a,n,0,r,t)}this.cumulativeWeight=s}accumulateAdditive(e){const i=this.buffer,a=this.valueSize,t=a*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(i,t,0,e,a),this.cumulativeWeightAdditive+=e}apply(e){const i=this.valueSize,a=this.buffer,t=e*i+i,n=this.cumulativeWeight,s=this.cumulativeWeightAdditive,r=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,n<1){const l=i*this._origIndex;this._mixBufferRegion(a,t,l,1-n,i)}s>0&&this._mixBufferRegionAdditive(a,t,this._addIndex*i,1,i);for(let l=i,c=i+i;l!==c;++l)if(a[l]!==a[l+i]){r.setValue(a,t);break}}saveOriginalState(){const e=this.binding,i=this.buffer,a=this.valueSize,t=a*this._origIndex;e.getValue(i,t);for(let n=a,s=t;n!==s;++n)i[n]=i[t+n%a];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,i=e+this.valueSize;for(let a=e;a<i;a++)this.buffer[a]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,i=this._addIndex*this.valueSize;for(let a=0;a<this.valueSize;a++)this.buffer[i+a]=this.buffer[e+a]}_select(e,i,a,t,n){if(t>=.5)for(let s=0;s!==n;++s)e[i+s]=e[a+s]}_slerp(e,i,a,t){Ni.slerpFlat(e,i,e,i,e,a,t)}_slerpAdditive(e,i,a,t,n){const s=this._workIndex*n;Ni.multiplyQuaternionsFlat(e,s,e,i,e,a),Ni.slerpFlat(e,i,e,i,e,s,t)}_lerp(e,i,a,t,n){const s=1-t;for(let r=0;r!==n;++r){const l=i+r;e[l]=e[l]*s+e[a+r]*t}}_lerpAdditive(e,i,a,t,n){for(let s=0;s!==n;++s){const r=i+s;e[r]=e[r]+e[a+s]*t}}}const Ic="\\[\\]\\.:\\/",ay=new RegExp("["+Ic+"]","g"),Nc="[^"+Ic+"]",ty="[^"+Ic.replace("\\.","")+"]",ny=/((?:WC+[\/:])*)/.source.replace("WC",Nc),oy=/(WCOD+)?/.source.replace("WCOD",ty),sy=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Nc),ry=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Nc),cy=new RegExp("^"+ny+oy+sy+ry+"$"),ly=["material","materials","bones"];class fy{constructor(e,i,a){const t=a||He.parseTrackName(i);this._targetGroup=e,this._bindings=e.subscribe_(i,t)}getValue(e,i){this.bind();const a=this._targetGroup.nCachedObjects_,t=this._bindings[a];t!==void 0&&t.getValue(e,i)}setValue(e,i){const a=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=a.length;t!==n;++t)a[t].setValue(e,i)}bind(){const e=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=e.length;i!==a;++i)e[i].bind()}unbind(){const e=this._bindings;for(let i=this._targetGroup.nCachedObjects_,a=e.length;i!==a;++i)e[i].unbind()}}class He{constructor(e,i,a){this.path=i,this.parsedPath=a||He.parseTrackName(i),this.node=He.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,i,a){return e&&e.isAnimationObjectGroup?new He.Composite(e,i,a):new He(e,i,a)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ay,"")}static parseTrackName(e){const i=cy.exec(e);if(i===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const a={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]},t=a.nodeName&&a.nodeName.lastIndexOf(".");if(t!==void 0&&t!==-1){const n=a.nodeName.substring(t+1);ly.indexOf(n)!==-1&&(a.nodeName=a.nodeName.substring(0,t),a.objectName=n)}if(a.propertyName===null||a.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return a}static findNode(e,i){if(i===void 0||i===""||i==="."||i===-1||i===e.name||i===e.uuid)return e;if(e.skeleton){const a=e.skeleton.getBoneByName(i);if(a!==void 0)return a}if(e.children){const a=function(n){for(let s=0;s<n.length;s++){const r=n[s];if(r.name===i||r.uuid===i)return r;const l=a(r.children);if(l)return l}return null},t=a(e.children);if(t)return t}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,i){e[i]=this.targetObject[this.propertyName]}_getValue_array(e,i){const a=this.resolvedProperty;for(let t=0,n=a.length;t!==n;++t)e[i++]=a[t]}_getValue_arrayElement(e,i){e[i]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,i){this.resolvedProperty.toArray(e,i)}_setValue_direct(e,i){this.targetObject[this.propertyName]=e[i]}_setValue_direct_setNeedsUpdate(e,i){this.targetObject[this.propertyName]=e[i],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,i){this.targetObject[this.propertyName]=e[i],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,i){const a=this.resolvedProperty;for(let t=0,n=a.length;t!==n;++t)a[t]=e[i++]}_setValue_array_setNeedsUpdate(e,i){const a=this.resolvedProperty;for(let t=0,n=a.length;t!==n;++t)a[t]=e[i++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,i){const a=this.resolvedProperty;for(let t=0,n=a.length;t!==n;++t)a[t]=e[i++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,i){this.resolvedProperty[this.propertyIndex]=e[i]}_setValue_arrayElement_setNeedsUpdate(e,i){this.resolvedProperty[this.propertyIndex]=e[i],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,i){this.resolvedProperty[this.propertyIndex]=e[i],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,i){this.resolvedProperty.fromArray(e,i)}_setValue_fromArray_setNeedsUpdate(e,i){this.resolvedProperty.fromArray(e,i),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,i){this.resolvedProperty.fromArray(e,i),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,i){this.bind(),this.getValue(e,i)}_setValue_unbound(e,i){this.bind(),this.setValue(e,i)}bind(){let e=this.node;const i=this.parsedPath,a=i.objectName,t=i.propertyName;let n=i.propertyIndex;if(e||(e=He.findNode(this.rootNode,i.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(a){let c=i.objectIndex;switch(a){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let f=0;f<e.length;f++)if(e[f].name===c){c=f;break}break;default:if(e[a]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[a]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const s=e[t];if(s===void 0){const c=i.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+t+" but it wasn't found.",e);return}let r=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?r=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(r=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(n!==void 0){if(t==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[n]!==void 0&&(n=e.morphTargetDictionary[n])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=n}else s.fromArray!==void 0&&s.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=t;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][r]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}He.Composite=fy;He.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};He.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};He.prototype.GetterByBindingType=[He.prototype._getValue_direct,He.prototype._getValue_array,He.prototype._getValue_arrayElement,He.prototype._getValue_toArray];He.prototype.SetterByBindingTypeAndVersioning=[[He.prototype._setValue_direct,He.prototype._setValue_direct_setNeedsUpdate,He.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[He.prototype._setValue_array,He.prototype._setValue_array_setNeedsUpdate,He.prototype._setValue_array_setMatrixWorldNeedsUpdate],[He.prototype._setValue_arrayElement,He.prototype._setValue_arrayElement_setNeedsUpdate,He.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[He.prototype._setValue_fromArray,He.prototype._setValue_fromArray_setNeedsUpdate,He.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class my{constructor(e,i,a=null,t=i.blendMode){this._mixer=e,this._clip=i,this._localRoot=a,this.blendMode=t;const n=i.tracks,s=n.length,r=new Array(s),l={endingStart:sn,endingEnd:sn};for(let c=0;c!==s;++c){const f=n[c].createInterpolant(null);r[c]=f,f.settings=l}this._interpolantSettings=l,this._interpolants=r,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Xd,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,i){return this.loop=e,this.repetitions=i,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,i,a){if(e.fadeOut(i),this.fadeIn(i),a){const t=this._clip.duration,n=e._clip.duration,s=n/t,r=t/n;e.warp(1,s,i),this.warp(r,1,i)}return this}crossFadeTo(e,i,a){return e.crossFadeFrom(this,i,a)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,i,a){const t=this._mixer,n=t.time,s=this.timeScale;let r=this._timeScaleInterpolant;r===null&&(r=t._lendControlInterpolant(),this._timeScaleInterpolant=r);const l=r.parameterPositions,c=r.sampleValues;return l[0]=n,l[1]=n+a,c[0]=e/s,c[1]=i/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,i,a,t){if(!this.enabled){this._updateWeight(e);return}const n=this._startTime;if(n!==null){const l=(e-n)*a;if(l<0||a===0)return;this._startTime=null,i=a*l}i*=this._updateTimeScale(e);const s=this._updateTime(i),r=this._updateWeight(e);if(r>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case im:for(let f=0,m=l.length;f!==m;++f)l[f].evaluate(s),c[f].accumulateAdditive(r);break;case uc:default:for(let f=0,m=l.length;f!==m;++f)l[f].evaluate(s),c[f].accumulate(t,r)}}}_updateWeight(e){let i=0;if(this.enabled){i=this.weight;const a=this._weightInterpolant;if(a!==null){const t=a.evaluate(e)[0];i*=t,e>a.parameterPositions[1]&&(this.stopFading(),t===0&&(this.enabled=!1))}}return this._effectiveWeight=i,i}_updateTimeScale(e){let i=0;if(!this.paused){i=this.timeScale;const a=this._timeScaleInterpolant;a!==null&&(i*=a.evaluate(e)[0],e>a.parameterPositions[1]&&(this.stopWarping(),i===0?this.paused=!0:this.timeScale=i))}return this._effectiveTimeScale=i,i}_updateTime(e){const i=this._clip.duration,a=this.loop;let t=this.time+e,n=this._loopCount;const s=a===Yd;if(e===0)return n===-1?t:s&&(n&1)===1?i-t:t;if(a===Jd){n===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=i)t=i;else if(t<0)t=0;else{this.time=t;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(n===-1&&(e>=0?(n=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),t>=i||t<0){const r=Math.floor(t/i);t-=i*r,n+=Math.abs(r);const l=this.repetitions-n;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?i:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,s)}else this._setEndings(!1,!1,s);this._loopCount=n,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r})}}else this.time=t;if(s&&(n&1)===1)return i-t}return t}_setEndings(e,i,a){const t=this._interpolantSettings;a?(t.endingStart=rn,t.endingEnd=rn):(e?t.endingStart=this.zeroSlopeAtStart?rn:sn:t.endingStart=ds,i?t.endingEnd=this.zeroSlopeAtEnd?rn:sn:t.endingEnd=ds)}_scheduleFading(e,i,a){const t=this._mixer,n=t.time;let s=this._weightInterpolant;s===null&&(s=t._lendControlInterpolant(),this._weightInterpolant=s);const r=s.parameterPositions,l=s.sampleValues;return r[0]=n,l[0]=i,r[1]=n+e,l[1]=a,this}}class uy extends Pt{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,i){const a=e._localRoot||this._root,t=e._clip.tracks,n=t.length,s=e._propertyBindings,r=e._interpolants,l=a.uuid,c=this._bindingsByRootAndName;let f=c[l];f===void 0&&(f={},c[l]=f);for(let m=0;m!==n;++m){const u=t[m],d=u.name;let g=f[d];if(g!==void 0)++g.referenceCount,s[m]=g;else{if(g=s[m],g!==void 0){g._cacheIndex===null&&(++g.referenceCount,this._addInactiveBinding(g,l,d));continue}const p=i&&i._propertyBindings[m].binding.parsedPath;g=new iy(He.create(a,d,p),u.ValueTypeName,u.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,l,d),s[m]=g}r[m].resultBuffer=g.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const a=(e._localRoot||this._root).uuid,t=e._clip.uuid,n=this._actionsByClip[t];this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,t,a)}const i=e._propertyBindings;for(let a=0,t=i.length;a!==t;++a){const n=i[a];n.useCount++===0&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const i=e._propertyBindings;for(let a=0,t=i.length;a!==t;++a){const n=i[a];--n.useCount===0&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const i=e._cacheIndex;return i!==null&&i<this._nActiveActions}_addInactiveAction(e,i,a){const t=this._actions,n=this._actionsByClip;let s=n[i];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[i]=s;else{const r=s.knownActions;e._byClipCacheIndex=r.length,r.push(e)}e._cacheIndex=t.length,t.push(e),s.actionByRoot[a]=e}_removeInactiveAction(e){const i=this._actions,a=i[i.length-1],t=e._cacheIndex;a._cacheIndex=t,i[t]=a,i.pop(),e._cacheIndex=null;const n=e._clip.uuid,s=this._actionsByClip,r=s[n],l=r.knownActions,c=l[l.length-1],f=e._byClipCacheIndex;c._byClipCacheIndex=f,l[f]=c,l.pop(),e._byClipCacheIndex=null;const m=r.actionByRoot,u=(e._localRoot||this._root).uuid;delete m[u],l.length===0&&delete s[n],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const i=e._propertyBindings;for(let a=0,t=i.length;a!==t;++a){const n=i[a];--n.referenceCount===0&&this._removeInactiveBinding(n)}}_lendAction(e){const i=this._actions,a=e._cacheIndex,t=this._nActiveActions++,n=i[t];e._cacheIndex=t,i[t]=e,n._cacheIndex=a,i[a]=n}_takeBackAction(e){const i=this._actions,a=e._cacheIndex,t=--this._nActiveActions,n=i[t];e._cacheIndex=t,i[t]=e,n._cacheIndex=a,i[a]=n}_addInactiveBinding(e,i,a){const t=this._bindingsByRootAndName,n=this._bindings;let s=t[i];s===void 0&&(s={},t[i]=s),s[a]=e,e._cacheIndex=n.length,n.push(e)}_removeInactiveBinding(e){const i=this._bindings,a=e.binding,t=a.rootNode.uuid,n=a.path,s=this._bindingsByRootAndName,r=s[t],l=i[i.length-1],c=e._cacheIndex;l._cacheIndex=c,i[c]=l,i.pop(),delete r[n],Object.keys(r).length===0&&delete s[t]}_lendBinding(e){const i=this._bindings,a=e._cacheIndex,t=this._nActiveBindings++,n=i[t];e._cacheIndex=t,i[t]=e,n._cacheIndex=a,i[a]=n}_takeBackBinding(e){const i=this._bindings,a=e._cacheIndex,t=--this._nActiveBindings,n=i[t];e._cacheIndex=t,i[t]=e,n._cacheIndex=a,i[a]=n}_lendControlInterpolant(){const e=this._controlInterpolants,i=this._nActiveControlInterpolants++;let a=e[i];return a===void 0&&(a=new Gm(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),a.__cacheIndex=i,e[i]=a),a}_takeBackControlInterpolant(e){const i=this._controlInterpolants,a=e.__cacheIndex,t=--this._nActiveControlInterpolants,n=i[t];e.__cacheIndex=t,i[t]=e,n.__cacheIndex=a,i[a]=n}clipAction(e,i,a){const t=i||this._root,n=t.uuid;let s=typeof e=="string"?Tf.findByName(t,e):e;const r=s!==null?s.uuid:e,l=this._actionsByClip[r];let c=null;if(a===void 0&&(s!==null?a=s.blendMode:a=uc),l!==void 0){const m=l.actionByRoot[n];if(m!==void 0&&m.blendMode===a)return m;c=l.knownActions[0],s===null&&(s=c._clip)}if(s===null)return null;const f=new my(this,s,i,a);return this._bindAction(f,c),this._addInactiveAction(f,r,n),f}existingAction(e,i){const a=i||this._root,t=a.uuid,n=typeof e=="string"?Tf.findByName(a,e):e,s=n?n.uuid:e,r=this._actionsByClip[s];return r!==void 0&&r.actionByRoot[t]||null}stopAllAction(){const e=this._actions,i=this._nActiveActions;for(let a=i-1;a>=0;--a)e[a].stop();return this}update(e){e*=this.timeScale;const i=this._actions,a=this._nActiveActions,t=this.time+=e,n=Math.sign(e),s=this._accuIndex^=1;for(let c=0;c!==a;++c)i[c]._update(t,e,n,s);const r=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)r[c].apply(s);return this}setTime(e){this.time=0;for(let i=0;i<this._actions.length;i++)this._actions[i].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const i=this._actions,a=e.uuid,t=this._actionsByClip,n=t[a];if(n!==void 0){const s=n.knownActions;for(let r=0,l=s.length;r!==l;++r){const c=s[r];this._deactivateAction(c);const f=c._cacheIndex,m=i[i.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,m._cacheIndex=f,i[f]=m,i.pop(),this._removeInactiveBindingsForAction(c)}delete t[a]}}uncacheRoot(e){const i=e.uuid,a=this._actionsByClip;for(const s in a){const r=a[s].actionByRoot,l=r[i];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const t=this._bindingsByRootAndName,n=t[i];if(n!==void 0)for(const s in n){const r=n[s];r.restoreOriginalState(),this._removeInactiveBinding(r)}}uncacheAction(e,i){const a=this.existingAction(e,i);a!==null&&(this._deactivateAction(a),this._removeInactiveAction(a))}}uy.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class dy extends ko{constructor(e,i,a=1){super(e,i),this.meshPerAttribute=a}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const i=super.clone(e);return i.meshPerAttribute=this.meshPerAttribute,i}toJSON(e){const i=super.toJSON(e);return i.isInstancedInterleavedBuffer=!0,i.meshPerAttribute=this.meshPerAttribute,i}}dy.prototype.isInstancedInterleavedBuffer=!0;class jm{constructor(e,i,a=0,t=1/0){this.ray=new zt(e,i),this.near=a,this.far=t,this.camera=null,this.layers=new pc,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,i){this.ray.set(e,i)}setFromCamera(e,i){i.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(i.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(i).sub(this.ray.origin).normalize(),this.camera=i):i.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(i.near+i.far)/(i.near-i.far)).unproject(i),this.ray.direction.set(0,0,-1).transformDirection(i.matrixWorld),this.camera=i):console.error("THREE.Raycaster: Unsupported camera type: "+i.type)}intersectObject(e,i=!0,a=[]){return Qr(e,this,a,i),a.sort(zf),a}intersectObjects(e,i=!0,a=[]){for(let t=0,n=e.length;t<n;t++)Qr(e[t],this,a,i);return a.sort(zf),a}}function zf(o,e){return o.distance-e.distance}function Qr(o,e,i,a){if(o.layers.test(e.layers)&&o.raycast(e,i),a===!0){const t=o.children;for(let n=0,s=t.length;n<s;n++)Qr(t[n],e,i,!0)}}const Ka=new T,ss=new be,Cr=new be;class py extends xc{constructor(e){const i=qm(e),a=new Xe,t=[],n=[],s=new he(0,0,1),r=new he(0,1,0);for(let c=0;c<i.length;c++){const f=i[c];f.parent&&f.parent.isBone&&(t.push(0,0,0),t.push(0,0,0),n.push(s.r,s.g,s.b),n.push(r.r,r.g,r.b))}a.setAttribute("position",new ni(t,3)),a.setAttribute("color",new ni(n,3));const l=new In({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(a,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=i,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const i=this.bones,a=this.geometry,t=a.getAttribute("position");Cr.copy(this.root.matrixWorld).invert();for(let n=0,s=0;n<i.length;n++){const r=i[n];r.parent&&r.parent.isBone&&(ss.multiplyMatrices(Cr,r.matrixWorld),Ka.setFromMatrixPosition(ss),t.setXYZ(s,Ka.x,Ka.y,Ka.z),ss.multiplyMatrices(Cr,r.parent.matrixWorld),Ka.setFromMatrixPosition(ss),t.setXYZ(s+1,Ka.x,Ka.y,Ka.z),s+=2)}a.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function qm(o){const e=[];o.isBone===!0&&e.push(o);for(let i=0;i<o.children.length;i++)e.push.apply(e,qm(o.children[i]));return e}class hy extends xc{constructor(e=10,i=10,a=4473924,t=8947848){a=new he(a),t=new he(t);const n=i/2,s=e/i,r=e/2,l=[],c=[];for(let u=0,d=0,g=-r;u<=i;u++,g+=s){l.push(-r,0,g,r,0,g),l.push(g,0,-r,g,0,r);const p=u===n?a:t;p.toArray(c,d),d+=3,p.toArray(c,d),d+=3,p.toArray(c,d),d+=3,p.toArray(c,d),d+=3}const f=new Xe;f.setAttribute("position",new ni(l,3)),f.setAttribute("color",new ni(c,3));const m=new In({vertexColors:!0,toneMapped:!1});super(f,m),this.type="GridHelper"}}const ha=new Uint32Array(512),ga=new Uint32Array(512);for(let o=0;o<256;++o){const e=o-127;e<-27?(ha[o]=0,ha[o|256]=32768,ga[o]=24,ga[o|256]=24):e<-14?(ha[o]=1024>>-e-14,ha[o|256]=1024>>-e-14|32768,ga[o]=-e-1,ga[o|256]=-e-1):e<=15?(ha[o]=e+15<<10,ha[o|256]=e+15<<10|32768,ga[o]=13,ga[o|256]=13):e<128?(ha[o]=31744,ha[o|256]=64512,ga[o]=24,ga[o|256]=24):(ha[o]=31744,ha[o|256]=64512,ga[o]=13,ga[o|256]=13)}const Zm=new Uint32Array(2048),Ao=new Uint32Array(64),gy=new Uint32Array(64);for(let o=1;o<1024;++o){let e=o<<13,i=0;for(;(e&8388608)===0;)e<<=1,i-=8388608;e&=-8388609,i+=947912704,Zm[o]=e|i}for(let o=1024;o<2048;++o)Zm[o]=939524096+(o-1024<<13);for(let o=1;o<31;++o)Ao[o]=o<<23;Ao[31]=1199570944;Ao[32]=2147483648;for(let o=33;o<63;++o)Ao[o]=2147483648+(o-32<<23);Ao[63]=3347054592;for(let o=1;o<64;++o)o!==32&&(gy[o]=1024);Qi.create=function(o,e){return console.log("THREE.Curve.create() has been deprecated"),o.prototype=Object.create(Qi.prototype),o.prototype.constructor=o,o.prototype.getPoint=e,o};Xr.prototype.fromPoints=function(o){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(o)};hy.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};py.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};ct.prototype.extractUrlBase=function(o){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),q0.extractUrlBase(o)};ct.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};la.prototype.center=function(o){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(o)};la.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};la.prototype.isIntersectionBox=function(o){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(o)};la.prototype.isIntersectionSphere=function(o){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(o)};la.prototype.size=function(o){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(o)};It.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};Pn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Ps.prototype.setFromMatrix=function(o){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(o)};Si.prototype.flattenToArrayOffset=function(o,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(o,e)};Si.prototype.multiplyVector3=function(o){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),o.applyMatrix3(this)};Si.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Si.prototype.applyToBufferAttribute=function(o){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),o.applyMatrix3(this)};Si.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Si.prototype.getInverse=function(o){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(o).invert()};be.prototype.extractPosition=function(o){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(o)};be.prototype.flattenToArrayOffset=function(o,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(o,e)};be.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new T().setFromMatrixColumn(this,3)};be.prototype.setRotationFromQuaternion=function(o){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(o)};be.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};be.prototype.multiplyVector3=function(o){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),o.applyMatrix4(this)};be.prototype.multiplyVector4=function(o){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),o.applyMatrix4(this)};be.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};be.prototype.rotateAxis=function(o){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),o.transformDirection(this)};be.prototype.crossVector=function(o){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),o.applyMatrix4(this)};be.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};be.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};be.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};be.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};be.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};be.prototype.applyToBufferAttribute=function(o){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),o.applyMatrix4(this)};be.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};be.prototype.makeFrustum=function(o,e,i,a,t,n){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(o,e,a,i,t,n)};be.prototype.getInverse=function(o){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(o).invert()};Pa.prototype.isIntersectionLine=function(o){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(o)};Ni.prototype.multiplyVector3=function(o){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),o.applyQuaternion(this)};Ni.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};zt.prototype.isIntersectionBox=function(o){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(o)};zt.prototype.isIntersectionPlane=function(o){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(o)};zt.prototype.isIntersectionSphere=function(o){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(o)};ci.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};ci.prototype.barycoordFromPoint=function(o,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(o,e)};ci.prototype.midpoint=function(o){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(o)};ci.prototypenormal=function(o){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(o)};ci.prototype.plane=function(o){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(o)};ci.barycoordFromPoint=function(o,e,i,a,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ci.getBarycoord(o,e,i,a,t)};ci.normal=function(o,e,i,a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ci.getNormal(o,e,i,a)};wo.prototype.extractAllPoints=function(o){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(o)};wo.prototype.extrude=function(o){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Nn(this,o)};wo.prototype.makeGeometry=function(o){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ec(this,o)};ie.prototype.fromAttribute=function(o,e,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(o,e,i)};ie.prototype.distanceToManhattan=function(o){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(o)};ie.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};T.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};T.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};T.prototype.getPositionFromMatrix=function(o){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(o)};T.prototype.getScaleFromMatrix=function(o){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(o)};T.prototype.getColumnFromMatrix=function(o,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,o)};T.prototype.applyProjection=function(o){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(o)};T.prototype.fromAttribute=function(o,e,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(o,e,i)};T.prototype.distanceToManhattan=function(o){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(o)};T.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};je.prototype.fromAttribute=function(o,e,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(o,e,i)};je.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};We.prototype.getChildByName=function(o){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(o)};We.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};We.prototype.translate=function(o,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,o)};We.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};We.prototype.applyMatrix=function(o){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(o)};Object.defineProperties(We.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(o){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=o}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Mi.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(Mi.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),$d},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});ym.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};xi.prototype.setLens=function(o,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(o)};Object.defineProperties(Sa.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(o){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=o}},shadowCameraLeft:{set:function(o){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=o}},shadowCameraRight:{set:function(o){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=o}},shadowCameraTop:{set:function(o){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=o}},shadowCameraBottom:{set:function(o){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=o}},shadowCameraNear:{set:function(o){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=o}},shadowCameraFar:{set:function(o){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=o}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(o){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=o}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(o){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=o}},shadowMapHeight:{set:function(o){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=o}}});Object.defineProperties(fi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ps},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ps)}}});fi.prototype.setDynamic=function(o){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(o===!0?ps:ro),this};fi.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},fi.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Xe.prototype.addIndex=function(o){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(o)};Xe.prototype.addAttribute=function(o,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(o,new fi(arguments[1],arguments[2]))):o==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(o,e)};Xe.prototype.addDrawCall=function(o,e,i){i!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(o,e)};Xe.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Xe.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Xe.prototype.removeAttribute=function(o){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(o)};Xe.prototype.applyMatrix=function(o){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(o)};Object.defineProperties(Xe.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});ko.prototype.setDynamic=function(o){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(o===!0?ps:ro),this};ko.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Nn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Nn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Nn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};Mc.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(mi.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new he}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(o){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=o===Yf}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(o){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=o}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(Ki.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(o){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=o}}});Ke.prototype.clearTarget=function(o,e,i,a){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(o),this.clear(e,i,a)};Ke.prototype.animate=function(o){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(o)};Ke.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};Ke.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};Ke.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};Ke.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};Ke.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};Ke.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};Ke.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};Ke.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};Ke.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};Ke.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};Ke.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};Ke.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};Ke.prototype.enableScissorTest=function(o){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(o)};Ke.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};Ke.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};Ke.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};Ke.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};Ke.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};Ke.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};Ke.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};Ke.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};Ke.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};Ke.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(Ke.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(o){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=o}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(o){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=o}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(o){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=o===!0?$e:it}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(hm.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Hi.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(o){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=o}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(o){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=o}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(o){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=o}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(o){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=o}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(o){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=o}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(o){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=o}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(o){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=o}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(o){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=o}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(o){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=o}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(o){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=o}}});ey.prototype.load=function(o){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new Y0().load(o,function(a){e.setBuffer(a)}),this};gc.prototype.updateCubeMap=function(o,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(o,e)};gc.prototype.clear=function(o,e,i,a){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(o,e,i,a)};Lt.crossOrigin=void 0;Lt.loadTexture=function(o,e,i,a){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const t=new Fm;t.setCrossOrigin(this.crossOrigin);const n=t.load(o,i,void 0,a);return e&&(n.mapping=e),n};Lt.loadTextureCube=function(o,e,i,a){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const t=new O0;t.setCrossOrigin(this.crossOrigin);const n=t.load(o,i,void 0,a);return e&&(n.mapping=e),n};Lt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Lt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:mc}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=mc);function Ea(o){if(o===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return o}function Jm(o,e){o.prototype=Object.create(e.prototype),o.prototype.constructor=o,o.__proto__=e}/*!
 * GSAP 3.10.4
 * https://greensock.com
 *
 * @license Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var Wi={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},wn={duration:.5,overwrite:!1,delay:0},Bc,Ji=1e8,Je=1/Ji,ec=Math.PI*2,by=ec/4,vy=0,Xm=Math.sqrt,yy=Math.cos,_y=Math.sin,vi=function(e){return typeof e=="string"},gi=function(e){return typeof e=="function"},Na=function(e){return typeof e=="number"},Dc=function(e){return typeof e=="undefined"},Ba=function(e){return typeof e=="object"},Bi=function(e){return e!==!1},Ym=function(){return typeof window!="undefined"},rs=function(e){return gi(e)||vi(e)},$m=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},Ti=Array.isArray,ic=/(?:-?\.?\d|\.)+/gi,Qm=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,mn=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Er=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,eu=/[+-]=-?[.\d]+/,iu=/[^,'"\[\]\s]+/gi,Sy=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,ii,ba,ac,Gc,ji={},bs={},au,tu=function(e){return(bs=Et(e,ji))&&ca},Uc=function(e,i){return console.warn("Invalid property",e,"set to",i,"Missing plugin? gsap.registerPlugin()")},vs=function(e,i){return!i&&console.warn(e)},nu=function(e,i){return e&&(ji[e]=i)&&bs&&(bs[e]=i)||ji},po=function(){return 0},Oc={},Qa=[],tc={},ou,Fi={},Pr={},If=30,fs=[],Fc="",Vc=function(e){var i=e[0],a,t;if(Ba(i)||gi(i)||(e=[e]),!(a=(i._gsap||{}).harness)){for(t=fs.length;t--&&!fs[t].targetTest(i););a=fs[t]}for(t=e.length;t--;)e[t]&&(e[t]._gsap||(e[t]._gsap=new Ru(e[t],a)))||e.splice(t,1);return e},xt=function(e){return e._gsap||Vc(Xi(e))[0]._gsap},su=function(e,i,a){return(a=e[i])&&gi(a)?e[i]():Dc(a)&&e.getAttribute&&e.getAttribute(i)||a},Di=function(e,i){return(e=e.split(",")).forEach(i)||e},oi=function(e){return Math.round(e*1e5)/1e5||0},Ai=function(e){return Math.round(e*1e7)/1e7||0},hn=function(e,i){var a=i.charAt(0),t=parseFloat(i.substr(2));return e=parseFloat(e),a==="+"?e+t:a==="-"?e-t:a==="*"?e*t:e/t},My=function(e,i){for(var a=i.length,t=0;e.indexOf(i[t])<0&&++t<a;);return t<a},ys=function(){var e=Qa.length,i=Qa.slice(0),a,t;for(tc={},Qa.length=0,a=0;a<e;a++)t=i[a],t&&t._lazy&&(t.render(t._lazy[0],t._lazy[1],!0)._lazy=0)},ru=function(e,i,a,t){Qa.length&&ys(),e.render(i,a,t),Qa.length&&ys()},cu=function(e){var i=parseFloat(e);return(i||i===0)&&(e+"").match(iu).length<2?i:vi(e)?e.trim():e},lu=function(e){return e},ea=function(e,i){for(var a in i)a in e||(e[a]=i[a]);return e},ky=function(e){return function(i,a){for(var t in a)t in i||t==="duration"&&e||t==="ease"||(i[t]=a[t])}},Et=function(e,i){for(var a in i)e[a]=i[a];return e},Nf=function o(e,i){for(var a in i)a!=="__proto__"&&a!=="constructor"&&a!=="prototype"&&(e[a]=Ba(i[a])?o(e[a]||(e[a]={}),i[a]):i[a]);return e},_s=function(e,i){var a={},t;for(t in e)t in i||(a[t]=e[t]);return a},io=function(e){var i=e.parent||ii,a=e.keyframes?ky(Ti(e.keyframes)):ea;if(Bi(e.inherit))for(;i;)a(e,i.vars.defaults),i=i.parent||i._dp;return e},wy=function(e,i){for(var a=e.length,t=a===i.length;t&&a--&&e[a]===i[a];);return a<0},fu=function(e,i,a,t,n){a===void 0&&(a="_first"),t===void 0&&(t="_last");var s=e[t],r;if(n)for(r=i[n];s&&s[n]>r;)s=s._prev;return s?(i._next=s._next,s._next=i):(i._next=e[a],e[a]=i),i._next?i._next._prev=i:e[t]=i,i._prev=s,i.parent=i._dp=e,i},Gs=function(e,i,a,t){a===void 0&&(a="_first"),t===void 0&&(t="_last");var n=i._prev,s=i._next;n?n._next=s:e[a]===i&&(e[a]=s),s?s._prev=n:e[t]===i&&(e[t]=n),i._next=i._prev=i.parent=null},za=function(e,i){e.parent&&(!i||e.parent.autoRemoveChildren)&&e.parent.remove(e),e._act=0},At=function(e,i){if(e&&(!i||i._end>e._dur||i._start<0))for(var a=e;a;)a._dirty=1,a=a.parent;return e},xy=function(e){for(var i=e.parent;i&&i.parent;)i._dirty=1,i.totalDuration(),i=i.parent;return e},Ay=function o(e){return!e||e._ts&&o(e.parent)},Bf=function(e){return e._repeat?xn(e._tTime,e=e.duration()+e._rDelay)*e:0},xn=function(e,i){var a=Math.floor(e/=i);return e&&a===e?a-1:a},Ss=function(e,i){return(e-i._start)*i._ts+(i._ts>=0?0:i._dirty?i.totalDuration():i._tDur)},Us=function(e){return e._end=Ai(e._start+(e._tDur/Math.abs(e._ts||e._rts||Je)||0))},Hc=function(e,i){var a=e._dp;return a&&a.smoothChildTiming&&e._ts&&(e._start=Ai(a._time-(e._ts>0?i/e._ts:((e._dirty?e.totalDuration():e._tDur)-i)/-e._ts)),Us(e),a._dirty||At(a,e)),e},mu=function(e,i){var a;if((i._time||i._initted&&!i._dur)&&(a=Ss(e.rawTime(),i),(!i._dur||Ro(0,i.totalDuration(),a)-i._tTime>Je)&&i.render(a,!0)),At(e,i)._dp&&e._initted&&e._time>=e._dur&&e._ts){if(e._dur<e.duration())for(a=e;a._dp;)a.rawTime()>=0&&a.totalTime(a._tTime),a=a._dp;e._zTime=-Je}},ya=function(e,i,a,t){return i.parent&&za(i),i._start=Ai((Na(a)?a:a||e!==ii?Zi(e,a,i):e._time)+i._delay),i._end=Ai(i._start+(i.totalDuration()/Math.abs(i.timeScale())||0)),fu(e,i,"_first","_last",e._sort?"_start":0),nc(i)||(e._recent=i),t||mu(e,i),e},uu=function(e,i){return(ji.ScrollTrigger||Uc("scrollTrigger",i))&&ji.ScrollTrigger.create(i,e)},du=function(e,i,a,t){if(Kc(e,i),!e._initted)return 1;if(!a&&e._pt&&(e._dur&&e.vars.lazy!==!1||!e._dur&&e.vars.lazy)&&ou!==Vi.frame)return Qa.push(e),e._lazy=[i,t],1},Ry=function o(e){var i=e.parent;return i&&i._ts&&i._initted&&!i._lock&&(i.rawTime()<0||o(i))},nc=function(e){var i=e.data;return i==="isFromStart"||i==="isStart"},Ty=function(e,i,a,t){var n=e.ratio,s=i<0||!i&&(!e._start&&Ry(e)&&!(!e._initted&&nc(e))||(e._ts<0||e._dp._ts<0)&&!nc(e))?0:1,r=e._rDelay,l=0,c,f,m;if(r&&e._repeat&&(l=Ro(0,e._tDur,i),f=xn(l,r),e._yoyo&&f&1&&(s=1-s),f!==xn(e._tTime,r)&&(n=1-s,e.vars.repeatRefresh&&e._initted&&e.invalidate())),s!==n||t||e._zTime===Je||!i&&e._zTime){if(!e._initted&&du(e,i,t,a))return;for(m=e._zTime,e._zTime=i||(a?Je:0),a||(a=i&&!m),e.ratio=s,e._from&&(s=1-s),e._time=0,e._tTime=l,c=e._pt;c;)c.r(s,c.d),c=c._next;e._startAt&&i<0&&e._startAt.render(i,!0,!0),e._onUpdate&&!a&&Yi(e,"onUpdate"),l&&e._repeat&&!a&&e.parent&&Yi(e,"onRepeat"),(i>=e._tDur||i<0)&&e.ratio===s&&(s&&za(e,1),a||(Yi(e,s?"onComplete":"onReverseComplete",!0),e._prom&&e._prom()))}else e._zTime||(e._zTime=i)},Cy=function(e,i,a){var t;if(a>i)for(t=e._first;t&&t._start<=a;){if(t.data==="isPause"&&t._start>i)return t;t=t._next}else for(t=e._last;t&&t._start>=a;){if(t.data==="isPause"&&t._start<i)return t;t=t._prev}},An=function(e,i,a,t){var n=e._repeat,s=Ai(i)||0,r=e._tTime/e._tDur;return r&&!t&&(e._time*=s/e._dur),e._dur=s,e._tDur=n?n<0?1e10:Ai(s*(n+1)+e._rDelay*n):s,r>0&&!t?Hc(e,e._tTime=e._tDur*r):e.parent&&Us(e),a||At(e.parent,e),e},Df=function(e){return e instanceof Ii?At(e):An(e,e._dur)},Ey={_start:0,endTime:po,totalDuration:po},Zi=function o(e,i,a){var t=e.labels,n=e._recent||Ey,s=e.duration()>=Ji?n.endTime(!1):e._dur,r,l,c;return vi(i)&&(isNaN(i)||i in t)?(l=i.charAt(0),c=i.substr(-1)==="%",r=i.indexOf("="),l==="<"||l===">"?(r>=0&&(i=i.replace(/=/,"")),(l==="<"?n._start:n.endTime(n._repeat>=0))+(parseFloat(i.substr(1))||0)*(c?(r<0?n:a).totalDuration()/100:1)):r<0?(i in t||(t[i]=s),t[i]):(l=parseFloat(i.charAt(r-1)+i.substr(r+1)),c&&a&&(l=l/100*(Ti(a)?a[0]:a).totalDuration()),r>1?o(e,i.substr(0,r-1),a)+l:s+l)):i==null?s:+i},ao=function(e,i,a){var t=Na(i[1]),n=(t?2:1)+(e<2?0:1),s=i[n],r,l;if(t&&(s.duration=i[1]),s.parent=a,e){for(r=s,l=a;l&&!("immediateRender"in r);)r=l.vars.defaults||{},l=Bi(l.vars.inherit)&&l.parent;s.immediateRender=Bi(r.immediateRender),e<2?s.runBackwards=1:s.startAt=i[n-1]}return new di(i[0],s,i[n+1])},lt=function(e,i){return e||e===0?i(e):i},Ro=function(e,i,a){return a<e?e:a>i?i:a},Ri=function(e,i){return!vi(e)||!(i=Sy.exec(e))?"":i[1]},Py=function(e,i,a){return lt(a,function(t){return Ro(e,i,t)})},oc=[].slice,pu=function(e,i){return e&&Ba(e)&&"length"in e&&(!i&&!e.length||e.length-1 in e&&Ba(e[0]))&&!e.nodeType&&e!==ba},Ly=function(e,i,a){return a===void 0&&(a=[]),e.forEach(function(t){var n;return vi(t)&&!i||pu(t,1)?(n=a).push.apply(n,Xi(t)):a.push(t)})||a},Xi=function(e,i,a){return vi(e)&&!a&&(ac||!Rn())?oc.call((i||Gc).querySelectorAll(e),0):Ti(e)?Ly(e,a):pu(e)?oc.call(e,0):e?[e]:[]},zy=function(e){return e=Xi(e)[0]||vs("Invalid scope")||{},function(i){var a=e.current||e.nativeElement||e;return Xi(i,a.querySelectorAll?a:a===e?vs("Invalid scope")||Gc.createElement("div"):e)}},hu=function(e){return e.sort(function(){return .5-Math.random()})},gu=function(e){if(gi(e))return e;var i=Ba(e)?e:{each:e},a=Rt(i.ease),t=i.from||0,n=parseFloat(i.base)||0,s={},r=t>0&&t<1,l=isNaN(t)||r,c=i.axis,f=t,m=t;return vi(t)?f=m={center:.5,edges:.5,end:1}[t]||0:!r&&l&&(f=t[0],m=t[1]),function(u,d,g){var p=(g||i).length,h=s[p],b,_,k,M,y,x,C,v,A;if(!h){if(A=i.grid==="auto"?0:(i.grid||[1,Ji])[1],!A){for(C=-Ji;C<(C=g[A++].getBoundingClientRect().left)&&A<p;);A--}for(h=s[p]=[],b=l?Math.min(A,p)*f-.5:t%A,_=A===Ji?0:l?p*m/A-.5:t/A|0,C=0,v=Ji,x=0;x<p;x++)k=x%A-b,M=_-(x/A|0),h[x]=y=c?Math.abs(c==="y"?M:k):Xm(k*k+M*M),y>C&&(C=y),y<v&&(v=y);t==="random"&&hu(h),h.max=C-v,h.min=v,h.v=p=(parseFloat(i.amount)||parseFloat(i.each)*(A>p?p-1:c?c==="y"?p/A:A:Math.max(A,p/A))||0)*(t==="edges"?-1:1),h.b=p<0?n-p:n,h.u=Ri(i.amount||i.each)||0,a=a&&p<0?wu(a):a}return p=(h[u]-h.min)/h.max||0,Ai(h.b+(a?a(p):p)*h.v)+h.u}},sc=function(e){var i=Math.pow(10,((e+"").split(".")[1]||"").length);return function(a){var t=Math.round(parseFloat(a)/e)*e*i;return(t-t%1)/i+(Na(a)?0:Ri(a))}},bu=function(e,i){var a=Ti(e),t,n;return!a&&Ba(e)&&(t=a=e.radius||Ji,e.values?(e=Xi(e.values),(n=!Na(e[0]))&&(t*=t)):e=sc(e.increment)),lt(i,a?gi(e)?function(s){return n=e(s),Math.abs(n-s)<=t?n:s}:function(s){for(var r=parseFloat(n?s.x:s),l=parseFloat(n?s.y:0),c=Ji,f=0,m=e.length,u,d;m--;)n?(u=e[m].x-r,d=e[m].y-l,u=u*u+d*d):u=Math.abs(e[m]-r),u<c&&(c=u,f=m);return f=!t||c<=t?e[f]:s,n||f===s||Na(s)?f:f+Ri(s)}:sc(e))},vu=function(e,i,a,t){return lt(Ti(e)?!i:a===!0?!!(a=0):!t,function(){return Ti(e)?e[~~(Math.random()*e.length)]:(a=a||1e-5)&&(t=a<1?Math.pow(10,(a+"").length-2):1)&&Math.floor(Math.round((e-a/2+Math.random()*(i-e+a*.99))/a)*a*t)/t})},Iy=function(){for(var e=arguments.length,i=new Array(e),a=0;a<e;a++)i[a]=arguments[a];return function(t){return i.reduce(function(n,s){return s(n)},t)}},Ny=function(e,i){return function(a){return e(parseFloat(a))+(i||Ri(a))}},By=function(e,i,a){return _u(e,i,0,1,a)},yu=function(e,i,a){return lt(a,function(t){return e[~~i(t)]})},Dy=function o(e,i,a){var t=i-e;return Ti(e)?yu(e,o(0,e.length),i):lt(a,function(n){return(t+(n-e)%t)%t+e})},Gy=function o(e,i,a){var t=i-e,n=t*2;return Ti(e)?yu(e,o(0,e.length-1),i):lt(a,function(s){return s=(n+(s-e)%n)%n||0,e+(s>t?n-s:s)})},ho=function(e){for(var i=0,a="",t,n,s,r;~(t=e.indexOf("random(",i));)s=e.indexOf(")",t),r=e.charAt(t+7)==="[",n=e.substr(t+7,s-t-7).match(r?iu:ic),a+=e.substr(i,t-i)+vu(r?n:+n[0],r?0:+n[1],+n[2]||1e-5),i=s+1;return a+e.substr(i,e.length-i)},_u=function(e,i,a,t,n){var s=i-e,r=t-a;return lt(n,function(l){return a+((l-e)/s*r||0)})},Uy=function o(e,i,a,t){var n=isNaN(e+i)?0:function(d){return(1-d)*e+d*i};if(!n){var s=vi(e),r={},l,c,f,m,u;if(a===!0&&(t=1)&&(a=null),s)e={p:e},i={p:i};else if(Ti(e)&&!Ti(i)){for(f=[],m=e.length,u=m-2,c=1;c<m;c++)f.push(o(e[c-1],e[c]));m--,n=function(g){g*=m;var p=Math.min(u,~~g);return f[p](g-p)},a=i}else t||(e=Et(Ti(e)?[]:{},e));if(!f){for(l in i)Wc.call(r,e,l,"get",i[l]);n=function(g){return Zc(g,r)||(s?e.p:e)}}}return lt(a,n)},Gf=function(e,i,a){var t=e.labels,n=Ji,s,r,l;for(s in t)r=t[s]-i,r<0==!!a&&r&&n>(r=Math.abs(r))&&(l=s,n=r);return l},Yi=function(e,i,a){var t=e.vars,n=t[i],s,r;if(!!n)return s=t[i+"Params"],r=t.callbackScope||e,a&&Qa.length&&ys(),s?n.apply(r,s):n.call(r)},Yn=function(e){return za(e),e.scrollTrigger&&e.scrollTrigger.kill(!1),e.progress()<1&&Yi(e,"onInterrupt"),e},un,Oy=function(e){e=!e.name&&e.default||e;var i=e.name,a=gi(e),t=i&&!a&&e.init?function(){this._props=[]}:e,n={init:po,render:Zc,add:Wc,kill:a_,modifier:i_,rawVars:0},s={targetTest:0,get:0,getSetter:qc,aliases:{},register:0};if(Rn(),e!==t){if(Fi[i])return;ea(t,ea(_s(e,n),s)),Et(t.prototype,Et(n,_s(e,s))),Fi[t.prop=i]=t,e.targetTest&&(fs.push(t),Oc[i]=1),i=(i==="css"?"CSS":i.charAt(0).toUpperCase()+i.substr(1))+"Plugin"}nu(i,t),e.register&&e.register(ca,t,Gi)},Ze=255,$n={aqua:[0,Ze,Ze],lime:[0,Ze,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,Ze],navy:[0,0,128],white:[Ze,Ze,Ze],olive:[128,128,0],yellow:[Ze,Ze,0],orange:[Ze,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[Ze,0,0],pink:[Ze,192,203],cyan:[0,Ze,Ze],transparent:[Ze,Ze,Ze,0]},Lr=function(e,i,a){return e+=e<0?1:e>1?-1:0,(e*6<1?i+(a-i)*e*6:e<.5?a:e*3<2?i+(a-i)*(2/3-e)*6:i)*Ze+.5|0},Su=function(e,i,a){var t=e?Na(e)?[e>>16,e>>8&Ze,e&Ze]:0:$n.black,n,s,r,l,c,f,m,u,d,g;if(!t){if(e.substr(-1)===","&&(e=e.substr(0,e.length-1)),$n[e])t=$n[e];else if(e.charAt(0)==="#"){if(e.length<6&&(n=e.charAt(1),s=e.charAt(2),r=e.charAt(3),e="#"+n+n+s+s+r+r+(e.length===5?e.charAt(4)+e.charAt(4):"")),e.length===9)return t=parseInt(e.substr(1,6),16),[t>>16,t>>8&Ze,t&Ze,parseInt(e.substr(7),16)/255];e=parseInt(e.substr(1),16),t=[e>>16,e>>8&Ze,e&Ze]}else if(e.substr(0,3)==="hsl"){if(t=g=e.match(ic),!i)l=+t[0]%360/360,c=+t[1]/100,f=+t[2]/100,s=f<=.5?f*(c+1):f+c-f*c,n=f*2-s,t.length>3&&(t[3]*=1),t[0]=Lr(l+1/3,n,s),t[1]=Lr(l,n,s),t[2]=Lr(l-1/3,n,s);else if(~e.indexOf("="))return t=e.match(Qm),a&&t.length<4&&(t[3]=1),t}else t=e.match(ic)||$n.transparent;t=t.map(Number)}return i&&!g&&(n=t[0]/Ze,s=t[1]/Ze,r=t[2]/Ze,m=Math.max(n,s,r),u=Math.min(n,s,r),f=(m+u)/2,m===u?l=c=0:(d=m-u,c=f>.5?d/(2-m-u):d/(m+u),l=m===n?(s-r)/d+(s<r?6:0):m===s?(r-n)/d+2:(n-s)/d+4,l*=60),t[0]=~~(l+.5),t[1]=~~(c*100+.5),t[2]=~~(f*100+.5)),a&&t.length<4&&(t[3]=1),t},Mu=function(e){var i=[],a=[],t=-1;return e.split(et).forEach(function(n){var s=n.match(mn)||[];i.push.apply(i,s),a.push(t+=s.length+1)}),i.c=a,i},Uf=function(e,i,a){var t="",n=(e+t).match(et),s=i?"hsla(":"rgba(",r=0,l,c,f,m;if(!n)return e;if(n=n.map(function(u){return(u=Su(u,i,1))&&s+(i?u[0]+","+u[1]+"%,"+u[2]+"%,"+u[3]:u.join(","))+")"}),a&&(f=Mu(e),l=a.c,l.join(t)!==f.c.join(t)))for(c=e.replace(et,"1").split(mn),m=c.length-1;r<m;r++)t+=c[r]+(~l.indexOf(r)?n.shift()||s+"0,0,0,0)":(f.length?f:n.length?n:a).shift());if(!c)for(c=e.split(et),m=c.length-1;r<m;r++)t+=c[r]+n[r];return t+c[m]},et=function(){var o="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",e;for(e in $n)o+="|"+e+"\\b";return new RegExp(o+")","gi")}(),Fy=/hsl[a]?\(/,ku=function(e){var i=e.join(" "),a;if(et.lastIndex=0,et.test(i))return a=Fy.test(i),e[1]=Uf(e[1],a),e[0]=Uf(e[0],a,Mu(e[1])),!0},go,Vi=function(){var o=Date.now,e=500,i=33,a=o(),t=a,n=1e3/240,s=n,r=[],l,c,f,m,u,d,g=function p(h){var b=o()-t,_=h===!0,k,M,y,x;if(b>e&&(a+=b-i),t+=b,y=t-a,k=y-s,(k>0||_)&&(x=++m.frame,u=y-m.time*1e3,m.time=y=y/1e3,s+=k+(k>=n?4:n-k),M=1),_||(l=c(p)),M)for(d=0;d<r.length;d++)r[d](y,u,x,h)};return m={time:0,frame:0,tick:function(){g(!0)},deltaRatio:function(h){return u/(1e3/(h||60))},wake:function(){au&&(!ac&&Ym()&&(ba=ac=window,Gc=ba.document||{},ji.gsap=ca,(ba.gsapVersions||(ba.gsapVersions=[])).push(ca.version),tu(bs||ba.GreenSockGlobals||!ba.gsap&&ba||{}),f=ba.requestAnimationFrame),l&&m.sleep(),c=f||function(h){return setTimeout(h,s-m.time*1e3+1|0)},go=1,g(2))},sleep:function(){(f?ba.cancelAnimationFrame:clearTimeout)(l),go=0,c=po},lagSmoothing:function(h,b){e=h||1/Je,i=Math.min(b,e,0)},fps:function(h){n=1e3/(h||240),s=m.time*1e3+n},add:function(h,b,_){var k=b?function(M,y,x,C){h(M,y,x,C),m.remove(k)}:h;return m.remove(h),r[_?"unshift":"push"](k),Rn(),k},remove:function(h,b){~(b=r.indexOf(h))&&r.splice(b,1)&&d>=b&&d--},_listeners:r},m}(),Rn=function(){return!go&&Vi.wake()},Ne={},Vy=/^[\d.\-M][\d.\-,\s]/,Hy=/["']/g,Wy=function(e){for(var i={},a=e.substr(1,e.length-3).split(":"),t=a[0],n=1,s=a.length,r,l,c;n<s;n++)l=a[n],r=n!==s-1?l.lastIndexOf(","):l.length,c=l.substr(0,r),i[t]=isNaN(c)?c.replace(Hy,"").trim():+c,t=l.substr(r+1).trim();return i},Ky=function(e){var i=e.indexOf("(")+1,a=e.indexOf(")"),t=e.indexOf("(",i);return e.substring(i,~t&&t<a?e.indexOf(")",a+1):a)},jy=function(e){var i=(e+"").split("("),a=Ne[i[0]];return a&&i.length>1&&a.config?a.config.apply(null,~e.indexOf("{")?[Wy(i[1])]:Ky(e).split(",").map(cu)):Ne._CE&&Vy.test(e)?Ne._CE("",e):a},wu=function(e){return function(i){return 1-e(1-i)}},xu=function o(e,i){for(var a=e._first,t;a;)a instanceof Ii?o(a,i):a.vars.yoyoEase&&(!a._yoyo||!a._repeat)&&a._yoyo!==i&&(a.timeline?o(a.timeline,i):(t=a._ease,a._ease=a._yEase,a._yEase=t,a._yoyo=i)),a=a._next},Rt=function(e,i){return e&&(gi(e)?e:Ne[e]||jy(e))||i},Nt=function(e,i,a,t){a===void 0&&(a=function(l){return 1-i(1-l)}),t===void 0&&(t=function(l){return l<.5?i(l*2)/2:1-i((1-l)*2)/2});var n={easeIn:i,easeOut:a,easeInOut:t},s;return Di(e,function(r){Ne[r]=ji[r]=n,Ne[s=r.toLowerCase()]=a;for(var l in n)Ne[s+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=Ne[r+"."+l]=n[l]}),n},Au=function(e){return function(i){return i<.5?(1-e(1-i*2))/2:.5+e((i-.5)*2)/2}},zr=function o(e,i,a){var t=i>=1?i:1,n=(a||(e?.3:.45))/(i<1?i:1),s=n/ec*(Math.asin(1/t)||0),r=function(f){return f===1?1:t*Math.pow(2,-10*f)*_y((f-s)*n)+1},l=e==="out"?r:e==="in"?function(c){return 1-r(1-c)}:Au(r);return n=ec/n,l.config=function(c,f){return o(e,c,f)},l},Ir=function o(e,i){i===void 0&&(i=1.70158);var a=function(s){return s?--s*s*((i+1)*s+i)+1:0},t=e==="out"?a:e==="in"?function(n){return 1-a(1-n)}:Au(a);return t.config=function(n){return o(e,n)},t};Di("Linear,Quad,Cubic,Quart,Quint,Strong",function(o,e){var i=e<5?e+1:e;Nt(o+",Power"+(i-1),e?function(a){return Math.pow(a,i)}:function(a){return a},function(a){return 1-Math.pow(1-a,i)},function(a){return a<.5?Math.pow(a*2,i)/2:1-Math.pow((1-a)*2,i)/2})});Ne.Linear.easeNone=Ne.none=Ne.Linear.easeIn;Nt("Elastic",zr("in"),zr("out"),zr());(function(o,e){var i=1/e,a=2*i,t=2.5*i,n=function(r){return r<i?o*r*r:r<a?o*Math.pow(r-1.5/e,2)+.75:r<t?o*(r-=2.25/e)*r+.9375:o*Math.pow(r-2.625/e,2)+.984375};Nt("Bounce",function(s){return 1-n(1-s)},n)})(7.5625,2.75);Nt("Expo",function(o){return o?Math.pow(2,10*(o-1)):0});Nt("Circ",function(o){return-(Xm(1-o*o)-1)});Nt("Sine",function(o){return o===1?1:-yy(o*by)+1});Nt("Back",Ir("in"),Ir("out"),Ir());Ne.SteppedEase=Ne.steps=ji.SteppedEase={config:function(e,i){e===void 0&&(e=1);var a=1/e,t=e+(i?0:1),n=i?1:0,s=1-Je;return function(r){return((t*Ro(0,s,r)|0)+n)*a}}};wn.ease=Ne["quad.out"];Di("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(o){return Fc+=o+","+o+"Params,"});var Ru=function(e,i){this.id=vy++,e._gsap=this,this.target=e,this.harness=i,this.get=i?i.get:su,this.set=i?i.getSetter:qc},bo=function(){function o(i){this.vars=i,this._delay=+i.delay||0,(this._repeat=i.repeat===1/0?-2:i.repeat||0)&&(this._rDelay=i.repeatDelay||0,this._yoyo=!!i.yoyo||!!i.yoyoEase),this._ts=1,An(this,+i.duration,1,1),this.data=i.data,go||Vi.wake()}var e=o.prototype;return e.delay=function(a){return a||a===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+a-this._delay),this._delay=a,this):this._delay},e.duration=function(a){return arguments.length?this.totalDuration(this._repeat>0?a+(a+this._rDelay)*this._repeat:a):this.totalDuration()&&this._dur},e.totalDuration=function(a){return arguments.length?(this._dirty=0,An(this,this._repeat<0?a:(a-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},e.totalTime=function(a,t){if(Rn(),!arguments.length)return this._tTime;var n=this._dp;if(n&&n.smoothChildTiming&&this._ts){for(Hc(this,a),!n._dp||n.parent||mu(n,this);n&&n.parent;)n.parent._time!==n._start+(n._ts>=0?n._tTime/n._ts:(n.totalDuration()-n._tTime)/-n._ts)&&n.totalTime(n._tTime,!0),n=n.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&a<this._tDur||this._ts<0&&a>0||!this._tDur&&!a)&&ya(this._dp,this,this._start-this._delay)}return(this._tTime!==a||!this._dur&&!t||this._initted&&Math.abs(this._zTime)===Je||!a&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=a),ru(this,a,t)),this},e.time=function(a,t){return arguments.length?this.totalTime(Math.min(this.totalDuration(),a+Bf(this))%(this._dur+this._rDelay)||(a?this._dur:0),t):this._time},e.totalProgress=function(a,t){return arguments.length?this.totalTime(this.totalDuration()*a,t):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},e.progress=function(a,t){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-a:a)+Bf(this),t):this.duration()?Math.min(1,this._time/this._dur):this.ratio},e.iteration=function(a,t){var n=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(a-1)*n,t):this._repeat?xn(this._tTime,n)+1:1},e.timeScale=function(a){if(!arguments.length)return this._rts===-Je?0:this._rts;if(this._rts===a)return this;var t=this.parent&&this._ts?Ss(this.parent._time,this):this._tTime;return this._rts=+a||0,this._ts=this._ps||a===-Je?0:this._rts,this.totalTime(Ro(-this._delay,this._tDur,t),!0),Us(this),xy(this)},e.paused=function(a){return arguments.length?(this._ps!==a&&(this._ps=a,a?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(Rn(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==Je&&(this._tTime-=Je)))),this):this._ps},e.startTime=function(a){if(arguments.length){this._start=a;var t=this.parent||this._dp;return t&&(t._sort||!this.parent)&&ya(t,this,a-this._delay),this}return this._start},e.endTime=function(a){return this._start+(Bi(a)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},e.rawTime=function(a){var t=this.parent||this._dp;return t?a&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Ss(t.rawTime(a),this):this._tTime:this._tTime},e.globalTime=function(a){for(var t=this,n=arguments.length?a:t.rawTime();t;)n=t._start+n/(t._ts||1),t=t._dp;return n},e.repeat=function(a){return arguments.length?(this._repeat=a===1/0?-2:a,Df(this)):this._repeat===-2?1/0:this._repeat},e.repeatDelay=function(a){if(arguments.length){var t=this._time;return this._rDelay=a,Df(this),t?this.time(t):this}return this._rDelay},e.yoyo=function(a){return arguments.length?(this._yoyo=a,this):this._yoyo},e.seek=function(a,t){return this.totalTime(Zi(this,a),Bi(t))},e.restart=function(a,t){return this.play().totalTime(a?-this._delay:0,Bi(t))},e.play=function(a,t){return a!=null&&this.seek(a,t),this.reversed(!1).paused(!1)},e.reverse=function(a,t){return a!=null&&this.seek(a||this.totalDuration(),t),this.reversed(!0).paused(!1)},e.pause=function(a,t){return a!=null&&this.seek(a,t),this.paused(!0)},e.resume=function(){return this.paused(!1)},e.reversed=function(a){return arguments.length?(!!a!==this.reversed()&&this.timeScale(-this._rts||(a?-Je:0)),this):this._rts<0},e.invalidate=function(){return this._initted=this._act=0,this._zTime=-Je,this},e.isActive=function(){var a=this.parent||this._dp,t=this._start,n;return!!(!a||this._ts&&this._initted&&a.isActive()&&(n=a.rawTime(!0))>=t&&n<this.endTime(!0)-Je)},e.eventCallback=function(a,t,n){var s=this.vars;return arguments.length>1?(t?(s[a]=t,n&&(s[a+"Params"]=n),a==="onUpdate"&&(this._onUpdate=t)):delete s[a],this):s[a]},e.then=function(a){var t=this;return new Promise(function(n){var s=gi(a)?a:lu,r=function(){var c=t.then;t.then=null,gi(s)&&(s=s(t))&&(s.then||s===t)&&(t.then=c),n(s),t.then=c};t._initted&&t.totalProgress()===1&&t._ts>=0||!t._tTime&&t._ts<0?r():t._prom=r})},e.kill=function(){Yn(this)},o}();ea(bo.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-Je,_prom:0,_ps:!1,_rts:1});var Ii=function(o){Jm(e,o);function e(a,t){var n;return a===void 0&&(a={}),n=o.call(this,a)||this,n.labels={},n.smoothChildTiming=!!a.smoothChildTiming,n.autoRemoveChildren=!!a.autoRemoveChildren,n._sort=Bi(a.sortChildren),ii&&ya(a.parent||ii,Ea(n),t),a.reversed&&n.reverse(),a.paused&&n.paused(!0),a.scrollTrigger&&uu(Ea(n),a.scrollTrigger),n}var i=e.prototype;return i.to=function(t,n,s){return ao(0,arguments,this),this},i.from=function(t,n,s){return ao(1,arguments,this),this},i.fromTo=function(t,n,s,r){return ao(2,arguments,this),this},i.set=function(t,n,s){return n.duration=0,n.parent=this,io(n).repeatDelay||(n.repeat=0),n.immediateRender=!!n.immediateRender,new di(t,n,Zi(this,s),1),this},i.call=function(t,n,s){return ya(this,di.delayedCall(0,t,n),s)},i.staggerTo=function(t,n,s,r,l,c,f){return s.duration=n,s.stagger=s.stagger||r,s.onComplete=c,s.onCompleteParams=f,s.parent=this,new di(t,s,Zi(this,l)),this},i.staggerFrom=function(t,n,s,r,l,c,f){return s.runBackwards=1,io(s).immediateRender=Bi(s.immediateRender),this.staggerTo(t,n,s,r,l,c,f)},i.staggerFromTo=function(t,n,s,r,l,c,f,m){return r.startAt=s,io(r).immediateRender=Bi(r.immediateRender),this.staggerTo(t,n,r,l,c,f,m)},i.render=function(t,n,s){var r=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,f=t<=0?0:Ai(t),m=this._zTime<0!=t<0&&(this._initted||!c),u,d,g,p,h,b,_,k,M,y,x,C;if(this!==ii&&f>l&&t>=0&&(f=l),f!==this._tTime||s||m){if(r!==this._time&&c&&(f+=this._time-r,t+=this._time-r),u=f,M=this._start,k=this._ts,b=!k,m&&(c||(r=this._zTime),(t||!n)&&(this._zTime=t)),this._repeat){if(x=this._yoyo,h=c+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(h*100+t,n,s);if(u=Ai(f%h),f===l?(p=this._repeat,u=c):(p=~~(f/h),p&&p===f/h&&(u=c,p--),u>c&&(u=c)),y=xn(this._tTime,h),!r&&this._tTime&&y!==p&&(y=p),x&&p&1&&(u=c-u,C=1),p!==y&&!this._lock){var v=x&&y&1,A=v===(x&&p&1);if(p<y&&(v=!v),r=v?0:c,this._lock=1,this.render(r||(C?0:Ai(p*h)),n,!c)._lock=0,this._tTime=f,!n&&this.parent&&Yi(this,"onRepeat"),this.vars.repeatRefresh&&!C&&(this.invalidate()._lock=1),r&&r!==this._time||b!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,A&&(this._lock=2,r=v?c:-1e-4,this.render(r,!0),this.vars.repeatRefresh&&!C&&this.invalidate()),this._lock=0,!this._ts&&!b)return this;xu(this,C)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(_=Cy(this,Ai(r),Ai(u)),_&&(f-=u-(u=_._start))),this._tTime=f,this._time=u,this._act=!k,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=t,r=0),!r&&u&&!n&&(Yi(this,"onStart"),this._tTime!==f))return this;if(u>=r&&t>=0)for(d=this._first;d;){if(g=d._next,(d._act||u>=d._start)&&d._ts&&_!==d){if(d.parent!==this)return this.render(t,n,s);if(d.render(d._ts>0?(u-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(u-d._start)*d._ts,n,s),u!==this._time||!this._ts&&!b){_=0,g&&(f+=this._zTime=-Je);break}}d=g}else{d=this._last;for(var z=t<0?t:u;d;){if(g=d._prev,(d._act||z<=d._end)&&d._ts&&_!==d){if(d.parent!==this)return this.render(t,n,s);if(d.render(d._ts>0?(z-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(z-d._start)*d._ts,n,s),u!==this._time||!this._ts&&!b){_=0,g&&(f+=this._zTime=z?-Je:Je);break}}d=g}}if(_&&!n&&(this.pause(),_.render(u>=r?0:-Je)._zTime=u>=r?1:-1,this._ts))return this._start=M,Us(this),this.render(t,n,s);this._onUpdate&&!n&&Yi(this,"onUpdate",!0),(f===l&&this._tTime>=this.totalDuration()||!f&&r)&&(M===this._start||Math.abs(k)!==Math.abs(this._ts))&&(this._lock||((t||!c)&&(f===l&&this._ts>0||!f&&this._ts<0)&&za(this,1),!n&&!(t<0&&!r)&&(f||r||!l)&&(Yi(this,f===l&&t>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(f<l&&this.timeScale()>0)&&this._prom())))}return this},i.add=function(t,n){var s=this;if(Na(n)||(n=Zi(this,n,t)),!(t instanceof bo)){if(Ti(t))return t.forEach(function(r){return s.add(r,n)}),this;if(vi(t))return this.addLabel(t,n);if(gi(t))t=di.delayedCall(0,t);else return this}return this!==t?ya(this,t,n):this},i.getChildren=function(t,n,s,r){t===void 0&&(t=!0),n===void 0&&(n=!0),s===void 0&&(s=!0),r===void 0&&(r=-Ji);for(var l=[],c=this._first;c;)c._start>=r&&(c instanceof di?n&&l.push(c):(s&&l.push(c),t&&l.push.apply(l,c.getChildren(!0,n,s)))),c=c._next;return l},i.getById=function(t){for(var n=this.getChildren(1,1,1),s=n.length;s--;)if(n[s].vars.id===t)return n[s]},i.remove=function(t){return vi(t)?this.removeLabel(t):gi(t)?this.killTweensOf(t):(Gs(this,t),t===this._recent&&(this._recent=this._last),At(this))},i.totalTime=function(t,n){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=Ai(Vi.time-(this._ts>0?t/this._ts:(this.totalDuration()-t)/-this._ts))),o.prototype.totalTime.call(this,t,n),this._forcing=0,this):this._tTime},i.addLabel=function(t,n){return this.labels[t]=Zi(this,n),this},i.removeLabel=function(t){return delete this.labels[t],this},i.addPause=function(t,n,s){var r=di.delayedCall(0,n||po,s);return r.data="isPause",this._hasPause=1,ya(this,r,Zi(this,t))},i.removePause=function(t){var n=this._first;for(t=Zi(this,t);n;)n._start===t&&n.data==="isPause"&&za(n),n=n._next},i.killTweensOf=function(t,n,s){for(var r=this.getTweensOf(t,s),l=r.length;l--;)ja!==r[l]&&r[l].kill(t,n);return this},i.getTweensOf=function(t,n){for(var s=[],r=Xi(t),l=this._first,c=Na(n),f;l;)l instanceof di?My(l._targets,r)&&(c?(!ja||l._initted&&l._ts)&&l.globalTime(0)<=n&&l.globalTime(l.totalDuration())>n:!n||l.isActive())&&s.push(l):(f=l.getTweensOf(r,n)).length&&s.push.apply(s,f),l=l._next;return s},i.tweenTo=function(t,n){n=n||{};var s=this,r=Zi(s,t),l=n,c=l.startAt,f=l.onStart,m=l.onStartParams,u=l.immediateRender,d,g=di.to(s,ea({ease:n.ease||"none",lazy:!1,immediateRender:!1,time:r,overwrite:"auto",duration:n.duration||Math.abs((r-(c&&"time"in c?c.time:s._time))/s.timeScale())||Je,onStart:function(){if(s.pause(),!d){var h=n.duration||Math.abs((r-(c&&"time"in c?c.time:s._time))/s.timeScale());g._dur!==h&&An(g,h,0,1).render(g._time,!0,!0),d=1}f&&f.apply(g,m||[])}},n));return u?g.render(0):g},i.tweenFromTo=function(t,n,s){return this.tweenTo(n,ea({startAt:{time:Zi(this,t)}},s))},i.recent=function(){return this._recent},i.nextLabel=function(t){return t===void 0&&(t=this._time),Gf(this,Zi(this,t))},i.previousLabel=function(t){return t===void 0&&(t=this._time),Gf(this,Zi(this,t),1)},i.currentLabel=function(t){return arguments.length?this.seek(t,!0):this.previousLabel(this._time+Je)},i.shiftChildren=function(t,n,s){s===void 0&&(s=0);for(var r=this._first,l=this.labels,c;r;)r._start>=s&&(r._start+=t,r._end+=t),r=r._next;if(n)for(c in l)l[c]>=s&&(l[c]+=t);return At(this)},i.invalidate=function(){var t=this._first;for(this._lock=0;t;)t.invalidate(),t=t._next;return o.prototype.invalidate.call(this)},i.clear=function(t){t===void 0&&(t=!0);for(var n=this._first,s;n;)s=n._next,this.remove(n),n=s;return this._dp&&(this._time=this._tTime=this._pTime=0),t&&(this.labels={}),At(this)},i.totalDuration=function(t){var n=0,s=this,r=s._last,l=Ji,c,f,m;if(arguments.length)return s.timeScale((s._repeat<0?s.duration():s.totalDuration())/(s.reversed()?-t:t));if(s._dirty){for(m=s.parent;r;)c=r._prev,r._dirty&&r.totalDuration(),f=r._start,f>l&&s._sort&&r._ts&&!s._lock?(s._lock=1,ya(s,r,f-r._delay,1)._lock=0):l=f,f<0&&r._ts&&(n-=f,(!m&&!s._dp||m&&m.smoothChildTiming)&&(s._start+=f/s._ts,s._time-=f,s._tTime-=f),s.shiftChildren(-f,!1,-1/0),l=0),r._end>n&&r._ts&&(n=r._end),r=c;An(s,s===ii&&s._time>n?s._time:n,1,1),s._dirty=0}return s._tDur},e.updateRoot=function(t){if(ii._ts&&(ru(ii,Ss(t,ii)),ou=Vi.frame),Vi.frame>=If){If+=Wi.autoSleep||120;var n=ii._first;if((!n||!n._ts)&&Wi.autoSleep&&Vi._listeners.length<2){for(;n&&!n._ts;)n=n._next;n||Vi.sleep()}}},e}(bo);ea(Ii.prototype,{_lock:0,_hasPause:0,_forcing:0});var qy=function(e,i,a,t,n,s,r){var l=new Gi(this._pt,e,i,0,1,zu,null,n),c=0,f=0,m,u,d,g,p,h,b,_;for(l.b=a,l.e=t,a+="",t+="",(b=~t.indexOf("random("))&&(t=ho(t)),s&&(_=[a,t],s(_,e,i),a=_[0],t=_[1]),u=a.match(Er)||[];m=Er.exec(t);)g=m[0],p=t.substring(c,m.index),d?d=(d+1)%5:p.substr(-5)==="rgba("&&(d=1),g!==u[f++]&&(h=parseFloat(u[f-1])||0,l._pt={_next:l._pt,p:p||f===1?p:",",s:h,c:g.charAt(1)==="="?hn(h,g)-h:parseFloat(g)-h,m:d&&d<4?Math.round:0},c=Er.lastIndex);return l.c=c<t.length?t.substring(c,t.length):"",l.fp=r,(eu.test(t)||b)&&(l.e=0),this._pt=l,l},Wc=function(e,i,a,t,n,s,r,l,c){gi(t)&&(t=t(n||0,e,s));var f=e[i],m=a!=="get"?a:gi(f)?c?e[i.indexOf("set")||!gi(e["get"+i.substr(3)])?i:"get"+i.substr(3)](c):e[i]():f,u=gi(f)?c?$y:Pu:jc,d;if(vi(t)&&(~t.indexOf("random(")&&(t=ho(t)),t.charAt(1)==="="&&(d=hn(m,t)+(Ri(m)||0),(d||d===0)&&(t=d))),m!==t||rc)return!isNaN(m*t)&&t!==""?(d=new Gi(this._pt,e,i,+m||0,t-(m||0),typeof f=="boolean"?e_:Lu,0,u),c&&(d.fp=c),r&&d.modifier(r,this,e),this._pt=d):(!f&&!(i in e)&&Uc(i,t),qy.call(this,e,i,m,t,u,l||Wi.stringFilter,c))},Zy=function(e,i,a,t,n){if(gi(e)&&(e=to(e,n,i,a,t)),!Ba(e)||e.style&&e.nodeType||Ti(e)||$m(e))return vi(e)?to(e,n,i,a,t):e;var s={},r;for(r in e)s[r]=to(e[r],n,i,a,t);return s},Tu=function(e,i,a,t,n,s){var r,l,c,f;if(Fi[e]&&(r=new Fi[e]).init(n,r.rawVars?i[e]:Zy(i[e],t,n,s,a),a,t,s)!==!1&&(a._pt=l=new Gi(a._pt,n,e,0,1,r.render,r,0,r.priority),a!==un))for(c=a._ptLookup[a._targets.indexOf(n)],f=r._props.length;f--;)c[r._props[f]]=l;return r},ja,rc,Kc=function o(e,i){var a=e.vars,t=a.ease,n=a.startAt,s=a.immediateRender,r=a.lazy,l=a.onUpdate,c=a.onUpdateParams,f=a.callbackScope,m=a.runBackwards,u=a.yoyoEase,d=a.keyframes,g=a.autoRevert,p=e._dur,h=e._startAt,b=e._targets,_=e.parent,k=_&&_.data==="nested"?_.parent._targets:b,M=e._overwrite==="auto"&&!Bc,y=e.timeline,x,C,v,A,z,L,ee,Z,P,G,I,F,W;if(y&&(!d||!t)&&(t="none"),e._ease=Rt(t,wn.ease),e._yEase=u?wu(Rt(u===!0?t:u,wn.ease)):0,u&&e._yoyo&&!e._repeat&&(u=e._yEase,e._yEase=e._ease,e._ease=u),e._from=!y&&!!a.runBackwards,!y||d&&!a.stagger){if(Z=b[0]?xt(b[0]).harness:0,F=Z&&a[Z.prop],x=_s(a,Oc),h&&(za(h.render(-1,!0)),h._lazy=0),n)if(za(e._startAt=di.set(b,ea({data:"isStart",overwrite:!1,parent:_,immediateRender:!0,lazy:Bi(r),startAt:null,delay:0,onUpdate:l,onUpdateParams:c,callbackScope:f,stagger:0},n))),i<0&&!s&&!g&&e._startAt.render(-1,!0),s){if(i>0&&!g&&(e._startAt=0),p&&i<=0){i&&(e._zTime=i);return}}else g===!1&&(e._startAt=0);else if(m&&p){if(h)!g&&(e._startAt=0);else if(i&&(s=!1),v=ea({overwrite:!1,data:"isFromStart",lazy:s&&Bi(r),immediateRender:s,stagger:0,parent:_},x),F&&(v[Z.prop]=F),za(e._startAt=di.set(b,v)),i<0&&e._startAt.render(-1,!0),e._zTime=i,!s)o(e._startAt,Je);else if(!i)return}for(e._pt=e._ptCache=0,r=p&&Bi(r)||r&&!p,C=0;C<b.length;C++){if(z=b[C],ee=z._gsap||Vc(b)[C]._gsap,e._ptLookup[C]=G={},tc[ee.id]&&Qa.length&&ys(),I=k===b?C:k.indexOf(z),Z&&(P=new Z).init(z,F||x,e,I,k)!==!1&&(e._pt=A=new Gi(e._pt,z,P.name,0,1,P.render,P,0,P.priority),P._props.forEach(function(D){G[D]=A}),P.priority&&(L=1)),!Z||F)for(v in x)Fi[v]&&(P=Tu(v,x,e,I,z,k))?P.priority&&(L=1):G[v]=A=Wc.call(e,z,v,"get",x[v],I,k,0,a.stringFilter);e._op&&e._op[C]&&e.kill(z,e._op[C]),M&&e._pt&&(ja=e,ii.killTweensOf(z,G,e.globalTime(i)),W=!e.parent,ja=0),e._pt&&r&&(tc[ee.id]=1)}L&&Iu(e),e._onInit&&e._onInit(e)}e._onUpdate=l,e._initted=(!e._op||e._pt)&&!W,d&&i<=0&&y.render(Ji,!0,!0)},Jy=function(e,i,a,t,n,s,r){var l=(e._pt&&e._ptCache||(e._ptCache={}))[i],c,f,m;if(!l)for(l=e._ptCache[i]=[],f=e._ptLookup,m=e._targets.length;m--;){if(c=f[m][i],c&&c.d&&c.d._pt)for(c=c.d._pt;c&&c.p!==i;)c=c._next;if(!c)return rc=1,e.vars[i]="+=0",Kc(e,r),rc=0,1;l.push(c)}for(m=l.length;m--;)c=l[m],c.s=(t||t===0)&&!n?t:c.s+(t||0)+s*c.c,c.c=a-c.s,c.e&&(c.e=oi(a)+Ri(c.e)),c.b&&(c.b=c.s+Ri(c.b))},Xy=function(e,i){var a=e[0]?xt(e[0]).harness:0,t=a&&a.aliases,n,s,r,l;if(!t)return i;n=Et({},i);for(s in t)if(s in n)for(l=t[s].split(","),r=l.length;r--;)n[l[r]]=n[s];return n},Yy=function(e,i,a,t){var n=i.ease||t||"power1.inOut",s,r;if(Ti(i))r=a[e]||(a[e]=[]),i.forEach(function(l,c){return r.push({t:c/(i.length-1)*100,v:l,e:n})});else for(s in i)r=a[s]||(a[s]=[]),s==="ease"||r.push({t:parseFloat(e),v:i[s],e:n})},to=function(e,i,a,t,n){return gi(e)?e.call(i,a,t,n):vi(e)&&~e.indexOf("random(")?ho(e):e},Cu=Fc+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",Eu={};Di(Cu+",id,stagger,delay,duration,paused,scrollTrigger",function(o){return Eu[o]=1});var di=function(o){Jm(e,o);function e(a,t,n,s){var r;typeof t=="number"&&(n.duration=t,t=n,n=null),r=o.call(this,s?t:io(t))||this;var l=r.vars,c=l.duration,f=l.delay,m=l.immediateRender,u=l.stagger,d=l.overwrite,g=l.keyframes,p=l.defaults,h=l.scrollTrigger,b=l.yoyoEase,_=t.parent||ii,k=(Ti(a)||$m(a)?Na(a[0]):"length"in t)?[a]:Xi(a),M,y,x,C,v,A,z,L;if(r._targets=k.length?Vc(k):vs("GSAP target "+a+" not found. https://greensock.com",!Wi.nullTargetWarn)||[],r._ptLookup=[],r._overwrite=d,g||u||rs(c)||rs(f)){if(t=r.vars,M=r.timeline=new Ii({data:"nested",defaults:p||{}}),M.kill(),M.parent=M._dp=Ea(r),M._start=0,u||rs(c)||rs(f)){if(C=k.length,z=u&&gu(u),Ba(u))for(v in u)~Cu.indexOf(v)&&(L||(L={}),L[v]=u[v]);for(y=0;y<C;y++)x=_s(t,Eu),x.stagger=0,b&&(x.yoyoEase=b),L&&Et(x,L),A=k[y],x.duration=+to(c,Ea(r),y,A,k),x.delay=(+to(f,Ea(r),y,A,k)||0)-r._delay,!u&&C===1&&x.delay&&(r._delay=f=x.delay,r._start+=f,x.delay=0),M.to(A,x,z?z(y,A,k):0),M._ease=Ne.none;M.duration()?c=f=0:r.timeline=0}else if(g){io(ea(M.vars.defaults,{ease:"none"})),M._ease=Rt(g.ease||t.ease||"none");var ee=0,Z,P,G;if(Ti(g))g.forEach(function(I){return M.to(k,I,">")});else{x={};for(v in g)v==="ease"||v==="easeEach"||Yy(v,g[v],x,g.easeEach);for(v in x)for(Z=x[v].sort(function(I,F){return I.t-F.t}),ee=0,y=0;y<Z.length;y++)P=Z[y],G={ease:P.e,duration:(P.t-(y?Z[y-1].t:0))/100*c},G[v]=P.v,M.to(k,G,ee),ee+=G.duration;M.duration()<c&&M.to({},{duration:c-M.duration()})}}c||r.duration(c=M.duration())}else r.timeline=0;return d===!0&&!Bc&&(ja=Ea(r),ii.killTweensOf(k),ja=0),ya(_,Ea(r),n),t.reversed&&r.reverse(),t.paused&&r.paused(!0),(m||!c&&!g&&r._start===Ai(_._time)&&Bi(m)&&Ay(Ea(r))&&_.data!=="nested")&&(r._tTime=-Je,r.render(Math.max(0,-f))),h&&uu(Ea(r),h),r}var i=e.prototype;return i.render=function(t,n,s){var r=this._time,l=this._tDur,c=this._dur,f=t>l-Je&&t>=0?l:t<Je?0:t,m,u,d,g,p,h,b,_,k;if(!c)Ty(this,t,n,s);else if(f!==this._tTime||!t||s||!this._initted&&this._tTime||this._startAt&&this._zTime<0!=t<0){if(m=f,_=this.timeline,this._repeat){if(g=c+this._rDelay,this._repeat<-1&&t<0)return this.totalTime(g*100+t,n,s);if(m=Ai(f%g),f===l?(d=this._repeat,m=c):(d=~~(f/g),d&&d===f/g&&(m=c,d--),m>c&&(m=c)),h=this._yoyo&&d&1,h&&(k=this._yEase,m=c-m),p=xn(this._tTime,g),m===r&&!s&&this._initted)return this._tTime=f,this;d!==p&&(_&&this._yEase&&xu(_,h),this.vars.repeatRefresh&&!h&&!this._lock&&(this._lock=s=1,this.render(Ai(g*d),!0).invalidate()._lock=0))}if(!this._initted){if(du(this,t<0?t:m,s,n))return this._tTime=0,this;if(r!==this._time)return this;if(c!==this._dur)return this.render(t,n,s)}if(this._tTime=f,this._time=m,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=b=(k||this._ease)(m/c),this._from&&(this.ratio=b=1-b),m&&!r&&!n&&(Yi(this,"onStart"),this._tTime!==f))return this;for(u=this._pt;u;)u.r(b,u.d),u=u._next;_&&_.render(t<0?t:!m&&h?-Je:_._dur*_._ease(m/this._dur),n,s)||this._startAt&&(this._zTime=t),this._onUpdate&&!n&&(t<0&&this._startAt&&this._startAt.render(t,!0,s),Yi(this,"onUpdate")),this._repeat&&d!==p&&this.vars.onRepeat&&!n&&this.parent&&Yi(this,"onRepeat"),(f===this._tDur||!f)&&this._tTime===f&&(t<0&&this._startAt&&!this._onUpdate&&this._startAt.render(t,!0,!0),(t||!c)&&(f===this._tDur&&this._ts>0||!f&&this._ts<0)&&za(this,1),!n&&!(t<0&&!r)&&(f||r)&&(Yi(this,f===l?"onComplete":"onReverseComplete",!0),this._prom&&!(f<l&&this.timeScale()>0)&&this._prom()))}return this},i.targets=function(){return this._targets},i.invalidate=function(){return this._pt=this._op=this._startAt=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(),o.prototype.invalidate.call(this)},i.resetTo=function(t,n,s,r){go||Vi.wake(),this._ts||this.play();var l=Math.min(this._dur,(this._dp._time-this._start)*this._ts),c;return this._initted||Kc(this,l),c=this._ease(l/this._dur),Jy(this,t,n,s,r,c,l)?this.resetTo(t,n,s,r):(Hc(this,0),this.parent||fu(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},i.kill=function(t,n){if(n===void 0&&(n="all"),!t&&(!n||n==="all"))return this._lazy=this._pt=0,this.parent?Yn(this):this;if(this.timeline){var s=this.timeline.totalDuration();return this.timeline.killTweensOf(t,n,ja&&ja.vars.overwrite!==!0)._first||Yn(this),this.parent&&s!==this.timeline.totalDuration()&&An(this,this._dur*this.timeline._tDur/s,0,1),this}var r=this._targets,l=t?Xi(t):r,c=this._ptLookup,f=this._pt,m,u,d,g,p,h,b;if((!n||n==="all")&&wy(r,l))return n==="all"&&(this._pt=0),Yn(this);for(m=this._op=this._op||[],n!=="all"&&(vi(n)&&(p={},Di(n,function(_){return p[_]=1}),n=p),n=Xy(r,n)),b=r.length;b--;)if(~l.indexOf(r[b])){u=c[b],n==="all"?(m[b]=n,g=u,d={}):(d=m[b]=m[b]||{},g=n);for(p in g)h=u&&u[p],h&&((!("kill"in h.d)||h.d.kill(p)===!0)&&Gs(this,h,"_pt"),delete u[p]),d!=="all"&&(d[p]=1)}return this._initted&&!this._pt&&f&&Yn(this),this},e.to=function(t,n){return new e(t,n,arguments[2])},e.from=function(t,n){return ao(1,arguments)},e.delayedCall=function(t,n,s,r){return new e(n,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:t,onComplete:n,onReverseComplete:n,onCompleteParams:s,onReverseCompleteParams:s,callbackScope:r})},e.fromTo=function(t,n,s){return ao(2,arguments)},e.set=function(t,n){return n.duration=0,n.repeatDelay||(n.repeat=0),new e(t,n)},e.killTweensOf=function(t,n,s){return ii.killTweensOf(t,n,s)},e}(bo);ea(di.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});Di("staggerTo,staggerFrom,staggerFromTo",function(o){di[o]=function(){var e=new Ii,i=oc.call(arguments,0);return i.splice(o==="staggerFromTo"?5:4,0,0),e[o].apply(e,i)}});var jc=function(e,i,a){return e[i]=a},Pu=function(e,i,a){return e[i](a)},$y=function(e,i,a,t){return e[i](t.fp,a)},Qy=function(e,i,a){return e.setAttribute(i,a)},qc=function(e,i){return gi(e[i])?Pu:Dc(e[i])&&e.setAttribute?Qy:jc},Lu=function(e,i){return i.set(i.t,i.p,Math.round((i.s+i.c*e)*1e6)/1e6,i)},e_=function(e,i){return i.set(i.t,i.p,!!(i.s+i.c*e),i)},zu=function(e,i){var a=i._pt,t="";if(!e&&i.b)t=i.b;else if(e===1&&i.e)t=i.e;else{for(;a;)t=a.p+(a.m?a.m(a.s+a.c*e):Math.round((a.s+a.c*e)*1e4)/1e4)+t,a=a._next;t+=i.c}i.set(i.t,i.p,t,i)},Zc=function(e,i){for(var a=i._pt;a;)a.r(e,a.d),a=a._next},i_=function(e,i,a,t){for(var n=this._pt,s;n;)s=n._next,n.p===t&&n.modifier(e,i,a),n=s},a_=function(e){for(var i=this._pt,a,t;i;)t=i._next,i.p===e&&!i.op||i.op===e?Gs(this,i,"_pt"):i.dep||(a=1),i=t;return!a},t_=function(e,i,a,t){t.mSet(e,i,t.m.call(t.tween,a,t.mt),t)},Iu=function(e){for(var i=e._pt,a,t,n,s;i;){for(a=i._next,t=n;t&&t.pr>i.pr;)t=t._next;(i._prev=t?t._prev:s)?i._prev._next=i:n=i,(i._next=t)?t._prev=i:s=i,i=a}e._pt=n},Gi=function(){function o(i,a,t,n,s,r,l,c,f){this.t=a,this.s=n,this.c=s,this.p=t,this.r=r||Lu,this.d=l||this,this.set=c||jc,this.pr=f||0,this._next=i,i&&(i._prev=this)}var e=o.prototype;return e.modifier=function(a,t,n){this.mSet=this.mSet||this.set,this.set=t_,this.m=a,this.mt=n,this.tween=t},o}();Di(Fc+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(o){return Oc[o]=1});ji.TweenMax=ji.TweenLite=di;ji.TimelineLite=ji.TimelineMax=Ii;ii=new Ii({sortChildren:!1,defaults:wn,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});Wi.stringFilter=ku;var Ms={registerPlugin:function(){for(var e=arguments.length,i=new Array(e),a=0;a<e;a++)i[a]=arguments[a];i.forEach(function(t){return Oy(t)})},timeline:function(e){return new Ii(e)},getTweensOf:function(e,i){return ii.getTweensOf(e,i)},getProperty:function(e,i,a,t){vi(e)&&(e=Xi(e)[0]);var n=xt(e||{}).get,s=a?lu:cu;return a==="native"&&(a=""),e&&(i?s((Fi[i]&&Fi[i].get||n)(e,i,a,t)):function(r,l,c){return s((Fi[r]&&Fi[r].get||n)(e,r,l,c))})},quickSetter:function(e,i,a){if(e=Xi(e),e.length>1){var t=e.map(function(f){return ca.quickSetter(f,i,a)}),n=t.length;return function(f){for(var m=n;m--;)t[m](f)}}e=e[0]||{};var s=Fi[i],r=xt(e),l=r.harness&&(r.harness.aliases||{})[i]||i,c=s?function(f){var m=new s;un._pt=0,m.init(e,a?f+a:f,un,0,[e]),m.render(1,m),un._pt&&Zc(1,un)}:r.set(e,l);return s?c:function(f){return c(e,l,a?f+a:f,r,1)}},quickTo:function(e,i,a){var t,n=ca.to(e,Et((t={},t[i]="+=0.1",t.paused=!0,t),a||{})),s=function(l,c,f){return n.resetTo(i,l,c,f)};return s.tween=n,s},isTweening:function(e){return ii.getTweensOf(e,!0).length>0},defaults:function(e){return e&&e.ease&&(e.ease=Rt(e.ease,wn.ease)),Nf(wn,e||{})},config:function(e){return Nf(Wi,e||{})},registerEffect:function(e){var i=e.name,a=e.effect,t=e.plugins,n=e.defaults,s=e.extendTimeline;(t||"").split(",").forEach(function(r){return r&&!Fi[r]&&!ji[r]&&vs(i+" effect requires "+r+" plugin.")}),Pr[i]=function(r,l,c){return a(Xi(r),ea(l||{},n),c)},s&&(Ii.prototype[i]=function(r,l,c){return this.add(Pr[i](r,Ba(l)?l:(c=l)&&{},this),c)})},registerEase:function(e,i){Ne[e]=Rt(i)},parseEase:function(e,i){return arguments.length?Rt(e,i):Ne},getById:function(e){return ii.getById(e)},exportRoot:function(e,i){e===void 0&&(e={});var a=new Ii(e),t,n;for(a.smoothChildTiming=Bi(e.smoothChildTiming),ii.remove(a),a._dp=0,a._time=a._tTime=ii._time,t=ii._first;t;)n=t._next,(i||!(!t._dur&&t instanceof di&&t.vars.onComplete===t._targets[0]))&&ya(a,t,t._start-t._delay),t=n;return ya(ii,a,0),a},utils:{wrap:Dy,wrapYoyo:Gy,distribute:gu,random:vu,snap:bu,normalize:By,getUnit:Ri,clamp:Py,splitColor:Su,toArray:Xi,selector:zy,mapRange:_u,pipe:Iy,unitize:Ny,interpolate:Uy,shuffle:hu},install:tu,effects:Pr,ticker:Vi,updateRoot:Ii.updateRoot,plugins:Fi,globalTimeline:ii,core:{PropTween:Gi,globals:nu,Tween:di,Timeline:Ii,Animation:bo,getCache:xt,_removeLinkedListItem:Gs,suppressOverwrites:function(e){return Bc=e}}};Di("to,from,fromTo,delayedCall,set,killTweensOf",function(o){return Ms[o]=di[o]});Vi.add(Ii.updateRoot);un=Ms.to({},{duration:0});var n_=function(e,i){for(var a=e._pt;a&&a.p!==i&&a.op!==i&&a.fp!==i;)a=a._next;return a},o_=function(e,i){var a=e._targets,t,n,s;for(t in i)for(n=a.length;n--;)s=e._ptLookup[n][t],s&&(s=s.d)&&(s._pt&&(s=n_(s,t)),s&&s.modifier&&s.modifier(i[t],e,a[n],t))},Nr=function(e,i){return{name:e,rawVars:1,init:function(t,n,s){s._onInit=function(r){var l,c;if(vi(n)&&(l={},Di(n,function(f){return l[f]=1}),n=l),i){l={};for(c in n)l[c]=i(n[c]);n=l}o_(r,n)}}}},ca=Ms.registerPlugin({name:"attr",init:function(e,i,a,t,n){var s,r;for(s in i)r=this.add(e,"setAttribute",(e.getAttribute(s)||0)+"",i[s],t,n,0,0,s),r&&(r.op=s),this._props.push(s)}},{name:"endArray",init:function(e,i){for(var a=i.length;a--;)this.add(e,a,e[a]||0,i[a])}},Nr("roundProps",sc),Nr("modifiers"),Nr("snap",bu))||Ms;di.version=Ii.version=ca.version="3.10.4";au=1;Ym()&&Rn();Ne.Power0;Ne.Power1;Ne.Power2;Ne.Power3;Ne.Power4;Ne.Linear;Ne.Quad;Ne.Cubic;Ne.Quart;Ne.Quint;Ne.Strong;Ne.Elastic;Ne.Back;Ne.SteppedEase;Ne.Bounce;Ne.Sine;Ne.Expo;Ne.Circ;/*!
 * CSSPlugin 3.10.4
 * https://greensock.com
 *
 * Copyright 2008-2022, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var Of,qa,gn,Jc,Mt,Ff,s_=function(){return typeof window!="undefined"},nt={},bt=180/Math.PI,bn=Math.PI/180,nn=Math.atan2,Vf=1e8,Nu=/([A-Z])/g,r_=/(left|right|width|margin|padding|x)/i,c_=/[\s,\(]\S/,Za={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},Bu=function(e,i){return i.set(i.t,i.p,Math.round((i.s+i.c*e)*1e4)/1e4+i.u,i)},l_=function(e,i){return i.set(i.t,i.p,e===1?i.e:Math.round((i.s+i.c*e)*1e4)/1e4+i.u,i)},f_=function(e,i){return i.set(i.t,i.p,e?Math.round((i.s+i.c*e)*1e4)/1e4+i.u:i.b,i)},m_=function(e,i){var a=i.s+i.c*e;i.set(i.t,i.p,~~(a+(a<0?-.5:.5))+i.u,i)},Du=function(e,i){return i.set(i.t,i.p,e?i.e:i.b,i)},Gu=function(e,i){return i.set(i.t,i.p,e!==1?i.b:i.e,i)},u_=function(e,i,a){return e.style[i]=a},d_=function(e,i,a){return e.style.setProperty(i,a)},p_=function(e,i,a){return e._gsap[i]=a},h_=function(e,i,a){return e._gsap.scaleX=e._gsap.scaleY=a},g_=function(e,i,a,t,n){var s=e._gsap;s.scaleX=s.scaleY=a,s.renderTransform(n,s)},b_=function(e,i,a,t,n){var s=e._gsap;s[i]=a,s.renderTransform(n,s)},_i="transform",ot=_i+"Origin",Uu,cc=function(e,i){var a=qa.createElementNS?qa.createElementNS((i||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),e):qa.createElement(e);return a.style?a:qa.createElement(e)},Ia=function o(e,i,a){var t=getComputedStyle(e);return t[i]||t.getPropertyValue(i.replace(Nu,"-$1").toLowerCase())||t.getPropertyValue(i)||!a&&o(e,Tn(i)||i,1)||""},Hf="O,Moz,ms,Ms,Webkit".split(","),Tn=function(e,i,a){var t=i||Mt,n=t.style,s=5;if(e in n&&!a)return e;for(e=e.charAt(0).toUpperCase()+e.substr(1);s--&&!(Hf[s]+e in n););return s<0?null:(s===3?"ms":s>=0?Hf[s]:"")+e},lc=function(){s_()&&window.document&&(Of=window,qa=Of.document,gn=qa.documentElement,Mt=cc("div")||{style:{}},cc("div"),_i=Tn(_i),ot=_i+"Origin",Mt.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",Uu=!!Tn("perspective"),Jc=1)},Br=function o(e){var i=cc("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),a=this.parentNode,t=this.nextSibling,n=this.style.cssText,s;if(gn.appendChild(i),i.appendChild(this),this.style.display="block",e)try{s=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=o}catch{}else this._gsapBBox&&(s=this._gsapBBox());return a&&(t?a.insertBefore(this,t):a.appendChild(this)),gn.removeChild(i),this.style.cssText=n,s},Wf=function(e,i){for(var a=i.length;a--;)if(e.hasAttribute(i[a]))return e.getAttribute(i[a])},Ou=function(e){var i;try{i=e.getBBox()}catch{i=Br.call(e,!0)}return i&&(i.width||i.height)||e.getBBox===Br||(i=Br.call(e,!0)),i&&!i.width&&!i.x&&!i.y?{x:+Wf(e,["x","cx","x1"])||0,y:+Wf(e,["y","cy","y1"])||0,width:0,height:0}:i},Fu=function(e){return!!(e.getCTM&&(!e.parentNode||e.ownerSVGElement)&&Ou(e))},vo=function(e,i){if(i){var a=e.style;i in nt&&i!==ot&&(i=_i),a.removeProperty?((i.substr(0,2)==="ms"||i.substr(0,6)==="webkit")&&(i="-"+i),a.removeProperty(i.replace(Nu,"-$1").toLowerCase())):a.removeAttribute(i)}},Ja=function(e,i,a,t,n,s){var r=new Gi(e._pt,i,a,0,1,s?Gu:Du);return e._pt=r,r.b=t,r.e=n,e._props.push(a),r},Kf={deg:1,rad:1,turn:1},st=function o(e,i,a,t){var n=parseFloat(a)||0,s=(a+"").trim().substr((n+"").length)||"px",r=Mt.style,l=r_.test(i),c=e.tagName.toLowerCase()==="svg",f=(c?"client":"offset")+(l?"Width":"Height"),m=100,u=t==="px",d=t==="%",g,p,h,b;return t===s||!n||Kf[t]||Kf[s]?n:(s!=="px"&&!u&&(n=o(e,i,a,"px")),b=e.getCTM&&Fu(e),(d||s==="%")&&(nt[i]||~i.indexOf("adius"))?(g=b?e.getBBox()[l?"width":"height"]:e[f],oi(d?n/g*m:n/100*g)):(r[l?"width":"height"]=m+(u?s:t),p=~i.indexOf("adius")||t==="em"&&e.appendChild&&!c?e:e.parentNode,b&&(p=(e.ownerSVGElement||{}).parentNode),(!p||p===qa||!p.appendChild)&&(p=qa.body),h=p._gsap,h&&d&&h.width&&l&&h.time===Vi.time?oi(n/h.width*m):((d||s==="%")&&(r.position=Ia(e,"position")),p===e&&(r.position="static"),p.appendChild(Mt),g=Mt[f],p.removeChild(Mt),r.position="absolute",l&&d&&(h=xt(p),h.time=Vi.time,h.width=p[f]),oi(u?g*n/m:g&&n?m/g*n:0))))},vt=function(e,i,a,t){var n;return Jc||lc(),i in Za&&i!=="transform"&&(i=Za[i],~i.indexOf(",")&&(i=i.split(",")[0])),nt[i]&&i!=="transform"?(n=_o(e,t),n=i!=="transformOrigin"?n[i]:n.svg?n.origin:ws(Ia(e,ot))+" "+n.zOrigin+"px"):(n=e.style[i],(!n||n==="auto"||t||~(n+"").indexOf("calc("))&&(n=ks[i]&&ks[i](e,i,a)||Ia(e,i)||su(e,i)||(i==="opacity"?1:0))),a&&!~(n+"").trim().indexOf(" ")?st(e,i,n,a)+a:n},v_=function(e,i,a,t){if(!a||a==="none"){var n=Tn(i,e,1),s=n&&Ia(e,n,1);s&&s!==a?(i=n,a=s):i==="borderColor"&&(a=Ia(e,"borderTopColor"))}var r=new Gi(this._pt,e.style,i,0,1,zu),l=0,c=0,f,m,u,d,g,p,h,b,_,k,M,y;if(r.b=a,r.e=t,a+="",t+="",t==="auto"&&(e.style[i]=t,t=Ia(e,i)||t,e.style[i]=a),f=[a,t],ku(f),a=f[0],t=f[1],u=a.match(mn)||[],y=t.match(mn)||[],y.length){for(;m=mn.exec(t);)h=m[0],_=t.substring(l,m.index),g?g=(g+1)%5:(_.substr(-5)==="rgba("||_.substr(-5)==="hsla(")&&(g=1),h!==(p=u[c++]||"")&&(d=parseFloat(p)||0,M=p.substr((d+"").length),h.charAt(1)==="="&&(h=hn(d,h)+M),b=parseFloat(h),k=h.substr((b+"").length),l=mn.lastIndex-k.length,k||(k=k||Wi.units[i]||M,l===t.length&&(t+=k,r.e+=k)),M!==k&&(d=st(e,i,p,k)||0),r._pt={_next:r._pt,p:_||c===1?_:",",s:d,c:b-d,m:g&&g<4||i==="zIndex"?Math.round:0});r.c=l<t.length?t.substring(l,t.length):""}else r.r=i==="display"&&t==="none"?Gu:Du;return eu.test(t)&&(r.e=0),this._pt=r,r},jf={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},y_=function(e){var i=e.split(" "),a=i[0],t=i[1]||"50%";return(a==="top"||a==="bottom"||t==="left"||t==="right")&&(e=a,a=t,t=e),i[0]=jf[a]||a,i[1]=jf[t]||t,i.join(" ")},__=function(e,i){if(i.tween&&i.tween._time===i.tween._dur){var a=i.t,t=a.style,n=i.u,s=a._gsap,r,l,c;if(n==="all"||n===!0)t.cssText="",l=1;else for(n=n.split(","),c=n.length;--c>-1;)r=n[c],nt[r]&&(l=1,r=r==="transformOrigin"?ot:_i),vo(a,r);l&&(vo(a,_i),s&&(s.svg&&a.removeAttribute("transform"),_o(a,1),s.uncache=1))}},ks={clearProps:function(e,i,a,t,n){if(n.data!=="isFromStart"){var s=e._pt=new Gi(e._pt,i,a,0,0,__);return s.u=t,s.pr=-10,s.tween=n,e._props.push(a),1}}},yo=[1,0,0,1,0,0],Vu={},Hu=function(e){return e==="matrix(1, 0, 0, 1, 0, 0)"||e==="none"||!e},qf=function(e){var i=Ia(e,_i);return Hu(i)?yo:i.substr(7).match(Qm).map(oi)},Xc=function(e,i){var a=e._gsap||xt(e),t=e.style,n=qf(e),s,r,l,c;return a.svg&&e.getAttribute("transform")?(l=e.transform.baseVal.consolidate().matrix,n=[l.a,l.b,l.c,l.d,l.e,l.f],n.join(",")==="1,0,0,1,0,0"?yo:n):(n===yo&&!e.offsetParent&&e!==gn&&!a.svg&&(l=t.display,t.display="block",s=e.parentNode,(!s||!e.offsetParent)&&(c=1,r=e.nextSibling,gn.appendChild(e)),n=qf(e),l?t.display=l:vo(e,"display"),c&&(r?s.insertBefore(e,r):s?s.appendChild(e):gn.removeChild(e))),i&&n.length>6?[n[0],n[1],n[4],n[5],n[12],n[13]]:n)},fc=function(e,i,a,t,n,s){var r=e._gsap,l=n||Xc(e,!0),c=r.xOrigin||0,f=r.yOrigin||0,m=r.xOffset||0,u=r.yOffset||0,d=l[0],g=l[1],p=l[2],h=l[3],b=l[4],_=l[5],k=i.split(" "),M=parseFloat(k[0])||0,y=parseFloat(k[1])||0,x,C,v,A;a?l!==yo&&(C=d*h-g*p)&&(v=M*(h/C)+y*(-p/C)+(p*_-h*b)/C,A=M*(-g/C)+y*(d/C)-(d*_-g*b)/C,M=v,y=A):(x=Ou(e),M=x.x+(~k[0].indexOf("%")?M/100*x.width:M),y=x.y+(~(k[1]||k[0]).indexOf("%")?y/100*x.height:y)),t||t!==!1&&r.smooth?(b=M-c,_=y-f,r.xOffset=m+(b*d+_*p)-b,r.yOffset=u+(b*g+_*h)-_):r.xOffset=r.yOffset=0,r.xOrigin=M,r.yOrigin=y,r.smooth=!!t,r.origin=i,r.originIsAbsolute=!!a,e.style[ot]="0px 0px",s&&(Ja(s,r,"xOrigin",c,M),Ja(s,r,"yOrigin",f,y),Ja(s,r,"xOffset",m,r.xOffset),Ja(s,r,"yOffset",u,r.yOffset)),e.setAttribute("data-svg-origin",M+" "+y)},_o=function(e,i){var a=e._gsap||new Ru(e);if("x"in a&&!i&&!a.uncache)return a;var t=e.style,n=a.scaleX<0,s="px",r="deg",l=Ia(e,ot)||"0",c,f,m,u,d,g,p,h,b,_,k,M,y,x,C,v,A,z,L,ee,Z,P,G,I,F,W,D,H,Y,X,$,fe;return c=f=m=g=p=h=b=_=k=0,u=d=1,a.svg=!!(e.getCTM&&Fu(e)),x=Xc(e,a.svg),a.svg&&(I=(!a.uncache||l==="0px 0px")&&!i&&e.getAttribute("data-svg-origin"),fc(e,I||l,!!I||a.originIsAbsolute,a.smooth!==!1,x)),M=a.xOrigin||0,y=a.yOrigin||0,x!==yo&&(z=x[0],L=x[1],ee=x[2],Z=x[3],c=P=x[4],f=G=x[5],x.length===6?(u=Math.sqrt(z*z+L*L),d=Math.sqrt(Z*Z+ee*ee),g=z||L?nn(L,z)*bt:0,b=ee||Z?nn(ee,Z)*bt+g:0,b&&(d*=Math.abs(Math.cos(b*bn))),a.svg&&(c-=M-(M*z+y*ee),f-=y-(M*L+y*Z))):(fe=x[6],X=x[7],D=x[8],H=x[9],Y=x[10],$=x[11],c=x[12],f=x[13],m=x[14],C=nn(fe,Y),p=C*bt,C&&(v=Math.cos(-C),A=Math.sin(-C),I=P*v+D*A,F=G*v+H*A,W=fe*v+Y*A,D=P*-A+D*v,H=G*-A+H*v,Y=fe*-A+Y*v,$=X*-A+$*v,P=I,G=F,fe=W),C=nn(-ee,Y),h=C*bt,C&&(v=Math.cos(-C),A=Math.sin(-C),I=z*v-D*A,F=L*v-H*A,W=ee*v-Y*A,$=Z*A+$*v,z=I,L=F,ee=W),C=nn(L,z),g=C*bt,C&&(v=Math.cos(C),A=Math.sin(C),I=z*v+L*A,F=P*v+G*A,L=L*v-z*A,G=G*v-P*A,z=I,P=F),p&&Math.abs(p)+Math.abs(g)>359.9&&(p=g=0,h=180-h),u=oi(Math.sqrt(z*z+L*L+ee*ee)),d=oi(Math.sqrt(G*G+fe*fe)),C=nn(P,G),b=Math.abs(C)>2e-4?C*bt:0,k=$?1/($<0?-$:$):0),a.svg&&(I=e.getAttribute("transform"),a.forceCSS=e.setAttribute("transform","")||!Hu(Ia(e,_i)),I&&e.setAttribute("transform",I))),Math.abs(b)>90&&Math.abs(b)<270&&(n?(u*=-1,b+=g<=0?180:-180,g+=g<=0?180:-180):(d*=-1,b+=b<=0?180:-180)),i=i||a.uncache,a.x=c-((a.xPercent=c&&(!i&&a.xPercent||(Math.round(e.offsetWidth/2)===Math.round(-c)?-50:0)))?e.offsetWidth*a.xPercent/100:0)+s,a.y=f-((a.yPercent=f&&(!i&&a.yPercent||(Math.round(e.offsetHeight/2)===Math.round(-f)?-50:0)))?e.offsetHeight*a.yPercent/100:0)+s,a.z=m+s,a.scaleX=oi(u),a.scaleY=oi(d),a.rotation=oi(g)+r,a.rotationX=oi(p)+r,a.rotationY=oi(h)+r,a.skewX=b+r,a.skewY=_+r,a.transformPerspective=k+s,(a.zOrigin=parseFloat(l.split(" ")[2])||0)&&(t[ot]=ws(l)),a.xOffset=a.yOffset=0,a.force3D=Wi.force3D,a.renderTransform=a.svg?M_:Uu?Wu:S_,a.uncache=0,a},ws=function(e){return(e=e.split(" "))[0]+" "+e[1]},Dr=function(e,i,a){var t=Ri(i);return oi(parseFloat(i)+parseFloat(st(e,"x",a+"px",t)))+t},S_=function(e,i){i.z="0px",i.rotationY=i.rotationX="0deg",i.force3D=0,Wu(e,i)},pt="0deg",Zn="0px",ht=") ",Wu=function(e,i){var a=i||this,t=a.xPercent,n=a.yPercent,s=a.x,r=a.y,l=a.z,c=a.rotation,f=a.rotationY,m=a.rotationX,u=a.skewX,d=a.skewY,g=a.scaleX,p=a.scaleY,h=a.transformPerspective,b=a.force3D,_=a.target,k=a.zOrigin,M="",y=b==="auto"&&e&&e!==1||b===!0;if(k&&(m!==pt||f!==pt)){var x=parseFloat(f)*bn,C=Math.sin(x),v=Math.cos(x),A;x=parseFloat(m)*bn,A=Math.cos(x),s=Dr(_,s,C*A*-k),r=Dr(_,r,-Math.sin(x)*-k),l=Dr(_,l,v*A*-k+k)}h!==Zn&&(M+="perspective("+h+ht),(t||n)&&(M+="translate("+t+"%, "+n+"%) "),(y||s!==Zn||r!==Zn||l!==Zn)&&(M+=l!==Zn||y?"translate3d("+s+", "+r+", "+l+") ":"translate("+s+", "+r+ht),c!==pt&&(M+="rotate("+c+ht),f!==pt&&(M+="rotateY("+f+ht),m!==pt&&(M+="rotateX("+m+ht),(u!==pt||d!==pt)&&(M+="skew("+u+", "+d+ht),(g!==1||p!==1)&&(M+="scale("+g+", "+p+ht),_.style[_i]=M||"translate(0, 0)"},M_=function(e,i){var a=i||this,t=a.xPercent,n=a.yPercent,s=a.x,r=a.y,l=a.rotation,c=a.skewX,f=a.skewY,m=a.scaleX,u=a.scaleY,d=a.target,g=a.xOrigin,p=a.yOrigin,h=a.xOffset,b=a.yOffset,_=a.forceCSS,k=parseFloat(s),M=parseFloat(r),y,x,C,v,A;l=parseFloat(l),c=parseFloat(c),f=parseFloat(f),f&&(f=parseFloat(f),c+=f,l+=f),l||c?(l*=bn,c*=bn,y=Math.cos(l)*m,x=Math.sin(l)*m,C=Math.sin(l-c)*-u,v=Math.cos(l-c)*u,c&&(f*=bn,A=Math.tan(c-f),A=Math.sqrt(1+A*A),C*=A,v*=A,f&&(A=Math.tan(f),A=Math.sqrt(1+A*A),y*=A,x*=A)),y=oi(y),x=oi(x),C=oi(C),v=oi(v)):(y=m,v=u,x=C=0),(k&&!~(s+"").indexOf("px")||M&&!~(r+"").indexOf("px"))&&(k=st(d,"x",s,"px"),M=st(d,"y",r,"px")),(g||p||h||b)&&(k=oi(k+g-(g*y+p*C)+h),M=oi(M+p-(g*x+p*v)+b)),(t||n)&&(A=d.getBBox(),k=oi(k+t/100*A.width),M=oi(M+n/100*A.height)),A="matrix("+y+","+x+","+C+","+v+","+k+","+M+")",d.setAttribute("transform",A),_&&(d.style[_i]=A)},k_=function(e,i,a,t,n){var s=360,r=vi(n),l=parseFloat(n)*(r&&~n.indexOf("rad")?bt:1),c=l-t,f=t+c+"deg",m,u;return r&&(m=n.split("_")[1],m==="short"&&(c%=s,c!==c%(s/2)&&(c+=c<0?s:-s)),m==="cw"&&c<0?c=(c+s*Vf)%s-~~(c/s)*s:m==="ccw"&&c>0&&(c=(c-s*Vf)%s-~~(c/s)*s)),e._pt=u=new Gi(e._pt,i,a,t,c,l_),u.e=f,u.u="deg",e._props.push(a),u},Zf=function(e,i){for(var a in i)e[a]=i[a];return e},w_=function(e,i,a){var t=Zf({},a._gsap),n="perspective,force3D,transformOrigin,svgOrigin",s=a.style,r,l,c,f,m,u,d,g;t.svg?(c=a.getAttribute("transform"),a.setAttribute("transform",""),s[_i]=i,r=_o(a,1),vo(a,_i),a.setAttribute("transform",c)):(c=getComputedStyle(a)[_i],s[_i]=i,r=_o(a,1),s[_i]=c);for(l in nt)c=t[l],f=r[l],c!==f&&n.indexOf(l)<0&&(d=Ri(c),g=Ri(f),m=d!==g?st(a,l,c,g):parseFloat(c),u=parseFloat(f),e._pt=new Gi(e._pt,r,l,m,u-m,Bu),e._pt.u=g||0,e._props.push(l));Zf(r,t)};Di("padding,margin,Width,Radius",function(o,e){var i="Top",a="Right",t="Bottom",n="Left",s=(e<3?[i,a,t,n]:[i+n,i+a,t+a,t+n]).map(function(r){return e<2?o+r:"border"+r+o});ks[e>1?"border"+o:o]=function(r,l,c,f,m){var u,d;if(arguments.length<4)return u=s.map(function(g){return vt(r,g,c)}),d=u.join(" "),d.split(u[0]).length===5?u[0]:d;u=(f+"").split(" "),d={},s.forEach(function(g,p){return d[g]=u[p]=u[p]||u[(p-1)/2|0]}),r.init(l,d,m)}});var Ku={name:"css",register:lc,targetTest:function(e){return e.style&&e.nodeType},init:function(e,i,a,t,n){var s=this._props,r=e.style,l=a.vars.startAt,c,f,m,u,d,g,p,h,b,_,k,M,y,x,C;Jc||lc();for(p in i)if(p!=="autoRound"&&(f=i[p],!(Fi[p]&&Tu(p,i,a,t,e,n)))){if(d=typeof f,g=ks[p],d==="function"&&(f=f.call(a,t,e,n),d=typeof f),d==="string"&&~f.indexOf("random(")&&(f=ho(f)),g)g(this,e,p,f,a)&&(C=1);else if(p.substr(0,2)==="--")c=(getComputedStyle(e).getPropertyValue(p)+"").trim(),f+="",et.lastIndex=0,et.test(c)||(h=Ri(c),b=Ri(f)),b?h!==b&&(c=st(e,p,c,b)+b):h&&(f+=h),this.add(r,"setProperty",c,f,t,n,0,0,p),s.push(p);else if(d!=="undefined"){if(l&&p in l?(c=typeof l[p]=="function"?l[p].call(a,t,e,n):l[p],vi(c)&&~c.indexOf("random(")&&(c=ho(c)),Ri(c+"")||(c+=Wi.units[p]||Ri(vt(e,p))||""),(c+"").charAt(1)==="="&&(c=vt(e,p))):c=vt(e,p),u=parseFloat(c),_=d==="string"&&f.charAt(1)==="="&&f.substr(0,2),_&&(f=f.substr(2)),m=parseFloat(f),p in Za&&(p==="autoAlpha"&&(u===1&&vt(e,"visibility")==="hidden"&&m&&(u=0),Ja(this,r,"visibility",u?"inherit":"hidden",m?"inherit":"hidden",!m)),p!=="scale"&&p!=="transform"&&(p=Za[p],~p.indexOf(",")&&(p=p.split(",")[0]))),k=p in nt,k){if(M||(y=e._gsap,y.renderTransform&&!i.parseTransform||_o(e,i.parseTransform),x=i.smoothOrigin!==!1&&y.smooth,M=this._pt=new Gi(this._pt,r,_i,0,1,y.renderTransform,y,0,-1),M.dep=1),p==="scale")this._pt=new Gi(this._pt,y,"scaleY",y.scaleY,(_?hn(y.scaleY,_+m):m)-y.scaleY||0),s.push("scaleY",p),p+="X";else if(p==="transformOrigin"){f=y_(f),y.svg?fc(e,f,0,x,0,this):(b=parseFloat(f.split(" ")[2])||0,b!==y.zOrigin&&Ja(this,y,"zOrigin",y.zOrigin,b),Ja(this,r,p,ws(c),ws(f)));continue}else if(p==="svgOrigin"){fc(e,f,1,x,0,this);continue}else if(p in Vu){k_(this,y,p,u,_?hn(u,_+f):f);continue}else if(p==="smoothOrigin"){Ja(this,y,"smooth",y.smooth,f);continue}else if(p==="force3D"){y[p]=f;continue}else if(p==="transform"){w_(this,f,e);continue}}else p in r||(p=Tn(p)||p);if(k||(m||m===0)&&(u||u===0)&&!c_.test(f)&&p in r)h=(c+"").substr((u+"").length),m||(m=0),b=Ri(f)||(p in Wi.units?Wi.units[p]:h),h!==b&&(u=st(e,p,c,b)),this._pt=new Gi(this._pt,k?y:r,p,u,(_?hn(u,_+m):m)-u,!k&&(b==="px"||p==="zIndex")&&i.autoRound!==!1?m_:Bu),this._pt.u=b||0,h!==b&&b!=="%"&&(this._pt.b=c,this._pt.r=f_);else if(p in r)v_.call(this,e,p,c,_?_+f:f);else if(p in e)this.add(e,p,c||e[p],_?_+f:f,t,n);else{Uc(p,f);continue}s.push(p)}}C&&Iu(this)},get:vt,aliases:Za,getSetter:function(e,i,a){var t=Za[i];return t&&t.indexOf(",")<0&&(i=t),i in nt&&i!==ot&&(e._gsap.x||vt(e,"x"))?a&&Ff===a?i==="scale"?h_:p_:(Ff=a||{})&&(i==="scale"?g_:b_):e.style&&!Dc(e.style[i])?u_:~i.indexOf("-")?d_:qc(e,i)},core:{_removeProperty:vo,_getMatrix:Xc}};ca.utils.checkPrefix=Tn;(function(o,e,i,a){var t=Di(o+","+e+","+i,function(n){nt[n]=1});Di(e,function(n){Wi.units[n]="deg",Vu[n]=1}),Za[t[13]]=o+","+e,Di(a,function(n){var s=n.split(":");Za[s[1]]=t[s[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");Di("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(o){Wi.units[o]="px"});ca.registerPlugin(Ku);var rt=ca.registerPlugin(Ku)||ca;rt.core.Tween;var x_="varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",A_="uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.05-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.3,0.6,1.0)*pow(intensity,1.5);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}",R_="varying vec3 vertexNormal;void main(){vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,0.9);}",T_="varying vec3 vertexNormal;void main(){float intensity=pow(0.7-dot(vertexNormal,vec3(0,0,1.0)),2.0);gl_FragColor=vec4(0.3,0.6,1.0,1.0)*intensity;}";const ra=document.querySelector("#canvasContainer"),Cn=new Mc;let ju=!1,Tt=new xi(75,ra.offsetWidth/ra.offsetHeight,.1,1e3);const So=new Ke({antialias:!0,canvas:document.querySelector("canvas")});So.setSize(ra.offsetWidth,ra.offsetHeight);So.setPixelRatio(window.devicePixelRatio);const Yc=new Mi(new Ds(5,50,50),new Ki({vertexShader:x_,fragmentShader:A_,uniforms:{globeTexture:{value:new Fm().load("./img/earth.jpg")}}}));Cn.add(Yc);const qu=new Mi(new Ds(5,50,50),new Ki({vertexShader:R_,fragmentShader:T_,blending:Gr,side:$i}));qu.scale.set(1.1,1.1,1.1);Cn.add(qu);const hi=new ln;hi.add(Yc);Cn.add(hi);const Zu=new Xe,C_=new zs({color:16777215}),Ju=[];for(let o=0;o<2e3;o++){const e=(Math.random()-.5)*2e3,i=(Math.random()-.5)*2e3,a=-Math.random()*4e3;Ju.push(e,i,a)}Zu.setAttribute("position",new ni(Ju,3));const E_=new _m(Zu,C_);Cn.add(E_);Tt.position.z=15;function P_(o){o.forEach(e=>{const i=e.population/1e9,a=e.latlng[0],t=e.latlng[1],n=.8*i,s=new Mi(new Ln(Math.max(.1,.2*i),Math.max(.1,.2*i),Math.max(n,.4*Math.random())),new Mo({color:"#3BF7FF",opacity:.4,transparent:!0})),r=a/180*Math.PI,l=t/180*Math.PI,c=5,f=c*Math.cos(r)*Math.sin(l),m=c*Math.sin(r),u=c*Math.cos(r)*Math.cos(l);s.position.x=f,s.position.y=m,s.position.z=u,s.lookAt(0,0,0),s.geometry.applyMatrix4(new be().makeTranslation(0,0,-n/2)),hi.add(s),rt.to(s.scale,{z:0,duration:2,yoyo:!0,repeat:-1,ease:"linear",delay:Math.random()}),s.country=e.name.common,s.population=new Intl.NumberFormat().format(e.population)})}P_(td);Yc.rotation.y=-Math.PI/2;hi.rotation.offset={x:0,y:0};const ei={x:void 0,y:void 0,down:!1,xPrev:void 0,yPrev:void 0},Jf=new jm,xs=document.querySelector("#popUpEl"),L_=document.querySelector("#populationEl"),z_=document.querySelector("#populationValueEl");function Xu(){requestAnimationFrame(Xu),So.render(Cn,Tt),ju&&(hi.rotation.y+=.001),Jf.setFromCamera(ei,Tt);const o=Jf.intersectObjects(hi.children.filter(e=>e.geometry.type==="BoxGeometry"));hi.children.forEach(e=>{e.material.opacity=.4}),rt.set(xs,{display:"none"});for(let e=0;e<o.length;e++){const i=o[e].object;i.material.opacity=1,rt.set(xs,{display:"block"}),L_.innerHTML=i.country,z_.innerHTML=i.population}So.render(Cn,Tt)}Xu();ra.addEventListener("mousedown",({clientX:o,clientY:e})=>{ei.down=!0,ei.xPrev=o,ei.yPrev=e});addEventListener("mousemove",o=>{if(innerWidth>1280)ei.x=(o.clientX-innerWidth/2)/(innerWidth/2)*2-1,ei.y=-(o.clientY/innerHeight)*2+1;else{const e=ra.getBoundingClientRect().top;ei.x=(o.clientX-innerWidth)*2-1,ei.y=-((o.clientY-e)/innerHeight)*2+1}if(rt.set(xs,{x:o.clientX,y:o.clientY}),ei.down){o.preventDefault();const e=o.clientX-ei.xPrev,i=o.clientY-ei.yPrev;hi.rotation.offset.x+=i*.005,hi.rotation.offset.y+=e*.005,rt.to(hi.rotation,{y:hi.rotation.offset.y,x:hi.rotation.offset.x,duration:2}),ei.xPrev=o.clientX,ei.yPrev=o.clientY}});addEventListener("mouseup",()=>{ei.down=!1});addEventListener("resize",()=>{So.setSize(ra.offsetWidth,ra.offsetHeight),Tt=new xi(75,ra.offsetWidth/ra.offsetHeight,.1,1e3),Tt.position.z=15});window.addEventListener("load",()=>{const o=navigator.userAgent.toLowerCase().match(/mobile/i),e=navigator.userAgent.toLowerCase().match(/tablet/i),i=navigator.userAgent.toLowerCase().match(/android/i),a=navigator.userAgent.toLowerCase().match(/iphone/i),t=navigator.userAgent.toLowerCase().match(/ipad/i);(o||e||i||a||t)&&(ju=!0)});addEventListener("touchmove",o=>{o.clientX=o.touches[0].clientX,o.clientY=o.touches[0].clientY;const e=new jm;if(e.setFromCamera(ei,Tt),e.intersectObjects(hi.children.filter(t=>t.geometry.type==="BoxGeometry")).length===0)return;ei.down=!0;const a=ra.getBoundingClientRect().top;if(ei.x=(o.clientX-innerWidth)*2-1,ei.y=-((o.clientY-a)/innerHeight)*2+1,rt.set(xs,{x:o.clientX,y:o.clientY}),ei.down){o.preventDefault();const t=o.clientX-ei.xPrev,n=o.clientY-ei.yPrev;hi.rotation.offset.x+=n*.005,hi.rotation.offset.y+=t*.005,rt.to(hi.rotation,{y:hi.rotation.offset.y,x:hi.rotation.offset.x,duration:2}),ei.xPrev=o.clientX,ei.yPrev=o.clientY}},{passive:!1});addEventListener("touchend",()=>{ei.down=!1});
